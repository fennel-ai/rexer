// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: nitrous.proto

package v2

import (
	ftypes "fennel/lib/ftypes"
	value "fennel/lib/value"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TableType int32

const (
	TableType_None      TableType = 0
	TableType_Profile   TableType = 1
	TableType_Aggregate TableType = 2
)

// Enum value maps for TableType.
var (
	TableType_name = map[int32]string{
		0: "None",
		1: "Profile",
		2: "Aggregate",
	}
	TableType_value = map[string]int32{
		"None":      0,
		"Profile":   1,
		"Aggregate": 2,
	}
)

func (x TableType) Enum() *TableType {
	p := new(TableType)
	*p = x
	return p
}

func (x TableType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TableType) Descriptor() protoreflect.EnumDescriptor {
	return file_nitrous_proto_enumTypes[0].Descriptor()
}

func (TableType) Type() protoreflect.EnumType {
	return &file_nitrous_proto_enumTypes[0]
}

func (x TableType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TableType.Descriptor instead.
func (TableType) EnumDescriptor() ([]byte, []int) {
	return file_nitrous_proto_rawDescGZIP(), []int{0}
}

type Table struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TierID uint64    `protobuf:"varint,1,opt,name=tierID,proto3" json:"tierID,omitempty"`
	Binlog string    `protobuf:"bytes,2,opt,name=binlog,proto3" json:"binlog,omitempty"`
	Type   TableType `protobuf:"varint,3,opt,name=type,proto3,enum=nitrous.TableType" json:"type,omitempty"`
	// Types that are assignable to Schema:
	//	*Table_AggTable
	//	*Table_ProfileTable
	Schema isTable_Schema `protobuf_oneof:"schema"`
}

func (x *Table) Reset() {
	*x = Table{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitrous_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Table) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Table) ProtoMessage() {}

func (x *Table) ProtoReflect() protoreflect.Message {
	mi := &file_nitrous_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Table.ProtoReflect.Descriptor instead.
func (*Table) Descriptor() ([]byte, []int) {
	return file_nitrous_proto_rawDescGZIP(), []int{0}
}

func (x *Table) GetTierID() uint64 {
	if x != nil {
		return x.TierID
	}
	return 0
}

func (x *Table) GetBinlog() string {
	if x != nil {
		return x.Binlog
	}
	return ""
}

func (x *Table) GetType() TableType {
	if x != nil {
		return x.Type
	}
	return TableType_None
}

func (m *Table) GetSchema() isTable_Schema {
	if m != nil {
		return m.Schema
	}
	return nil
}

func (x *Table) GetAggTable() *AggTable {
	if x, ok := x.GetSchema().(*Table_AggTable); ok {
		return x.AggTable
	}
	return nil
}

func (x *Table) GetProfileTable() *ProfileTable {
	if x, ok := x.GetSchema().(*Table_ProfileTable); ok {
		return x.ProfileTable
	}
	return nil
}

type isTable_Schema interface {
	isTable_Schema()
}

type Table_AggTable struct {
	AggTable *AggTable `protobuf:"bytes,4,opt,name=aggTable,proto3,oneof"`
}

type Table_ProfileTable struct {
	ProfileTable *ProfileTable `protobuf:"bytes,5,opt,name=profileTable,proto3,oneof"`
}

func (*Table_AggTable) isTable_Schema() {}

func (*Table_ProfileTable) isTable_Schema() {}

type ProfileTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProfileTable) Reset() {
	*x = ProfileTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitrous_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileTable) ProtoMessage() {}

func (x *ProfileTable) ProtoReflect() protoreflect.Message {
	mi := &file_nitrous_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileTable.ProtoReflect.Descriptor instead.
func (*ProfileTable) Descriptor() ([]byte, []int) {
	return file_nitrous_proto_rawDescGZIP(), []int{1}
}

type AggTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AggID uint32 `protobuf:"varint,1,opt,name=aggID,proto3" json:"aggID,omitempty"`
	Codec uint32 `protobuf:"varint,2,opt,name=codec,proto3" json:"codec,omitempty"`
}

func (x *AggTable) Reset() {
	*x = AggTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitrous_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggTable) ProtoMessage() {}

func (x *AggTable) ProtoReflect() protoreflect.Message {
	mi := &file_nitrous_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggTable.ProtoReflect.Descriptor instead.
func (*AggTable) Descriptor() ([]byte, []int) {
	return file_nitrous_proto_rawDescGZIP(), []int{2}
}

func (x *AggTable) GetAggID() uint32 {
	if x != nil {
		return x.AggID
	}
	return 0
}

func (x *AggTable) GetCodec() uint32 {
	if x != nil {
		return x.Codec
	}
	return 0
}

type Void struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Void) Reset() {
	*x = Void{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitrous_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Void) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Void) ProtoMessage() {}

func (x *Void) ProtoReflect() protoreflect.Message {
	mi := &file_nitrous_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Void.ProtoReflect.Descriptor instead.
func (*Void) Descriptor() ([]byte, []int) {
	return file_nitrous_proto_rawDescGZIP(), []int{3}
}

type LagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lag uint64 `protobuf:"varint,1,opt,name=lag,proto3" json:"lag,omitempty"`
}

func (x *LagResp) Reset() {
	*x = LagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitrous_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LagResp) ProtoMessage() {}

func (x *LagResp) ProtoReflect() protoreflect.Message {
	mi := &file_nitrous_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LagResp.ProtoReflect.Descriptor instead.
func (*LagResp) Descriptor() ([]byte, []int) {
	return file_nitrous_proto_rawDescGZIP(), []int{4}
}

func (x *LagResp) GetLag() uint64 {
	if x != nil {
		return x.Lag
	}
	return 0
}

type GetManyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*Req `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
}

func (x *GetManyReq) Reset() {
	*x = GetManyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitrous_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetManyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManyReq) ProtoMessage() {}

func (x *GetManyReq) ProtoReflect() protoreflect.Message {
	mi := &file_nitrous_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManyReq.ProtoReflect.Descriptor instead.
func (*GetManyReq) Descriptor() ([]byte, []int) {
	return file_nitrous_proto_rawDescGZIP(), []int{5}
}

func (x *GetManyReq) GetRequests() []*Req {
	if x != nil {
		return x.Requests
	}
	return nil
}

type Req struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Table *Table `protobuf:"bytes,1,opt,name=table,proto3" json:"table,omitempty"`
	// Types that are assignable to Request:
	//	*Req_AggReq
	//	*Req_ProfileReq
	Request isReq_Request `protobuf_oneof:"Request"`
}

func (x *Req) Reset() {
	*x = Req{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitrous_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Req) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Req) ProtoMessage() {}

func (x *Req) ProtoReflect() protoreflect.Message {
	mi := &file_nitrous_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Req.ProtoReflect.Descriptor instead.
func (*Req) Descriptor() ([]byte, []int) {
	return file_nitrous_proto_rawDescGZIP(), []int{6}
}

func (x *Req) GetTable() *Table {
	if x != nil {
		return x.Table
	}
	return nil
}

func (m *Req) GetRequest() isReq_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *Req) GetAggReq() *AggRow {
	if x, ok := x.GetRequest().(*Req_AggReq); ok {
		return x.AggReq
	}
	return nil
}

func (x *Req) GetProfileReq() *ProfileRow {
	if x, ok := x.GetRequest().(*Req_ProfileReq); ok {
		return x.ProfileReq
	}
	return nil
}

type isReq_Request interface {
	isReq_Request()
}

type Req_AggReq struct {
	AggReq *AggRow `protobuf:"bytes,2,opt,name=aggReq,proto3,oneof"`
}

type Req_ProfileReq struct {
	ProfileReq *ProfileRow `protobuf:"bytes,3,opt,name=profileReq,proto3,oneof"`
}

func (*Req_AggReq) isReq_Request() {}

func (*Req_ProfileReq) isReq_Request() {}

type GetManyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*value.PValue `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *GetManyResp) Reset() {
	*x = GetManyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitrous_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetManyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetManyResp) ProtoMessage() {}

func (x *GetManyResp) ProtoReflect() protoreflect.Message {
	mi := &file_nitrous_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetManyResp.ProtoReflect.Descriptor instead.
func (*GetManyResp) Descriptor() ([]byte, []int) {
	return file_nitrous_proto_rawDescGZIP(), []int{7}
}

func (x *GetManyResp) GetResults() []*value.PValue {
	if x != nil {
		return x.Results
	}
	return nil
}

type AggRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Groupkey string        `protobuf:"bytes,1,opt,name=groupkey,proto3" json:"groupkey,omitempty"`
	Duration uint64        `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Window   ftypes.Window `protobuf:"varint,3,opt,name=window,proto3,enum=Window" json:"window,omitempty"` // specific to timeseries
	Limit    uint64        `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`               // specific to timeseries
}

func (x *AggRow) Reset() {
	*x = AggRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitrous_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AggRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggRow) ProtoMessage() {}

func (x *AggRow) ProtoReflect() protoreflect.Message {
	mi := &file_nitrous_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggRow.ProtoReflect.Descriptor instead.
func (*AggRow) Descriptor() ([]byte, []int) {
	return file_nitrous_proto_rawDescGZIP(), []int{8}
}

func (x *AggRow) GetGroupkey() string {
	if x != nil {
		return x.Groupkey
	}
	return ""
}

func (x *AggRow) GetDuration() uint64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *AggRow) GetWindow() ftypes.Window {
	if x != nil {
		return x.Window
	}
	return ftypes.Window(0)
}

func (x *AggRow) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ProfileRow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Otype string `protobuf:"bytes,1,opt,name=otype,proto3" json:"otype,omitempty"`
	Oid   string `protobuf:"bytes,2,opt,name=oid,proto3" json:"oid,omitempty"`
	Key   string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ProfileRow) Reset() {
	*x = ProfileRow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nitrous_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileRow) ProtoMessage() {}

func (x *ProfileRow) ProtoReflect() protoreflect.Message {
	mi := &file_nitrous_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileRow.ProtoReflect.Descriptor instead.
func (*ProfileRow) Descriptor() ([]byte, []int) {
	return file_nitrous_proto_rawDescGZIP(), []int{9}
}

func (x *ProfileRow) GetOtype() string {
	if x != nil {
		return x.Otype
	}
	return ""
}

func (x *ProfileRow) GetOid() string {
	if x != nil {
		return x.Oid
	}
	return ""
}

func (x *ProfileRow) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

var File_nitrous_proto protoreflect.FileDescriptor

var file_nitrous_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6e, 0x69, 0x74, 0x72, 0x6f, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6e, 0x69, 0x74, 0x72, 0x6f, 0x75, 0x73, 0x1a, 0x0c, 0x66, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xd7, 0x01, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x69, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74,
	0x69, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x12, 0x26, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x6e, 0x69,
	0x74, 0x72, 0x6f, 0x75, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x61, 0x67, 0x67, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x6f, 0x75,
	0x73, 0x2e, 0x41, 0x67, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x08, 0x61, 0x67,
	0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6e,
	0x69, 0x74, 0x72, 0x6f, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x0e, 0x0a,
	0x0c, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x36, 0x0a,
	0x08, 0x41, 0x67, 0x67, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x67, 0x67,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x67, 0x67, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x63, 0x6f, 0x64, 0x65, 0x63, 0x22, 0x06, 0x0a, 0x04, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x1b, 0x0a,
	0x07, 0x4c, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x6c, 0x61, 0x67, 0x22, 0x36, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6e, 0x69, 0x74,
	0x72, 0x6f, 0x75, 0x73, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x03, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x05, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6e, 0x69, 0x74, 0x72,
	0x6f, 0x75, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x29, 0x0a, 0x06, 0x61, 0x67, 0x67, 0x52, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x6f, 0x75, 0x73, 0x2e, 0x41, 0x67, 0x67, 0x52, 0x6f,
	0x77, 0x48, 0x00, 0x52, 0x06, 0x61, 0x67, 0x67, 0x52, 0x65, 0x71, 0x12, 0x35, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x6f, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x6f, 0x77, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x42, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x30, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e,
	0x50, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22,
	0x77, 0x0a, 0x06, 0x41, 0x67, 0x67, 0x52, 0x6f, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x6b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x07, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x46, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x2a, 0x31, 0x0a, 0x09, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x10, 0x02, 0x32, 0xbf, 0x01, 0x0a, 0x07, 0x4e, 0x69, 0x74, 0x72, 0x6f, 0x75, 0x73, 0x12,
	0x28, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x0e, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x6f,
	0x75, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x0d, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x6f,
	0x75, 0x73, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x04, 0x53, 0x74, 0x6f,
	0x70, 0x12, 0x0e, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x6f, 0x75, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x1a, 0x0d, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x6f, 0x75, 0x73, 0x2e, 0x56, 0x6f, 0x69, 0x64,
	0x22, 0x00, 0x12, 0x36, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x13, 0x2e,
	0x6e, 0x69, 0x74, 0x72, 0x6f, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x14, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x6f, 0x75, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x03, 0x4c, 0x61,
	0x67, 0x12, 0x0e, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x6f, 0x75, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x1a, 0x10, 0x2e, 0x6e, 0x69, 0x74, 0x72, 0x6f, 0x75, 0x73, 0x2e, 0x4c, 0x61, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x17, 0x5a, 0x15, 0x66, 0x65, 0x6e, 0x6e, 0x65, 0x6c, 0x2f,
	0x6e, 0x69, 0x74, 0x72, 0x6f, 0x75, 0x73, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x76, 0x32, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nitrous_proto_rawDescOnce sync.Once
	file_nitrous_proto_rawDescData = file_nitrous_proto_rawDesc
)

func file_nitrous_proto_rawDescGZIP() []byte {
	file_nitrous_proto_rawDescOnce.Do(func() {
		file_nitrous_proto_rawDescData = protoimpl.X.CompressGZIP(file_nitrous_proto_rawDescData)
	})
	return file_nitrous_proto_rawDescData
}

var file_nitrous_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nitrous_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_nitrous_proto_goTypes = []interface{}{
	(TableType)(0),       // 0: nitrous.TableType
	(*Table)(nil),        // 1: nitrous.Table
	(*ProfileTable)(nil), // 2: nitrous.ProfileTable
	(*AggTable)(nil),     // 3: nitrous.AggTable
	(*Void)(nil),         // 4: nitrous.Void
	(*LagResp)(nil),      // 5: nitrous.LagResp
	(*GetManyReq)(nil),   // 6: nitrous.GetManyReq
	(*Req)(nil),          // 7: nitrous.Req
	(*GetManyResp)(nil),  // 8: nitrous.GetManyResp
	(*AggRow)(nil),       // 9: nitrous.AggRow
	(*ProfileRow)(nil),   // 10: nitrous.ProfileRow
	(*value.PValue)(nil), // 11: PValue
	(ftypes.Window)(0),   // 12: Window
}
var file_nitrous_proto_depIdxs = []int32{
	0,  // 0: nitrous.Table.type:type_name -> nitrous.TableType
	3,  // 1: nitrous.Table.aggTable:type_name -> nitrous.AggTable
	2,  // 2: nitrous.Table.profileTable:type_name -> nitrous.ProfileTable
	7,  // 3: nitrous.GetManyReq.requests:type_name -> nitrous.Req
	1,  // 4: nitrous.Req.table:type_name -> nitrous.Table
	9,  // 5: nitrous.Req.aggReq:type_name -> nitrous.AggRow
	10, // 6: nitrous.Req.profileReq:type_name -> nitrous.ProfileRow
	11, // 7: nitrous.GetManyResp.results:type_name -> PValue
	12, // 8: nitrous.AggRow.window:type_name -> Window
	1,  // 9: nitrous.Nitrous.Start:input_type -> nitrous.Table
	1,  // 10: nitrous.Nitrous.Stop:input_type -> nitrous.Table
	6,  // 11: nitrous.Nitrous.GetMany:input_type -> nitrous.GetManyReq
	1,  // 12: nitrous.Nitrous.Lag:input_type -> nitrous.Table
	4,  // 13: nitrous.Nitrous.Start:output_type -> nitrous.Void
	4,  // 14: nitrous.Nitrous.Stop:output_type -> nitrous.Void
	8,  // 15: nitrous.Nitrous.GetMany:output_type -> nitrous.GetManyResp
	5,  // 16: nitrous.Nitrous.Lag:output_type -> nitrous.LagResp
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_nitrous_proto_init() }
func file_nitrous_proto_init() {
	if File_nitrous_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nitrous_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Table); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitrous_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitrous_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitrous_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Void); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitrous_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitrous_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetManyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitrous_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Req); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitrous_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetManyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitrous_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AggRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nitrous_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileRow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nitrous_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Table_AggTable)(nil),
		(*Table_ProfileTable)(nil),
	}
	file_nitrous_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Req_AggReq)(nil),
		(*Req_ProfileReq)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nitrous_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nitrous_proto_goTypes,
		DependencyIndexes: file_nitrous_proto_depIdxs,
		EnumInfos:         file_nitrous_proto_enumTypes,
		MessageInfos:      file_nitrous_proto_msgTypes,
	}.Build()
	File_nitrous_proto = out.File
	file_nitrous_proto_rawDesc = nil
	file_nitrous_proto_goTypes = nil
	file_nitrous_proto_depIdxs = nil
}
