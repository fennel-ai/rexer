apiVersion: v1
data:
  # Parameter
  confluentPassword: xx
  # Parameter
  mskPassword: xx
kind: Secret
metadata:
  # Parameter
  name: kafka-mirror-maker-passwords
  namespace: strimzi
type: Opaque
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaMirrorMaker2
metadata:
  # Parameter
  name: tier-101-mirror-maker
  namespace: strimzi
spec:
  version: 2.7.0
  replicas: 1
  connectCluster: target-cluster
  clusters:
    - alias: source-cluster
      authentication:
        type: plain
        # Parameter
        username: xx
        passwordSecret:
          password: confluentPassword
          # Parameter
          secretName: kafka-mirror-maker-passwords
      # Parameter
      bootstrapServers: xx
      tls:
        trustedCertificates: []
    - alias: target-cluster
      authentication:
        type: scram-sha-512
        # Parameter
        username: p-3-username
        passwordSecret:
          password: mskPassword
          # Parameter
          secretName: kafka-mirror-maker-passwords
      config:
        config.storage.replication.factor: 2
        offset.storage.replication.factor: 2
        status.storage.replication.factor: 2
      # Parameter
      bootstrapServers: xx
      tls:
        trustedCertificates: []
  mirrors:
    - sourceCluster: source-cluster
      targetCluster: target-cluster
      sourceConnector:
        # maximum number configured here should be considered as one task for each partition
        # Parameter
        tasksMax: 10
        config:
          replication.factor: 2
          offset-syncs.topic.replication.factor: 2
          replication.policy.class: "io.strimzi.kafka.connect.mirror.IdentityReplicationPolicy"
      heartbeatConnector:
        config:
          heartbeats.topic.replication.factor: 2
      checkpointConnector:
        # maximum number configured here should be considered as one task for each consumer group
        # Parameter
        tasksMax: 10
        config:
          checkpoints.topic.replication.factor: 2
          sync.group.offsets.enabled: true
          sync.group.offsets.interval.seconds: 10
          emit.checkpoints.interval.seconds: 10
          replication.policy.class: "io.strimzi.kafka.connect.mirror.IdentityReplicationPolicy"
      # Parameter
      topicsPattern: "t_101.*"
      groupsPattern: ".*"
  template:
    pod:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
      metadata:
        annotations:
          prometheus.io/scrape: true
          prometheus.io/port: 9404
  metricsConfig:
    type: jmxPrometheusExporter
    valueFrom:
      configMapKeyRef:
        name: mirror-maker-2-metrics
        key: metrics-config.yml