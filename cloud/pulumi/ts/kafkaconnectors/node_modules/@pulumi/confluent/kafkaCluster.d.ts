import * as pulumi from "@pulumi/pulumi";
export declare class KafkaCluster extends pulumi.CustomResource {
    /**
     * Get an existing KafkaCluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KafkaClusterState, opts?: pulumi.CustomResourceOptions): KafkaCluster;
    /**
     * Returns true if the given object is an instance of KafkaCluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is KafkaCluster;
    /**
     * LOW(single-zone) or HIGH(multi-zone)
     */
    readonly availability: pulumi.Output<string>;
    readonly bootstrapServers: pulumi.Output<string>;
    /**
     * cku
     */
    readonly cku: pulumi.Output<number | undefined>;
    /**
     * Deployment settings. Currently only `sku` is supported.
     */
    readonly deployment: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Environment ID
     */
    readonly environmentId: pulumi.Output<string>;
    /**
     * The name of the cluster
     */
    readonly name: pulumi.Output<string>;
    /**
     * Network egress limit(MBps)
     */
    readonly networkEgress: pulumi.Output<number | undefined>;
    /**
     * Network ingress limit(MBps)
     */
    readonly networkIngress: pulumi.Output<number | undefined>;
    /**
     * where
     */
    readonly region: pulumi.Output<string>;
    /**
     * AWS / GCP
     */
    readonly serviceProvider: pulumi.Output<string>;
    /**
     * Storage limit(GB)
     */
    readonly storage: pulumi.Output<number | undefined>;
    /**
     * Create a KafkaCluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: KafkaClusterArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering KafkaCluster resources.
 */
export interface KafkaClusterState {
    /**
     * LOW(single-zone) or HIGH(multi-zone)
     */
    availability?: pulumi.Input<string>;
    bootstrapServers?: pulumi.Input<string>;
    /**
     * cku
     */
    cku?: pulumi.Input<number>;
    /**
     * Deployment settings. Currently only `sku` is supported.
     */
    deployment?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Environment ID
     */
    environmentId?: pulumi.Input<string>;
    /**
     * The name of the cluster
     */
    name?: pulumi.Input<string>;
    /**
     * Network egress limit(MBps)
     */
    networkEgress?: pulumi.Input<number>;
    /**
     * Network ingress limit(MBps)
     */
    networkIngress?: pulumi.Input<number>;
    /**
     * where
     */
    region?: pulumi.Input<string>;
    /**
     * AWS / GCP
     */
    serviceProvider?: pulumi.Input<string>;
    /**
     * Storage limit(GB)
     */
    storage?: pulumi.Input<number>;
}
/**
 * The set of arguments for constructing a KafkaCluster resource.
 */
export interface KafkaClusterArgs {
    /**
     * LOW(single-zone) or HIGH(multi-zone)
     */
    availability: pulumi.Input<string>;
    /**
     * cku
     */
    cku?: pulumi.Input<number>;
    /**
     * Deployment settings. Currently only `sku` is supported.
     */
    deployment?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Environment ID
     */
    environmentId: pulumi.Input<string>;
    /**
     * The name of the cluster
     */
    name?: pulumi.Input<string>;
    /**
     * Network egress limit(MBps)
     */
    networkEgress?: pulumi.Input<number>;
    /**
     * Network ingress limit(MBps)
     */
    networkIngress?: pulumi.Input<number>;
    /**
     * where
     */
    region: pulumi.Input<string>;
    /**
     * AWS / GCP
     */
    serviceProvider: pulumi.Input<string>;
    /**
     * Storage limit(GB)
     */
    storage?: pulumi.Input<number>;
}
