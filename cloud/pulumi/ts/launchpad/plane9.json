{
    "version": 3,
    "deployment": {
        "manifest": {
            "time": "2022-09-09T09:01:24.462631-07:00",
            "magic": "c57d2cc6e4ddc1ad908bcf42d81d39304d5e92a1de5a6e1d5a5c485a70ff807b",
            "version": "v3.39.1"
        },
        "secrets_providers": {
            "type": "service",
            "state": {
                "url": "https://api.pulumi.com",
                "owner": "fennel",
                "project": "launchpad",
                "stack": "plane-9"
            }
        },
        "resources": [
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "custom": false,
                "type": "pulumi:pulumi:Stack",
                "outputs": {
                    "confluent": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAMZiaOFzoq8ISGT880QxDpF3OhhY8RmMtHrLaqpeAFYhHoM481R4NzCMM5QQS6I0cCt+xPKzMqiYgNibEtdmcSlx0+/Go6jenG4raBjDWWb9byrrmRk67WX1STJRRY6BlNuA3dg2n2/7Dh2mdMGofiAyQMcisZDVQa05ssszOIoh8sB02wjH4SQ3L2T0HQfK6HPWxYMxHcy+NOKp/ShcMpISdbe1QbiRPYSZyy195u+pat3M3OmYYyhETpsrAJonvpu71WF27e3jH9DJ82QGxh6VRMreMPjLez2UGfaJRa4m8p04n/HNGjQ7IwlZqIyFw7Gwjy97yoIrXjgCkNSE4Q=="
                    },
                    "db": {
                        "host": "p-9-db-20220620231331812300000002.cluster-c3pcef0tb3ss.us-west-2.rds.amazonaws.com"
                    },
                    "eks": {
                        "clusterName": "p-9-eks-cluster-eksCluster-d890a2b",
                        "clusterSg": "sg-05ea7c54b3f21042d",
                        "instanceRole": "p-9-eks-cluster-instanceRole-role-33db0f5",
                        "instanceRoleArn": "arn:aws:iam::447769723736:role/p-9-eks-cluster-instanceRole-role-33db0f5",
                        "kubeconfig": {
                            "apiVersion": "v1",
                            "clusters": [
                                {
                                    "cluster": {
                                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREl6TVRrek1sb1hEVE15TURZeE56SXpNVGt6TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNmCkNqN3NBWlBsYlYvb3hqdnkwRVdpZzRmemFqOVo4UjBKVUk0Vm9jWk8xQTNmMmRBUzFlZm1FTDN4ai9uNGd4RlYKWXNycWRXQUE2ZUNGZm9BYWJhT1hFU1RXOHFZdERGSjFCbWZIZi90dUxMcmtuY3dSK0pnUldQQWNscjh0OU1tYQpRU3BLQWJmd1JuUzFDM29FMHorcFdLUXhWWG5aWHNVQzYyZW5jc3F0di9oS1h1VDB2Y3craFY1eXRIRHBzZEVTClRFVUZSeFc2c2YzcC9ma2tWRnJremhJY3MvVGNLMFAzV3dsUEZteXh4YjZ6QnFCWUxXUjZDYkxGV1BOM2ZSNXIKN1E5SVZHbzZYcDVFOE9PN2RoejRsbWpoUEpPUDNJbHNjS2k0azFza25maGxqdkVhYU9OOTU2REtLZitET2RibgoyR0xkaHhMbS9QOEU4ZmNabnVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDZzBmSnoxbWRtNFJDdEtDV0Z0cnZscnNUdkVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREFGQnpkZllueC9PTHp2UFZzUApEbU5PU0YvWVZkazB6elhPcnFkcjJaeFppUytoMVUxR2hZb3FFbTJqUG9ienBkNnkyTE4rY1EyTlJkdVFQN0Y4ClVXM1hIUUVNbCtTakhMSzZmUTkrNDB5NVJ0TU8vVURpOVl3QTZWd2RSMlpITWx2V0UwZlpYaWw3ajVlWGNVaTQKd3luN2ZmSkVDejdUYjMyVzh1MWFOU0Evc0MyV0ZqMzJnSFR2WlZCMnU0S1JDUzR3MzJUN0lXUC9Wd3lrQlZmMQpLQmZvdDQ5aWpRdVpNRSt0c2pwQVo1Z3UzMCtEd09DSGhmcVFrU2JodFQ0OXY4cEdqWSsxdHVoQ0JHSkwrVjl1Cnl6QXZ0cnI3ZEVnVnpNV2tpMzQ4bWg2UHV5WmFiQ1lReE1XMkEwWEtsRVZSTEw2OFFrT2F4Zk0xcS9FVHRTZUQKd3FJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                        "server": "https://21ADA50B71448C1056490BD03957CE68.gr7.us-west-2.eks.amazonaws.com"
                                    },
                                    "name": "kubernetes"
                                }
                            ],
                            "contexts": [
                                {
                                    "context": {
                                        "cluster": "kubernetes",
                                        "user": "aws"
                                    },
                                    "name": "aws"
                                }
                            ],
                            "current-context": "aws",
                            "kind": "Config",
                            "users": [
                                {
                                    "name": "aws",
                                    "user": {
                                        "exec": {
                                            "apiVersion": "client.authentication.k8s.io/v1beta1",
                                            "args": [
                                                "eks",
                                                "get-token",
                                                "--cluster-name",
                                                "p-9-eks-cluster-eksCluster-d890a2b",
                                                "--role",
                                                "arn:aws:iam::447769723736:role/admin"
                                            ],
                                            "command": "aws",
                                            "env": [
                                                {
                                                    "name": "KUBERNETES_EXEC_INFO",
                                                    "value": "{\"apiVersion\": \"client.authentication.k8s.io/v1beta1\"}"
                                                }
                                            ]
                                        }
                                    }
                                }
                            ]
                        },
                        "oidcUrl": "oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68",
                        "storageclasses": {
                            "io1": "ebs-io1-50ops-qipd19bh",
                            "io2": "ebs-io2-200ops-fvquezg6",
                            "local": "nvme-ssd"
                        }
                    },
                    "elasticache": {
                        "endpoint": "clustercfg.p-9-cache-cluster-e84524a.miwxob.usw2.cache.amazonaws.com:6379"
                    },
                    "glue": {
                        "scriptPath": "aws_glue_parquet_transforms.py",
                        "scriptSourceBucket": "p-9-gluejob-source"
                    },
                    "milvus": {
                        "endpoint": ""
                    },
                    "msk": {
                        "bootstrapBrokers": "",
                        "clusterArn": "",
                        "clusterName": "",
                        "mskPassword": "p-9-password",
                        "mskUsername": "p-9-username",
                        "numBrokers": 2,
                        "zookeeperConnectString": ""
                    },
                    "offlineAggregateSourceFiles": {
                        "bucketName": "p-9-offline-aggregate-source",
                        "sources": {
                            "cf": "s3://p-9-offline-aggregate-source/cf.py",
                            "topk": "s3://p-9-offline-aggregate-source/topk.py"
                        }
                    },
                    "postgresDb": {
                        "host": "p-9-postgres-db-20220714181301166600000002.cluster-c3pcef0tb3ss.us-west-2.rds.amazonaws.com",
                        "port": 5432
                    },
                    "redis": {
                        "clusterEndPoints": [
                            "clustercfg.p-9-redis-db-455f35b.miwxob.memorydb.us-west-2.amazonaws.com:6379"
                        ],
                        "clusterId": "p-9-redis-db-455f35b",
                        "clusterSecurityGroupIds": [
                            "sg-090af44dbb5698a19"
                        ]
                    },
                    "roleArn": "arn:aws:iam::447769723736:role/admin",
                    "telemetry": {
                        "otelCollectorEndpoint": "otel-collector.otel-eks:4317",
                        "otelCollectorHttpEndpoint": "otel-collector.otel-eks:4318"
                    },
                    "trainingData": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABACjk9jq0pffU2JjI4rrpmfO18gQ1vBawgpEsCqwDJ4TnUcj5vxuBc1lgz5eRSnz2a9FODH5UkSYOj/MoA/xe7nKmoTgdJ5A7hX3A2lTSlphtYyfxH0zDeh+XDjhFwbhu1/d8i/JIEBFcqnCstC/2ndQNheHaru6h6EKgnCMYAW6OadzuHtPUSQSM9MjLbh8UBU2m/RsKfDeHU4Q2JQ9+lKYVh+yHC8Y6yw=="
                    },
                    "vpc": {
                        "azs": [
                            "us-west-2a",
                            "us-west-2b"
                        ],
                        "privateNacl": "acl-0582fb8be08519b77",
                        "privateRouteTable": "rtb-0ddd28eba47726c70",
                        "privateSubnets": [
                            "subnet-009d063028d2fd06f",
                            "subnet-02dad9a9948396f14"
                        ],
                        "publicNacl": "acl-0293f4bf38bfb1c97",
                        "publicRouteTable": "rtb-079febe4e0adfc41f",
                        "publicSubnets": [
                            "subnet-0ba080f60ce10bef8",
                            "subnet-012fe90f2f98245d3"
                        ],
                        "vpcId": "vpc-0ef7ddcb03603a807"
                    }
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::default_4_38_1",
                "custom": true,
                "id": "39511bda-b92c-4eae-8e3d-12f364164a96",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "version": "4.38.1"
                },
                "outputs": {
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9"
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::account-aws-provider",
                "custom": true,
                "id": "517dcd80-abe3-4dcd-848e-37dd19f9240a",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                "custom": true,
                "id": "447769723736",
                "type": "aws:organizations/account:Account",
                "inputs": {
                    "__defaults": [],
                    "email": "admin+convoy@fennel.ai",
                    "iamUserAccessToBilling": "DENY",
                    "name": "convoy",
                    "parentId": "r-7try",
                    "roleName": "admin"
                },
                "outputs": {
                    "arn": "arn:aws:organizations::030813887342:account/o-4n3zyalto8/447769723736",
                    "email": "admin+convoy@fennel.ai",
                    "iamUserAccessToBilling": "DENY",
                    "id": "447769723736",
                    "joinedMethod": "CREATED",
                    "joinedTimestamp": "2022-06-20T23:10:47Z",
                    "name": "convoy",
                    "parentId": "r-7try",
                    "roleName": "admin",
                    "status": "ACTIVE",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::default_4_38_1::39511bda-b92c-4eae-8e3d-12f364164a96",
                "propertyDependencies": {
                    "email": null,
                    "iamUserAccessToBilling": null,
                    "name": null,
                    "parentId": null,
                    "roleName": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:iam/policy:Policy::assume-convoy-admin",
                "custom": true,
                "id": "arn:aws:iam::030813887342:policy/assume-convoy-admin20220620231058423800000001",
                "type": "aws:iam/policy:Policy",
                "inputs": {
                    "__defaults": [],
                    "description": "Policy to assume admin role in account 447769723736.",
                    "namePrefix": "assume-convoy-admin",
                    "path": "/",
                    "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"sts:AssumeRole\"],\"Resource\":\"arn:aws:iam::447769723736:role/admin\"}]}"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:policy/assume-convoy-admin20220620231058423800000001",
                    "description": "Policy to assume admin role in account 447769723736.",
                    "id": "arn:aws:iam::030813887342:policy/assume-convoy-admin20220620231058423800000001",
                    "name": "assume-convoy-admin20220620231058423800000001",
                    "namePrefix": "assume-convoy-admin",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:iam::447769723736:role/admin\"}],\"Version\":\"2012-10-17\"}",
                    "policyId": "ANPAQOLFGTNXMDXA7IQW5",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::account-aws-provider::517dcd80-abe3-4dcd-848e-37dd19f9240a",
                "propertyDependencies": {
                    "description": null,
                    "namePrefix": null,
                    "path": null,
                    "policy": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider",
                "custom": true,
                "id": "8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                ],
                "propertyDependencies": {
                    "assumeRole": [
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                    ],
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                "custom": true,
                "id": "vpc-0ef7ddcb03603a807",
                "type": "aws:ec2/vpc:Vpc",
                "inputs": {
                    "__defaults": [
                        "enableDnsSupport",
                        "instanceTenancy"
                    ],
                    "cidrBlock": "10.109.0.0/16",
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": {
                        "Name": "fennel-vpc",
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:447769723736:vpc/vpc-0ef7ddcb03603a807",
                    "assignGeneratedIpv6CidrBlock": false,
                    "cidrBlock": "10.109.0.0/16",
                    "defaultNetworkAclId": "acl-09cf1e1380e524eec",
                    "defaultRouteTableId": "rtb-04e2ae79c309f880c",
                    "defaultSecurityGroupId": "sg-05e06694e55be2b72",
                    "dhcpOptionsId": "dopt-0cd4d7dcd22c49a4e",
                    "enableClassiclink": false,
                    "enableClassiclinkDnsSupport": false,
                    "enableDnsHostnames": false,
                    "enableDnsSupport": true,
                    "id": "vpc-0ef7ddcb03603a807",
                    "instanceTenancy": "default",
                    "ipv6AssociationId": "",
                    "ipv6CidrBlock": "",
                    "ipv6CidrBlockNetworkBorderGroup": "",
                    "ipv6IpamPoolId": "",
                    "ipv6NetmaskLength": 0,
                    "mainRouteTableId": "rtb-04e2ae79c309f880c",
                    "ownerId": "447769723736",
                    "tags": {
                        "Name": "fennel-vpc",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "fennel-vpc",
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "cidrBlock": null,
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:iam/policyAttachment:PolicyAttachment::assume-convoy-admin-policyAttach",
                "custom": true,
                "id": "assume-convoy-admin-policyAttach",
                "type": "aws:iam/policyAttachment:PolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "groups": [
                        "admins"
                    ],
                    "name": "assume-convoy-admin-policyAttach",
                    "policyArn": "arn:aws:iam::030813887342:policy/assume-convoy-admin20220620231058423800000001"
                },
                "outputs": {
                    "groups": [
                        "admins"
                    ],
                    "id": "assume-convoy-admin-policyAttach",
                    "name": "assume-convoy-admin-policyAttach",
                    "policyArn": "arn:aws:iam::030813887342:policy/assume-convoy-admin20220620231058423800000001",
                    "roles": [],
                    "users": []
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:iam/policy:Policy::assume-convoy-admin",
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::account-aws-provider::517dcd80-abe3-4dcd-848e-37dd19f9240a",
                "propertyDependencies": {
                    "groups": null,
                    "name": null,
                    "policyArn": [
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                        "urn:pulumi:plane-9::launchpad::aws:iam/policy:Policy::assume-convoy-admin"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:ManagedNodeGroup::p-9-common-ng-arm64",
                "custom": false,
                "type": "eks:index:ManagedNodeGroup",
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9"
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:command::default_0_0_3",
                "custom": true,
                "id": "cd6ef9a7-b155-431b-8d60-8e59eff618c9",
                "type": "pulumi:providers:command",
                "inputs": {
                    "version": "0.0.3"
                },
                "outputs": {
                    "version": "0.0.3"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9"
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                "custom": true,
                "id": "rtb-0ddd28eba47726c70",
                "type": "aws:ec2/routeTable:RouteTable",
                "inputs": {
                    "__defaults": [],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "arn": "arn:aws:ec2:us-west-2:447769723736:route-table/rtb-0ddd28eba47726c70",
                    "id": "rtb-0ddd28eba47726c70",
                    "ownerId": "447769723736",
                    "propagatingVgws": [],
                    "routes": [],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                "custom": true,
                "id": "subnet-0ba080f60ce10bef8",
                "type": "aws:ec2/subnet:Subnet",
                "inputs": {
                    "__defaults": [
                        "assignIpv6AddressOnCreation",
                        "enableDns64",
                        "enableResourceNameDnsARecordOnLaunch",
                        "enableResourceNameDnsAaaaRecordOnLaunch",
                        "ipv6Native",
                        "mapPublicIpOnLaunch"
                    ],
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2a",
                    "cidrBlock": "10.109.0.0/18",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "ipv6Native": false,
                    "mapPublicIpOnLaunch": false,
                    "tags": {
                        "Name": "p-9-primary-public-subnet",
                        "__defaults": [],
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":1200000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:447769723736:subnet/subnet-0ba080f60ce10bef8",
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2a",
                    "availabilityZoneId": "usw2-az2",
                    "cidrBlock": "10.109.0.0/18",
                    "customerOwnedIpv4Pool": "",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "id": "subnet-0ba080f60ce10bef8",
                    "ipv6CidrBlock": "",
                    "ipv6CidrBlockAssociationId": "",
                    "ipv6Native": false,
                    "mapCustomerOwnedIpOnLaunch": false,
                    "mapPublicIpOnLaunch": false,
                    "outpostArn": "",
                    "ownerId": "447769723736",
                    "privateDnsHostnameTypeOnLaunch": "ip-name",
                    "tags": {
                        "Name": "p-9-primary-public-subnet",
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "p-9-primary-public-subnet",
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "availabilityZone": null,
                    "cidrBlock": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/internetGateway:InternetGateway::p-9-internet-gateway",
                "custom": true,
                "id": "igw-07c4a9a230fb3f4ee",
                "type": "aws:ec2/internetGateway:InternetGateway",
                "inputs": {
                    "__defaults": [],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "arn": "arn:aws:ec2:us-west-2:447769723736:internet-gateway/igw-07c4a9a230fb3f4ee",
                    "id": "igw-07c4a9a230fb3f4ee",
                    "ownerId": "447769723736",
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                "custom": true,
                "id": "subnet-009d063028d2fd06f",
                "type": "aws:ec2/subnet:Subnet",
                "inputs": {
                    "__defaults": [
                        "assignIpv6AddressOnCreation",
                        "enableDns64",
                        "enableResourceNameDnsARecordOnLaunch",
                        "enableResourceNameDnsAaaaRecordOnLaunch",
                        "ipv6Native",
                        "mapPublicIpOnLaunch"
                    ],
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2a",
                    "cidrBlock": "10.109.128.0/18",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "ipv6Native": false,
                    "mapPublicIpOnLaunch": false,
                    "tags": {
                        "Name": "p-9-primary-private-subnet",
                        "__defaults": [],
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":1200000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:447769723736:subnet/subnet-009d063028d2fd06f",
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2a",
                    "availabilityZoneId": "usw2-az2",
                    "cidrBlock": "10.109.128.0/18",
                    "customerOwnedIpv4Pool": "",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "id": "subnet-009d063028d2fd06f",
                    "ipv6CidrBlock": "",
                    "ipv6CidrBlockAssociationId": "",
                    "ipv6Native": false,
                    "mapCustomerOwnedIpOnLaunch": false,
                    "mapPublicIpOnLaunch": false,
                    "outpostArn": "",
                    "ownerId": "447769723736",
                    "privateDnsHostnameTypeOnLaunch": "ip-name",
                    "tags": {
                        "Name": "p-9-primary-private-subnet",
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "p-9-primary-private-subnet",
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "availabilityZone": null,
                    "cidrBlock": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                "custom": true,
                "id": "subnet-012fe90f2f98245d3",
                "type": "aws:ec2/subnet:Subnet",
                "inputs": {
                    "__defaults": [
                        "assignIpv6AddressOnCreation",
                        "enableDns64",
                        "enableResourceNameDnsARecordOnLaunch",
                        "enableResourceNameDnsAaaaRecordOnLaunch",
                        "ipv6Native",
                        "mapPublicIpOnLaunch"
                    ],
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2b",
                    "cidrBlock": "10.109.64.0/18",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "ipv6Native": false,
                    "mapPublicIpOnLaunch": false,
                    "tags": {
                        "Name": "p-9-secondary-public-subnet",
                        "__defaults": [],
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":1200000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:447769723736:subnet/subnet-012fe90f2f98245d3",
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2b",
                    "availabilityZoneId": "usw2-az1",
                    "cidrBlock": "10.109.64.0/18",
                    "customerOwnedIpv4Pool": "",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "id": "subnet-012fe90f2f98245d3",
                    "ipv6CidrBlock": "",
                    "ipv6CidrBlockAssociationId": "",
                    "ipv6Native": false,
                    "mapCustomerOwnedIpOnLaunch": false,
                    "mapPublicIpOnLaunch": false,
                    "outpostArn": "",
                    "ownerId": "447769723736",
                    "privateDnsHostnameTypeOnLaunch": "ip-name",
                    "tags": {
                        "Name": "p-9-secondary-public-subnet",
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "p-9-secondary-public-subnet",
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "availabilityZone": null,
                    "cidrBlock": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::vpc-control-plane-provider",
                "custom": true,
                "id": "b935ffa0-9bc3-4e07-815f-4d47dbafbf76",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/eip:Eip::p-9-eip",
                "custom": true,
                "id": "eipalloc-0c7f1bbc260fd5f9a",
                "type": "aws:ec2/eip:Eip",
                "inputs": {
                    "__defaults": [],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"delete\":180000000000,\"read\":900000000000,\"update\":300000000000}}",
                    "allocationId": "eipalloc-0c7f1bbc260fd5f9a",
                    "associationId": "",
                    "carrierIp": "",
                    "customerOwnedIp": "",
                    "customerOwnedIpv4Pool": "",
                    "domain": "vpc",
                    "id": "eipalloc-0c7f1bbc260fd5f9a",
                    "instance": "",
                    "networkBorderGroup": "us-west-2",
                    "networkInterface": "",
                    "privateIp": "",
                    "publicDns": "ec2-52-24-112-28.us-west-2.compute.amazonaws.com",
                    "publicIp": "52.24.112.28",
                    "publicIpv4Pool": "amazon",
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpc": true
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider",
                "custom": true,
                "id": "718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                ],
                "propertyDependencies": {
                    "assumeRole": [
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                    ],
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-9-peering-connection",
                "custom": true,
                "id": "pcx-087013882e5e9aa26",
                "type": "aws:ec2/vpcPeeringConnection:VpcPeeringConnection",
                "inputs": {
                    "__defaults": [],
                    "peerOwnerId": "030813887342",
                    "peerRegion": "us-west-2",
                    "peerVpcId": "vpc-0d9942e83f94c049c",
                    "tags": {
                        "Side": "Requester",
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":60000000000,\"delete\":60000000000,\"update\":60000000000}}",
                    "acceptStatus": "pending-acceptance",
                    "accepter": null,
                    "id": "pcx-087013882e5e9aa26",
                    "peerOwnerId": "030813887342",
                    "peerRegion": "us-west-2",
                    "peerVpcId": "vpc-0d9942e83f94c049c",
                    "requester": {
                        "allowClassicLinkToRemoteVpc": false,
                        "allowRemoteVpcDnsResolution": false,
                        "allowVpcToRemoteClassicLink": false
                    },
                    "tags": {
                        "Side": "Requester",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Side": "Requester",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "peerOwnerId": null,
                    "peerRegion": null,
                    "peerVpcId": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:ManagedNodeGroup::p-9-common-ng-x86",
                "custom": false,
                "type": "eks:index:ManagedNodeGroup",
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9"
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster",
                "custom": false,
                "type": "eks:index:Cluster",
                "outputs": {
                    "eksCluster": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "p-9-eks-cluster-eksCluster-d890a2b",
                        "packageVersion": "",
                        "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster"
                    },
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREl6TVRrek1sb1hEVE15TURZeE56SXpNVGt6TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNmCkNqN3NBWlBsYlYvb3hqdnkwRVdpZzRmemFqOVo4UjBKVUk0Vm9jWk8xQTNmMmRBUzFlZm1FTDN4ai9uNGd4RlYKWXNycWRXQUE2ZUNGZm9BYWJhT1hFU1RXOHFZdERGSjFCbWZIZi90dUxMcmtuY3dSK0pnUldQQWNscjh0OU1tYQpRU3BLQWJmd1JuUzFDM29FMHorcFdLUXhWWG5aWHNVQzYyZW5jc3F0di9oS1h1VDB2Y3craFY1eXRIRHBzZEVTClRFVUZSeFc2c2YzcC9ma2tWRnJremhJY3MvVGNLMFAzV3dsUEZteXh4YjZ6QnFCWUxXUjZDYkxGV1BOM2ZSNXIKN1E5SVZHbzZYcDVFOE9PN2RoejRsbWpoUEpPUDNJbHNjS2k0azFza25maGxqdkVhYU9OOTU2REtLZitET2RibgoyR0xkaHhMbS9QOEU4ZmNabnVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDZzBmSnoxbWRtNFJDdEtDV0Z0cnZscnNUdkVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREFGQnpkZllueC9PTHp2UFZzUApEbU5PU0YvWVZkazB6elhPcnFkcjJaeFppUytoMVUxR2hZb3FFbTJqUG9ienBkNnkyTE4rY1EyTlJkdVFQN0Y4ClVXM1hIUUVNbCtTakhMSzZmUTkrNDB5NVJ0TU8vVURpOVl3QTZWd2RSMlpITWx2V0UwZlpYaWw3ajVlWGNVaTQKd3luN2ZmSkVDejdUYjMyVzh1MWFOU0Evc0MyV0ZqMzJnSFR2WlZCMnU0S1JDUzR3MzJUN0lXUC9Wd3lrQlZmMQpLQmZvdDQ5aWpRdVpNRSt0c2pwQVo1Z3UzMCtEd09DSGhmcVFrU2JodFQ0OXY4cEdqWSsxdHVoQ0JHSkwrVjl1Cnl6QXZ0cnI3ZEVnVnpNV2tpMzQ4bWg2UHV5WmFiQ1lReE1XMkEwWEtsRVZSTEw2OFFrT2F4Zk0xcS9FVHRTZUQKd3FJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://21ADA50B71448C1056490BD03957CE68.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1beta1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-9-eks-cluster-eksCluster-d890a2b",
                                            "--role",
                                            "arn:aws:iam::447769723736:role/admin"
                                        ],
                                        "command": "aws",
                                        "env": [
                                            {
                                                "name": "KUBERNETES_EXEC_INFO",
                                                "value": "{\"apiVersion\": \"client.authentication.k8s.io/v1beta1\"}"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9"
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                "custom": true,
                "id": "rtb-079febe4e0adfc41f",
                "type": "aws:ec2/routeTable:RouteTable",
                "inputs": {
                    "__defaults": [],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "arn": "arn:aws:ec2:us-west-2:447769723736:route-table/rtb-079febe4e0adfc41f",
                    "id": "rtb-079febe4e0adfc41f",
                    "ownerId": "447769723736",
                    "propagatingVgws": [],
                    "routes": [],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                "custom": true,
                "id": "subnet-02dad9a9948396f14",
                "type": "aws:ec2/subnet:Subnet",
                "inputs": {
                    "__defaults": [
                        "assignIpv6AddressOnCreation",
                        "enableDns64",
                        "enableResourceNameDnsARecordOnLaunch",
                        "enableResourceNameDnsAaaaRecordOnLaunch",
                        "ipv6Native",
                        "mapPublicIpOnLaunch"
                    ],
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2b",
                    "cidrBlock": "10.109.192.0/18",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "ipv6Native": false,
                    "mapPublicIpOnLaunch": false,
                    "tags": {
                        "Name": "p-9-secondary-private-subnet",
                        "__defaults": [],
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":1200000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:447769723736:subnet/subnet-02dad9a9948396f14",
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2b",
                    "availabilityZoneId": "usw2-az1",
                    "cidrBlock": "10.109.192.0/18",
                    "customerOwnedIpv4Pool": "",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "id": "subnet-02dad9a9948396f14",
                    "ipv6CidrBlock": "",
                    "ipv6CidrBlockAssociationId": "",
                    "ipv6Native": false,
                    "mapCustomerOwnedIpOnLaunch": false,
                    "mapPublicIpOnLaunch": false,
                    "outpostArn": "",
                    "ownerId": "447769723736",
                    "privateDnsHostnameTypeOnLaunch": "ip-name",
                    "tags": {
                        "Name": "p-9-secondary-private-subnet",
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "p-9-secondary-private-subnet",
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "availabilityZone": null,
                    "cidrBlock": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::command:local:Command::root-ca",
                "custom": true,
                "id": "19867703ebde2",
                "type": "command:local:Command",
                "inputs": {
                    "create": "step certificate create root.linkerd.cluster.local ca.crt ca.key --profile root-ca --no-password --insecure",
                    "delete": "rm -f ca.crt ca.key"
                },
                "outputs": {
                    "create": "step certificate create root.linkerd.cluster.local ca.crt ca.key --profile root-ca --no-password --insecure",
                    "delete": "rm -f ca.crt ca.key",
                    "stderr": "Your certificate has been saved in ca.crt.\nYour private key has been saved in ca.key.",
                    "stdout": ""
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:command::default_0_0_3::cd6ef9a7-b155-431b-8d60-8e59eff618c9",
                "propertyDependencies": {
                    "create": null,
                    "delete": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/vpcEndpoint:VpcEndpoint::s3-endpoint",
                "custom": true,
                "id": "vpce-0c79acd8015b19c93",
                "type": "aws:ec2/vpcEndpoint:VpcEndpoint",
                "inputs": {
                    "__defaults": [
                        "privateDnsEnabled"
                    ],
                    "privateDnsEnabled": false,
                    "routeTableIds": [
                        "rtb-0ddd28eba47726c70"
                    ],
                    "serviceName": "com.amazonaws.us-west-2.s3",
                    "tags": {
                        "Name": "p-9-s3-endpoint",
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcEndpointType": "Gateway",
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":600000000000,\"update\":600000000000}}",
                    "arn": "arn:aws:ec2:us-west-2:447769723736:vpc-endpoint/vpce-0c79acd8015b19c93",
                    "cidrBlocks": [
                        "3.5.76.0/22",
                        "3.5.80.0/21",
                        "18.34.48.0/20",
                        "52.92.128.0/17",
                        "52.218.128.0/17"
                    ],
                    "dnsEntries": [],
                    "id": "vpce-0c79acd8015b19c93",
                    "networkInterfaceIds": [],
                    "ownerId": "447769723736",
                    "policy": "{\"Statement\":[{\"Action\":\"*\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Resource\":\"*\"}],\"Version\":\"2008-10-17\"}",
                    "prefixListId": "pl-68a54001",
                    "privateDnsEnabled": false,
                    "requesterManaged": false,
                    "routeTableIds": [
                        "rtb-0ddd28eba47726c70"
                    ],
                    "securityGroupIds": [],
                    "serviceName": "com.amazonaws.us-west-2.s3",
                    "state": "available",
                    "subnetIds": [],
                    "tags": {
                        "Name": "p-9-s3-endpoint",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "p-9-s3-endpoint",
                        "managed-by": "fennel.ai"
                    },
                    "vpcEndpointType": "Gateway",
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "routeTableIds": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt"
                    ],
                    "serviceName": null,
                    "tags": null,
                    "vpcEndpointType": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/routeTableAssociation:RouteTableAssociation::p-9-rt-assoc-private-0",
                "custom": true,
                "id": "rtbassoc-050a2fd7394e5252a",
                "type": "aws:ec2/routeTableAssociation:RouteTableAssociation",
                "inputs": {
                    "__defaults": [],
                    "routeTableId": "rtb-0ddd28eba47726c70",
                    "subnetId": "subnet-009d063028d2fd06f"
                },
                "outputs": {
                    "gatewayId": "",
                    "id": "rtbassoc-050a2fd7394e5252a",
                    "routeTableId": "rtb-0ddd28eba47726c70",
                    "subnetId": "subnet-009d063028d2fd06f"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "routeTableId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt"
                    ],
                    "subnetId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                "custom": true,
                "id": "acl-0293f4bf38bfb1c97",
                "type": "aws:ec2/networkAcl:NetworkAcl",
                "inputs": {
                    "__defaults": [],
                    "egress": [
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "protocol": "tcp",
                            "ruleNo": 100,
                            "toPort": 65535
                        }
                    ],
                    "ingress": [
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "protocol": "tcp",
                            "ruleNo": 100,
                            "toPort": 65535
                        }
                    ],
                    "subnetIds": [
                        "subnet-0ba080f60ce10bef8",
                        "subnet-012fe90f2f98245d3"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "arn": "arn:aws:ec2:us-west-2:447769723736:network-acl/acl-0293f4bf38bfb1c97",
                    "egress": [
                        {
                            "action": "allow",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "6",
                            "ruleNo": 100,
                            "toPort": 65535
                        }
                    ],
                    "id": "acl-0293f4bf38bfb1c97",
                    "ingress": [
                        {
                            "action": "allow",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "6",
                            "ruleNo": 100,
                            "toPort": 65535
                        }
                    ],
                    "ownerId": "447769723736",
                    "subnetIds": [
                        "subnet-0ba080f60ce10bef8",
                        "subnet-012fe90f2f98245d3"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "egress": null,
                    "ingress": null,
                    "subnetIds": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet"
                    ],
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/natGateway:NatGateway::p-9-nat-gateway",
                "custom": true,
                "id": "nat-0bffb9c2d668c830a",
                "type": "aws:ec2/natGateway:NatGateway",
                "inputs": {
                    "__defaults": [
                        "connectivityType"
                    ],
                    "allocationId": "eipalloc-0c7f1bbc260fd5f9a",
                    "connectivityType": "public",
                    "subnetId": "subnet-0ba080f60ce10bef8",
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "allocationId": "eipalloc-0c7f1bbc260fd5f9a",
                    "connectivityType": "public",
                    "id": "nat-0bffb9c2d668c830a",
                    "networkInterfaceId": "eni-00c6f5a4aceb22367",
                    "privateIp": "10.109.35.129",
                    "publicIp": "52.24.112.28",
                    "subnetId": "subnet-0ba080f60ce10bef8",
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/eip:Eip::p-9-eip",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "allocationId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/eip:Eip::p-9-eip"
                    ],
                    "subnetId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet"
                    ],
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-9-eks-cluster-instanceRole",
                "custom": false,
                "type": "eks:index:ServiceRole",
                "outputs": {
                    "role": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "p-9-eks-cluster-instanceRole-role-33db0f5",
                        "packageVersion": "",
                        "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster"
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-9-eks-cluster-eksRole",
                "custom": false,
                "type": "eks:index:ServiceRole",
                "outputs": {
                    "role": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "p-9-eks-cluster-eksRole-role-75b0d64",
                        "packageVersion": "",
                        "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-eksRole-role"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster"
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/keyPair:KeyPair::p-9-eks-workers",
                "custom": true,
                "id": "p-9-eks-workers-ada8435",
                "type": "aws:ec2/keyPair:KeyPair",
                "inputs": {
                    "__defaults": [
                        "keyName"
                    ],
                    "keyName": "p-9-eks-workers-ada8435",
                    "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDE5dBWnI9Cq1MMdzulJRXI+fY3Y+3EQ/ANkZyaM1sTMKYatbLJuMYR1M6PByhiWG+iT08x/zFK3/GceflCADRn35R0f4VsAtYwL75htvhI7oPCgS+6Jnv+jsRTt/tBujXtoWViwHkdWQuNicWAG2AqSplVvtiZ+xW1g9HPbvM0ywwLCoVcL3VUmHBXqpX6jjZTlTDibvgCUzVl53TZd+v+XXB1tmybA8HllvI2hwob67ibfhDlU/zrO15ptxU5Nv7BcvXrKlPx5D2KK1z4H/kqlMzULVJFSckKjB4x5BxUnxnmnIMqRGHpBmT2E31o7H40IN+Cfk2L2RWphpdB+5kbSngxzMr3EumgodLcoHG3/D2Fm0YD5YELBpvLeGxr+eBscfbTGIBAnY+rBpfzzzd/l2N1ysqy/puVdM4RcdyTEmC9FvtH3p0jcb9mSDafzInmBwpUDNC4NGo5NYLzphkG+22Tzg14fGATA1/BlI3KmRl6Hpp+hPRrmylrATpNtos= amitarya@Amits-MBP.attlocal.net\n"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:447769723736:key-pair/p-9-eks-workers-ada8435",
                    "fingerprint": "30:f1:52:f9:db:9b:63:b9:4e:34:71:61:39:21:51:e4",
                    "id": "p-9-eks-workers-ada8435",
                    "keyName": "p-9-eks-workers-ada8435",
                    "keyNamePrefix": "",
                    "keyPairId": "key-0fb4c48307d25a8e6",
                    "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDE5dBWnI9Cq1MMdzulJRXI+fY3Y+3EQ/ANkZyaM1sTMKYatbLJuMYR1M6PByhiWG+iT08x/zFK3/GceflCADRn35R0f4VsAtYwL75htvhI7oPCgS+6Jnv+jsRTt/tBujXtoWViwHkdWQuNicWAG2AqSplVvtiZ+xW1g9HPbvM0ywwLCoVcL3VUmHBXqpX6jjZTlTDibvgCUzVl53TZd+v+XXB1tmybA8HllvI2hwob67ibfhDlU/zrO15ptxU5Nv7BcvXrKlPx5D2KK1z4H/kqlMzULVJFSckKjB4x5BxUnxnmnIMqRGHpBmT2E31o7H40IN+Cfk2L2RWphpdB+5kbSngxzMr3EumgodLcoHG3/D2Fm0YD5YELBpvLeGxr+eBscfbTGIBAnY+rBpfzzzd/l2N1ysqy/puVdM4RcdyTEmC9FvtH3p0jcb9mSDafzInmBwpUDNC4NGo5NYLzphkG+22Tzg14fGATA1/BlI3KmRl6Hpp+hPRrmylrATpNtos= amitarya@Amits-MBP.attlocal.net",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "publicKey": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::command:local:Command::ca-crt",
                "custom": true,
                "id": "19881ed367046",
                "type": "command:local:Command",
                "inputs": {
                    "create": "cat ca.crt"
                },
                "outputs": {
                    "create": "cat ca.crt",
                    "stderr": "",
                    "stdout": "-----BEGIN CERTIFICATE-----\nMIIBjjCCATOgAwIBAgIQMNWBOIJca3tk9gZYfHuF4jAKBggqhkjOPQQDAjAlMSMw\nIQYDVQQDExpyb290LmxpbmtlcmQuY2x1c3Rlci5sb2NhbDAeFw0yMjA2MjAyMzEz\nMTNaFw0zMjA2MTcyMzEzMTNaMCUxIzAhBgNVBAMTGnJvb3QubGlua2VyZC5jbHVz\ndGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEk+e46ir4zIkAqqEH\nlXwHiYbm1OTED54r4rLJibCf3Xc64clmxXzwGoLubjMln0wJ7hCOHdv+qWciyzcr\n7fd46KNFMEMwDgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQEwHQYD\nVR0OBBYEFC6e6M6FMdaBm+46yE8v4izPMC/WMAoGCCqGSM49BAMCA0kAMEYCIQC1\nj9VL0zwLaZzO6yh+kp0Sgnkqjl/TIP2jOqDk+9nmcQIhAICuKjDRpkFOyXJdjf4H\nfPAtb7AFc0ysC27FeXEtRENx\n-----END CERTIFICATE-----"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::command:local:Command::root-ca"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:command::default_0_0_3::cd6ef9a7-b155-431b-8d60-8e59eff618c9",
                "propertyDependencies": {
                    "create": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::command:local:Command::issuer-ca",
                "custom": true,
                "id": "198821e12235b",
                "type": "command:local:Command",
                "inputs": {
                    "create": "step certificate create identity.linkerd.cluster.local issuer.crt issuer.key --profile intermediate-ca --not-after 8760h --no-password --insecure --ca ca.crt --ca-key ca.key",
                    "delete": "rm -f issuer.crt issuer.key"
                },
                "outputs": {
                    "create": "step certificate create identity.linkerd.cluster.local issuer.crt issuer.key --profile intermediate-ca --not-after 8760h --no-password --insecure --ca ca.crt --ca-key ca.key",
                    "delete": "rm -f issuer.crt issuer.key",
                    "stderr": "Your certificate has been saved in issuer.crt.\nYour private key has been saved in issuer.key.",
                    "stdout": ""
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::command:local:Command::root-ca"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:command::default_0_0_3::cd6ef9a7-b155-431b-8d60-8e59eff618c9",
                "propertyDependencies": {
                    "create": null,
                    "delete": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/routeTableAssociation:RouteTableAssociation::p-9-rt-assoc-public-1",
                "custom": true,
                "id": "rtbassoc-0e03e91caa2f1891c",
                "type": "aws:ec2/routeTableAssociation:RouteTableAssociation",
                "inputs": {
                    "__defaults": [],
                    "routeTableId": "rtb-079febe4e0adfc41f",
                    "subnetId": "subnet-012fe90f2f98245d3"
                },
                "outputs": {
                    "gatewayId": "",
                    "id": "rtbassoc-0e03e91caa2f1891c",
                    "routeTableId": "rtb-079febe4e0adfc41f",
                    "subnetId": "subnet-012fe90f2f98245d3"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "routeTableId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ],
                    "subnetId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/route:Route::p-9-route-to-control-plane-0",
                "custom": true,
                "id": "r-rtb-0ddd28eba47726c703854007479",
                "type": "aws:ec2/route:Route",
                "inputs": {
                    "__defaults": [],
                    "destinationCidrBlock": "172.31.0.0/16",
                    "routeTableId": "rtb-0ddd28eba47726c70",
                    "vpcPeeringConnectionId": "pcx-087013882e5e9aa26"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "carrierGatewayId": "",
                    "destinationCidrBlock": "172.31.0.0/16",
                    "destinationIpv6CidrBlock": "",
                    "destinationPrefixListId": "",
                    "egressOnlyGatewayId": "",
                    "gatewayId": "",
                    "id": "r-rtb-0ddd28eba47726c703854007479",
                    "instanceId": "",
                    "instanceOwnerId": "",
                    "localGatewayId": "",
                    "natGatewayId": "",
                    "networkInterfaceId": "",
                    "origin": "CreateRoute",
                    "routeTableId": "rtb-0ddd28eba47726c70",
                    "state": "active",
                    "transitGatewayId": "",
                    "vpcEndpointId": "",
                    "vpcPeeringConnectionId": "pcx-087013882e5e9aa26"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-9-peering-connection"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "destinationCidrBlock": null,
                    "routeTableId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt"
                    ],
                    "vpcPeeringConnectionId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-9-peering-connection"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/routeTableAssociation:RouteTableAssociation::p-9-rt-assoc-public-0",
                "custom": true,
                "id": "rtbassoc-09aa9291a7ee1b66e",
                "type": "aws:ec2/routeTableAssociation:RouteTableAssociation",
                "inputs": {
                    "__defaults": [],
                    "routeTableId": "rtb-079febe4e0adfc41f",
                    "subnetId": "subnet-0ba080f60ce10bef8"
                },
                "outputs": {
                    "gatewayId": "",
                    "id": "rtbassoc-09aa9291a7ee1b66e",
                    "routeTableId": "rtb-079febe4e0adfc41f",
                    "subnetId": "subnet-0ba080f60ce10bef8"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "routeTableId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ],
                    "subnetId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/route:Route::p-9-route-to-data-plane",
                "custom": true,
                "id": "r-rtb-07afe7458db9c4479151928353",
                "type": "aws:ec2/route:Route",
                "inputs": {
                    "__defaults": [],
                    "destinationCidrBlock": "10.109.0.0/16",
                    "routeTableId": "rtb-07afe7458db9c4479",
                    "vpcPeeringConnectionId": "pcx-087013882e5e9aa26"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "carrierGatewayId": "",
                    "destinationCidrBlock": "10.109.0.0/16",
                    "destinationIpv6CidrBlock": "",
                    "destinationPrefixListId": "",
                    "egressOnlyGatewayId": "",
                    "gatewayId": "",
                    "id": "r-rtb-07afe7458db9c4479151928353",
                    "instanceId": "",
                    "instanceOwnerId": "",
                    "localGatewayId": "",
                    "natGatewayId": "",
                    "networkInterfaceId": "",
                    "origin": "CreateRoute",
                    "routeTableId": "rtb-07afe7458db9c4479",
                    "state": "blackhole",
                    "transitGatewayId": "",
                    "vpcEndpointId": "",
                    "vpcPeeringConnectionId": "pcx-087013882e5e9aa26"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-9-peering-connection"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::vpc-control-plane-provider::b935ffa0-9bc3-4e07-815f-4d47dbafbf76",
                "propertyDependencies": {
                    "destinationCidrBlock": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                    ],
                    "routeTableId": null,
                    "vpcPeeringConnectionId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-9-peering-connection"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/vpcPeeringConnectionAccepter:VpcPeeringConnectionAccepter::p-9-peering-connection-acceptor",
                "custom": true,
                "id": "pcx-087013882e5e9aa26",
                "type": "aws:ec2/vpcPeeringConnectionAccepter:VpcPeeringConnectionAccepter",
                "inputs": {
                    "__defaults": [],
                    "accepter": {
                        "__defaults": [
                            "allowClassicLinkToRemoteVpc",
                            "allowVpcToRemoteClassicLink"
                        ],
                        "allowClassicLinkToRemoteVpc": false,
                        "allowRemoteVpcDnsResolution": true,
                        "allowVpcToRemoteClassicLink": false
                    },
                    "autoAccept": true,
                    "tags": {
                        "Side": "Acceptor",
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcPeeringConnectionId": "pcx-087013882e5e9aa26"
                },
                "outputs": {
                    "acceptStatus": "active",
                    "accepter": {
                        "allowClassicLinkToRemoteVpc": false,
                        "allowRemoteVpcDnsResolution": true,
                        "allowVpcToRemoteClassicLink": false
                    },
                    "autoAccept": true,
                    "id": "pcx-087013882e5e9aa26",
                    "peerOwnerId": "447769723736",
                    "peerRegion": "us-west-2",
                    "peerVpcId": "vpc-0ef7ddcb03603a807",
                    "requester": null,
                    "tags": {
                        "Side": "Acceptor",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Side": "Acceptor",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0d9942e83f94c049c",
                    "vpcPeeringConnectionId": "pcx-087013882e5e9aa26"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-9-peering-connection"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::vpc-control-plane-provider::b935ffa0-9bc3-4e07-815f-4d47dbafbf76",
                "propertyDependencies": {
                    "accepter": null,
                    "autoAccept": null,
                    "tags": null,
                    "vpcPeeringConnectionId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-9-peering-connection"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/routeTableAssociation:RouteTableAssociation::p-9-rt-assoc-private-1",
                "custom": true,
                "id": "rtbassoc-08aea636977f65ba6",
                "type": "aws:ec2/routeTableAssociation:RouteTableAssociation",
                "inputs": {
                    "__defaults": [],
                    "routeTableId": "rtb-0ddd28eba47726c70",
                    "subnetId": "subnet-02dad9a9948396f14"
                },
                "outputs": {
                    "gatewayId": "",
                    "id": "rtbassoc-08aea636977f65ba6",
                    "routeTableId": "rtb-0ddd28eba47726c70",
                    "subnetId": "subnet-02dad9a9948396f14"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "routeTableId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt"
                    ],
                    "subnetId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/route:Route::p-9-allow-all-public-rt",
                "custom": true,
                "id": "r-rtb-079febe4e0adfc41f1080289494",
                "type": "aws:ec2/route:Route",
                "inputs": {
                    "__defaults": [],
                    "destinationCidrBlock": "0.0.0.0/0",
                    "gatewayId": "igw-07c4a9a230fb3f4ee",
                    "routeTableId": "rtb-079febe4e0adfc41f"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "carrierGatewayId": "",
                    "destinationCidrBlock": "0.0.0.0/0",
                    "destinationIpv6CidrBlock": "",
                    "destinationPrefixListId": "",
                    "egressOnlyGatewayId": "",
                    "gatewayId": "igw-07c4a9a230fb3f4ee",
                    "id": "r-rtb-079febe4e0adfc41f1080289494",
                    "instanceId": "",
                    "instanceOwnerId": "",
                    "localGatewayId": "",
                    "natGatewayId": "",
                    "networkInterfaceId": "",
                    "origin": "CreateRoute",
                    "routeTableId": "rtb-079febe4e0adfc41f",
                    "state": "active",
                    "transitGatewayId": "",
                    "vpcEndpointId": "",
                    "vpcPeeringConnectionId": ""
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/internetGateway:InternetGateway::p-9-internet-gateway",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "destinationCidrBlock": null,
                    "gatewayId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/internetGateway:InternetGateway::p-9-internet-gateway"
                    ],
                    "routeTableId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                "custom": true,
                "id": "acl-0582fb8be08519b77",
                "type": "aws:ec2/networkAcl:NetworkAcl",
                "inputs": {
                    "__defaults": [],
                    "egress": [
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "protocol": "tcp",
                            "ruleNo": 100,
                            "toPort": 65535
                        },
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "10.109.0.0/16",
                            "fromPort": 0,
                            "protocol": "-1",
                            "ruleNo": 101,
                            "toPort": 0
                        }
                    ],
                    "ingress": [
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "protocol": "tcp",
                            "ruleNo": 100,
                            "toPort": 65535
                        },
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "10.109.0.0/16",
                            "fromPort": 0,
                            "protocol": "-1",
                            "ruleNo": 101,
                            "toPort": 0
                        }
                    ],
                    "subnetIds": [
                        "subnet-009d063028d2fd06f",
                        "subnet-02dad9a9948396f14"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "arn": "arn:aws:ec2:us-west-2:447769723736:network-acl/acl-0582fb8be08519b77",
                    "egress": [
                        {
                            "action": "allow",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "6",
                            "ruleNo": 100,
                            "toPort": 65535
                        },
                        {
                            "action": "allow",
                            "cidrBlock": "10.109.0.0/16",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "-1",
                            "ruleNo": 101,
                            "toPort": 0
                        }
                    ],
                    "id": "acl-0582fb8be08519b77",
                    "ingress": [
                        {
                            "action": "allow",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "6",
                            "ruleNo": 100,
                            "toPort": 65535
                        },
                        {
                            "action": "allow",
                            "cidrBlock": "10.109.0.0/16",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "-1",
                            "ruleNo": 101,
                            "toPort": 0
                        }
                    ],
                    "ownerId": "447769723736",
                    "subnetIds": [
                        "subnet-009d063028d2fd06f",
                        "subnet-02dad9a9948396f14"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "egress": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                    ],
                    "ingress": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                    ],
                    "subnetIds": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet"
                    ],
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/route:Route::p-9-allow-all-private-rt",
                "custom": true,
                "id": "r-rtb-0ddd28eba47726c701080289494",
                "type": "aws:ec2/route:Route",
                "inputs": {
                    "__defaults": [],
                    "destinationCidrBlock": "0.0.0.0/0",
                    "natGatewayId": "nat-0bffb9c2d668c830a",
                    "routeTableId": "rtb-0ddd28eba47726c70"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "carrierGatewayId": "",
                    "destinationCidrBlock": "0.0.0.0/0",
                    "destinationIpv6CidrBlock": "",
                    "destinationPrefixListId": "",
                    "egressOnlyGatewayId": "",
                    "gatewayId": "",
                    "id": "r-rtb-0ddd28eba47726c701080289494",
                    "instanceId": "",
                    "instanceOwnerId": "",
                    "localGatewayId": "",
                    "natGatewayId": "nat-0bffb9c2d668c830a",
                    "networkInterfaceId": "",
                    "origin": "CreateRoute",
                    "routeTableId": "rtb-0ddd28eba47726c70",
                    "state": "active",
                    "transitGatewayId": "",
                    "vpcEndpointId": "",
                    "vpcPeeringConnectionId": ""
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/natGateway:NatGateway::p-9-nat-gateway",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aws-provider::8517e1f7-46ce-4309-ad97-9654187eb5f6",
                "propertyDependencies": {
                    "destinationCidrBlock": null,
                    "natGatewayId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/natGateway:NatGateway::p-9-nat-gateway"
                    ],
                    "routeTableId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                "custom": true,
                "id": "p-9-eks-cluster-instanceRole-role-33db0f5",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "name",
                        "path"
                    ],
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ec2.amazonaws.com\"]}}]}",
                    "forceDetachPolicies": false,
                    "maxSessionDuration": 3600,
                    "name": "p-9-eks-cluster-instanceRole-role-33db0f5",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::447769723736:role/p-9-eks-cluster-instanceRole-role-33db0f5",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2022-06-20T23:13:14Z",
                    "description": "",
                    "forceDetachPolicies": false,
                    "id": "p-9-eks-cluster-instanceRole-role-33db0f5",
                    "inlinePolicies": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "p-9-eks-cluster-instanceRole-role-33db0f5",
                    "namePrefix": "",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAWQQJHYNMHRJ36KLVX"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-9-eks-cluster-instanceRole",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "assumeRolePolicy": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-eksRole-role",
                "custom": true,
                "id": "p-9-eks-cluster-eksRole-role-75b0d64",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "name",
                        "path"
                    ],
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"eks.amazonaws.com\"]}}]}",
                    "description": "Allows EKS to manage clusters on your behalf.",
                    "forceDetachPolicies": false,
                    "maxSessionDuration": 3600,
                    "name": "p-9-eks-cluster-eksRole-role-75b0d64",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::447769723736:role/p-9-eks-cluster-eksRole-role-75b0d64",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2022-06-20T23:13:14Z",
                    "description": "Allows EKS to manage clusters on your behalf.",
                    "forceDetachPolicies": false,
                    "id": "p-9-eks-cluster-eksRole-role-75b0d64",
                    "inlinePolicies": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "p-9-eks-cluster-eksRole-role-75b0d64",
                    "namePrefix": "",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAWQQJHYNMLJS3DTOEH"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-9-eks-cluster-eksRole",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "assumeRolePolicy": null,
                    "description": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::command:local:Command::issuer-key",
                "custom": true,
                "id": "198877aa8ea2a",
                "type": "command:local:Command",
                "inputs": {
                    "create": "cat issuer.key"
                },
                "outputs": {
                    "create": "cat issuer.key",
                    "stderr": "",
                    "stdout": "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIC9CdA5G3wf5zPkuKFdPui+FhgUMZpe1dJBbu89XEX7voAoGCCqGSM49\nAwEHoUQDQgAEEPzBkNMtNd5QrRgKrLa7X6XdQDA4qpEnRyU8vp4trUIqfNrGjnbp\nEHOGza64qz1gGU6mpmpkEtpiRXkhwS7Lbg==\n-----END EC PRIVATE KEY-----"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::command:local:Command::issuer-ca"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:command::default_0_0_3::cd6ef9a7-b155-431b-8d60-8e59eff618c9",
                "propertyDependencies": {
                    "create": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::command:local:Command::issuer-crt",
                "custom": true,
                "id": "198867de08fd2",
                "type": "command:local:Command",
                "inputs": {
                    "create": "cat issuer.crt"
                },
                "outputs": {
                    "create": "cat issuer.crt",
                    "stderr": "",
                    "stdout": "-----BEGIN CERTIFICATE-----\nMIIBszCCAVmgAwIBAgIRAOKBqlE56CFDdm8zsMXaukMwCgYIKoZIzj0EAwIwJTEj\nMCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjIwNjIwMjMx\nMzE2WhcNMjMwNjIwMjMxMzE2WjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJk\nLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQQ/MGQ0y01\n3lCtGAqstrtfpd1AMDiqkSdHJTy+ni2tQip82saOdukQc4bNrrirPWAZTqamamQS\n2mJFeSHBLstuo2YwZDAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIB\nADAdBgNVHQ4EFgQUi9noKTupLIDfbiJkWFcAEHOOrrEwHwYDVR0jBBgwFoAULp7o\nzoUx1oGb7jrITy/iLM8wL9YwCgYIKoZIzj0EAwIDSAAwRQIhAIUr3JcW3lZvpLCl\nYk4lEyhZ6mew2OFYLheWleQR2ry3AiAcl+PI8LLe86SOSD/RWuAcFUOBnDemC3fe\nxnpalmKHNg==\n-----END CERTIFICATE-----"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::command:local:Command::issuer-ca"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:command::default_0_0_3::cd6ef9a7-b155-431b-8d60-8e59eff618c9",
                "propertyDependencies": {
                    "create": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-eksClusterSecurityGroup",
                "custom": true,
                "id": "sg-09fc75dbeb34196db",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Managed by Pulumi",
                    "name": "p-9-eks-cluster-eksClusterSecurityGroup-acd5e5e",
                    "revokeRulesOnDelete": true,
                    "tags": {
                        "Name": "p-9-eks-cluster-eksClusterSecurityGroup",
                        "__defaults": []
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:447769723736:security-group/sg-09fc75dbeb34196db",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-09fc75dbeb34196db",
                    "ingress": [],
                    "name": "p-9-eks-cluster-eksClusterSecurityGroup-acd5e5e",
                    "namePrefix": "",
                    "ownerId": "447769723736",
                    "revokeRulesOnDelete": true,
                    "tags": {
                        "Name": "p-9-eks-cluster-eksClusterSecurityGroup"
                    },
                    "tagsAll": {
                        "Name": "p-9-eks-cluster-eksClusterSecurityGroup"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "description": null,
                    "revokeRulesOnDelete": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                "custom": true,
                "id": "p-9-eks-cluster-instanceRole-role-33db0f5-20220620231319040700000002",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                    "role": "p-9-eks-cluster-instanceRole-role-33db0f5"
                },
                "outputs": {
                    "id": "p-9-eks-cluster-instanceRole-role-33db0f5-20220620231319040700000002",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                    "role": "p-9-eks-cluster-instanceRole-role-33db0f5"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-9-eks-cluster-instanceRole",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "policyArn": null,
                    "role": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                "custom": true,
                "id": "p-9-eks-cluster-instanceRole-role-33db0f5-20220620231319324600000004",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                    "role": "p-9-eks-cluster-instanceRole-role-33db0f5"
                },
                "outputs": {
                    "id": "p-9-eks-cluster-instanceRole-role-33db0f5-20220620231319324600000004",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                    "role": "p-9-eks-cluster-instanceRole-role-33db0f5"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-9-eks-cluster-instanceRole",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "policyArn": null,
                    "role": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                "custom": true,
                "id": "p-9-eks-cluster-instanceRole-role-33db0f5-20220620231319205600000003",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                    "role": "p-9-eks-cluster-instanceRole-role-33db0f5"
                },
                "outputs": {
                    "id": "p-9-eks-cluster-instanceRole-role-33db0f5-20220620231319205600000003",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                    "role": "p-9-eks-cluster-instanceRole-role-33db0f5"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-9-eks-cluster-instanceRole",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "policyArn": null,
                    "role": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-eksRole-4b490823",
                "custom": true,
                "id": "p-9-eks-cluster-eksRole-role-75b0d64-20220620231319838900000005",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                    "role": "p-9-eks-cluster-eksRole-role-75b0d64"
                },
                "outputs": {
                    "id": "p-9-eks-cluster-eksRole-role-75b0d64-20220620231319838900000005",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                    "role": "p-9-eks-cluster-eksRole-role-75b0d64"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-9-eks-cluster-eksRole",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-eksRole-role"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "policyArn": null,
                    "role": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-eksRole-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-9-eks-cluster-eksClusterInternetEgressRule",
                "custom": true,
                "id": "sgrule-2601794988",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "0.0.0.0/0"
                    ],
                    "description": "Allow internet access.",
                    "fromPort": 0,
                    "protocol": "-1",
                    "securityGroupId": "sg-09fc75dbeb34196db",
                    "toPort": 0,
                    "type": "egress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "0.0.0.0/0"
                    ],
                    "description": "Allow internet access.",
                    "fromPort": 0,
                    "id": "sgrule-2601794988",
                    "protocol": "-1",
                    "securityGroupId": "sg-09fc75dbeb34196db",
                    "self": false,
                    "toPort": 0,
                    "type": "egress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-eksClusterSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-eksClusterSecurityGroup"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                "custom": true,
                "id": "p-9-eks-cluster-eksCluster-d890a2b",
                "type": "aws:eks/cluster:Cluster",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "enabledClusterLogTypes": [
                        "api",
                        "authenticator",
                        "controllerManager",
                        "scheduler"
                    ],
                    "name": "p-9-eks-cluster-eksCluster-d890a2b",
                    "roleArn": "arn:aws:iam::447769723736:role/p-9-eks-cluster-eksRole-role-75b0d64",
                    "tags": {
                        "Name": "p-9-eks-cluster-eksCluster",
                        "__defaults": []
                    },
                    "version": "1.22",
                    "vpcConfig": {
                        "__defaults": [],
                        "endpointPrivateAccess": true,
                        "endpointPublicAccess": true,
                        "securityGroupIds": [
                            "sg-09fc75dbeb34196db"
                        ],
                        "subnetIds": [
                            "subnet-0ba080f60ce10bef8",
                            "subnet-012fe90f2f98245d3",
                            "subnet-009d063028d2fd06f",
                            "subnet-02dad9a9948396f14"
                        ]
                    }
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":1800000000000,\"delete\":900000000000,\"update\":3600000000000}}",
                    "arn": "arn:aws:eks:us-west-2:447769723736:cluster/p-9-eks-cluster-eksCluster-d890a2b",
                    "certificateAuthority": {
                        "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREl6TVRrek1sb1hEVE15TURZeE56SXpNVGt6TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNmCkNqN3NBWlBsYlYvb3hqdnkwRVdpZzRmemFqOVo4UjBKVUk0Vm9jWk8xQTNmMmRBUzFlZm1FTDN4ai9uNGd4RlYKWXNycWRXQUE2ZUNGZm9BYWJhT1hFU1RXOHFZdERGSjFCbWZIZi90dUxMcmtuY3dSK0pnUldQQWNscjh0OU1tYQpRU3BLQWJmd1JuUzFDM29FMHorcFdLUXhWWG5aWHNVQzYyZW5jc3F0di9oS1h1VDB2Y3craFY1eXRIRHBzZEVTClRFVUZSeFc2c2YzcC9ma2tWRnJremhJY3MvVGNLMFAzV3dsUEZteXh4YjZ6QnFCWUxXUjZDYkxGV1BOM2ZSNXIKN1E5SVZHbzZYcDVFOE9PN2RoejRsbWpoUEpPUDNJbHNjS2k0azFza25maGxqdkVhYU9OOTU2REtLZitET2RibgoyR0xkaHhMbS9QOEU4ZmNabnVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDZzBmSnoxbWRtNFJDdEtDV0Z0cnZscnNUdkVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREFGQnpkZllueC9PTHp2UFZzUApEbU5PU0YvWVZkazB6elhPcnFkcjJaeFppUytoMVUxR2hZb3FFbTJqUG9ienBkNnkyTE4rY1EyTlJkdVFQN0Y4ClVXM1hIUUVNbCtTakhMSzZmUTkrNDB5NVJ0TU8vVURpOVl3QTZWd2RSMlpITWx2V0UwZlpYaWw3ajVlWGNVaTQKd3luN2ZmSkVDejdUYjMyVzh1MWFOU0Evc0MyV0ZqMzJnSFR2WlZCMnU0S1JDUzR3MzJUN0lXUC9Wd3lrQlZmMQpLQmZvdDQ5aWpRdVpNRSt0c2pwQVo1Z3UzMCtEd09DSGhmcVFrU2JodFQ0OXY4cEdqWSsxdHVoQ0JHSkwrVjl1Cnl6QXZ0cnI3ZEVnVnpNV2tpMzQ4bWg2UHV5WmFiQ1lReE1XMkEwWEtsRVZSTEw2OFFrT2F4Zk0xcS9FVHRTZUQKd3FJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
                    },
                    "createdAt": "2022-06-20 23:13:32.825 +0000 UTC",
                    "enabledClusterLogTypes": [
                        "controllerManager",
                        "scheduler",
                        "authenticator",
                        "api"
                    ],
                    "encryptionConfig": null,
                    "endpoint": "https://21ADA50B71448C1056490BD03957CE68.gr7.us-west-2.eks.amazonaws.com",
                    "id": "p-9-eks-cluster-eksCluster-d890a2b",
                    "identities": [
                        {
                            "oidcs": [
                                {
                                    "issuer": "https://oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68"
                                }
                            ]
                        }
                    ],
                    "kubernetesNetworkConfig": {
                        "ipFamily": "ipv4",
                        "serviceIpv4Cidr": "172.20.0.0/16"
                    },
                    "name": "p-9-eks-cluster-eksCluster-d890a2b",
                    "platformVersion": "eks.2",
                    "roleArn": "arn:aws:iam::447769723736:role/p-9-eks-cluster-eksRole-role-75b0d64",
                    "status": "ACTIVE",
                    "tags": {
                        "Name": "p-9-eks-cluster-eksCluster"
                    },
                    "tagsAll": {
                        "Name": "p-9-eks-cluster-eksCluster"
                    },
                    "version": "1.22",
                    "vpcConfig": {
                        "clusterSecurityGroupId": "sg-05ea7c54b3f21042d",
                        "endpointPrivateAccess": true,
                        "endpointPublicAccess": true,
                        "publicAccessCidrs": [
                            "0.0.0.0/0"
                        ],
                        "securityGroupIds": [
                            "sg-09fc75dbeb34196db"
                        ],
                        "subnetIds": [
                            "subnet-009d063028d2fd06f",
                            "subnet-0ba080f60ce10bef8",
                            "subnet-012fe90f2f98245d3",
                            "subnet-02dad9a9948396f14"
                        ],
                        "vpcId": "vpc-0ef7ddcb03603a807"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-eksClusterSecurityGroup",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-eksRole-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-eksRole-4b490823"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "enabledClusterLogTypes": null,
                    "roleArn": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-eksRole-role",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-eksRole-4b490823"
                    ],
                    "tags": null,
                    "version": null,
                    "vpcConfig": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-eksClusterSecurityGroup",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:iam/rolePolicy:RolePolicy::p-9-s3-createbucket-rolepolicy",
                "custom": true,
                "id": "p-9-eks-cluster-instanceRole-role-33db0f5:p-9-s3-createbucket-rolepolicy",
                "type": "aws:iam/rolePolicy:RolePolicy",
                "inputs": {
                    "__defaults": [],
                    "name": "p-9-s3-createbucket-rolepolicy",
                    "policy": "{\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": \"s3:CreateBucket\",\n                    \"Resource\": \"*\"\n                }\n            ]\n        }",
                    "role": "p-9-eks-cluster-instanceRole-role-33db0f5"
                },
                "outputs": {
                    "id": "p-9-eks-cluster-instanceRole-role-33db0f5:p-9-s3-createbucket-rolepolicy",
                    "name": "p-9-s3-createbucket-rolepolicy",
                    "policy": "{\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": \"s3:CreateBucket\",\n                    \"Resource\": \"*\"\n                }\n            ]\n        }",
                    "role": "p-9-eks-cluster-instanceRole-role-33db0f5"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "name": null,
                    "policy": null,
                    "role": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-nodeSecurityGroup",
                "custom": true,
                "id": "sg-0855583e710462364",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Managed by Pulumi",
                    "name": "p-9-eks-cluster-nodeSecurityGroup-d3642d7",
                    "revokeRulesOnDelete": true,
                    "tags": {
                        "Name": "p-9-eks-cluster-nodeSecurityGroup",
                        "__defaults": [],
                        "kubernetes.io/cluster/p-9-eks-cluster-eksCluster-d890a2b": "owned"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:447769723736:security-group/sg-0855583e710462364",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-0855583e710462364",
                    "ingress": [],
                    "name": "p-9-eks-cluster-nodeSecurityGroup-d3642d7",
                    "namePrefix": "",
                    "ownerId": "447769723736",
                    "revokeRulesOnDelete": true,
                    "tags": {
                        "Name": "p-9-eks-cluster-nodeSecurityGroup",
                        "kubernetes.io/cluster/p-9-eks-cluster-eksCluster-d890a2b": "owned"
                    },
                    "tagsAll": {
                        "Name": "p-9-eks-cluster-nodeSecurityGroup",
                        "kubernetes.io/cluster/p-9-eks-cluster-eksCluster-d890a2b": "owned"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "description": null,
                    "revokeRulesOnDelete": null,
                    "tags": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster"
                    ],
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::mirrormaker2-metrics",
                "custom": false,
                "type": "kubernetes:yaml:ConfigFile",
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9"
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                "custom": true,
                "id": "arn:aws:iam::447769723736:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68",
                "type": "aws:iam/openIdConnectProvider:OpenIdConnectProvider",
                "inputs": {
                    "__defaults": [],
                    "clientIdLists": [
                        "sts.amazonaws.com"
                    ],
                    "thumbprintLists": [
                        "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
                    ],
                    "url": "https://oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68"
                },
                "outputs": {
                    "arn": "arn:aws:iam::447769723736:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68",
                    "clientIdLists": [
                        "sts.amazonaws.com"
                    ],
                    "id": "arn:aws:iam::447769723736:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68",
                    "tags": {},
                    "tagsAll": {},
                    "thumbprintLists": [
                        "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
                    ],
                    "url": "oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "clientIdLists": null,
                    "thumbprintLists": null,
                    "url": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::tele-aws-provider",
                "custom": true,
                "id": "d5512428-3d17-461f-815e-b9bf3fba8a86",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                ],
                "propertyDependencies": {
                    "assumeRole": [
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                    ],
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::glue-source-aws-provider",
                "custom": true,
                "id": "d9dc7a7e-d90c-406e-96e0-6fc8d70eaec0",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                ],
                "propertyDependencies": {
                    "assumeRole": [
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                    ],
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::plane-eks-instance-iam-policy-provider",
                "custom": true,
                "id": "88df240f-9bcb-4b02-81bb-f4665a7683cd",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                ],
                "propertyDependencies": {
                    "assumeRole": [
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                    ],
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::redis-aws-provider",
                "custom": true,
                "id": "b7af432d-e04a-45a6-8f20-442c18068c79",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                ],
                "propertyDependencies": {
                    "assumeRole": [
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                    ],
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aurora-aws-provider",
                "custom": true,
                "id": "6ba79e86-133f-4bc7-93e0-e5bbc8297f8b",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                ],
                "propertyDependencies": {
                    "assumeRole": [
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                    ],
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::connector-sink-aws-provider",
                "custom": true,
                "id": "3f7621ef-ddce-4a3b-895e-b0d9d2d6ca0d",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                ],
                "propertyDependencies": {
                    "assumeRole": [
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                    ],
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::cache-aws-provider",
                "custom": true,
                "id": "23c78f3d-33b3-4dbf-bfa4-703c4a31c829",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                ],
                "propertyDependencies": {
                    "assumeRole": [
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                    ],
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:confluent::conf-provider",
                "custom": true,
                "id": "a8904b2e-78f9-47e1-bec2-41dc4e807754",
                "type": "pulumi:providers:confluent",
                "inputs": {
                    "password": "Mohit@Fennel",
                    "username": "mohit@fennel.ai",
                    "version": "0.2.2"
                },
                "outputs": {
                    "password": "Mohit@Fennel",
                    "username": "mohit@fennel.ai",
                    "version": "0.2.2"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "propertyDependencies": {
                    "password": null,
                    "username": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::offline-aggregate-source-aws-provider",
                "custom": true,
                "id": "a34206cb-11b0-43e2-ac99-08a1520c41c6",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                ],
                "propertyDependencies": {
                    "assumeRole": [
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                    ],
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::local-static-provisioner",
                "custom": false,
                "type": "kubernetes:yaml:ConfigFile",
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9"
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::msk-aws-provider",
                "custom": true,
                "id": "1d9a65d6-5edf-4963-8c93-de1207911f37",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                ],
                "propertyDependencies": {
                    "assumeRole": [
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                    ],
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::eks-nvme-ssd-provisioner",
                "custom": false,
                "type": "kubernetes:yaml:ConfigFile",
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9"
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::p-9-postgres-aurora-aws-provider",
                "custom": true,
                "id": "c95cb518-a030-4f31-85fb-1c3cb6c30a32",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::447769723736:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                ],
                "propertyDependencies": {
                    "assumeRole": [
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                    ],
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:iam/policy:Policy::p-9-lbc-policy",
                "custom": true,
                "id": "arn:aws:iam::447769723736:policy/p-9-AWSLoadBalancerControllerIAMPolicy20220620231315682500000001",
                "type": "aws:iam/policy:Policy",
                "inputs": {
                    "__defaults": [
                        "path"
                    ],
                    "namePrefix": "p-9-AWSLoadBalancerControllerIAMPolicy",
                    "path": "/",
                    "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:CreateServiceLinkedRole\",\n                \"ec2:DescribeAccountAttributes\",\n                \"ec2:DescribeAddresses\",\n                \"ec2:DescribeAvailabilityZones\",\n                \"ec2:DescribeInternetGateways\",\n                \"ec2:DescribeVpcs\",\n                \"ec2:DescribeSubnets\",\n                \"ec2:DescribeSecurityGroups\",\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeNetworkInterfaces\",\n                \"ec2:DescribeTags\",\n                \"ec2:GetCoipPoolUsage\",\n                \"ec2:DescribeCoipPools\",\n                \"elasticloadbalancing:DescribeLoadBalancers\",\n                \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n                \"elasticloadbalancing:DescribeListeners\",\n                \"elasticloadbalancing:DescribeListenerCertificates\",\n                \"elasticloadbalancing:DescribeSSLPolicies\",\n                \"elasticloadbalancing:DescribeRules\",\n                \"elasticloadbalancing:DescribeTargetGroups\",\n                \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n                \"elasticloadbalancing:DescribeTargetHealth\",\n                \"elasticloadbalancing:DescribeTags\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"cognito-idp:DescribeUserPoolClient\",\n                \"acm:ListCertificates\",\n                \"acm:DescribeCertificate\",\n                \"iam:ListServerCertificates\",\n                \"iam:GetServerCertificate\",\n                \"waf-regional:GetWebACL\",\n                \"waf-regional:GetWebACLForResource\",\n                \"waf-regional:AssociateWebACL\",\n                \"waf-regional:DisassociateWebACL\",\n                \"wafv2:GetWebACL\",\n                \"wafv2:GetWebACLForResource\",\n                \"wafv2:AssociateWebACL\",\n                \"wafv2:DisassociateWebACL\",\n                \"shield:GetSubscriptionState\",\n                \"shield:DescribeProtection\",\n                \"shield:CreateProtection\",\n                \"shield:DeleteProtection\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AuthorizeSecurityGroupIngress\",\n                \"ec2:RevokeSecurityGroupIngress\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateSecurityGroup\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"ec2:CreateAction\": \"CreateSecurityGroup\"\n                },\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\",\n                \"ec2:DeleteTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AuthorizeSecurityGroupIngress\",\n                \"ec2:RevokeSecurityGroupIngress\",\n                \"ec2:DeleteSecurityGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:CreateLoadBalancer\",\n                \"elasticloadbalancing:CreateTargetGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:CreateListener\",\n                \"elasticloadbalancing:DeleteListener\",\n                \"elasticloadbalancing:CreateRule\",\n                \"elasticloadbalancing:DeleteRule\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:AddTags\",\n                \"elasticloadbalancing:RemoveTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n            ],\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:AddTags\",\n                \"elasticloadbalancing:RemoveTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n                \"elasticloadbalancing:SetIpAddressType\",\n                \"elasticloadbalancing:SetSecurityGroups\",\n                \"elasticloadbalancing:SetSubnets\",\n                \"elasticloadbalancing:DeleteLoadBalancer\",\n                \"elasticloadbalancing:ModifyTargetGroup\",\n                \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n                \"elasticloadbalancing:DeleteTargetGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:RegisterTargets\",\n                \"elasticloadbalancing:DeregisterTargets\"\n            ],\n            \"Resource\": \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:SetWebAcl\",\n                \"elasticloadbalancing:ModifyListener\",\n                \"elasticloadbalancing:AddListenerCertificates\",\n                \"elasticloadbalancing:RemoveListenerCertificates\",\n                \"elasticloadbalancing:ModifyRule\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n"
                },
                "outputs": {
                    "arn": "arn:aws:iam::447769723736:policy/p-9-AWSLoadBalancerControllerIAMPolicy20220620231315682500000001",
                    "description": "",
                    "id": "arn:aws:iam::447769723736:policy/p-9-AWSLoadBalancerControllerIAMPolicy20220620231315682500000001",
                    "name": "p-9-AWSLoadBalancerControllerIAMPolicy20220620231315682500000001",
                    "namePrefix": "p-9-AWSLoadBalancerControllerIAMPolicy",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"iam:CreateServiceLinkedRole\",\"ec2:DescribeAccountAttributes\",\"ec2:DescribeAddresses\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeInternetGateways\",\"ec2:DescribeVpcs\",\"ec2:DescribeSubnets\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeInstances\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeTags\",\"ec2:GetCoipPoolUsage\",\"ec2:DescribeCoipPools\",\"elasticloadbalancing:DescribeLoadBalancers\",\"elasticloadbalancing:DescribeLoadBalancerAttributes\",\"elasticloadbalancing:DescribeListeners\",\"elasticloadbalancing:DescribeListenerCertificates\",\"elasticloadbalancing:DescribeSSLPolicies\",\"elasticloadbalancing:DescribeRules\",\"elasticloadbalancing:DescribeTargetGroups\",\"elasticloadbalancing:DescribeTargetGroupAttributes\",\"elasticloadbalancing:DescribeTargetHealth\",\"elasticloadbalancing:DescribeTags\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"cognito-idp:DescribeUserPoolClient\",\"acm:ListCertificates\",\"acm:DescribeCertificate\",\"iam:ListServerCertificates\",\"iam:GetServerCertificate\",\"waf-regional:GetWebACL\",\"waf-regional:GetWebACLForResource\",\"waf-regional:AssociateWebACL\",\"waf-regional:DisassociateWebACL\",\"wafv2:GetWebACL\",\"wafv2:GetWebACLForResource\",\"wafv2:AssociateWebACL\",\"wafv2:DisassociateWebACL\",\"shield:GetSubscriptionState\",\"shield:DescribeProtection\",\"shield:CreateProtection\",\"shield:DeleteProtection\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:AuthorizeSecurityGroupIngress\",\"ec2:RevokeSecurityGroupIngress\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateSecurityGroup\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"ec2:CreateAction\":\"CreateSecurityGroup\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:CreateTags\",\"ec2:DeleteTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:AuthorizeSecurityGroupIngress\",\"ec2:RevokeSecurityGroupIngress\",\"ec2:DeleteSecurityGroup\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:CreateTargetGroup\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateListener\",\"elasticloadbalancing:DeleteListener\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:DeleteRule\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:AddTags\",\"elasticloadbalancing:RemoveTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:AddTags\",\"elasticloadbalancing:RemoveTags\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"]},{\"Action\":[\"elasticloadbalancing:ModifyLoadBalancerAttributes\",\"elasticloadbalancing:SetIpAddressType\",\"elasticloadbalancing:SetSecurityGroups\",\"elasticloadbalancing:SetSubnets\",\"elasticloadbalancing:DeleteLoadBalancer\",\"elasticloadbalancing:ModifyTargetGroup\",\"elasticloadbalancing:ModifyTargetGroupAttributes\",\"elasticloadbalancing:DeleteTargetGroup\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:RegisterTargets\",\"elasticloadbalancing:DeregisterTargets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"},{\"Action\":[\"elasticloadbalancing:SetWebAcl\",\"elasticloadbalancing:ModifyListener\",\"elasticloadbalancing:AddListenerCertificates\",\"elasticloadbalancing:RemoveListenerCertificates\",\"elasticloadbalancing:ModifyRule\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                    "policyId": "ANPAWQQJHYNMBEGYHAFJK",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "namePrefix": null,
                    "policy": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::command:local:Command::waiter",
                "custom": true,
                "id": "198832049ed27",
                "type": "command:local:Command",
                "inputs": {
                    "create": "kubectl wait deploy/emissary-apiext --for condition=available -n emissary-system"
                },
                "outputs": {
                    "create": "kubectl wait deploy/emissary-apiext --for condition=available -n emissary-system",
                    "stderr": "",
                    "stdout": "deployment.apps/emissary-apiext condition met"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:command::default_0_0_3::cd6ef9a7-b155-431b-8d60-8e59eff618c9",
                "propertyDependencies": {
                    "create": null
                },
                "customTimeouts": {
                    "create": 3600
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:iam/policy:Policy::p-9-ebs-driver-policy",
                "custom": true,
                "id": "arn:aws:iam::447769723736:policy/p-9-EbsCsiDriverIAMPolicy20220729192419469200000001",
                "type": "aws:iam/policy:Policy",
                "inputs": {
                    "__defaults": [
                        "path"
                    ],
                    "namePrefix": "p-9-EbsCsiDriverIAMPolicy",
                    "path": "/",
                    "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateSnapshot\",\n        \"ec2:AttachVolume\",\n        \"ec2:DetachVolume\",\n        \"ec2:ModifyVolume\",\n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeSnapshots\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeVolumes\",\n        \"ec2:DescribeVolumesModifications\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ec2:*:*:volume/*\",\n        \"arn:aws:ec2:*:*:snapshot/*\"\n      ],\n      \"Condition\": {\n        \"StringEquals\": {\n          \"ec2:CreateAction\": [\n            \"CreateVolume\",\n            \"CreateSnapshot\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ec2:*:*:volume/*\",\n        \"arn:aws:ec2:*:*:snapshot/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateVolume\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:RequestTag/ebs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateVolume\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:RequestTag/CSIVolumeName\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateVolume\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:RequestTag/kubernetes.io/cluster/*\": \"owned\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteVolume\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/ebs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteVolume\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/CSIVolumeName\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteVolume\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/kubernetes.io/cluster/*\": \"owned\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteSnapshot\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/CSIVolumeSnapshotName\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteSnapshot\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/ebs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    }\n  ]\n}\n\n"
                },
                "outputs": {
                    "arn": "arn:aws:iam::447769723736:policy/p-9-EbsCsiDriverIAMPolicy20220729192419469200000001",
                    "description": "",
                    "id": "arn:aws:iam::447769723736:policy/p-9-EbsCsiDriverIAMPolicy20220729192419469200000001",
                    "name": "p-9-EbsCsiDriverIAMPolicy20220729192419469200000001",
                    "namePrefix": "p-9-EbsCsiDriverIAMPolicy",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"ec2:CreateSnapshot\",\"ec2:AttachVolume\",\"ec2:DetachVolume\",\"ec2:ModifyVolume\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeInstances\",\"ec2:DescribeSnapshots\",\"ec2:DescribeTags\",\"ec2:DescribeVolumes\",\"ec2:DescribeVolumesModifications\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateTags\"],\"Condition\":{\"StringEquals\":{\"ec2:CreateAction\":[\"CreateVolume\",\"CreateSnapshot\"]}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"]},{\"Action\":[\"ec2:DeleteTags\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"]},{\"Action\":[\"ec2:CreateVolume\"],\"Condition\":{\"StringLike\":{\"aws:RequestTag/ebs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateVolume\"],\"Condition\":{\"StringLike\":{\"aws:RequestTag/CSIVolumeName\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateVolume\"],\"Condition\":{\"StringLike\":{\"aws:RequestTag/kubernetes.io/cluster/*\":\"owned\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:DeleteVolume\"],\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/ebs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:DeleteVolume\"],\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/CSIVolumeName\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:DeleteVolume\"],\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/kubernetes.io/cluster/*\":\"owned\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:DeleteSnapshot\"],\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/CSIVolumeSnapshotName\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:DeleteSnapshot\"],\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/ebs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                    "policyId": "ANPAWQQJHYNMAQWQ6KR64",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "namePrefix": null,
                    "policy": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-9-eks-sg-rule",
                "custom": true,
                "id": "sgrule-3613377035",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-05ea7c54b3f21042d",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-3613377035",
                    "protocol": "tcp",
                    "securityGroupId": "sg-05ea7c54b3f21042d",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-9-eks-cluster-eksExtApiServerClusterIngressRule",
                "custom": true,
                "id": "sgrule-584809162",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane",
                    "fromPort": 443,
                    "protocol": "tcp",
                    "securityGroupId": "sg-0855583e710462364",
                    "sourceSecurityGroupId": "sg-09fc75dbeb34196db",
                    "toPort": 443,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane",
                    "fromPort": 443,
                    "id": "sgrule-584809162",
                    "protocol": "tcp",
                    "securityGroupId": "sg-0855583e710462364",
                    "self": false,
                    "sourceSecurityGroupId": "sg-09fc75dbeb34196db",
                    "toPort": 443,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-eksClusterSecurityGroup",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-nodeSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-nodeSecurityGroup"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-eksClusterSecurityGroup"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-9-eks-cluster-eksNodeInternetEgressRule",
                "custom": true,
                "id": "sgrule-1827879736",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "0.0.0.0/0"
                    ],
                    "description": "Allow internet access.",
                    "fromPort": 0,
                    "protocol": "-1",
                    "securityGroupId": "sg-0855583e710462364",
                    "toPort": 0,
                    "type": "egress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "0.0.0.0/0"
                    ],
                    "description": "Allow internet access.",
                    "fromPort": 0,
                    "id": "sgrule-1827879736",
                    "protocol": "-1",
                    "securityGroupId": "sg-0855583e710462364",
                    "self": false,
                    "toPort": 0,
                    "type": "egress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-nodeSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-nodeSecurityGroup"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-9-eks-cluster-eksNodeIngressRule",
                "custom": true,
                "id": "sgrule-3885676528",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "description": "Allow nodes to communicate with each other",
                    "fromPort": 0,
                    "protocol": "-1",
                    "securityGroupId": "sg-0855583e710462364",
                    "self": true,
                    "toPort": 0,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "description": "Allow nodes to communicate with each other",
                    "fromPort": 0,
                    "id": "sgrule-3885676528",
                    "protocol": "-1",
                    "securityGroupId": "sg-0855583e710462364",
                    "self": true,
                    "toPort": 0,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-nodeSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-nodeSecurityGroup"
                    ],
                    "self": null,
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-9-eks-cluster-eksNodeClusterIngressRule",
                "custom": true,
                "id": "sgrule-2513787800",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "description": "Allow worker Kubelets and pods to receive communication from the cluster control plane",
                    "fromPort": 1025,
                    "protocol": "tcp",
                    "securityGroupId": "sg-0855583e710462364",
                    "sourceSecurityGroupId": "sg-09fc75dbeb34196db",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "description": "Allow worker Kubelets and pods to receive communication from the cluster control plane",
                    "fromPort": 1025,
                    "id": "sgrule-2513787800",
                    "protocol": "tcp",
                    "securityGroupId": "sg-0855583e710462364",
                    "self": false,
                    "sourceSecurityGroupId": "sg-09fc75dbeb34196db",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-eksClusterSecurityGroup",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-nodeSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-nodeSecurityGroup"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-eksClusterSecurityGroup"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-9-eks-cluster-eksClusterIngressRule",
                "custom": true,
                "id": "sgrule-885922672",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "description": "Allow pods to communicate with the cluster API Server",
                    "fromPort": 443,
                    "protocol": "tcp",
                    "securityGroupId": "sg-09fc75dbeb34196db",
                    "sourceSecurityGroupId": "sg-0855583e710462364",
                    "toPort": 443,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "description": "Allow pods to communicate with the cluster API Server",
                    "fromPort": 443,
                    "id": "sgrule-885922672",
                    "protocol": "tcp",
                    "securityGroupId": "sg-09fc75dbeb34196db",
                    "self": false,
                    "sourceSecurityGroupId": "sg-0855583e710462364",
                    "toPort": 443,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-eksClusterSecurityGroup",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-nodeSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-eksClusterSecurityGroup"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-9-eks-cluster-nodeSecurityGroup"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider",
                "custom": true,
                "id": "7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"server\":\"https://21ADA50B71448C1056490BD03957CE68.gr7.us-west-2.eks.amazonaws.com\",\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREl6TVRrek1sb1hEVE15TURZeE56SXpNVGt6TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNmCkNqN3NBWlBsYlYvb3hqdnkwRVdpZzRmemFqOVo4UjBKVUk0Vm9jWk8xQTNmMmRBUzFlZm1FTDN4ai9uNGd4RlYKWXNycWRXQUE2ZUNGZm9BYWJhT1hFU1RXOHFZdERGSjFCbWZIZi90dUxMcmtuY3dSK0pnUldQQWNscjh0OU1tYQpRU3BLQWJmd1JuUzFDM29FMHorcFdLUXhWWG5aWHNVQzYyZW5jc3F0di9oS1h1VDB2Y3craFY1eXRIRHBzZEVTClRFVUZSeFc2c2YzcC9ma2tWRnJremhJY3MvVGNLMFAzV3dsUEZteXh4YjZ6QnFCWUxXUjZDYkxGV1BOM2ZSNXIKN1E5SVZHbzZYcDVFOE9PN2RoejRsbWpoUEpPUDNJbHNjS2k0azFza25maGxqdkVhYU9OOTU2REtLZitET2RibgoyR0xkaHhMbS9QOEU4ZmNabnVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDZzBmSnoxbWRtNFJDdEtDV0Z0cnZscnNUdkVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREFGQnpkZllueC9PTHp2UFZzUApEbU5PU0YvWVZkazB6elhPcnFkcjJaeFppUytoMVUxR2hZb3FFbTJqUG9ienBkNnkyTE4rY1EyTlJkdVFQN0Y4ClVXM1hIUUVNbCtTakhMSzZmUTkrNDB5NVJ0TU8vVURpOVl3QTZWd2RSMlpITWx2V0UwZlpYaWw3ajVlWGNVaTQKd3luN2ZmSkVDejdUYjMyVzh1MWFOU0Evc0MyV0ZqMzJnSFR2WlZCMnU0S1JDUzR3MzJUN0lXUC9Wd3lrQlZmMQpLQmZvdDQ5aWpRdVpNRSt0c2pwQVo1Z3UzMCtEd09DSGhmcVFrU2JodFQ0OXY4cEdqWSsxdHVoQ0JHSkwrVjl1Cnl6QXZ0cnI3ZEVnVnpNV2tpMzQ4bWg2UHV5WmFiQ1lReE1XMkEwWEtsRVZSTEw2OFFrT2F4Zk0xcS9FVHRTZUQKd3FJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"command\":\"aws\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-9-eks-cluster-eksCluster-d890a2b\",\"--role\",\"arn:aws:iam::447769723736:role/admin\"],\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "version": "3.21.2"
                },
                "outputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"server\":\"https://21ADA50B71448C1056490BD03957CE68.gr7.us-west-2.eks.amazonaws.com\",\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREl6TVRrek1sb1hEVE15TURZeE56SXpNVGt6TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNmCkNqN3NBWlBsYlYvb3hqdnkwRVdpZzRmemFqOVo4UjBKVUk0Vm9jWk8xQTNmMmRBUzFlZm1FTDN4ai9uNGd4RlYKWXNycWRXQUE2ZUNGZm9BYWJhT1hFU1RXOHFZdERGSjFCbWZIZi90dUxMcmtuY3dSK0pnUldQQWNscjh0OU1tYQpRU3BLQWJmd1JuUzFDM29FMHorcFdLUXhWWG5aWHNVQzYyZW5jc3F0di9oS1h1VDB2Y3craFY1eXRIRHBzZEVTClRFVUZSeFc2c2YzcC9ma2tWRnJremhJY3MvVGNLMFAzV3dsUEZteXh4YjZ6QnFCWUxXUjZDYkxGV1BOM2ZSNXIKN1E5SVZHbzZYcDVFOE9PN2RoejRsbWpoUEpPUDNJbHNjS2k0azFza25maGxqdkVhYU9OOTU2REtLZitET2RibgoyR0xkaHhMbS9QOEU4ZmNabnVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDZzBmSnoxbWRtNFJDdEtDV0Z0cnZscnNUdkVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREFGQnpkZllueC9PTHp2UFZzUApEbU5PU0YvWVZkazB6elhPcnFkcjJaeFppUytoMVUxR2hZb3FFbTJqUG9ienBkNnkyTE4rY1EyTlJkdVFQN0Y4ClVXM1hIUUVNbCtTakhMSzZmUTkrNDB5NVJ0TU8vVURpOVl3QTZWd2RSMlpITWx2V0UwZlpYaWw3ajVlWGNVaTQKd3luN2ZmSkVDejdUYjMyVzh1MWFOU0Evc0MyV0ZqMzJnSFR2WlZCMnU0S1JDUzR3MzJUN0lXUC9Wd3lrQlZmMQpLQmZvdDQ5aWpRdVpNRSt0c2pwQVo1Z3UzMCtEd09DSGhmcVFrU2JodFQ0OXY4cEdqWSsxdHVoQ0JHSkwrVjl1Cnl6QXZ0cnI3ZEVnVnpNV2tpMzQ4bWg2UHV5WmFiQ1lReE1XMkEwWEtsRVZSTEw2OFFrT2F4Zk0xcS9FVHRTZUQKd3FJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"command\":\"aws\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-9-eks-cluster-eksCluster-d890a2b\",\"--role\",\"arn:aws:iam::447769723736:role/admin\"],\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "version": "3.21.2"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:eks::default",
                "custom": true,
                "id": "fda9d6f1-de38-4e89-9fd3-a5f17d3ad817",
                "type": "pulumi:providers:eks",
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9"
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-eks-k8s",
                "custom": true,
                "id": "d854a3f3-ede4-42b0-9450-9354a185a3cd",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"server\":\"https://21ADA50B71448C1056490BD03957CE68.gr7.us-west-2.eks.amazonaws.com\",\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREl6TVRrek1sb1hEVE15TURZeE56SXpNVGt6TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNmCkNqN3NBWlBsYlYvb3hqdnkwRVdpZzRmemFqOVo4UjBKVUk0Vm9jWk8xQTNmMmRBUzFlZm1FTDN4ai9uNGd4RlYKWXNycWRXQUE2ZUNGZm9BYWJhT1hFU1RXOHFZdERGSjFCbWZIZi90dUxMcmtuY3dSK0pnUldQQWNscjh0OU1tYQpRU3BLQWJmd1JuUzFDM29FMHorcFdLUXhWWG5aWHNVQzYyZW5jc3F0di9oS1h1VDB2Y3craFY1eXRIRHBzZEVTClRFVUZSeFc2c2YzcC9ma2tWRnJremhJY3MvVGNLMFAzV3dsUEZteXh4YjZ6QnFCWUxXUjZDYkxGV1BOM2ZSNXIKN1E5SVZHbzZYcDVFOE9PN2RoejRsbWpoUEpPUDNJbHNjS2k0azFza25maGxqdkVhYU9OOTU2REtLZitET2RibgoyR0xkaHhMbS9QOEU4ZmNabnVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDZzBmSnoxbWRtNFJDdEtDV0Z0cnZscnNUdkVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREFGQnpkZllueC9PTHp2UFZzUApEbU5PU0YvWVZkazB6elhPcnFkcjJaeFppUytoMVUxR2hZb3FFbTJqUG9ienBkNnkyTE4rY1EyTlJkdVFQN0Y4ClVXM1hIUUVNbCtTakhMSzZmUTkrNDB5NVJ0TU8vVURpOVl3QTZWd2RSMlpITWx2V0UwZlpYaWw3ajVlWGNVaTQKd3luN2ZmSkVDejdUYjMyVzh1MWFOU0Evc0MyV0ZqMzJnSFR2WlZCMnU0S1JDUzR3MzJUN0lXUC9Wd3lrQlZmMQpLQmZvdDQ5aWpRdVpNRSt0c2pwQVo1Z3UzMCtEd09DSGhmcVFrU2JodFQ0OXY4cEdqWSsxdHVoQ0JHSkwrVjl1Cnl6QXZ0cnI3ZEVnVnpNV2tpMzQ4bWg2UHV5WmFiQ1lReE1XMkEwWEtsRVZSTEw2OFFrT2F4Zk0xcS9FVHRTZUQKd3FJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"command\":\"aws\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-9-eks-cluster-eksCluster-d890a2b\",\"--role\",\"arn:aws:iam::447769723736:role/admin\"],\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "version": "3.21.2"
                },
                "outputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"server\":\"https://21ADA50B71448C1056490BD03957CE68.gr7.us-west-2.eks.amazonaws.com\",\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREl6TVRrek1sb1hEVE15TURZeE56SXpNVGt6TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNmCkNqN3NBWlBsYlYvb3hqdnkwRVdpZzRmemFqOVo4UjBKVUk0Vm9jWk8xQTNmMmRBUzFlZm1FTDN4ai9uNGd4RlYKWXNycWRXQUE2ZUNGZm9BYWJhT1hFU1RXOHFZdERGSjFCbWZIZi90dUxMcmtuY3dSK0pnUldQQWNscjh0OU1tYQpRU3BLQWJmd1JuUzFDM29FMHorcFdLUXhWWG5aWHNVQzYyZW5jc3F0di9oS1h1VDB2Y3craFY1eXRIRHBzZEVTClRFVUZSeFc2c2YzcC9ma2tWRnJremhJY3MvVGNLMFAzV3dsUEZteXh4YjZ6QnFCWUxXUjZDYkxGV1BOM2ZSNXIKN1E5SVZHbzZYcDVFOE9PN2RoejRsbWpoUEpPUDNJbHNjS2k0azFza25maGxqdkVhYU9OOTU2REtLZitET2RibgoyR0xkaHhMbS9QOEU4ZmNabnVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDZzBmSnoxbWRtNFJDdEtDV0Z0cnZscnNUdkVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREFGQnpkZllueC9PTHp2UFZzUApEbU5PU0YvWVZkazB6elhPcnFkcjJaeFppUytoMVUxR2hZb3FFbTJqUG9ienBkNnkyTE4rY1EyTlJkdVFQN0Y4ClVXM1hIUUVNbCtTakhMSzZmUTkrNDB5NVJ0TU8vVURpOVl3QTZWd2RSMlpITWx2V0UwZlpYaWw3ajVlWGNVaTQKd3luN2ZmSkVDejdUYjMyVzh1MWFOU0Evc0MyV0ZqMzJnSFR2WlZCMnU0S1JDUzR3MzJUN0lXUC9Wd3lrQlZmMQpLQmZvdDQ5aWpRdVpNRSt0c2pwQVo1Z3UzMCtEd09DSGhmcVFrU2JodFQ0OXY4cEdqWSsxdHVoQ0JHSkwrVjl1Cnl6QXZ0cnI3ZEVnVnpNV2tpMzQ4bWg2UHV5WmFiQ1lReE1XMkEwWEtsRVZSTEw2OFFrT2F4Zk0xcS9FVHRTZUQKd3FJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"command\":\"aws\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-9-eks-cluster-eksCluster-d890a2b\",\"--role\",\"arn:aws:iam::447769723736:role/admin\"],\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "version": "3.21.2"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:iam/role:Role::p-9-lbc-role",
                "custom": true,
                "id": "p-9-aws-load-balancer-controller20220620232428041000000006",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "path"
                    ],
                    "assumeRolePolicy": "{\n             \"Version\": \"2012-10-17\",\n             \"Statement\": [\n               {\n                 \"Effect\": \"Allow\",\n                 \"Principal\": {\n                   \"Federated\": \"arn:aws:iam::447769723736:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68\"\n                 },\n                 \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n                 \"Condition\": {\n                   \"StringEquals\": {\n                     \"oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68:sub\": \"system:serviceaccount:kube-system:aws-load-balancer-controller\",\n                     \"oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68:aud\": \"sts.amazonaws.com\"\n                   }\n                 }\n               }\n             ]\n           }",
                    "forceDetachPolicies": false,
                    "maxSessionDuration": 3600,
                    "namePrefix": "p-9-aws-load-balancer-controller",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::447769723736:role/p-9-aws-load-balancer-controller20220620232428041000000006",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::447769723736:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68:aud\":\"sts.amazonaws.com\",\"oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68:sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller\"}}}]}",
                    "createDate": "2022-06-20T23:24:28Z",
                    "description": "",
                    "forceDetachPolicies": false,
                    "id": "p-9-aws-load-balancer-controller20220620232428041000000006",
                    "inlinePolicies": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managedPolicyArns": [
                        "arn:aws:iam::447769723736:policy/p-9-AWSLoadBalancerControllerIAMPolicy20220620231315682500000001"
                    ],
                    "maxSessionDuration": 3600,
                    "name": "p-9-aws-load-balancer-controller20220620232428041000000006",
                    "namePrefix": "p-9-aws-load-balancer-controller",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAWQQJHYNMOKGPAHJSG"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "assumeRolePolicy": null,
                    "namePrefix": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:iam/role:Role::p-9-autoscaler-role",
                "custom": true,
                "id": "p-9-autoscaler-role20220621020140806500000001",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "path"
                    ],
                    "assumeRolePolicy": "{\n                 \"Version\": \"2012-10-17\",\n                 \"Statement\": [\n                   {\n                     \"Effect\": \"Allow\",\n                     \"Principal\": {\n                       \"Federated\": \"arn:aws:iam::447769723736:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68\"\n                     },\n                     \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n                     \"Condition\": {\n                       \"StringEquals\": {\n                         \"oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68:sub\": \"system:serviceaccount:kube-system:cluster-autoscaler\"\n                       }\n                     }\n                   }\n                 ]\n               }",
                    "description": "IAM role for EKS cluster autoscaler",
                    "forceDetachPolicies": false,
                    "inlinePolicies": [
                        {
                            "__defaults": [],
                            "name": "eks-cluster-autoscaler-policy",
                            "policy": "{\n                    \"Version\": \"2012-10-17\",\n                    \"Statement\": [\n                        {\n                            \"Effect\": \"Allow\",\n                            \"Action\": [\n                                \"autoscaling:SetDesiredCapacity\",\n                                \"autoscaling:TerminateInstanceInAutoScalingGroup\"\n                            ],\n                            \"Resource\": \"*\",\n                            \"Condition\": {\n                                \"StringEquals\": {\n                                    \"aws:ResourceTag/k8s.io/cluster-autoscaler/p-9-eks-cluster-eksCluster-d890a2b\": \"owned\"\n                                }\n                            }\n                        },\n                        {\n                            \"Effect\": \"Allow\",\n                            \"Action\": [\n                                \"autoscaling:DescribeAutoScalingGroups\",\n                                \"autoscaling:DescribeAutoScalingInstances\",\n                                \"autoscaling:DescribeInstances\",\n                                \"autoscaling:DescribeLaunchConfigurations\",\n                                \"autoscaling:DescribeTags\",\n                                \"autoscaling:DescribeScalingActivities\",\n                                \"ec2:DescribeLaunchTemplateVersions\",\n                                \"ec2:DescribeInstanceTypes\",\n                                \"ec2:DescribeImages\",\n                                \"ec2:GetInstanceTypesFromInstanceRequirements\",\n                                \"eks:DescribeNodegroup\"\n                            ],\n                            \"Resource\": \"*\"\n                        }\n                    ]\n                }"
                        }
                    ],
                    "maxSessionDuration": 3600,
                    "namePrefix": "p-9-autoscaler-role",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::447769723736:role/p-9-autoscaler-role20220621020140806500000001",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::447769723736:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68:sub\":\"system:serviceaccount:kube-system:cluster-autoscaler\"}}}]}",
                    "createDate": "2022-06-21T02:01:41Z",
                    "description": "IAM role for EKS cluster autoscaler",
                    "forceDetachPolicies": false,
                    "id": "p-9-autoscaler-role20220621020140806500000001",
                    "inlinePolicies": [
                        {
                            "name": "eks-cluster-autoscaler-policy",
                            "policy": "{\n                    \"Version\": \"2012-10-17\",\n                    \"Statement\": [\n                        {\n                            \"Effect\": \"Allow\",\n                            \"Action\": [\n                                \"autoscaling:SetDesiredCapacity\",\n                                \"autoscaling:TerminateInstanceInAutoScalingGroup\"\n                            ],\n                            \"Resource\": \"*\",\n                            \"Condition\": {\n                                \"StringEquals\": {\n                                    \"aws:ResourceTag/k8s.io/cluster-autoscaler/p-9-eks-cluster-eksCluster-d890a2b\": \"owned\"\n                                }\n                            }\n                        },\n                        {\n                            \"Effect\": \"Allow\",\n                            \"Action\": [\n                                \"autoscaling:DescribeAutoScalingGroups\",\n                                \"autoscaling:DescribeAutoScalingInstances\",\n                                \"autoscaling:DescribeInstances\",\n                                \"autoscaling:DescribeLaunchConfigurations\",\n                                \"autoscaling:DescribeTags\",\n                                \"autoscaling:DescribeScalingActivities\",\n                                \"ec2:DescribeLaunchTemplateVersions\",\n                                \"ec2:DescribeInstanceTypes\",\n                                \"ec2:DescribeImages\",\n                                \"ec2:GetInstanceTypesFromInstanceRequirements\",\n                                \"eks:DescribeNodegroup\"\n                            ],\n                            \"Resource\": \"*\"\n                        }\n                    ]\n                }"
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "p-9-autoscaler-role20220621020140806500000001",
                    "namePrefix": "p-9-autoscaler-role",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAWQQJHYNMK3QBIA55M"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "assumeRolePolicy": null,
                    "description": null,
                    "inlinePolicies": null,
                    "namePrefix": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::ssa-storageclass-provider",
                "custom": true,
                "id": "ac29f620-84fa-4c4c-a5e3-c91d1af8c4db",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "enableServerSideApply": "true",
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREl6TVRrek1sb1hEVE15TURZeE56SXpNVGt6TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNmCkNqN3NBWlBsYlYvb3hqdnkwRVdpZzRmemFqOVo4UjBKVUk0Vm9jWk8xQTNmMmRBUzFlZm1FTDN4ai9uNGd4RlYKWXNycWRXQUE2ZUNGZm9BYWJhT1hFU1RXOHFZdERGSjFCbWZIZi90dUxMcmtuY3dSK0pnUldQQWNscjh0OU1tYQpRU3BLQWJmd1JuUzFDM29FMHorcFdLUXhWWG5aWHNVQzYyZW5jc3F0di9oS1h1VDB2Y3craFY1eXRIRHBzZEVTClRFVUZSeFc2c2YzcC9ma2tWRnJremhJY3MvVGNLMFAzV3dsUEZteXh4YjZ6QnFCWUxXUjZDYkxGV1BOM2ZSNXIKN1E5SVZHbzZYcDVFOE9PN2RoejRsbWpoUEpPUDNJbHNjS2k0azFza25maGxqdkVhYU9OOTU2REtLZitET2RibgoyR0xkaHhMbS9QOEU4ZmNabnVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDZzBmSnoxbWRtNFJDdEtDV0Z0cnZscnNUdkVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREFGQnpkZllueC9PTHp2UFZzUApEbU5PU0YvWVZkazB6elhPcnFkcjJaeFppUytoMVUxR2hZb3FFbTJqUG9ienBkNnkyTE4rY1EyTlJkdVFQN0Y4ClVXM1hIUUVNbCtTakhMSzZmUTkrNDB5NVJ0TU8vVURpOVl3QTZWd2RSMlpITWx2V0UwZlpYaWw3ajVlWGNVaTQKd3luN2ZmSkVDejdUYjMyVzh1MWFOU0Evc0MyV0ZqMzJnSFR2WlZCMnU0S1JDUzR3MzJUN0lXUC9Wd3lrQlZmMQpLQmZvdDQ5aWpRdVpNRSt0c2pwQVo1Z3UzMCtEd09DSGhmcVFrU2JodFQ0OXY4cEdqWSsxdHVoQ0JHSkwrVjl1Cnl6QXZ0cnI3ZEVnVnpNV2tpMzQ4bWg2UHV5WmFiQ1lReE1XMkEwWEtsRVZSTEw2OFFrT2F4Zk0xcS9FVHRTZUQKd3FJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://21ADA50B71448C1056490BD03957CE68.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1beta1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-9-eks-cluster-eksCluster-d890a2b",
                                            "--role",
                                            "arn:aws:iam::447769723736:role/admin"
                                        ],
                                        "command": "aws",
                                        "env": [
                                            {
                                                "name": "KUBERNETES_EXEC_INFO",
                                                "value": "{\"apiVersion\": \"client.authentication.k8s.io/v1beta1\"}"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.21.2"
                },
                "outputs": {
                    "enableServerSideApply": "true",
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREl6TVRrek1sb1hEVE15TURZeE56SXpNVGt6TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNmCkNqN3NBWlBsYlYvb3hqdnkwRVdpZzRmemFqOVo4UjBKVUk0Vm9jWk8xQTNmMmRBUzFlZm1FTDN4ai9uNGd4RlYKWXNycWRXQUE2ZUNGZm9BYWJhT1hFU1RXOHFZdERGSjFCbWZIZi90dUxMcmtuY3dSK0pnUldQQWNscjh0OU1tYQpRU3BLQWJmd1JuUzFDM29FMHorcFdLUXhWWG5aWHNVQzYyZW5jc3F0di9oS1h1VDB2Y3craFY1eXRIRHBzZEVTClRFVUZSeFc2c2YzcC9ma2tWRnJremhJY3MvVGNLMFAzV3dsUEZteXh4YjZ6QnFCWUxXUjZDYkxGV1BOM2ZSNXIKN1E5SVZHbzZYcDVFOE9PN2RoejRsbWpoUEpPUDNJbHNjS2k0azFza25maGxqdkVhYU9OOTU2REtLZitET2RibgoyR0xkaHhMbS9QOEU4ZmNabnVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDZzBmSnoxbWRtNFJDdEtDV0Z0cnZscnNUdkVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREFGQnpkZllueC9PTHp2UFZzUApEbU5PU0YvWVZkazB6elhPcnFkcjJaeFppUytoMVUxR2hZb3FFbTJqUG9ienBkNnkyTE4rY1EyTlJkdVFQN0Y4ClVXM1hIUUVNbCtTakhMSzZmUTkrNDB5NVJ0TU8vVURpOVl3QTZWd2RSMlpITWx2V0UwZlpYaWw3ajVlWGNVaTQKd3luN2ZmSkVDejdUYjMyVzh1MWFOU0Evc0MyV0ZqMzJnSFR2WlZCMnU0S1JDUzR3MzJUN0lXUC9Wd3lrQlZmMQpLQmZvdDQ5aWpRdVpNRSt0c2pwQVo1Z3UzMCtEd09DSGhmcVFrU2JodFQ0OXY4cEdqWSsxdHVoQ0JHSkwrVjl1Cnl6QXZ0cnI3ZEVnVnpNV2tpMzQ4bWg2UHV5WmFiQ1lReE1XMkEwWEtsRVZSTEw2OFFrT2F4Zk0xcS9FVHRTZUQKd3FJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://21ADA50B71448C1056490BD03957CE68.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1beta1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-9-eks-cluster-eksCluster-d890a2b",
                                            "--role",
                                            "arn:aws:iam::447769723736:role/admin"
                                        ],
                                        "command": "aws",
                                        "env": [
                                            {
                                                "name": "KUBERNETES_EXEC_INFO",
                                                "value": "{\"apiVersion\": \"client.authentication.k8s.io/v1beta1\"}"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.21.2"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster"
                ],
                "propertyDependencies": {
                    "enableServerSideApply": null,
                    "kubeconfig": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:iam/policy:Policy::p-9-otel-collector-policy",
                "custom": true,
                "id": "arn:aws:iam::447769723736:policy/p-9-AWSDistroOpenTelemetryPolicy-20220620231316632900000001",
                "type": "aws:iam/policy:Policy",
                "inputs": {
                    "__defaults": [
                        "path"
                    ],
                    "namePrefix": "p-9-AWSDistroOpenTelemetryPolicy-",
                    "path": "/",
                    "policy": "{\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n            {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                    \"logs:PutLogEvents\",\n                    \"logs:CreateLogGroup\",\n                    \"logs:CreateLogStream\",\n                    \"logs:DescribeLogStreams\",\n                    \"logs:DescribeLogGroups\",\n                    \"cloudwatch:PutMetricData\",\n                    \"xray:PutTraceSegments\",\n                    \"xray:PutTelemetryRecords\",\n                    \"xray:GetSamplingRules\",\n                    \"xray:GetSamplingTargets\",\n                    \"xray:GetSamplingStatisticSummaries\",\n                    \"ssm:GetParameters\",\n                    \"aps:RemoteWrite\"\n                ],\n                \"Resource\": \"*\"\n            }\n        ]\n    }\n    "
                },
                "outputs": {
                    "arn": "arn:aws:iam::447769723736:policy/p-9-AWSDistroOpenTelemetryPolicy-20220620231316632900000001",
                    "description": "",
                    "id": "arn:aws:iam::447769723736:policy/p-9-AWSDistroOpenTelemetryPolicy-20220620231316632900000001",
                    "name": "p-9-AWSDistroOpenTelemetryPolicy-20220620231316632900000001",
                    "namePrefix": "p-9-AWSDistroOpenTelemetryPolicy-",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogGroup\",\"logs:CreateLogStream\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"cloudwatch:PutMetricData\",\"xray:PutTraceSegments\",\"xray:PutTelemetryRecords\",\"xray:GetSamplingRules\",\"xray:GetSamplingTargets\",\"xray:GetSamplingStatisticSummaries\",\"ssm:GetParameters\",\"aps:RemoteWrite\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                    "policyId": "ANPAWQQJHYNMAWJRWUSTC",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::tele-aws-provider::d5512428-3d17-461f-815e-b9bf3fba8a86",
                "propertyDependencies": {
                    "namePrefix": null,
                    "policy": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:s3/bucket:Bucket::glue-source-bucket",
                "custom": true,
                "id": "p-9-gluejob-source",
                "type": "aws:s3/bucket:Bucket",
                "inputs": {
                    "__defaults": [],
                    "acl": "private",
                    "bucket": "p-9-gluejob-source",
                    "forceDestroy": true
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::p-9-gluejob-source",
                    "bucket": "p-9-gluejob-source",
                    "bucketDomainName": "p-9-gluejob-source.s3.amazonaws.com",
                    "bucketRegionalDomainName": "p-9-gluejob-source.s3.us-west-2.amazonaws.com",
                    "corsRules": [],
                    "forceDestroy": true,
                    "grants": [],
                    "hostedZoneId": "Z3BJ6K6RIION7M",
                    "id": "p-9-gluejob-source",
                    "lifecycleRules": [],
                    "loggings": [],
                    "objectLockConfiguration": null,
                    "region": "us-west-2",
                    "replicationConfiguration": null,
                    "requestPayer": "BucketOwner",
                    "serverSideEncryptionConfiguration": null,
                    "tags": {},
                    "tagsAll": {},
                    "versioning": {
                        "enabled": false,
                        "mfaDelete": false
                    },
                    "website": null
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "protect": true,
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::glue-source-aws-provider::d9dc7a7e-d90c-406e-96e0-6fc8d70eaec0",
                "propertyDependencies": {
                    "acl": null,
                    "bucket": null,
                    "forceDestroy": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:iam/role:Role::p-9-csi-driver-role",
                "custom": true,
                "id": "p-9-ebs-csi-controller-sa20220729192421126300000002",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "path"
                    ],
                    "assumeRolePolicy": "{\n             \"Version\": \"2012-10-17\",\n             \"Statement\": [\n               {\n                 \"Effect\": \"Allow\",\n                 \"Principal\": {\n                   \"Federated\": \"arn:aws:iam::447769723736:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68\"\n                 },\n                 \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n                 \"Condition\": {\n                   \"StringEquals\": {\n                     \"oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68:sub\": \"system:serviceaccount:kube-system:ebs-csi-controller-sa\",\n                     \"oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68:aud\": \"sts.amazonaws.com\"\n                   }\n                 }\n               }\n             ]\n           }",
                    "forceDetachPolicies": false,
                    "maxSessionDuration": 3600,
                    "namePrefix": "p-9-ebs-csi-controller-sa",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::447769723736:role/p-9-ebs-csi-controller-sa20220729192421126300000002",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::447769723736:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68:sub\":\"system:serviceaccount:kube-system:ebs-csi-controller-sa\",\"oidc.eks.us-west-2.amazonaws.com/id/21ADA50B71448C1056490BD03957CE68:aud\":\"sts.amazonaws.com\"}}}]}",
                    "createDate": "2022-07-29T19:24:21Z",
                    "description": "",
                    "forceDetachPolicies": false,
                    "id": "p-9-ebs-csi-controller-sa20220729192421126300000002",
                    "inlinePolicies": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "p-9-ebs-csi-controller-sa20220729192421126300000002",
                    "namePrefix": "p-9-ebs-csi-controller-sa",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAWQQJHYNMBV2QU5VEW"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "assumeRolePolicy": null,
                    "namePrefix": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-redis-sg",
                "custom": true,
                "id": "sg-090af44dbb5698a19",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "revokeRulesOnDelete"
                    ],
                    "description": "Managed by Pulumi",
                    "namePrefix": "p-9-redis-sg-",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:447769723736:security-group/sg-090af44dbb5698a19",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-090af44dbb5698a19",
                    "ingress": [],
                    "name": "p-9-redis-sg-20220620231327343100000001",
                    "namePrefix": "p-9-redis-sg-",
                    "ownerId": "447769723736",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::redis-aws-provider::b7af432d-e04a-45a6-8f20-442c18068c79",
                "propertyDependencies": {
                    "description": null,
                    "namePrefix": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-db-sg",
                "custom": true,
                "id": "sg-019e4e71b14a092e2",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "revokeRulesOnDelete"
                    ],
                    "description": "Managed by Pulumi",
                    "namePrefix": "p-9-db-sg-",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:447769723736:security-group/sg-019e4e71b14a092e2",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-019e4e71b14a092e2",
                    "ingress": [],
                    "name": "p-9-db-sg-20220620231327201900000001",
                    "namePrefix": "p-9-db-sg-",
                    "ownerId": "447769723736",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aurora-aws-provider::6ba79e86-133f-4bc7-93e0-e5bbc8297f8b",
                "propertyDependencies": {
                    "description": null,
                    "namePrefix": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:s3/bucket:Bucket::conn-sink-bucket",
                "custom": true,
                "id": "p-9-training-data",
                "type": "aws:s3/bucket:Bucket",
                "inputs": {
                    "__defaults": [],
                    "acl": "private",
                    "bucket": "p-9-training-data",
                    "forceDestroy": true
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::p-9-training-data",
                    "bucket": "p-9-training-data",
                    "bucketDomainName": "p-9-training-data.s3.amazonaws.com",
                    "bucketRegionalDomainName": "p-9-training-data.s3.us-west-2.amazonaws.com",
                    "corsRules": [],
                    "forceDestroy": true,
                    "grants": [],
                    "hostedZoneId": "Z3BJ6K6RIION7M",
                    "id": "p-9-training-data",
                    "lifecycleRules": [],
                    "loggings": [],
                    "objectLockConfiguration": null,
                    "region": "us-west-2",
                    "replicationConfiguration": null,
                    "requestPayer": "BucketOwner",
                    "serverSideEncryptionConfiguration": null,
                    "tags": {},
                    "tagsAll": {},
                    "versioning": {
                        "enabled": false,
                        "mfaDelete": false
                    },
                    "website": null
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "protect": true,
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::connector-sink-aws-provider::3f7621ef-ddce-4a3b-895e-b0d9d2d6ca0d",
                "propertyDependencies": {
                    "acl": null,
                    "bucket": null,
                    "forceDestroy": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:rds/subnetGroup:SubnetGroup::p-9-db-subnetgroup",
                "custom": true,
                "id": "p-9-db-subnetgroup-55aa667",
                "type": "aws:rds/subnetGroup:SubnetGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Subnet group for primary database",
                    "name": "p-9-db-subnetgroup-55aa667",
                    "subnetIds": [
                        "subnet-009d063028d2fd06f",
                        "subnet-02dad9a9948396f14"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:rds:us-west-2:447769723736:subgrp:p-9-db-subnetgroup-55aa667",
                    "description": "Subnet group for primary database",
                    "id": "p-9-db-subnetgroup-55aa667",
                    "name": "p-9-db-subnetgroup-55aa667",
                    "subnetIds": [
                        "subnet-02dad9a9948396f14",
                        "subnet-009d063028d2fd06f"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aurora-aws-provider::6ba79e86-133f-4bc7-93e0-e5bbc8297f8b",
                "propertyDependencies": {
                    "description": null,
                    "subnetIds": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ],
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:memorydb/subnetGroup:SubnetGroup::p-9-redis-subnet-group",
                "custom": true,
                "id": "p-9-redis-subnet-group-2393cd0",
                "type": "aws:memorydb/subnetGroup:SubnetGroup",
                "inputs": {
                    "__defaults": [
                        "description",
                        "name"
                    ],
                    "description": "Managed by Terraform",
                    "name": "p-9-redis-subnet-group-2393cd0",
                    "subnetIds": [
                        "subnet-009d063028d2fd06f",
                        "subnet-02dad9a9948396f14"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:memorydb:us-west-2:447769723736:subnetgroup/p-9-redis-subnet-group-2393cd0",
                    "description": "Managed by Terraform",
                    "id": "p-9-redis-subnet-group-2393cd0",
                    "name": "p-9-redis-subnet-group-2393cd0",
                    "namePrefix": "",
                    "subnetIds": [
                        "subnet-009d063028d2fd06f",
                        "subnet-02dad9a9948396f14"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::redis-aws-provider::b7af432d-e04a-45a6-8f20-442c18068c79",
                "propertyDependencies": {
                    "subnetIds": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ],
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:elasticache/parameterGroup:ParameterGroup::p-9-cache-pg",
                "custom": true,
                "id": "p-9-cache-pg-9b5575f",
                "type": "aws:elasticache/parameterGroup:ParameterGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Managed by Pulumi",
                    "family": "redis6.x",
                    "name": "p-9-cache-pg-9b5575f",
                    "parameters": [
                        {
                            "__defaults": [],
                            "name": "maxmemory-policy",
                            "value": "allkeys-lru"
                        },
                        {
                            "__defaults": [],
                            "name": "cluster-enabled",
                            "value": "yes"
                        }
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:elasticache:us-west-2:447769723736:parametergroup:p-9-cache-pg-9b5575f",
                    "description": "Managed by Pulumi",
                    "family": "redis6.x",
                    "id": "p-9-cache-pg-9b5575f",
                    "name": "p-9-cache-pg-9b5575f",
                    "parameters": [
                        {
                            "name": "cluster-enabled",
                            "value": "yes"
                        },
                        {
                            "name": "maxmemory-policy",
                            "value": "allkeys-lru"
                        }
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::cache-aws-provider::23c78f3d-33b3-4dbf-bfa4-703c4a31c829",
                "propertyDependencies": {
                    "description": null,
                    "family": null,
                    "parameters": null,
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-cache-sg",
                "custom": true,
                "id": "sg-077d904ac75abc34b",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "name",
                        "revokeRulesOnDelete"
                    ],
                    "description": "Managed by Pulumi",
                    "name": "p-9-cache-sg-c5f2db4",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:447769723736:security-group/sg-077d904ac75abc34b",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-077d904ac75abc34b",
                    "ingress": [],
                    "name": "p-9-cache-sg-c5f2db4",
                    "namePrefix": "",
                    "ownerId": "447769723736",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::cache-aws-provider::23c78f3d-33b3-4dbf-bfa4-703c4a31c829",
                "propertyDependencies": {
                    "description": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::confluent:index/confluentEnvironment:ConfluentEnvironment::conf-env",
                "custom": true,
                "id": "env-7yp5do",
                "type": "confluent:index/confluentEnvironment:ConfluentEnvironment",
                "inputs": {
                    "__defaults": [],
                    "name": "plane-9"
                },
                "outputs": {
                    "id": "env-7yp5do",
                    "name": "plane-9"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "protect": true,
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:confluent::conf-provider::a8904b2e-78f9-47e1-bec2-41dc4e807754",
                "propertyDependencies": {
                    "name": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:s3/bucket:Bucket::p-9-offline-aggregate-source-bucket",
                "custom": true,
                "id": "p-9-offline-aggregate-source",
                "type": "aws:s3/bucket:Bucket",
                "inputs": {
                    "__defaults": [],
                    "acl": "private",
                    "bucket": "p-9-offline-aggregate-source",
                    "forceDestroy": true
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::p-9-offline-aggregate-source",
                    "bucket": "p-9-offline-aggregate-source",
                    "bucketDomainName": "p-9-offline-aggregate-source.s3.amazonaws.com",
                    "bucketRegionalDomainName": "p-9-offline-aggregate-source.s3.us-west-2.amazonaws.com",
                    "corsRules": [],
                    "forceDestroy": true,
                    "grants": [],
                    "hostedZoneId": "Z3BJ6K6RIION7M",
                    "id": "p-9-offline-aggregate-source",
                    "lifecycleRules": [],
                    "loggings": [],
                    "objectLockConfiguration": null,
                    "region": "us-west-2",
                    "replicationConfiguration": null,
                    "requestPayer": "BucketOwner",
                    "serverSideEncryptionConfiguration": null,
                    "tags": {},
                    "tagsAll": {},
                    "versioning": {
                        "enabled": false,
                        "mfaDelete": false
                    },
                    "website": null
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "protect": true,
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::offline-aggregate-source-aws-provider::a34206cb-11b0-43e2-ac99-08a1520c41c6",
                "propertyDependencies": {
                    "acl": null,
                    "bucket": null,
                    "forceDestroy": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:elasticache/subnetGroup:SubnetGroup::p-9-cache-subnets",
                "custom": true,
                "id": "p-9-cache-subnets-574dfa0",
                "type": "aws:elasticache/subnetGroup:SubnetGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Managed by Pulumi",
                    "name": "p-9-cache-subnets-574dfa0",
                    "subnetIds": [
                        "subnet-009d063028d2fd06f",
                        "subnet-02dad9a9948396f14"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:elasticache:us-west-2:447769723736:subnetgroup:p-9-cache-subnets-574dfa0",
                    "description": "Managed by Pulumi",
                    "id": "p-9-cache-subnets-574dfa0",
                    "name": "p-9-cache-subnets-574dfa0",
                    "subnetIds": [
                        "subnet-02dad9a9948396f14",
                        "subnet-009d063028d2fd06f"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::cache-aws-provider::23c78f3d-33b3-4dbf-bfa4-703c4a31c829",
                "propertyDependencies": {
                    "description": null,
                    "subnetIds": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ],
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:kms/key:Key::msk-key",
                "custom": true,
                "id": "14a2465f-db6e-4a32-bea7-670c281a86f8",
                "type": "aws:kms/key:Key",
                "inputs": {
                    "__defaults": [
                        "bypassPolicyLockoutSafetyCheck",
                        "customerMasterKeySpec",
                        "enableKeyRotation",
                        "isEnabled",
                        "keyUsage"
                    ],
                    "bypassPolicyLockoutSafetyCheck": false,
                    "customerMasterKeySpec": "SYMMETRIC_DEFAULT",
                    "description": "",
                    "enableKeyRotation": false,
                    "isEnabled": true,
                    "keyUsage": "ENCRYPT_DECRYPT"
                },
                "outputs": {
                    "arn": "arn:aws:kms:us-west-2:447769723736:key/14a2465f-db6e-4a32-bea7-670c281a86f8",
                    "bypassPolicyLockoutSafetyCheck": false,
                    "customerMasterKeySpec": "SYMMETRIC_DEFAULT",
                    "description": "",
                    "enableKeyRotation": false,
                    "id": "14a2465f-db6e-4a32-bea7-670c281a86f8",
                    "isEnabled": true,
                    "keyId": "14a2465f-db6e-4a32-bea7-670c281a86f8",
                    "keyUsage": "ENCRYPT_DECRYPT",
                    "multiRegion": false,
                    "policy": "{\"Id\":\"key-default-1\",\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::447769723736:root\"},\"Resource\":\"*\",\"Sid\":\"Enable IAM User Permissions\"}],\"Version\":\"2012-10-17\"}",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::msk-aws-provider::1d9a65d6-5edf-4963-8c93-de1207911f37",
                "propertyDependencies": {
                    "description": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:msk/configuration:Configuration::msk-cluster-config-2",
                "custom": true,
                "id": "arn:aws:kafka:us-west-2:447769723736:configuration/p-9-cluster-config-2/ad22080f-048f-4a64-a4f5-4327077df148-10",
                "type": "aws:msk/configuration:Configuration",
                "inputs": {
                    "__defaults": [],
                    "description": "plane 9 kafka broker configuration",
                    "kafkaVersions": [
                        "2.6.2",
                        "2.7.0"
                    ],
                    "name": "p-9-cluster-config-2",
                    "serverProperties": "replica.selector.class = org.apache.kafka.common.replica.RackAwareReplicaSelector"
                },
                "outputs": {
                    "arn": "arn:aws:kafka:us-west-2:447769723736:configuration/p-9-cluster-config-2/ad22080f-048f-4a64-a4f5-4327077df148-10",
                    "description": "plane 9 kafka broker configuration",
                    "id": "arn:aws:kafka:us-west-2:447769723736:configuration/p-9-cluster-config-2/ad22080f-048f-4a64-a4f5-4327077df148-10",
                    "kafkaVersions": [
                        "2.6.2",
                        "2.7.0"
                    ],
                    "latestRevision": 1,
                    "name": "p-9-cluster-config-2",
                    "serverProperties": "replica.selector.class = org.apache.kafka.common.replica.RackAwareReplicaSelector"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::msk-aws-provider::1d9a65d6-5edf-4963-8c93-de1207911f37",
                "propertyDependencies": {
                    "description": null,
                    "kafkaVersions": null,
                    "name": null,
                    "serverProperties": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::msk-sg",
                "custom": true,
                "id": "sg-0071525aa9b12294d",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "revokeRulesOnDelete"
                    ],
                    "description": "Managed by Pulumi",
                    "namePrefix": "p-9-msk-sg-",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:447769723736:security-group/sg-0071525aa9b12294d",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-0071525aa9b12294d",
                    "ingress": [],
                    "name": "p-9-msk-sg-20220907023602160100000001",
                    "namePrefix": "p-9-msk-sg-",
                    "ownerId": "447769723736",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::msk-aws-provider::1d9a65d6-5edf-4963-8c93-de1207911f37",
                "propertyDependencies": {
                    "description": null,
                    "namePrefix": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:cloudwatch/logGroup:LogGroup::msk-log-group",
                "custom": true,
                "id": "/aws/msk/p-9-brokers",
                "type": "aws:cloudwatch/logGroup:LogGroup",
                "inputs": {
                    "__defaults": [],
                    "name": "/aws/msk/p-9-brokers",
                    "retentionInDays": 5
                },
                "outputs": {
                    "arn": "arn:aws:logs:us-west-2:447769723736:log-group:/aws/msk/p-9-brokers",
                    "id": "/aws/msk/p-9-brokers",
                    "kmsKeyId": "",
                    "name": "/aws/msk/p-9-brokers",
                    "retentionInDays": 5,
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::msk-aws-provider::1d9a65d6-5edf-4963-8c93-de1207911f37",
                "propertyDependencies": {
                    "name": null,
                    "retentionInDays": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:msk/configuration:Configuration::msk-cluster-config",
                "custom": true,
                "id": "arn:aws:kafka:us-west-2:447769723736:configuration/p-9-cluster-config/5c7d4235-edd9-4a34-abcf-35ce2920cb26-10",
                "type": "aws:msk/configuration:Configuration",
                "inputs": {
                    "__defaults": [],
                    "description": "plane 9 kafka broker configuration",
                    "kafkaVersions": [
                        "2.6.2"
                    ],
                    "name": "p-9-cluster-config",
                    "serverProperties": "replica.selector.class = org.apache.kafka.common.replica.RackAwareReplicaSelector"
                },
                "outputs": {
                    "arn": "arn:aws:kafka:us-west-2:447769723736:configuration/p-9-cluster-config/5c7d4235-edd9-4a34-abcf-35ce2920cb26-10",
                    "description": "plane 9 kafka broker configuration",
                    "id": "arn:aws:kafka:us-west-2:447769723736:configuration/p-9-cluster-config/5c7d4235-edd9-4a34-abcf-35ce2920cb26-10",
                    "kafkaVersions": [
                        "2.6.2"
                    ],
                    "latestRevision": 1,
                    "name": "p-9-cluster-config",
                    "serverProperties": "replica.selector.class = org.apache.kafka.common.replica.RackAwareReplicaSelector"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::msk-aws-provider::1d9a65d6-5edf-4963-8c93-de1207911f37",
                "propertyDependencies": {
                    "description": null,
                    "kafkaVersions": null,
                    "name": null,
                    "serverProperties": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:msk/configuration:Configuration::msk-cluster-config-3",
                "custom": true,
                "id": "arn:aws:kafka:us-west-2:447769723736:configuration/p-9-cluster-config-3/7da76de3-fbe8-4a51-a94a-8fe973d4478c-10",
                "type": "aws:msk/configuration:Configuration",
                "inputs": {
                    "__defaults": [],
                    "description": "plane 9 kafka broker configuration for kafka 3.0",
                    "kafkaVersions": [
                        "3.1.1",
                        "3.2.0"
                    ],
                    "name": "p-9-cluster-config-3",
                    "serverProperties": "\n            replica.selector.class = org.apache.kafka.common.replica.RackAwareReplicaSelector\n            \n            auto.create.topics.enable = true\n        "
                },
                "outputs": {
                    "arn": "arn:aws:kafka:us-west-2:447769723736:configuration/p-9-cluster-config-3/7da76de3-fbe8-4a51-a94a-8fe973d4478c-10",
                    "description": "plane 9 kafka broker configuration for kafka 3.0",
                    "id": "arn:aws:kafka:us-west-2:447769723736:configuration/p-9-cluster-config-3/7da76de3-fbe8-4a51-a94a-8fe973d4478c-10",
                    "kafkaVersions": [
                        "3.1.1",
                        "3.2.0"
                    ],
                    "latestRevision": 1,
                    "name": "p-9-cluster-config-3",
                    "serverProperties": "\n            replica.selector.class = org.apache.kafka.common.replica.RackAwareReplicaSelector\n            \n            auto.create.topics.enable = true\n        "
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::msk-aws-provider::1d9a65d6-5edf-4963-8c93-de1207911f37",
                "propertyDependencies": {
                    "description": null,
                    "kafkaVersions": null,
                    "name": null,
                    "serverProperties": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-postgres-db-sg",
                "custom": true,
                "id": "sg-0029b09c156fcbdd0",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "revokeRulesOnDelete"
                    ],
                    "description": "Managed by Pulumi",
                    "namePrefix": "p-9-postgres-db-sg-",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:447769723736:security-group/sg-0029b09c156fcbdd0",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-0029b09c156fcbdd0",
                    "ingress": [],
                    "name": "p-9-postgres-db-sg-20220714181253489400000001",
                    "namePrefix": "p-9-postgres-db-sg-",
                    "ownerId": "447769723736",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-0ef7ddcb03603a807"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::p-9-postgres-aurora-aws-provider::c95cb518-a030-4f31-85fb-1c3cb6c30a32",
                "propertyDependencies": {
                    "description": null,
                    "namePrefix": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:rds/subnetGroup:SubnetGroup::p-9-postgres-db-subnetgroup",
                "custom": true,
                "id": "p-9-postgres-db-subnetgroup-c854c6f",
                "type": "aws:rds/subnetGroup:SubnetGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Subnet group for postgres database",
                    "name": "p-9-postgres-db-subnetgroup-c854c6f",
                    "subnetIds": [
                        "subnet-009d063028d2fd06f",
                        "subnet-02dad9a9948396f14"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:rds:us-west-2:447769723736:subgrp:p-9-postgres-db-subnetgroup-c854c6f",
                    "description": "Subnet group for postgres database",
                    "id": "p-9-postgres-db-subnetgroup-c854c6f",
                    "name": "p-9-postgres-db-subnetgroup-c854c6f",
                    "subnetIds": [
                        "subnet-02dad9a9948396f14",
                        "subnet-009d063028d2fd06f"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::p-9-postgres-aurora-aws-provider::c95cb518-a030-4f31-85fb-1c3cb6c30a32",
                "propertyDependencies": {
                    "description": null,
                    "subnetIds": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ],
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops",
                "custom": true,
                "id": "ebs-io2-200ops-fvquezg6",
                "type": "kubernetes:storage.k8s.io/v1:StorageClass",
                "inputs": {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "pulumi.com/autonamed": "true"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "ebs-io2-200ops-fvquezg6"
                    },
                    "parameters": {
                        "encrypted": "true",
                        "fsType": "ext4",
                        "iopsPerGB": "200",
                        "type": "io2"
                    },
                    "provisioner": "ebs.csi.aws.com",
                    "reclaimPolicy": "Delete",
                    "volumeBindingMode": "WaitForFirstConsumer"
                },
                "outputs": {
                    "__initialApiVersion": "storage.k8s.io/v1",
                    "__inputs": {
                        "allowVolumeExpansion": true,
                        "apiVersion": "storage.k8s.io/v1",
                        "kind": "StorageClass",
                        "metadata": {
                            "annotations": {
                                "pulumi.com/autonamed": "true"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "ebs-io2-200ops-fvquezg6"
                        },
                        "parameters": {
                            "encrypted": "true",
                            "fsType": "ext4",
                            "iopsPerGB": "200",
                            "type": "io2"
                        },
                        "provisioner": "ebs.csi.aws.com",
                        "reclaimPolicy": "Delete",
                        "volumeBindingMode": "WaitForFirstConsumer"
                    },
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"pulumi.com/autonamed\":\"true\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"ebs-io2-200ops-fvquezg6\"},\"parameters\":{\"encrypted\":\"true\",\"fsType\":\"ext4\",\"iopsPerGB\":\"200\",\"type\":\"io2\"},\"provisioner\":\"ebs.csi.aws.com\",\"reclaimPolicy\":\"Delete\",\"volumeBindingMode\":\"WaitForFirstConsumer\"}\n",
                            "pulumi.com/autonamed": "true"
                        },
                        "creationTimestamp": "2022-08-04T21:32:25Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "storage.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:allowVolumeExpansion": {},
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {},
                                            "f:pulumi.com/autonamed": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:parameters": {
                                        ".": {},
                                        "f:encrypted": {},
                                        "f:fsType": {},
                                        "f:iopsPerGB": {},
                                        "f:type": {}
                                    },
                                    "f:provisioner": {},
                                    "f:reclaimPolicy": {},
                                    "f:volumeBindingMode": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-04T21:32:25Z"
                            }
                        ],
                        "name": "ebs-io2-200ops-fvquezg6",
                        "resourceVersion": "16591274",
                        "uid": "c85d3c6d-4c6b-4dab-a1ba-dc5197f92b5a"
                    },
                    "parameters": {
                        "encrypted": "true",
                        "fsType": "ext4",
                        "iopsPerGB": "200",
                        "type": "io2"
                    },
                    "provisioner": "ebs.csi.aws.com",
                    "reclaimPolicy": "Delete",
                    "volumeBindingMode": "WaitForFirstConsumer"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "allowVolumeExpansion": null,
                    "apiVersion": null,
                    "kind": null,
                    "parameters": null,
                    "provisioner": null,
                    "reclaimPolicy": null,
                    "volumeBindingMode": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:core/v1:Namespace::fennel-ns",
                "custom": true,
                "id": "fennel",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/inject": "enabled"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "fennel"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/inject": "enabled"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "fennel"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"linkerd.io/inject\":\"enabled\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"fennel\"}}\n",
                            "linkerd.io/inject": "enabled"
                        },
                        "creationTimestamp": "2022-06-20T23:24:26Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "fennel"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {},
                                            "f:linkerd.io/inject": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:kubernetes.io/metadata.name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:26Z"
                            }
                        ],
                        "name": "fennel",
                        "resourceVersion": "1114",
                        "uid": "5dbf2e54-cd46-4391-992a-58bfd38df71b"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:getambassador.io/v3alpha1:Module::l5d-amb-config",
                "custom": true,
                "id": "default/ambassador",
                "type": "kubernetes:getambassador.io/v3alpha1:Module",
                "inputs": {
                    "apiVersion": "getambassador.io/v3alpha1",
                    "kind": "Module",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "ambassador",
                        "namespace": "default"
                    },
                    "spec": {
                        "config": {
                            "add_linkerd_headers": true,
                            "circuit_breakers": {
                                "max_connections": 3072,
                                "max_pending_requests": 1024,
                                "max_requests": 3072
                            },
                            "envoy_log_format": "%REQ(:METHOD)% %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% %DURATION%",
                            "envoy_log_type": "text"
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "getambassador.io/v3alpha1",
                    "__inputs": {
                        "apiVersion": "getambassador.io/v3alpha1",
                        "kind": "Module",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "ambassador",
                            "namespace": "default"
                        },
                        "spec": {
                            "config": {
                                "add_linkerd_headers": true,
                                "circuit_breakers": {
                                    "max_connections": 3072,
                                    "max_pending_requests": 1024,
                                    "max_requests": 3072
                                },
                                "envoy_log_format": "%REQ(:METHOD)% %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% %DURATION%",
                                "envoy_log_type": "text"
                            }
                        }
                    },
                    "apiVersion": "getambassador.io/v3alpha1",
                    "kind": "Module",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"getambassador.io/v3alpha1\",\"kind\":\"Module\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"ambassador\",\"namespace\":\"default\"},\"spec\":{\"config\":{\"add_linkerd_headers\":true,\"circuit_breakers\":{\"max_connections\":3072,\"max_pending_requests\":1024,\"max_requests\":3072},\"envoy_log_format\":\"%REQ(:METHOD)% %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% %DURATION%\",\"envoy_log_type\":\"text\"}}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:41Z",
                        "generation": 2,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "getambassador.io/v3alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        ".": {},
                                        "f:config": {
                                            ".": {},
                                            "f:add_linkerd_headers": {},
                                            "f:circuit_breakers": {},
                                            "f:envoy_log_format": {},
                                            "f:envoy_log_type": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-07-14T00:19:59Z"
                            }
                        ],
                        "name": "ambassador",
                        "namespace": "default",
                        "resourceVersion": "8424245",
                        "uid": "3520dc01-6320-4a64-a308-beef255d3fb0"
                    },
                    "spec": {
                        "ambassador_id": [
                            "default"
                        ],
                        "config": {
                            "add_linkerd_headers": true,
                            "circuit_breakers": {
                                "max_connections": 3072,
                                "max_pending_requests": 1024,
                                "max_requests": 3072
                            },
                            "envoy_log_format": "%REQ(:METHOD)% %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% %DURATION%",
                            "envoy_log_type": "text"
                        }
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::command:local:Command::waiter"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::descheduler",
                "custom": true,
                "id": "kube-system/descheduler-naoxz4qe",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "descheduler",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "descheduler-naoxz4qe",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes-sigs.github.io/descheduler/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "descheduler-naoxz4qe"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "descheduler-naoxz4qe"
                        ],
                        "ConfigMap/v1": [
                            "kube-system/descheduler-naoxz4qe"
                        ],
                        "CronJob.batch/batch/v1": [
                            "kube-system/descheduler-naoxz4qe"
                        ],
                        "Pod/v1": [
                            "kube-system/descheduler-test-pod"
                        ],
                        "PodSecurityPolicy.policy/policy/v1beta1": [
                            "kube-system/descheduler-naoxz4qe"
                        ],
                        "ServiceAccount/v1": [
                            "kube-system/descheduler-naoxz4qe"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND"
                        },
                        "schedule": "*/30 * * * *"
                    },
                    "verify": false,
                    "version": "",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAJW4iZ4n3eun3sBD7RMLQjlVpvSsyP4vSrum5IBQ1OHOvtfftJHvgmNObhGqbFqdqItURN7IJZWENBsyIQ/lADG7MvW7jlT6q3JcKSuWcHjcHOBXBY/4+gqH2ib/YWkggeLiRBqjveY9xamiLLcNPKyHEg+FDNNzExYjN1dWx5nOiXb/R9wLeogVf3wucJKyzLKV7OGLCAARI2dc2bsjqcgy4AsRG1s5wEPtL4I4AGs8Mh7wLYmjPi/nIis7OH7Frid10Ocv57x2KTdJ7cl6EoTkGvNqdga/W2JndxRz1gPJfBpBUTQmnb49m2mSG/DtesGNCqh5rVoc0twxMIRcC2BOojPcPT99mYSEmEOFBrMuvXcofNwemsEI2wmBRXxuh0QfR5yeuwi9/F33JuoE+sQoeOOicFWgRIVnLlGgCdVxl1/I3Aw6C/1qtBJ1p77n+7q8Ztrjt51flNp+HbupirPrQIzkR2mGjtO3a1WI57NQ4co+yYZHJnR2KpBZm7jGI/+LNyF8+TZ66mG5s81AX8cU7MkZ1WoVwIIhjia6SMlFxq8JdpHGW4jVnD/uNTu2M5zeKaW1Foyh0we0GOUSSVLrUOchQEk/QjXaESAvvrcD2elX30NhPoVr6Z+BR5JNCF89f+HXyIn7RjDwt5x9fNiziIdqFt1eRRNwLR6CKuh3XDG7cT2vJjKqOqzmX8HFs8EokOJjNOHCUbd1cWN6gIEi0wkgLqRdX/9+puUDzqLWV348mxip5SSFIet8A/xU7T5a/S6VzG4OLXYs/U/eudtuFbZEqsSC0T7NbtbJjtmV69LcGJmoozcfLlpw2A3GXwPByuUAqWZCcq/ZTk8Nk9X+7FcPsgggFX9qAUAyZxVHuj41eglZRF8KqJybOLsxGPUkspebwnFdtDWQz9ttjLw+bAUmB+z7UbSHv+M1eKyq9kBz+zU9loszdox7yLpew4pJ+OgwNNhOdgigVWUGOVrHJ/ZxOXbV3Oi2ZpymLB97DYlT4yucr9bg8gzlMMHVHWzlTUYlWyPWOJr0y2YC1MuFqhW2ABonmOJ3EEU2AJtLmn4iXojDJrZ2ecjRtIzokg1u1EDF9OhlOXWNMEWplG/+byLecwyGuJmY5iMOOjElvugPLGbiutGrHj7y6PXtv3D0FY3/SIBvW01Aoq3Dn7nh9UwwZE1CsT+yRG2+fY5o4Nt/PMV9rO4Fg4O/1EljaXw5Gz3ae46NOCGx6SgfvnzCiVk9s0/wVPPe01cc7j4vkFeO4Obs55q7ivAESwB3sOxPuu8bh/zg1yNGs04zav5jMjJJwrR3r0SFvq5RWfZxhz62rWcL30I7NHC5Uw9ZWnnhJQwNpRHXPxaeP9xj+doqYjHNofhYDKyEYnSs7Z+sC1+3rDLK5plNu7IDbM542v7Xqt/Odnukh0lfiL+e1pKHRmrVHHTnKlmjfHTuJ1kijzxrb2eA/E85Fb51hstFMv8qag1LfCuAdaSODwkpQW1sHoUJQYRYl1BzRp6t0xdrYVJfuyMJiSI/4HD1hlrvGz4HatJXMyjTjcGkgLxmFS73vKjLZoMhCQeS9Li1NkpOvbPMkwEoimUGL916m4/uwaFkwCYd5tsgiscpi5/o6gG/NxfVUVecdeICcrromuTTyVYs9X6o+50O2k2PKMVSJVKhop+uZiqZWwDt5F//aSHTVpSYaZeO1bSsUboNg58Lx5ek/75fPa8nFxTIpwUhOx23eJhW7GTRJYzJXcLsZefNh1KbmeLG"
                    },
                    "atomic": false,
                    "chart": "descheduler",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "descheduler-naoxz4qe",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes-sigs.github.io/descheduler/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "descheduler-naoxz4qe"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "descheduler-naoxz4qe"
                        ],
                        "ConfigMap/v1": [
                            "kube-system/descheduler-naoxz4qe"
                        ],
                        "CronJob.batch/batch/v1": [
                            "kube-system/descheduler-naoxz4qe"
                        ],
                        "PodSecurityPolicy.policy/policy/v1beta1": [
                            "kube-system/descheduler-naoxz4qe"
                        ],
                        "ServiceAccount/v1": [
                            "kube-system/descheduler-naoxz4qe"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "0.24.1",
                        "chart": "descheduler",
                        "name": "descheduler-naoxz4qe",
                        "namespace": "kube-system",
                        "revision": 2,
                        "status": "deployed",
                        "version": "0.24.1"
                    },
                    "timeout": 300,
                    "values": {
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND"
                        },
                        "schedule": "*/30 * * * *"
                    },
                    "verify": false,
                    "version": "0.24.1",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "namespace": null,
                    "repositoryOpts": null,
                    "values": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::p-9-metrics-server",
                "custom": true,
                "id": "kube-system/p-9-metrics-server-8hgo5tof",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "metrics-server",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "p-9-metrics-server-8hgo5tof",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes-sigs.github.io/metrics-server/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "APIService.apiregistration.k8s.io/apiregistration.k8s.io/v1": [
                            "v1beta1.metrics.k8s.io"
                        ],
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "system:metrics-server-aggregated-reader",
                            "system:p-9-metrics-server"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-9-metrics-server:system:auth-delegator",
                            "system:p-9-metrics-server"
                        ],
                        "Deployment.apps/apps/v1": [
                            "p-9-metrics-server"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-9-metrics-server-auth-reader"
                        ],
                        "Service/v1": [
                            "p-9-metrics-server"
                        ],
                        "ServiceAccount/v1": [
                            "p-9-metrics-server"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "extraArgs": [
                            "--metric-resolution=10s"
                        ],
                        "fullnameOverride": "p-9-metrics-server",
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND"
                        }
                    },
                    "verify": false,
                    "version": "",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAEDzvdmhtyn87coZJgiW1jYq+zweso+3CJuFfhmGnbpJMmwexFkSc6tn4tirkTR71GUx+kqBP+vGQD3FlajCZUVO4KApCrsOePu1thLcXQUu5zsZiWYIfpkXLTsWS4KlSTG+sRNV0OG/4A0sN5pN/qWC3rME6FpTHjAGRw9nphazIUaoWi3sTLvWBjnux0q0uyUZhvlFIu6NTXDbW7FAFNHfni9T3NkKRXjGvD96OmPOmxEe1zig6dbGkvcyDFIm1Suf341vFbDbeX29juVprptA+i4QFEyX2w9p6DNPxWQWSZFWXOEzOQwSYb7kXl9Mc4LqG1PiehP5d5xaskhgQVugkTdhEJMISt4qn/7X676N7bGlhQpK1njTjZ1Hdgi4crGnlXSmcj8yhNfboQuaiLbc2zHYfSEcPZMUg/6deqHateCx4FrML2+IpGlb8G2UNl9fK3/3c2YlxC0wreUgWBVf6kfvHVrltlPVOswX2YK/p10Bbmoui/ijvCwkNM8+dquY96lad3fSuCPSZR/0S+MbX3vstJ/WXQo4WHrIEvwqQ/tLjIOxY7mEq/qAdS+MOEB+jkWog1qczn9HOQNcociJeXOgfz2vxaKYL+qZ5bEGH+W+EIFR/1RK9w+njCsXk8nKXRiq9xE309zlNdByzCsoi5DZo7mUhreMr+EOpWsokaeI9B0wuVd4OR9VCM3d8Od0sEE1uX2eVRMRUqkcPUFFrcr7n7hnIbdNFKH9Y7JYn6OmHEXM3WWvxRe2ziSbZyj0/4bnAIdNtgNyqyjzFw5kkzhyCo6qE4SjlcTylhVex2I59g0nkb3n0Wjjbc/fmAuH3fLP63WAK1nui0TdhliAmwUsTD7SHzUMZ63DDGCFV6Pb/mstPKI50X9pMn8ZOUZKc9sBj2DWqOr1ckvDO89YCTaUeIo1YQwoXEqeOph4+826NVLloMxmLZkoThypcmTuhXJLV9AZbQsI4DhjPlaPKMVRS7N+eloLn+7iTVN4HtGCwKONkZkFxKujy9D4FRuxqFSx/Cs3i4ebPXZqJus76hU/9psU3AA4aAdv7N/fUbHlfPyq/uJgbJWMcwHPusOn7Np5gYypVqQ5YJvcSUkLfee5rihtFH1ZMAcz7rviLvOnB5yAAJI6Ov9Si/q7MneJJNjFBIDclL5Usl0TltO3ydAE5ZUcMP3Ktf/LDT+odftNVsxUiiftHrcvVuFv4h9/NqMODfHcwxnVflsuvPtjdtp1dl2GcrNoCderK1RTKGRXgra2Nfios3PAtjzhvXKl0HyE2S8tBE2gGgA9VNDBvVqzf7qd5JEchg/DXCUqGywcGkQ6G7iTGOFF//p3gp21M0TzsiNrVbYwwxCrpFTh8dlIfEFCAkbdXUAR4juQEtEzh3xu0e6f0RzfpkCTgPmj4jnFW3d5uRku30niFUxLScJZQIH7sBvS/XTkLJqsZZeXdHozmSdujZpCmWr0wT9IE5tlWNG9f9l0GV2DScTh644CcX7glpyCUC/cxepaO91Z0WCJE/uOUp8k2XYGCsVuSe7mxnlcyMZkURitcOjEP0OHylD/E54BB2PJH5s5CgXAimG/UmIKukfwc8F6AWFCtnbWGb6FR3O8CtlIbveD8Gi9pOKSCDsDVwyxARw3ob4U8v/G7PZIy4rdHR85rYTzfeAPa5MyIi2aJbBEbmZE2XXzbzxmI/GFuciErMQDDiNQI025G1fozgE+EHycP5KjjMCPgOiy1Pppng2W0W3P61LR4627olaJQYvrXQKdzpgsnawLHa4dyhKILPRffZVeXauynJXahG1A9Lra4IG/KXEj5bJzA8zrQ1yu1Nyasxd+EHMHKlVh09J3jp433dC5yZbuAXZ1b4IAp13+BlxliWrmSwyktMF1StYldzOpYUtJcTzZDwx16Lp7cx283/1THJvsSNg87IWrO8TWwrdD6ko//6V7NS++rJ060vy2syhGe3k6yCQ+NvawaHcXF63nkv2SfbzUbDZapuDllDY4iLvaUDWIYUMAmGjkmg=="
                    },
                    "atomic": false,
                    "chart": "metrics-server",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "p-9-metrics-server-8hgo5tof",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes-sigs.github.io/metrics-server/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "APIService.apiregistration.k8s.io/apiregistration.k8s.io/v1": [
                            "v1beta1.metrics.k8s.io"
                        ],
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "system:metrics-server-aggregated-reader",
                            "system:p-9-metrics-server"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-9-metrics-server:system:auth-delegator",
                            "system:p-9-metrics-server"
                        ],
                        "Deployment.apps/apps/v1": [
                            "p-9-metrics-server"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-9-metrics-server-auth-reader"
                        ],
                        "Service/v1": [
                            "p-9-metrics-server"
                        ],
                        "ServiceAccount/v1": [
                            "p-9-metrics-server"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "0.6.1",
                        "chart": "metrics-server",
                        "name": "p-9-metrics-server-8hgo5tof",
                        "namespace": "kube-system",
                        "revision": 3,
                        "status": "deployed",
                        "version": "3.8.2"
                    },
                    "timeout": 300,
                    "values": {
                        "extraArgs": [
                            "--metric-resolution=10s"
                        ],
                        "fullnameOverride": "p-9-metrics-server",
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND"
                        }
                    },
                    "verify": false,
                    "version": "3.8.2",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "namespace": null,
                    "repositoryOpts": null,
                    "values": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::linkerd",
                "custom": true,
                "id": "default/linkerd-5jhjhz8i",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "linkerd2",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "linkerd-5jhjhz8i",
                    "namespace": "default",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://helm.linkerd.io/stable",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd-heartbeat",
                            "linkerd-linkerd-destination",
                            "linkerd-linkerd-identity",
                            "linkerd-linkerd-proxy-injector",
                            "linkerd-policy"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd-destination-policy",
                            "linkerd-heartbeat",
                            "linkerd-linkerd-destination",
                            "linkerd-linkerd-identity",
                            "linkerd-linkerd-proxy-injector"
                        ],
                        "ConfigMap/v1": [
                            "linkerd/linkerd-config",
                            "linkerd/linkerd-identity-trust-roots"
                        ],
                        "CronJob.batch/batch/v1beta1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "CustomResourceDefinition.apiextensions.k8s.io/apiextensions.k8s.io/v1": [
                            "serverauthorizations.policy.linkerd.io",
                            "servers.policy.linkerd.io",
                            "serviceprofiles.linkerd.io",
                            "trafficsplits.split.smi-spec.io"
                        ],
                        "Deployment.apps/apps/v1": [
                            "linkerd/linkerd-destination",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-proxy-injector"
                        ],
                        "MutatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "linkerd-proxy-injector-webhook-config"
                        ],
                        "Namespace/v1": [
                            "linkerd"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "Secret/v1": [
                            "linkerd/linkerd-identity-issuer",
                            "linkerd/linkerd-policy-validator-k8s-tls",
                            "linkerd/linkerd-proxy-injector-k8s-tls",
                            "linkerd/linkerd-sp-validator-k8s-tls"
                        ],
                        "Service/v1": [
                            "linkerd/linkerd-dst",
                            "linkerd/linkerd-dst-headless",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-identity-headless",
                            "linkerd/linkerd-policy",
                            "linkerd/linkerd-policy-validator",
                            "linkerd/linkerd-proxy-injector",
                            "linkerd/linkerd-sp-validator"
                        ],
                        "ServiceAccount/v1": [
                            "linkerd/linkerd-destination",
                            "linkerd/linkerd-heartbeat",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-proxy-injector"
                        ],
                        "ValidatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "linkerd-policy-validator-webhook-config",
                            "linkerd-sp-validator-webhook-config"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "identity": {
                            "issuer": {
                                "tls": {
                                    "crtPEM": "-----BEGIN CERTIFICATE-----\nMIIBszCCAVmgAwIBAgIRAOKBqlE56CFDdm8zsMXaukMwCgYIKoZIzj0EAwIwJTEj\nMCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjIwNjIwMjMx\nMzE2WhcNMjMwNjIwMjMxMzE2WjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJk\nLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQQ/MGQ0y01\n3lCtGAqstrtfpd1AMDiqkSdHJTy+ni2tQip82saOdukQc4bNrrirPWAZTqamamQS\n2mJFeSHBLstuo2YwZDAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIB\nADAdBgNVHQ4EFgQUi9noKTupLIDfbiJkWFcAEHOOrrEwHwYDVR0jBBgwFoAULp7o\nzoUx1oGb7jrITy/iLM8wL9YwCgYIKoZIzj0EAwIDSAAwRQIhAIUr3JcW3lZvpLCl\nYk4lEyhZ6mew2OFYLheWleQR2ry3AiAcl+PI8LLe86SOSD/RWuAcFUOBnDemC3fe\nxnpalmKHNg==\n-----END CERTIFICATE-----",
                                    "keyPEM": "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIC9CdA5G3wf5zPkuKFdPui+FhgUMZpe1dJBbu89XEX7voAoGCCqGSM49\nAwEHoUQDQgAEEPzBkNMtNd5QrRgKrLa7X6XdQDA4qpEnRyU8vp4trUIqfNrGjnbp\nEHOGza64qz1gGU6mpmpkEtpiRXkhwS7Lbg==\n-----END EC PRIVATE KEY-----"
                                }
                            }
                        },
                        "identityTrustAnchorsPEM": "-----BEGIN CERTIFICATE-----\nMIIBjjCCATOgAwIBAgIQMNWBOIJca3tk9gZYfHuF4jAKBggqhkjOPQQDAjAlMSMw\nIQYDVQQDExpyb290LmxpbmtlcmQuY2x1c3Rlci5sb2NhbDAeFw0yMjA2MjAyMzEz\nMTNaFw0zMjA2MTcyMzEzMTNaMCUxIzAhBgNVBAMTGnJvb3QubGlua2VyZC5jbHVz\ndGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEk+e46ir4zIkAqqEH\nlXwHiYbm1OTED54r4rLJibCf3Xc64clmxXzwGoLubjMln0wJ7hCOHdv+qWciyzcr\n7fd46KNFMEMwDgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQEwHQYD\nVR0OBBYEFC6e6M6FMdaBm+46yE8v4izPMC/WMAoGCCqGSM49BAMCA0kAMEYCIQC1\nj9VL0zwLaZzO6yh+kp0Sgnkqjl/TIP2jOqDk+9nmcQIhAICuKjDRpkFOyXJdjf4H\nfPAtb7AFc0ysC27FeXEtRENx\n-----END CERTIFICATE-----",
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND",
                            "kubernetes.io/os": "linux"
                        },
                        "proxy": {
                            "opaquePorts": "25,587,3306,4444,5432,6379,9300,11211,2425"
                        }
                    },
                    "verify": false,
                    "version": "2.11",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAPe0Sum39v6LuaZpMss6rZks7Z8JLHjeUPkQ0+6jLRVxnXBprGKuUtZJ/OzxYeDUwuyz8W3bcZg7HDRqNg05zFySIVNYA6qcSPBecDErqyo5eepUzu0kC3BirSPtAFcrwxL5LMv0F4fuxwenPJvDdXFU963jubUSk+PJ0Kcz3QRRojko55OPSeMJDSbpep0z5yAH82+A3ua1EafNevfeIQUxEBi0w3hxMWfzdAfS6ThFytt7Im0VRv9pM+LA7DkAb7fle2ugOmhxQYez6CkzApPobPMxRSZHVsyB6Qrkc1EWxawZuy21n+E8uBU21fHCEKsGwFOk0QDqmgvi7Lrt7A7PHrud17767HXQzkQ90SMwBEn8q/YoYeCno+3G+CM0Q4y3ZhV/CqAKhe7sidr/Gx2KG9IiyS7llAOH7DJr+pYW/w1KFpP/6tnHVyMXcuMzcuN6YU0RyXl7HK8WE5oTOUgDDfwni0Lj/YrJTpEprD9emJEidRFoaqiOSm3U+OmMeMReyZYCCIkpUC1LVIjTFhhznM4edu0E4A413WAJAYT141Tfx8ogBC/TpwQhQFo/oI6Fmk2NBrpfU+ldG6r3WbZ+ScI/yVRPGBBi/Y0MBAiRNDSr7CzreL/DZYre6vBe2gbokRsNm11rzY3msmF0xwfEXxbOmngy4ed9e/FnBf28yX8lVZNVssdej1XJsvLduBvczLpy9cfcZYgttAvfqWltBINb4mUETPEF05pOaxib6taGGB6PuCI5vvZWDXpD4hEKZbeVVtcnvYU+ITA6mL4XPYIPKA0+Pt5JCcnKHupxRZ4tE3K0Zlc7VWcrPMUNxemmrEvMkPjLiLwVobA8IjlCsMGQSI7czf+9tiWov+Cr0QXfxW7eBXI8fIickKJhWeyHadfDtVs5ZC6GshFsg1GvbNviL03JFVru83vJZYhYIQPrp49X8xki9PaXKuIFZ1RnesWIAVQwzqYvfroN5y/Io2uVh6TcHPeYjhZ4P+XQd8/Q6pBJUjTjeY2GPd57r20BTjXDmPJYknyyNglUGUnDOKqVU77DqNa7zoOeNmhg2iD6xK2EfBin/rlwxeQDb0f48OARv1tSUltqmEZJlnp5ju+rZhg5n/Fu3UfjNrUOBjiTmOApszmqRx89gWREI5uneiyEs6xQQ8hPEEW9iJrcJDkpKUKiJBD2Z80RetnykAsDb3PEeC0FHQKDTBop1pJ22NY/Ar8lEDApOMWODcTrdbRBIf4ndbn3YdDd06pw0OshUwUe5gBQZJCOPfRpaVz+8BL5z7sVWWTKxtd7zHthe3KxA9Nrv9VMej2NQstzgI3ijZ/vr1b52273FOGqftGksdhYDJiVJCaXi13SYfKzQoSzFtoO4qRHrEDOnNc5KW7fCD0LHCLWXaWFdWyyM1qrm6ov3w5QR/38nOJN3nvacZi0eqPZHkmqXNqo6uz8k3SDQtYm1VcrVh0t5lw1Wg/VvV03AJ+530qNr+raK11jSHGPXoFifWBKUHPGSclMzhocbpnfUu/P6sPpX8skPoWPT9zyavtP4r5itW7cRvO7wnWchWSNRyCClv5p2Aa15EODY73mlJpY8Gu6p+1TgO/bFJ+axYPSXzPJLbZKMgXIW1iqQv/Mpq7BjCgrOd/xGuuJVgX3A246ANMPa+OM+wv9vy+V41AiPRdfIYsT2PTA+SDzV8PSUg92nJFN3zfRu2Aa1uCGPpynQshb7d6z/PKbmqAp1ILSBhfAZcvN/Eq6K3XWAUIEzcyL/acfP/dK3D889xvaen3io8PBD+9LJ8mo/pBWdPL0CISfT5Ki3+Kj4M2iCFD6AD0ng8SYm8MddrggGywi0MgM6lTY36qE79oxL1CmCuXMbWjdznqiQVWHyYyKAAWzMlwojP/W8XcRVx1Eqkih2Lgrjx3c1ECtcLJCVxDfrj9z/09KyYLtyCCVzhwN0qlGEo97BXe52qD+9DgqjhprNtuvB3UcFyPHfgjz0D9qeXi/BoUfYa+iannnj0Dc7iz0ADaL7C/3iYYCdndRDgRRm5wHkfSg/Rbgrg5bqPypWmmGIi3DFJaOoNprA3KnwCnjfUaeoGU0sYJFbc0FhVZUbgjEoBex/w2EMz1s2WiVio9UNdYdoFLRt8qI+hDJiO9mZc9AXI+L/yZKksWx6U/tyf2gM+XnBGhAAy2gtLE4MmtDFYKMWkc7/O8p96RBaCCMwroi3qDowwNz3HxQH1nmBfOv6t7ylNFjJyaqMWt3y8LtY7nntx/DsodqTs/B2QWlSlFPbLlc0FYKuS9Q4mglLP7ImCRC4e/8h37oH9fDUcji8zv3EqfFMZhGHNdnHnlxDfSww7vEeQmFcezVHmwimWmAxgHNH7NsHEXtDN9eRFVwQLhISSMOqMv8bb3o6Vp4kMyAIEXoiXBnVp1xuBS99DwSDIYkA4NuOgu2RXt0dZ1M8uRf4n+88ZdDsNrQMIDkzvZJ2v0YNVmynNgNg3u07yi77mOgT1Deb2PvNlLkgXw0CgJaVZE4rSFBamm+xtcXea6aDJ9/0KZoj9fLyZWZrUFcRQJb+FPTCQKNJqsBJBL7+ig+ENPUdPZ0UtmFKDVIPPx628l4zfMixoybxkn4s/LTtN9nGhWGWTuaUaeeDmISP8KmEiGaCVGwBSrDVPIZACYDTkRRUUSb3CPkdHEDDhzpTzeInjZb3vPLKo88GWouySJ+ZUw6N19KYh4XSxPZutJRgObT2M0irLeRuHGPsCBgwlbWe5PaHr+r86mlM8pX2piGujc1vNDED0YFoVUnK7kBEGOsGD0949m6oX0T/alJrD1+JuDMkbLEQ4k3iVkll+NOqz98N4GSavaOPlkiQQxAPllEkVsG7JG4LvwB72RBhWuv6UT66sa4XYrce1vqc5jrD6SijBC+b+Y7ocECK5kj494ISZA8IjJju35CYXqhoZgEyvWpJ3NjsRCrwkIT/6x4LvEOdlrpof2IjuhN/Z6LV0uJIrtGFKGPsMH35QBAhSDfeHnpv6G8uYh9AP2lAlFCBSy+hliWoqW5MqYj2nPd+8rBgo57/W87QPxYrBG01L1ufc6nw20JiSoKyjeWQfdNwsJqqUt+Fcznddsjeoon+Uit1G7DaKUrPEsqtVqctlm8jgALblyJVmvfWN0BbFSsekT1npl6HPjUOFhyLiBHjRJ7C/bVLU9yZgphwu2PY52mFNIJXzXoX82kxb7QrO888Xdkuyenspuhd5P7XMp6II+x9r4X1HlwnnONbO27nSIeEDipqsGlmMrXAtCrboKHskBcwQef0PCKK1l0549bBIdsVi2c9MknYjoU8xDJYlq7xcIykcSM1ej3WzJc/weBFIJOOGkDuCgiakIyB+qlT5Qzm7SH4jitbKg4ZgjJTuUK7xdhSdvcWLZwB2LJ3iM0QkD92zNXddEV41yvNzM4+IN6s0m+sYeuh9uhEz8A1RNTcPXiQqJg/GccC6bITQizGBbqtPpVw00CENMZ/pFHFmUHpsgMpEBOk6BYqSuo4vjSnBxYXeNiJd05nGryiHIES/xUQZQuLBS0Xcw9KVaqQ3PT6DeLwI/u0UDggZdz8EQ9YzGOeN9V1GpPPLdEHcyAjMSmTNyV78dPmxFfOIAtCpk+HafJhUcQB6czm9+T7qOp8SuLbEdflJ0F8j5Xyxs1jKxqM7y19z+PJ/vP89BhW+nVzfOik5IlI2hiIXUNGg++QfqzwBZnVOJtdiArDY6DYD3C02YicDQJbfCGXOEKjHAyPTW+z+zW82UPD4/y4a1vu0RqH9Cjnb8F4F0h/DQjW29TBdk+LNAE2Y8fd3cH1Dsz48sNlbqxhZdv6LsoV52w2xzYbtsTFN95jWWwJTMC+yjtSfoS8AWmzahSw4lnqehnyF/XvsBDPzAcXmYhh11VhpYtiCsxTG8oxnRp8qa5XSnR+Prvk8Fx8KDD94Z+1LNcYRhTnqpFIXHZeBReHYGAtUkAPC6MJ/OeG0wI5YIENS9AqoxRP5r2kTZ1jVTPtz5+hl65FOq5wZxF7o7eQB8+TCZfUF/jJjBNN0Yy+qOfur7JANcuiE9NRyiVqanDedGw74TA0q5qwCE1/gnJ5coMD3rAhxjCNIX8amUPa/WeJqEV5nyDu+0x7uXs8K0joHcuSdSb69JRn/F2th0wK9PaVLsEum8knPEbrdLuYXi3VXZTri2TsqdeBlUKIQNeSBWlZqEZNxpsiGkDnxAK17+cukawgejKg91u5tALwC69j1mDvDcHqN+IRwl1vVpbzyKxaf/eNrUHyShoVQJ13TP2QBV6x9HqsQVxQMyVpWP+RpDedJW6+kPrr2IGEGtF4J19eAVKx1asALMmTh/GCZl3Gvku7+DKCkr0Q6DbiSK1sI062/I5TxkyYJ5AdkAxkVwCGRvki/rqJGbiLNO7/YeHh1HlnR7RvrUMcJB5ppeVELH2wSZpGIk9WnM2E873WDR5MlYVCGt6LEWON7ifYG92jGHoem3lAp/Ln0N+8vlxHHieA4PT9fEVC+hEF972O17ckexTlwb/on3Dld5XYrLx6Ddo2gJ3cTyeLP/31SXFKxIqt6q0HiOE8CxLWlEcUb7Djc8IoqIO51mCnwgj9W407OmBfjUTjIpny5POmA7h4ImrBoEArf1rINCozv9JgoA+QkCnEzfkTIfi9HDCLTVxMWgjcCli2HxuohuMUcWgpyUUn7qOAgK8p7pUUKC/Q1kj71yloaKW1Nls7dFuSpUJyyDAHmNV1O39RHSp/R4iLaz94Fz+s9x3Tfau39iYIgLcWV46t426cVi71wdM1OgfrWmQfx6PwZyHgDUKhrAzrdL1TuZCFQ/LDY97vjrNnLnr/AkB9KNkgBo2647qsGWKSKuAdE1jMDO6C0XmfMZTNvt+NdRWRoGN2y2We4NTs1x1Y2YUoRzdS+CrMaOXgxqVcbqEUfcqKqiiz7ia4wTwjEQzIvk4rBK7ckPwz11jtUo2llCzU/JzUSVfuJ9c+mpbbIG3TDPWoO9ncnfWLoEpZlW1WChEM0whsNdtrc4y5uOqC5LVuxOFoLaT0sdtQNNOkwpY+y8H8mKnTcqX57sIl/bBO4c1Z2rBrheCaAISNR9Ll5D/WbVFVg3OopnGIoV7O38u9B7DdU96eL0PLVJOXJ0M5td5SzABW7k74Vt2onQYeKUnwK1IUTv3B+zA3oltITOIJ7d5vrqgHzH8viWPLKSUDZ60X5rl7pV8SB87iJ8tN419ateV/zwjW4sEjjaBkUxdFAJCMbR8pBZvZ/2jUPwqKO467YWFdSLqehm5c8pK5mXoB1WAkVKcQTjWAxt8th2/GTGLocmHXBmNix92QHHJLbDZm3bOcrhlCMQGUjbqd8KwMBi5V/Cz2pw46kwNa6RoEQv+N40XxP5yr14z0wPE4jYbfFnkJAJ6bnVKo/GlNlGacFa/8T2ghhL7ZQfttqEE8dYSDVlLiU9paZydTg3UYrqMMzDJfOabywWmeqATKynzFgrYEq43CRDmMdB7C9i5qoxtMxoVabka/ARKa2SVe4ZtzqeYc6Rm8bpx5cEDnZLUuPvfO9itwoPuKXPC7mbiAPcyAGNKa03/4nTrfs/+uzra4K4LJr/qQnNaPOgHkO+OrB5VFzYUH7ZwKaC2LqrIpM2ERvJh+lx0Jiz1KtwcKlP8pElvmNHmN+KUCVDFL0iKLA61TmIRkD/xuHAIA/r2/z7HPCrQOhJVQX8IqOF0ku2A4kyD+ynFsjs/ZRHYPWfsSxPuoCZt7EQM8H43ZtVPBnRIVR0hNgumPM7KXAc8xBqhFJRra5tfqpmpfmD0gFpnGdu0RTeQMlep+WGpOrE9JUEsHKSlFa/0lwFoKmlrSsrN9lUdEBowXIT47M6UOl6FbZWrQ3jyWOoShBf/b46hIUdr2kXmqVDEqNH1Rp2zvySTLA=="
                    },
                    "atomic": false,
                    "chart": "linkerd2",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "linkerd-5jhjhz8i",
                    "namespace": "default",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://helm.linkerd.io/stable",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd-heartbeat",
                            "linkerd-linkerd-destination",
                            "linkerd-linkerd-identity",
                            "linkerd-linkerd-proxy-injector",
                            "linkerd-policy"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd-destination-policy",
                            "linkerd-heartbeat",
                            "linkerd-linkerd-destination",
                            "linkerd-linkerd-identity",
                            "linkerd-linkerd-proxy-injector"
                        ],
                        "ConfigMap/v1": [
                            "linkerd/linkerd-config",
                            "linkerd/linkerd-identity-trust-roots"
                        ],
                        "CronJob.batch/batch/v1beta1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "CustomResourceDefinition.apiextensions.k8s.io/apiextensions.k8s.io/v1": [
                            "serverauthorizations.policy.linkerd.io",
                            "servers.policy.linkerd.io",
                            "serviceprofiles.linkerd.io",
                            "trafficsplits.split.smi-spec.io"
                        ],
                        "Deployment.apps/apps/v1": [
                            "linkerd/linkerd-destination",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-proxy-injector"
                        ],
                        "MutatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "linkerd-proxy-injector-webhook-config"
                        ],
                        "Namespace/v1": [
                            "linkerd"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "Secret/v1": [
                            "linkerd/linkerd-identity-issuer",
                            "linkerd/linkerd-policy-validator-k8s-tls",
                            "linkerd/linkerd-proxy-injector-k8s-tls",
                            "linkerd/linkerd-sp-validator-k8s-tls"
                        ],
                        "Service/v1": [
                            "linkerd/linkerd-dst",
                            "linkerd/linkerd-dst-headless",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-identity-headless",
                            "linkerd/linkerd-policy",
                            "linkerd/linkerd-policy-validator",
                            "linkerd/linkerd-proxy-injector",
                            "linkerd/linkerd-sp-validator"
                        ],
                        "ServiceAccount/v1": [
                            "linkerd/linkerd-destination",
                            "linkerd/linkerd-heartbeat",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-proxy-injector"
                        ],
                        "ValidatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "linkerd-policy-validator-webhook-config",
                            "linkerd-sp-validator-webhook-config"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "stable-2.11.4",
                        "chart": "linkerd2",
                        "name": "linkerd-5jhjhz8i",
                        "namespace": "default",
                        "revision": 3,
                        "status": "deployed",
                        "version": "2.11.4"
                    },
                    "timeout": 300,
                    "values": {
                        "identity": {
                            "issuer": {
                                "tls": {
                                    "crtPEM": "-----BEGIN CERTIFICATE-----\nMIIBszCCAVmgAwIBAgIRAOKBqlE56CFDdm8zsMXaukMwCgYIKoZIzj0EAwIwJTEj\nMCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjIwNjIwMjMx\nMzE2WhcNMjMwNjIwMjMxMzE2WjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJk\nLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQQ/MGQ0y01\n3lCtGAqstrtfpd1AMDiqkSdHJTy+ni2tQip82saOdukQc4bNrrirPWAZTqamamQS\n2mJFeSHBLstuo2YwZDAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIB\nADAdBgNVHQ4EFgQUi9noKTupLIDfbiJkWFcAEHOOrrEwHwYDVR0jBBgwFoAULp7o\nzoUx1oGb7jrITy/iLM8wL9YwCgYIKoZIzj0EAwIDSAAwRQIhAIUr3JcW3lZvpLCl\nYk4lEyhZ6mew2OFYLheWleQR2ry3AiAcl+PI8LLe86SOSD/RWuAcFUOBnDemC3fe\nxnpalmKHNg==\n-----END CERTIFICATE-----",
                                    "keyPEM": "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIC9CdA5G3wf5zPkuKFdPui+FhgUMZpe1dJBbu89XEX7voAoGCCqGSM49\nAwEHoUQDQgAEEPzBkNMtNd5QrRgKrLa7X6XdQDA4qpEnRyU8vp4trUIqfNrGjnbp\nEHOGza64qz1gGU6mpmpkEtpiRXkhwS7Lbg==\n-----END EC PRIVATE KEY-----"
                                }
                            }
                        },
                        "identityTrustAnchorsPEM": "-----BEGIN CERTIFICATE-----\nMIIBjjCCATOgAwIBAgIQMNWBOIJca3tk9gZYfHuF4jAKBggqhkjOPQQDAjAlMSMw\nIQYDVQQDExpyb290LmxpbmtlcmQuY2x1c3Rlci5sb2NhbDAeFw0yMjA2MjAyMzEz\nMTNaFw0zMjA2MTcyMzEzMTNaMCUxIzAhBgNVBAMTGnJvb3QubGlua2VyZC5jbHVz\ndGVyLmxvY2FsMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEk+e46ir4zIkAqqEH\nlXwHiYbm1OTED54r4rLJibCf3Xc64clmxXzwGoLubjMln0wJ7hCOHdv+qWciyzcr\n7fd46KNFMEMwDgYDVR0PAQH/BAQDAgEGMBIGA1UdEwEB/wQIMAYBAf8CAQEwHQYD\nVR0OBBYEFC6e6M6FMdaBm+46yE8v4izPMC/WMAoGCCqGSM49BAMCA0kAMEYCIQC1\nj9VL0zwLaZzO6yh+kp0Sgnkqjl/TIP2jOqDk+9nmcQIhAICuKjDRpkFOyXJdjf4H\nfPAtb7AFc0ysC27FeXEtRENx\n-----END CERTIFICATE-----",
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND",
                            "kubernetes.io/os": "linux"
                        },
                        "proxy": {
                            "opaquePorts": "25,587,3306,4444,5432,6379,9300,11211,2425"
                        }
                    },
                    "verify": false,
                    "version": "2.11.4",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::command:local:Command::ca-crt",
                    "urn:pulumi:plane-9::launchpad::command:local:Command::issuer-crt",
                    "urn:pulumi:plane-9::launchpad::command:local:Command::issuer-key"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "repositoryOpts": null,
                    "values": [
                        "urn:pulumi:plane-9::launchpad::command:local:Command::ca-crt",
                        "urn:pulumi:plane-9::launchpad::command:local:Command::issuer-crt",
                        "urn:pulumi:plane-9::launchpad::command:local:Command::issuer-key"
                    ],
                    "version": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                "custom": true,
                "id": "ebs-io1-50ops-qipd19bh",
                "type": "kubernetes:storage.k8s.io/v1:StorageClass",
                "inputs": {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "pulumi.com/autonamed": "true"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "ebs-io1-50ops-qipd19bh"
                    },
                    "parameters": {
                        "encrypted": "true",
                        "fsType": "ext4",
                        "iopsPerGB": "50",
                        "type": "io1"
                    },
                    "provisioner": "kubernetes.io/aws-ebs",
                    "reclaimPolicy": "Delete",
                    "volumeBindingMode": "WaitForFirstConsumer"
                },
                "outputs": {
                    "__initialApiVersion": "storage.k8s.io/v1",
                    "__inputs": {
                        "allowVolumeExpansion": true,
                        "apiVersion": "storage.k8s.io/v1",
                        "kind": "StorageClass",
                        "metadata": {
                            "annotations": {
                                "pulumi.com/autonamed": "true"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "ebs-io1-50ops-qipd19bh"
                        },
                        "parameters": {
                            "encrypted": "true",
                            "fsType": "ext4",
                            "iopsPerGB": "50",
                            "type": "io1"
                        },
                        "provisioner": "kubernetes.io/aws-ebs",
                        "reclaimPolicy": "Delete",
                        "volumeBindingMode": "WaitForFirstConsumer"
                    },
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"pulumi.com/autonamed\":\"true\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"ebs-io1-50ops-qipd19bh\"},\"parameters\":{\"encrypted\":\"true\",\"fsType\":\"ext4\",\"iopsPerGB\":\"50\",\"type\":\"io1\"},\"provisioner\":\"kubernetes.io/aws-ebs\",\"reclaimPolicy\":\"Delete\",\"volumeBindingMode\":\"WaitForFirstConsumer\"}\n",
                            "pulumi.com/autonamed": "true"
                        },
                        "creationTimestamp": "2022-06-20T23:24:26Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "storage.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:allowVolumeExpansion": {},
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {},
                                            "f:pulumi.com/autonamed": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:parameters": {
                                        ".": {},
                                        "f:encrypted": {},
                                        "f:fsType": {},
                                        "f:iopsPerGB": {},
                                        "f:type": {}
                                    },
                                    "f:provisioner": {},
                                    "f:reclaimPolicy": {},
                                    "f:volumeBindingMode": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:26Z"
                            }
                        ],
                        "name": "ebs-io1-50ops-qipd19bh",
                        "resourceVersion": "1109",
                        "uid": "4763436d-bb38-49ce-b785-0230ec6f2220"
                    },
                    "parameters": {
                        "encrypted": "true",
                        "fsType": "ext4",
                        "iopsPerGB": "50",
                        "type": "io1"
                    },
                    "provisioner": "kubernetes.io/aws-ebs",
                    "reclaimPolicy": "Delete",
                    "volumeBindingMode": "WaitForFirstConsumer"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "allowVolumeExpansion": null,
                    "apiVersion": null,
                    "kind": null,
                    "parameters": null,
                    "provisioner": null,
                    "reclaimPolicy": null,
                    "volumeBindingMode": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apps/v1:DaemonSet::kube-system/eks-nvme-ssd-provisioner",
                "custom": true,
                "id": "kube-system/eks-nvme-ssd-provisioner",
                "type": "kubernetes:apps/v1:DaemonSet",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "DaemonSet",
                    "metadata": {
                        "labels": {
                            "app": "eks-nvme-ssd-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "eks-nvme-ssd-provisioner",
                        "namespace": "kube-system"
                    },
                    "spec": {
                        "selector": {
                            "matchLabels": {
                                "name": "eks-nvme-ssd-provisioner"
                            }
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "name": "eks-nvme-ssd-provisioner"
                                }
                            },
                            "spec": {
                                "automountServiceAccountToken": false,
                                "containers": [
                                    {
                                        "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/eks-nvme-ssd-provisioner:latest",
                                        "imagePullPolicy": "Always",
                                        "name": "eks-nvme-ssd-provisioner",
                                        "securityContext": {
                                            "privileged": true
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/pv-disks",
                                                "mountPropagation": "Bidirectional",
                                                "name": "pv-disks"
                                            },
                                            {
                                                "mountPath": "/nvme",
                                                "mountPropagation": "Bidirectional",
                                                "name": "nvme"
                                            }
                                        ]
                                    }
                                ],
                                "nodeSelector": {
                                    "aws.amazon.com/eks-local-ssd": "true"
                                },
                                "priorityClassName": "system-node-critical",
                                "volumes": [
                                    {
                                        "hostPath": {
                                            "path": "/pv-disks"
                                        },
                                        "name": "pv-disks"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/nvme"
                                        },
                                        "name": "nvme"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "metadata": {
                            "labels": {
                                "app": "eks-nvme-ssd-provisioner",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "eks-nvme-ssd-provisioner",
                            "namespace": "kube-system"
                        },
                        "spec": {
                            "selector": {
                                "matchLabels": {
                                    "name": "eks-nvme-ssd-provisioner"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "eks-nvme-ssd-provisioner"
                                    }
                                },
                                "spec": {
                                    "automountServiceAccountToken": false,
                                    "containers": [
                                        {
                                            "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/eks-nvme-ssd-provisioner:latest",
                                            "imagePullPolicy": "Always",
                                            "name": "eks-nvme-ssd-provisioner",
                                            "securityContext": {
                                                "privileged": true
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/pv-disks",
                                                    "mountPropagation": "Bidirectional",
                                                    "name": "pv-disks"
                                                },
                                                {
                                                    "mountPath": "/nvme",
                                                    "mountPropagation": "Bidirectional",
                                                    "name": "nvme"
                                                }
                                            ]
                                        }
                                    ],
                                    "nodeSelector": {
                                        "aws.amazon.com/eks-local-ssd": "true"
                                    },
                                    "priorityClassName": "system-node-critical",
                                    "volumes": [
                                        {
                                            "hostPath": {
                                                "path": "/pv-disks"
                                            },
                                            "name": "pv-disks"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/nvme"
                                            },
                                            "name": "nvme"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "DaemonSet",
                    "metadata": {
                        "annotations": {
                            "deprecated.daemonset.template.generation": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"labels\":{\"app\":\"eks-nvme-ssd-provisioner\",\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"eks-nvme-ssd-provisioner\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"name\":\"eks-nvme-ssd-provisioner\"}},\"template\":{\"metadata\":{\"labels\":{\"name\":\"eks-nvme-ssd-provisioner\"}},\"spec\":{\"automountServiceAccountToken\":false,\"containers\":[{\"image\":\"030813887342.dkr.ecr.us-west-2.amazonaws.com/eks-nvme-ssd-provisioner:latest\",\"imagePullPolicy\":\"Always\",\"name\":\"eks-nvme-ssd-provisioner\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/pv-disks\",\"mountPropagation\":\"Bidirectional\",\"name\":\"pv-disks\"},{\"mountPath\":\"/nvme\",\"mountPropagation\":\"Bidirectional\",\"name\":\"nvme\"}]}],\"nodeSelector\":{\"aws.amazon.com/eks-local-ssd\":\"true\"},\"priorityClassName\":\"system-node-critical\",\"volumes\":[{\"hostPath\":{\"path\":\"/pv-disks\"},\"name\":\"pv-disks\"},{\"hostPath\":{\"path\":\"/nvme\"},\"name\":\"nvme\"}]}}}}\n"
                        },
                        "creationTimestamp": "2022-09-06T16:01:47Z",
                        "generation": 1,
                        "labels": {
                            "app": "eks-nvme-ssd-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:deprecated.daemonset.template.generation": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    ".": {},
                                                    "f:name": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:automountServiceAccountToken": {},
                                                "f:containers": {
                                                    "k:{\"name\":\"eks-nvme-ssd-provisioner\"}": {
                                                        ".": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:resources": {},
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:privileged": {}
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/nvme\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:mountPropagation": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/pv-disks\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:mountPropagation": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:nodeSelector": {},
                                                "f:priorityClassName": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"nvme\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"pv-disks\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:updateStrategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-06T16:01:47Z"
                            }
                        ],
                        "name": "eks-nvme-ssd-provisioner",
                        "namespace": "kube-system",
                        "resourceVersion": "29523772",
                        "uid": "80a48814-0a95-4ac8-8332-f7ceacf344cc"
                    },
                    "spec": {
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "name": "eks-nvme-ssd-provisioner"
                            }
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "name": "eks-nvme-ssd-provisioner"
                                }
                            },
                            "spec": {
                                "automountServiceAccountToken": false,
                                "containers": [
                                    {
                                        "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/eks-nvme-ssd-provisioner:latest",
                                        "imagePullPolicy": "Always",
                                        "name": "eks-nvme-ssd-provisioner",
                                        "resources": {},
                                        "securityContext": {
                                            "privileged": true
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/pv-disks",
                                                "mountPropagation": "Bidirectional",
                                                "name": "pv-disks"
                                            },
                                            {
                                                "mountPath": "/nvme",
                                                "mountPropagation": "Bidirectional",
                                                "name": "nvme"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "nodeSelector": {
                                    "aws.amazon.com/eks-local-ssd": "true"
                                },
                                "priorityClassName": "system-node-critical",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "hostPath": {
                                            "path": "/pv-disks",
                                            "type": ""
                                        },
                                        "name": "pv-disks"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/nvme",
                                            "type": ""
                                        },
                                        "name": "nvme"
                                    }
                                ]
                            }
                        },
                        "updateStrategy": {
                            "rollingUpdate": {
                                "maxSurge": 0,
                                "maxUnavailable": 1
                            },
                            "type": "RollingUpdate"
                        }
                    },
                    "status": {
                        "currentNumberScheduled": 0,
                        "desiredNumberScheduled": 0,
                        "numberMisscheduled": 0,
                        "numberReady": 0
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::eks-nvme-ssd-provisioner",
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ConfigMap::kube-system/local-static-provisioner-config",
                "custom": true,
                "id": "kube-system/local-static-provisioner-config",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "setPVOwnerRef": "true",
                        "storageClassMap": "nvme-ssd:\n   hostDir: /pv-disks\n   mountDir: /pv-disks\n",
                        "useNodeNameOnly": "true"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "name": "local-static-provisioner-config",
                        "namespace": "kube-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "setPVOwnerRef": "true",
                            "storageClassMap": "nvme-ssd:\n   hostDir: /pv-disks\n   mountDir: /pv-disks\n",
                            "useNodeNameOnly": "true"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "provisioner"
                            },
                            "name": "local-static-provisioner-config",
                            "namespace": "kube-system"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "setPVOwnerRef": "true",
                        "storageClassMap": "nvme-ssd:\n   hostDir: /pv-disks\n   mountDir: /pv-disks\n",
                        "useNodeNameOnly": "true"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"setPVOwnerRef\":\"true\",\"storageClassMap\":\"nvme-ssd:\\n   hostDir: /pv-disks\\n   mountDir: /pv-disks\\n\",\"useNodeNameOnly\":\"true\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"provisioner\"},\"name\":\"local-static-provisioner-config\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2022-09-06T16:01:41Z",
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:setPVOwnerRef": {},
                                        "f:storageClassMap": {},
                                        "f:useNodeNameOnly": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-06T16:01:41Z"
                            }
                        ],
                        "name": "local-static-provisioner-config",
                        "namespace": "kube-system",
                        "resourceVersion": "29523738",
                        "uid": "bf1186ba-ea16-4419-a11e-3c64fc3d27fa"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::local-static-provisioner",
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ServiceAccount::kube-system/local-static-provisioner",
                "custom": true,
                "id": "kube-system/local-static-provisioner",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "name": "local-static-provisioner",
                        "namespace": "kube-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "provisioner"
                            },
                            "name": "local-static-provisioner",
                            "namespace": "kube-system"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"provisioner\"},\"name\":\"local-static-provisioner\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2022-09-06T16:01:41Z",
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"local-static-provisioner-token-8vml7\"}": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-09-06T16:01:41Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-06T16:01:41Z"
                            }
                        ],
                        "name": "local-static-provisioner",
                        "namespace": "kube-system",
                        "resourceVersion": "29523743",
                        "uid": "69379534-fb9c-4dbd-bb0c-98ffd3306c06"
                    },
                    "secrets": [
                        {
                            "name": "local-static-provisioner-token-8vml7"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::local-static-provisioner",
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:storage.k8s.io/v1:StorageClass::nvme-ssd",
                "custom": true,
                "id": "nvme-ssd",
                "type": "kubernetes:storage.k8s.io/v1:StorageClass",
                "inputs": {
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "name": "nvme-ssd"
                    },
                    "provisioner": "kubernetes.io/no-provisioner",
                    "reclaimPolicy": "Delete",
                    "volumeBindingMode": "WaitForFirstConsumer"
                },
                "outputs": {
                    "__initialApiVersion": "storage.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "storage.k8s.io/v1",
                        "kind": "StorageClass",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "provisioner"
                            },
                            "name": "nvme-ssd"
                        },
                        "provisioner": "kubernetes.io/no-provisioner",
                        "reclaimPolicy": "Delete",
                        "volumeBindingMode": "WaitForFirstConsumer"
                    },
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"provisioner\"},\"name\":\"nvme-ssd\"},\"provisioner\":\"kubernetes.io/no-provisioner\",\"reclaimPolicy\":\"Delete\",\"volumeBindingMode\":\"WaitForFirstConsumer\"}\n"
                        },
                        "creationTimestamp": "2022-09-06T16:01:43Z",
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "storage.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:provisioner": {},
                                    "f:reclaimPolicy": {},
                                    "f:volumeBindingMode": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-06T16:01:43Z"
                            }
                        ],
                        "name": "nvme-ssd",
                        "resourceVersion": "29523758",
                        "uid": "a7af691a-f4c9-432d-a05f-8549cd6426d1"
                    },
                    "provisioner": "kubernetes.io/no-provisioner",
                    "reclaimPolicy": "Delete",
                    "volumeBindingMode": "WaitForFirstConsumer"
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::local-static-provisioner",
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "provisioner": null,
                    "reclaimPolicy": null,
                    "volumeBindingMode": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::local-storage-provisioner-pv-binding",
                "custom": true,
                "id": "local-storage-provisioner-pv-binding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "name": "local-storage-provisioner-pv-binding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:persistent-volume-provisioner"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "local-static-provisioner",
                            "namespace": "kube-system"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "provisioner"
                            },
                            "name": "local-storage-provisioner-pv-binding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:persistent-volume-provisioner"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "local-static-provisioner",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"provisioner\"},\"name\":\"local-storage-provisioner-pv-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:persistent-volume-provisioner\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"local-static-provisioner\",\"namespace\":\"kube-system\"}]}\n"
                        },
                        "creationTimestamp": "2022-09-06T16:01:47Z",
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-06T16:01:47Z"
                            }
                        ],
                        "name": "local-storage-provisioner-pv-binding",
                        "resourceVersion": "29523775",
                        "uid": "fece57bc-df26-468b-9865-f27bf5bdf0c3"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:persistent-volume-provisioner"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "local-static-provisioner",
                            "namespace": "kube-system"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::local-static-provisioner",
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::local-storage-provisioner-node-binding",
                "custom": true,
                "id": "local-storage-provisioner-node-binding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "name": "local-storage-provisioner-node-binding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "local-storage-provisioner-node-clusterrole"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "local-static-provisioner",
                            "namespace": "kube-system"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "provisioner"
                            },
                            "name": "local-storage-provisioner-node-binding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "local-storage-provisioner-node-clusterrole"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "local-static-provisioner",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"provisioner\"},\"name\":\"local-storage-provisioner-node-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"local-storage-provisioner-node-clusterrole\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"local-static-provisioner\",\"namespace\":\"kube-system\"}]}\n"
                        },
                        "creationTimestamp": "2022-09-06T16:01:43Z",
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-06T16:01:43Z"
                            }
                        ],
                        "name": "local-storage-provisioner-node-binding",
                        "resourceVersion": "29523751",
                        "uid": "558aa1e5-b976-48d7-917f-ee64c244a5a4"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "local-storage-provisioner-node-clusterrole"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "local-static-provisioner",
                            "namespace": "kube-system"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::local-static-provisioner",
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apps/v1:DaemonSet::kube-system/local-volume-provisioner",
                "custom": true,
                "id": "kube-system/local-volume-provisioner",
                "type": "kubernetes:apps/v1:DaemonSet",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "DaemonSet",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "name": "local-volume-provisioner",
                        "namespace": "kube-system"
                    },
                    "spec": {
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/name": "provisioner"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "checksum/config": "9020bc1a8cc0d5f9d8448c43038ddd5c545eb18c2bb01d6fb8136ffe2fd78e09"
                                },
                                "labels": {
                                    "app.kubernetes.io/instance": "local-static-provisioner",
                                    "app.kubernetes.io/name": "provisioner"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "MY_NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MY_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "JOB_CONTAINER_IMAGE",
                                                "value": "k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0"
                                            }
                                        ],
                                        "image": "k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0",
                                        "name": "provisioner",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "name": "metrics"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "200Mi"
                                            },
                                            "requests": {
                                                "cpu": "50m",
                                                "memory": "100Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "privileged": true
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/etc/provisioner/config",
                                                "name": "provisioner-config",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/dev",
                                                "name": "provisioner-dev"
                                            },
                                            {
                                                "mountPath": "/pv-disks",
                                                "mountPropagation": "HostToContainer",
                                                "name": "nvme-ssd"
                                            }
                                        ]
                                    }
                                ],
                                "nodeSelector": {
                                    "aws.amazon.com/eks-local-ssd": "true"
                                },
                                "serviceAccountName": "local-static-provisioner",
                                "volumes": [
                                    {
                                        "configMap": {
                                            "name": "local-static-provisioner-config"
                                        },
                                        "name": "provisioner-config"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/dev"
                                        },
                                        "name": "provisioner-dev"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/pv-disks"
                                        },
                                        "name": "nvme-ssd"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "provisioner"
                            },
                            "name": "local-volume-provisioner",
                            "namespace": "kube-system"
                        },
                        "spec": {
                            "selector": {
                                "matchLabels": {
                                    "app.kubernetes.io/instance": "local-static-provisioner",
                                    "app.kubernetes.io/name": "provisioner"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "checksum/config": "9020bc1a8cc0d5f9d8448c43038ddd5c545eb18c2bb01d6fb8136ffe2fd78e09"
                                    },
                                    "labels": {
                                        "app.kubernetes.io/instance": "local-static-provisioner",
                                        "app.kubernetes.io/name": "provisioner"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "env": [
                                                {
                                                    "name": "MY_NODE_NAME",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.nodeName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MY_NAMESPACE",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.namespace"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "JOB_CONTAINER_IMAGE",
                                                    "value": "k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0"
                                                }
                                            ],
                                            "image": "k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0",
                                            "name": "provisioner",
                                            "ports": [
                                                {
                                                    "containerPort": 8080,
                                                    "name": "metrics"
                                                }
                                            ],
                                            "resources": {
                                                "limits": {
                                                    "cpu": "100m",
                                                    "memory": "200Mi"
                                                },
                                                "requests": {
                                                    "cpu": "50m",
                                                    "memory": "100Mi"
                                                }
                                            },
                                            "securityContext": {
                                                "privileged": true
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/etc/provisioner/config",
                                                    "name": "provisioner-config",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/dev",
                                                    "name": "provisioner-dev"
                                                },
                                                {
                                                    "mountPath": "/pv-disks",
                                                    "mountPropagation": "HostToContainer",
                                                    "name": "nvme-ssd"
                                                }
                                            ]
                                        }
                                    ],
                                    "nodeSelector": {
                                        "aws.amazon.com/eks-local-ssd": "true"
                                    },
                                    "serviceAccountName": "local-static-provisioner",
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "name": "local-static-provisioner-config"
                                            },
                                            "name": "provisioner-config"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/dev"
                                            },
                                            "name": "provisioner-dev"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/pv-disks"
                                            },
                                            "name": "nvme-ssd"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "DaemonSet",
                    "metadata": {
                        "annotations": {
                            "deprecated.daemonset.template.generation": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"provisioner\"},\"name\":\"local-volume-provisioner\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/name\":\"provisioner\"}},\"template\":{\"metadata\":{\"annotations\":{\"checksum/config\":\"9020bc1a8cc0d5f9d8448c43038ddd5c545eb18c2bb01d6fb8136ffe2fd78e09\"},\"labels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/name\":\"provisioner\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"MY_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"MY_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"JOB_CONTAINER_IMAGE\",\"value\":\"k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0\"}],\"image\":\"k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0\",\"name\":\"provisioner\",\"ports\":[{\"containerPort\":8080,\"name\":\"metrics\"}],\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"100Mi\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/provisioner/config\",\"name\":\"provisioner-config\",\"readOnly\":true},{\"mountPath\":\"/dev\",\"name\":\"provisioner-dev\"},{\"mountPath\":\"/pv-disks\",\"mountPropagation\":\"HostToContainer\",\"name\":\"nvme-ssd\"}]}],\"nodeSelector\":{\"aws.amazon.com/eks-local-ssd\":\"true\"},\"serviceAccountName\":\"local-static-provisioner\",\"volumes\":[{\"configMap\":{\"name\":\"local-static-provisioner-config\"},\"name\":\"provisioner-config\"},{\"hostPath\":{\"path\":\"/dev\"},\"name\":\"provisioner-dev\"},{\"hostPath\":{\"path\":\"/pv-disks\"},\"name\":\"nvme-ssd\"}]}}}}\n"
                        },
                        "creationTimestamp": "2022-09-06T16:01:47Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:observedGeneration": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-09-06T16:01:47Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:deprecated.daemonset.template.generation": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:checksum/config": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/name": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"provisioner\"}": {
                                                        ".": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"JOB_CONTAINER_IMAGE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"MY_NAMESPACE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MY_NODE_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:privileged": {}
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/dev\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/etc/provisioner/config\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/pv-disks\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:mountPropagation": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:nodeSelector": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"nvme-ssd\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"provisioner-config\"}": {
                                                        ".": {},
                                                        "f:configMap": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:name": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"provisioner-dev\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:updateStrategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-06T16:01:47Z"
                            }
                        ],
                        "name": "local-volume-provisioner",
                        "namespace": "kube-system",
                        "resourceVersion": "29523778",
                        "uid": "5917e185-6a3d-4d20-b98f-4935a6e18cf8"
                    },
                    "spec": {
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/name": "provisioner"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "checksum/config": "9020bc1a8cc0d5f9d8448c43038ddd5c545eb18c2bb01d6fb8136ffe2fd78e09"
                                },
                                "labels": {
                                    "app.kubernetes.io/instance": "local-static-provisioner",
                                    "app.kubernetes.io/name": "provisioner"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "MY_NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MY_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "JOB_CONTAINER_IMAGE",
                                                "value": "k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0"
                                            }
                                        ],
                                        "image": "k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "provisioner",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "name": "metrics",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "200Mi"
                                            },
                                            "requests": {
                                                "cpu": "50m",
                                                "memory": "100Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "privileged": true
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/etc/provisioner/config",
                                                "name": "provisioner-config",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/dev",
                                                "name": "provisioner-dev"
                                            },
                                            {
                                                "mountPath": "/pv-disks",
                                                "mountPropagation": "HostToContainer",
                                                "name": "nvme-ssd"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "nodeSelector": {
                                    "aws.amazon.com/eks-local-ssd": "true"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "local-static-provisioner",
                                "serviceAccountName": "local-static-provisioner",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "name": "local-static-provisioner-config"
                                        },
                                        "name": "provisioner-config"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/dev",
                                            "type": ""
                                        },
                                        "name": "provisioner-dev"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/pv-disks",
                                            "type": ""
                                        },
                                        "name": "nvme-ssd"
                                    }
                                ]
                            }
                        },
                        "updateStrategy": {
                            "rollingUpdate": {
                                "maxSurge": 0,
                                "maxUnavailable": 1
                            },
                            "type": "RollingUpdate"
                        }
                    },
                    "status": {
                        "currentNumberScheduled": 0,
                        "desiredNumberScheduled": 0,
                        "numberMisscheduled": 0,
                        "numberReady": 0,
                        "observedGeneration": 1
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::local-static-provisioner",
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::local-storage-provisioner-node-clusterrole",
                "custom": true,
                "id": "local-storage-provisioner-node-clusterrole",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "name": "local-storage-provisioner-node-clusterrole"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "create",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                "storage.k8s.io"
                            ],
                            "resources": [
                                "storageclasses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "",
                                "events.k8s.io"
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "update",
                                "patch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "provisioner"
                            },
                            "name": "local-storage-provisioner-node-clusterrole"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "create",
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "storageclasses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "update",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"provisioner\"},\"name\":\"local-storage-provisioner-node-clusterrole\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"persistentvolumes\"],\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"delete\"]},{\"apiGroups\":[\"storage.k8s.io\"],\"resources\":[\"storageclasses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"watch\"]},{\"apiGroups\":[\"\",\"events.k8s.io\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"update\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\"]}]}\n"
                        },
                        "creationTimestamp": "2022-09-06T16:01:46Z",
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-06T16:01:46Z"
                            }
                        ],
                        "name": "local-storage-provisioner-node-clusterrole",
                        "resourceVersion": "29523771",
                        "uid": "a2864274-cfa3-400b-b499-c4c44c46b7c5"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "create",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                "storage.k8s.io"
                            ],
                            "resources": [
                                "storageclasses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "",
                                "events.k8s.io"
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "update",
                                "patch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::local-static-provisioner",
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:VpcCni::p-9-eks-cluster-vpc-cni",
                "custom": true,
                "id": "5808715f08e0fc3f",
                "type": "eks:index:VpcCni",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"server\":\"https://21ADA50B71448C1056490BD03957CE68.gr7.us-west-2.eks.amazonaws.com\",\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREl6TVRrek1sb1hEVE15TURZeE56SXpNVGt6TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNmCkNqN3NBWlBsYlYvb3hqdnkwRVdpZzRmemFqOVo4UjBKVUk0Vm9jWk8xQTNmMmRBUzFlZm1FTDN4ai9uNGd4RlYKWXNycWRXQUE2ZUNGZm9BYWJhT1hFU1RXOHFZdERGSjFCbWZIZi90dUxMcmtuY3dSK0pnUldQQWNscjh0OU1tYQpRU3BLQWJmd1JuUzFDM29FMHorcFdLUXhWWG5aWHNVQzYyZW5jc3F0di9oS1h1VDB2Y3craFY1eXRIRHBzZEVTClRFVUZSeFc2c2YzcC9ma2tWRnJremhJY3MvVGNLMFAzV3dsUEZteXh4YjZ6QnFCWUxXUjZDYkxGV1BOM2ZSNXIKN1E5SVZHbzZYcDVFOE9PN2RoejRsbWpoUEpPUDNJbHNjS2k0azFza25maGxqdkVhYU9OOTU2REtLZitET2RibgoyR0xkaHhMbS9QOEU4ZmNabnVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDZzBmSnoxbWRtNFJDdEtDV0Z0cnZscnNUdkVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREFGQnpkZllueC9PTHp2UFZzUApEbU5PU0YvWVZkazB6elhPcnFkcjJaeFppUytoMVUxR2hZb3FFbTJqUG9ienBkNnkyTE4rY1EyTlJkdVFQN0Y4ClVXM1hIUUVNbCtTakhMSzZmUTkrNDB5NVJ0TU8vVURpOVl3QTZWd2RSMlpITWx2V0UwZlpYaWw3ajVlWGNVaTQKd3luN2ZmSkVDejdUYjMyVzh1MWFOU0Evc0MyV0ZqMzJnSFR2WlZCMnU0S1JDUzR3MzJUN0lXUC9Wd3lrQlZmMQpLQmZvdDQ5aWpRdVpNRSt0c2pwQVo1Z3UzMCtEd09DSGhmcVFrU2JodFQ0OXY4cEdqWSsxdHVoQ0JHSkwrVjl1Cnl6QXZ0cnI3ZEVnVnpNV2tpMzQ4bWg2UHV5WmFiQ1lReE1XMkEwWEtsRVZSTEw2OFFrT2F4Zk0xcS9FVHRTZUQKd3FJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"command\":\"aws\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-9-eks-cluster-eksCluster-d890a2b\",\"--role\",\"arn:aws:iam::447769723736:role/admin\"],\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:eks::default::fda9d6f1-de38-4e89-9fd3-a5f17d3ad817",
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$kubernetes:core/v1:ConfigMap::p-9-eks-cluster-nodeAccess",
                "custom": true,
                "id": "kube-system/aws-auth",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "mapRoles": "- rolearn: 'arn:aws:iam::447769723736:role/p-9-eks-cluster-instanceRole-role-33db0f5'\n  username: 'system:node:{{EC2PrivateDNSName}}'\n  groups:\n    - 'system:bootstrappers'\n    - 'system:nodes'\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "aws-auth",
                        "namespace": "kube-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "mapRoles": "- rolearn: 'arn:aws:iam::447769723736:role/p-9-eks-cluster-instanceRole-role-33db0f5'\n  username: 'system:node:{{EC2PrivateDNSName}}'\n  groups:\n    - 'system:bootstrappers'\n    - 'system:nodes'\n"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "aws-auth",
                            "namespace": "kube-system"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "mapRoles": "- rolearn: 'arn:aws:iam::447769723736:role/p-9-eks-cluster-instanceRole-role-33db0f5'\n  username: 'system:node:{{EC2PrivateDNSName}}'\n  groups:\n    - 'system:bootstrappers'\n    - 'system:nodes'\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"mapRoles\":\"- rolearn: 'arn:aws:iam::447769723736:role/p-9-eks-cluster-instanceRole-role-33db0f5'\\n  username: 'system:node:{{EC2PrivateDNSName}}'\\n  groups:\\n    - 'system:bootstrappers'\\n    - 'system:nodes'\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"aws-auth\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:24:25Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:mapRoles": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:25Z"
                            }
                        ],
                        "name": "aws-auth",
                        "namespace": "kube-system",
                        "resourceVersion": "1106",
                        "uid": "6075a1c3-8193-47b4-b49a-33b49eac2616"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:Cluster::p-9-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-eks-k8s::d854a3f3-ede4-42b0-9450-9354a185a3cd",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2"
                    ],
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:core/v1:ServiceAccount::lbc-ac",
                "custom": true,
                "id": "kube-system/aws-load-balancer-controller",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "automountServiceAccountToken": true,
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "eks.amazonaws.com/role-arn": "arn:aws:iam::447769723736:role/p-9-aws-load-balancer-controller20220620232428041000000006"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "aws-load-balancer-controller",
                        "namespace": "kube-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "automountServiceAccountToken": true,
                        "kind": "ServiceAccount",
                        "metadata": {
                            "annotations": {
                                "eks.amazonaws.com/role-arn": "arn:aws:iam::447769723736:role/p-9-aws-load-balancer-controller20220620232428041000000006"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "aws-load-balancer-controller",
                            "namespace": "kube-system"
                        }
                    },
                    "apiVersion": "v1",
                    "automountServiceAccountToken": true,
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "eks.amazonaws.com/role-arn": "arn:aws:iam::447769723736:role/p-9-aws-load-balancer-controller20220620232428041000000006",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"automountServiceAccountToken\":true,\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::447769723736:role/p-9-aws-load-balancer-controller20220620232428041000000006\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"aws-load-balancer-controller\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:24:33Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"aws-load-balancer-controller-token-xvfqn\"}": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:33Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:automountServiceAccountToken": {},
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:eks.amazonaws.com/role-arn": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:33Z"
                            }
                        ],
                        "name": "aws-load-balancer-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "1175",
                        "uid": "d558256c-e86c-4e38-9628-cbe8df1c2145"
                    },
                    "secrets": [
                        {
                            "name": "aws-load-balancer-controller-token-xvfqn"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:iam/role:Role::p-9-lbc-role"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "automountServiceAccountToken": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:plane-9::launchpad::aws:iam/role:Role::p-9-lbc-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-attach-lbc-policy",
                "custom": true,
                "id": "p-9-aws-load-balancer-controller20220620232428041000000006-20220620232433628600000009",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::447769723736:policy/p-9-AWSLoadBalancerControllerIAMPolicy20220620231315682500000001",
                    "role": "p-9-aws-load-balancer-controller20220620232428041000000006"
                },
                "outputs": {
                    "id": "p-9-aws-load-balancer-controller20220620232428041000000006-20220620232433628600000009",
                    "policyArn": "arn:aws:iam::447769723736:policy/p-9-AWSLoadBalancerControllerIAMPolicy20220620231315682500000001",
                    "role": "p-9-aws-load-balancer-controller20220620232428041000000006"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:iam/policy:Policy::p-9-lbc-policy",
                    "urn:pulumi:plane-9::launchpad::aws:iam/role:Role::p-9-lbc-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "policyArn": [
                        "urn:pulumi:plane-9::launchpad::aws:iam/policy:Policy::p-9-lbc-policy"
                    ],
                    "role": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-9::launchpad::aws:iam/role:Role::p-9-lbc-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::p-9-cluster-autoscaler",
                "custom": true,
                "id": "kube-system/p-9-cluster-autoscaler-iohoq17p",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "cluster-autoscaler",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "p-9-cluster-autoscaler-iohoq17p",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes.github.io/autoscaler",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-9-cluster-autoscaler"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-9-cluster-autoscaler"
                        ],
                        "ConfigMap/v1": [
                            "kube-system/cluster-autoscaler-priority-expander"
                        ],
                        "Deployment.apps/apps/v1": [
                            "kube-system/p-9-cluster-autoscaler"
                        ],
                        "PodDisruptionBudget.policy/policy/v1": [
                            "kube-system/p-9-cluster-autoscaler"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-9-cluster-autoscaler"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-9-cluster-autoscaler"
                        ],
                        "Service/v1": [
                            "kube-system/p-9-cluster-autoscaler"
                        ],
                        "ServiceAccount/v1": [
                            "kube-system/cluster-autoscaler"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "autoDiscovery": {
                            "clusterName": "p-9-eks-cluster-eksCluster-d890a2b"
                        },
                        "awsRegion": "us-west-2",
                        "cloudProvider": "aws",
                        "expanderPriorities": {
                            "1": [
                                ".*p-9-common-ng-x86.*",
                                ".*p-9-common-ng-arm64.*"
                            ]
                        },
                        "extraArgs": {
                            "expander": "priority"
                        },
                        "fullnameOverride": "p-9-cluster-autoscaler",
                        "image": {
                            "tag": "v1.24.0"
                        },
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND"
                        },
                        "podAnnotations": {
                            "prometheus.io/port": "8085",
                            "prometheus.io/scrape": "true"
                        },
                        "rbac": {
                            "serviceAccount": {
                                "annotations": {
                                    "eks.amazonaws.com/role-arn": "arn:aws:iam::447769723736:role/p-9-autoscaler-role20220621020140806500000001"
                                },
                                "name": "cluster-autoscaler"
                            }
                        },
                        "replicaCount": 1
                    },
                    "verify": false,
                    "version": "9.19.2",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAGqkJmvp2Nw0+HaNZG3O2wZHpILyIBYm1PUQH+U38cqVLWiv38HGrFrE8VzBSCR/Pq6jH6XquPqt7ozh7agQaN11LGEdwi5Q+eQmk70uhy7BkV8XWgLLiJKQFGEZ8NaARxZXQfxFAPj104fueC3gUe5XCmicO6cHIZ1db4lOY6f8oUupr4BqEVIoumnx2mVVGUzuMxxxjLoYHJmH4IEyXduBC2Vi790z15wzMZ5tayFKtjN8u7Dp3alDn7r/n0P9PIiveVPy5Btdx/Wquttb2n+GZnSYPvAubxcW7h4M4D3if0qGkZ8yG06M2vSwWdmB0C7fzLmmktyfAjLUfYGGDe9zQorU+QkvmFq3AuaGdqja65LXh8CP9CQ8FwUIfrFc+NuFD1SJNxsUQ4R2RVM0wD0f0SRcJY7kRmhsBiFl8gpirz3Kndfs/ufB2ECjxmDs68dSJIRrgUUMKyip28jCsQAHUqZBxTDepuk4Nwfphwz7mT9KH7s/f1upWKm13HHe1rBkW77C+UR+i3v0RzWjy4VY1Le/fmcpeUCTr7DBGc+Hm3eONry+6IWYyG2DVVBYTArzAkjjJiGIGZ/tSavQM38QzZ7LyJM6f6S6/kovVvT/DWi1LNQdhYlCcY5/SLpcWwjf+Pw7YkEH63pA3dhWbYvYdDBQbkNMCDQYVn9Xg/TcNQ1q/tPVd+q+duWskdFldJ100IWRBBG3DemGlrp6SD2w1O9hQBt8t6Or7L7cY5vbnrOCvWJA31hBF9bfHXyn518ESyhiBRlswSyf5iV3fd74cu7AEj6K7WC/NmzD9zPnv34SewDFpu77mkWnvcD7bTRjlh7Qaj/k+YovRTgCZsG/YZ602uY/Pu40Ku34FC9aUL85ybYBJt+iQqezztDr75A3eR8gwYsfoJMOEpwOwCpoUkMDBinvMSLQw0DD0/TKm00ZDcxTmujmnNqIx7d4lu72P+wx4JrYPKhhnZjmK+eMeH43BaNi741+Ph6eNoTJrA5kHs3cQ94k6pwW5qAxt+JxT3V6JoUlQGQJPPfnzWCUsSFbAZjWl5zsXKIBPBmj/eOyqITuJf/7xHatQRCKS8k3gF+zd0OK93UrV014p7oqm0mevnfpccIXDRkXEUwpCDyk7qPuW1ghTsg6FXCsnZzitqDytNzI+Q90N2xTaIrFh7JYiJkmWSbnF7HolBRbXsldyjndkKNJcQD+TlptpgaNT65dFN/4OFvvUe1Q9vfInFAmtti3Di1tVkQSWdOOvRWae2VkNP/soEOAEP1ngJXPamF+uFfTyn7/Ib5T4moLIEvA//gjMGgmPyWldqeYrpcy0ySzszN9Md9SlUT+KsxUSlVUluyxHXc1ESToCJj5YYP04ur26z8rfKeit1jui8N+lYwxOO8f6/XnRitV1NUW/WXb0w2WsKLCZvuznUcdifQ9AFXOfgrpiTqEbKNouHZn/V+o08aSDWXhTOxVI1zXcf2gSilEElzui6D/pZCItAkCH92Sdyyrx4S8JcTy7zXMtr7QxbzvMtJcYNySysslxoysIFgUmpviMxS2pvRZB22gfTDc+bUicBRFESsPQ7L+GKc4gdMSuWxubSj/pA7Z2Ck8XqwGw1WLqrajM4DhAqRp9GR34kdFNswbBDJO1JhA1MaGw4CxyD9OoBnvx9O5PcvvYzLCEXzI97PaqwoL/Gm4pjwNL/XjEhCr+otIwK+lpdv1pWdO+bdu+Zc/b0tWIC6GtE0D1dSwO+eoQT5ABBwpFjA8v+YM4mTc3s3L3eXZsZZsbtatRwC0nDDV0UGrlGXjVYvlDLxlP4AzPNa73nJdcK1eC4KhrCEW2xKbqW+JivpFFzq3OweyFbxI8a4igPoPLzlvS+E7QDWjAcCfqljSkWZ1QYMmSFhX4SvGq/4yLmFkuZwUFkvpf2D5QCX/Ou61pvPsA/tUZVt0q+34CXteHt7WqKD3qo2kmJACZPbsH+qUuVqobfDiuO+vVi7n8hmQGFiG5OQhPx+qvMXAjlYLMSB+kmokmX/3XFO1C6ixArT4X+GvCJaMnN80GGU7tXN/wdlgMLwf0HN19W7Ivv4Y2DKfqvsBqiXx1ZSOos4+rRuXnnmO64GiL09qs3A0+02iI67ts+OzNxOrqIKWOiZVTACfKzRjHWg9vWfauxR4arfL3n0b84RJRmWwrG47w/5zZNAELClQWjieDMoMHn61A+NFckoJ255k9NO/bT42nRgfJseAuyMzx8wqB6jG7rXfoLc/0miNCW7qgFBiKbcxz9fqEiMxhn0Kk9WborziVXVOsTzkdPeZG8RrmkR73AyhKaOmkO04LoHJ9GXMTq2ap0+eAiL0WP41PVXDTy1zYd4H2Iui0KU5nUeyWip3plr7z1LwkEaHDlu+aQSzvzX9T6C0NxG1SoWdUjxXDbP8x7d/OrSix6t41Gz5FBnO4wyVKh9umyWbmfe7K0SvVm77wrvpRc/Roe6BcVYb4r48KJT/e967e/CgLLtxINjbfDZ7Xd+8FLhIjqeXoyw/HBrJa/xJBl1wvOyteCDedkwGrQyRX+lTbHNsdGWsH82QeQqXY61wX2KPYNFrdw7u56I4as095qSvSyZfjxOUSEfaa19R/LuuKgI7+HGoVMux3ebPrtbZHFm9uMUAbGIHlL6Z1NaU7ir5tBJ7uyXeuOcTWKUyGgITN3QkzDxvTX5jWFXn5qmqPFYRe7p/i3jhVWd+chgirzvyoiXZlUYm/XovT+6Pv8yasAwuUGcFZpw/m+gSZQjI6LBacTEhJWlIGAHPEd+pmH3Nymv5zOcd+I6D7C9Mi1i6d2A6RO4vY179Y3yHzNk="
                    },
                    "atomic": false,
                    "chart": "cluster-autoscaler",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "p-9-cluster-autoscaler-iohoq17p",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes.github.io/autoscaler",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-9-cluster-autoscaler"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-9-cluster-autoscaler"
                        ],
                        "ConfigMap/v1": [
                            "kube-system/cluster-autoscaler-priority-expander"
                        ],
                        "Deployment.apps/apps/v1": [
                            "kube-system/p-9-cluster-autoscaler"
                        ],
                        "PodDisruptionBudget.policy/policy/v1": [
                            "kube-system/p-9-cluster-autoscaler"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-9-cluster-autoscaler"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-9-cluster-autoscaler"
                        ],
                        "Service/v1": [
                            "kube-system/p-9-cluster-autoscaler"
                        ],
                        "ServiceAccount/v1": [
                            "kube-system/cluster-autoscaler"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "1.23.0",
                        "chart": "cluster-autoscaler",
                        "name": "p-9-cluster-autoscaler-iohoq17p",
                        "namespace": "kube-system",
                        "revision": 5,
                        "status": "deployed",
                        "version": "9.19.2"
                    },
                    "timeout": 300,
                    "values": {
                        "autoDiscovery": {
                            "clusterName": "p-9-eks-cluster-eksCluster-d890a2b"
                        },
                        "awsRegion": "us-west-2",
                        "cloudProvider": "aws",
                        "expanderPriorities": {
                            "1": [
                                ".*p-9-common-ng-x86.*",
                                ".*p-9-common-ng-arm64.*"
                            ]
                        },
                        "extraArgs": {
                            "expander": "priority"
                        },
                        "fullnameOverride": "p-9-cluster-autoscaler",
                        "image": {
                            "tag": "v1.24.0"
                        },
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND"
                        },
                        "podAnnotations": {
                            "prometheus.io/port": "8085",
                            "prometheus.io/scrape": "true"
                        },
                        "rbac": {
                            "serviceAccount": {
                                "annotations": {
                                    "eks.amazonaws.com/role-arn": "arn:aws:iam::447769723736:role/p-9-autoscaler-role20220621020140806500000001"
                                },
                                "name": "cluster-autoscaler"
                            }
                        },
                        "replicaCount": 1
                    },
                    "verify": false,
                    "version": "9.19.2",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "namespace": null,
                    "repositoryOpts": null,
                    "values": null,
                    "version": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClassPatch::ebs-default-storage-class",
                "custom": true,
                "id": "gp2",
                "type": "kubernetes:storage.k8s.io/v1:StorageClassPatch",
                "inputs": {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "name": "gp2"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-f1d54529",
                    "__initialApiVersion": "storage.k8s.io/v1",
                    "__inputs": {
                        "allowVolumeExpansion": true,
                        "apiVersion": "storage.k8s.io/v1",
                        "kind": "StorageClass",
                        "metadata": {
                            "name": "gp2"
                        }
                    },
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"},\"name\":\"gp2\"},\"parameters\":{\"fsType\":\"ext4\",\"type\":\"gp2\"},\"provisioner\":\"kubernetes.io/aws-ebs\",\"volumeBindingMode\":\"WaitForFirstConsumer\"}\n",
                            "storageclass.kubernetes.io/is-default-class": "true"
                        },
                        "creationTimestamp": "2022-06-20T23:20:01Z",
                        "managedFields": [
                            {
                                "apiVersion": "storage.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:allowVolumeExpansion": {}
                                },
                                "manager": "pulumi-kubernetes-f1d54529",
                                "operation": "Apply",
                                "time": "2022-09-07T02:19:51Z"
                            },
                            {
                                "apiVersion": "storage.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {},
                                            "f:storageclass.kubernetes.io/is-default-class": {}
                                        }
                                    },
                                    "f:parameters": {
                                        ".": {},
                                        "f:fsType": {},
                                        "f:type": {}
                                    },
                                    "f:provisioner": {},
                                    "f:reclaimPolicy": {},
                                    "f:volumeBindingMode": {}
                                },
                                "manager": "kubectl-client-side-apply",
                                "operation": "Update",
                                "time": "2022-06-20T23:20:01Z"
                            },
                            {
                                "apiVersion": "storage.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:allowVolumeExpansion": {}
                                },
                                "manager": "kubectl-patch",
                                "operation": "Update",
                                "time": "2022-08-31T23:12:42Z"
                            }
                        ],
                        "name": "gp2",
                        "resourceVersion": "29696899",
                        "uid": "fb504e5f-6ae9-433e-9e91-7de3c7e6dd38"
                    },
                    "parameters": {
                        "fsType": "ext4",
                        "type": "gp2"
                    },
                    "provisioner": "kubernetes.io/aws-ebs",
                    "reclaimPolicy": "Delete",
                    "volumeBindingMode": "WaitForFirstConsumer"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::ssa-storageclass-provider::ac29f620-84fa-4c4c-a5e3-c91d1af8c4db",
                "propertyDependencies": {
                    "allowVolumeExpansion": null,
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:s3/bucketObject:BucketObject::py-source-object",
                "custom": true,
                "id": "aws_glue_parquet_transforms.py",
                "type": "aws:s3/bucketObject:BucketObject",
                "inputs": {
                    "__defaults": [
                        "acl",
                        "forceDestroy"
                    ],
                    "acl": "private",
                    "bucket": "p-9-gluejob-source",
                    "etag": "f9a60c63a556e6596847f2f225150ed8",
                    "forceDestroy": false,
                    "key": "aws_glue_parquet_transforms.py",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "18e847356f3cdab7af4fd880ae4b0bec47ce4148be8d4c1f341d39feb460663e",
                        "path": "/Users/mohitreddy/rexer/tools/aws_glue_parquet_transform.py"
                    },
                    "sourceHash": "f9a60c63a556e6596847f2f225150ed8"
                },
                "outputs": {
                    "acl": "private",
                    "bucket": "p-9-gluejob-source",
                    "bucketKeyEnabled": false,
                    "cacheControl": "",
                    "contentDisposition": "",
                    "contentEncoding": "",
                    "contentLanguage": "",
                    "contentType": "binary/octet-stream",
                    "etag": "f9a60c63a556e6596847f2f225150ed8",
                    "forceDestroy": false,
                    "id": "aws_glue_parquet_transforms.py",
                    "key": "aws_glue_parquet_transforms.py",
                    "metadata": {},
                    "objectLockLegalHoldStatus": "",
                    "objectLockMode": "",
                    "objectLockRetainUntilDate": "",
                    "serverSideEncryption": "",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "18e847356f3cdab7af4fd880ae4b0bec47ce4148be8d4c1f341d39feb460663e",
                        "path": "/Users/mohitreddy/rexer/tools/aws_glue_parquet_transform.py"
                    },
                    "sourceHash": "f9a60c63a556e6596847f2f225150ed8",
                    "storageClass": "STANDARD",
                    "tags": {},
                    "tagsAll": {},
                    "versionId": "",
                    "websiteRedirect": ""
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:s3/bucket:Bucket::glue-source-bucket"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::glue-source-aws-provider::d9dc7a7e-d90c-406e-96e0-6fc8d70eaec0",
                "propertyDependencies": {
                    "bucket": [
                        "urn:pulumi:plane-9::launchpad::aws:s3/bucket:Bucket::glue-source-bucket"
                    ],
                    "etag": null,
                    "key": null,
                    "source": null,
                    "sourceHash": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:core/v1:ServiceAccount::csi-driver-ac",
                "custom": true,
                "id": "kube-system/ebs-csi-controller-sa",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "automountServiceAccountToken": true,
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "eks.amazonaws.com/role-arn": "arn:aws:iam::447769723736:role/p-9-ebs-csi-controller-sa20220729192421126300000002"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "ebs-csi-controller-sa",
                        "namespace": "kube-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "automountServiceAccountToken": true,
                        "kind": "ServiceAccount",
                        "metadata": {
                            "annotations": {
                                "eks.amazonaws.com/role-arn": "arn:aws:iam::447769723736:role/p-9-ebs-csi-controller-sa20220729192421126300000002"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "ebs-csi-controller-sa",
                            "namespace": "kube-system"
                        }
                    },
                    "apiVersion": "v1",
                    "automountServiceAccountToken": true,
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "eks.amazonaws.com/role-arn": "arn:aws:iam::447769723736:role/p-9-ebs-csi-controller-sa20220729192421126300000002",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"automountServiceAccountToken\":true,\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::447769723736:role/p-9-ebs-csi-controller-sa20220729192421126300000002\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"ebs-csi-controller-sa\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2022-07-29T19:24:28Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"ebs-csi-controller-sa-token-46qrg\"}": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-07-29T19:24:28Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:automountServiceAccountToken": {},
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:eks.amazonaws.com/role-arn": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-07-29T19:24:28Z"
                            }
                        ],
                        "name": "ebs-csi-controller-sa",
                        "namespace": "kube-system",
                        "resourceVersion": "14192062",
                        "uid": "c155412e-7aea-47c5-bfc1-b3a1b6147161"
                    },
                    "secrets": [
                        {
                            "name": "ebs-csi-controller-sa-token-46qrg"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:iam/role:Role::p-9-csi-driver-role"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "automountServiceAccountToken": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:plane-9::launchpad::aws:iam/role:Role::p-9-csi-driver-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-attach-ebs-policy",
                "custom": true,
                "id": "p-9-ebs-csi-controller-sa20220729192421126300000002-20220729192428547400000003",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::447769723736:policy/p-9-EbsCsiDriverIAMPolicy20220729192419469200000001",
                    "role": "p-9-ebs-csi-controller-sa20220729192421126300000002"
                },
                "outputs": {
                    "id": "p-9-ebs-csi-controller-sa20220729192421126300000002-20220729192428547400000003",
                    "policyArn": "arn:aws:iam::447769723736:policy/p-9-EbsCsiDriverIAMPolicy20220729192419469200000001",
                    "role": "p-9-ebs-csi-controller-sa20220729192421126300000002"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:iam/policy:Policy::p-9-ebs-driver-policy",
                    "urn:pulumi:plane-9::launchpad::aws:iam/role:Role::p-9-csi-driver-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "policyArn": [
                        "urn:pulumi:plane-9::launchpad::aws:iam/policy:Policy::p-9-ebs-driver-policy"
                    ],
                    "role": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-9::launchpad::aws:iam/role:Role::p-9-csi-driver-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-9-redis-allow-connected-cidr",
                "custom": true,
                "id": "sgrule-1346133962",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-090af44dbb5698a19",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-1346133962",
                    "protocol": "tcp",
                    "securityGroupId": "sg-090af44dbb5698a19",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-redis-sg"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::redis-aws-provider::b7af432d-e04a-45a6-8f20-442c18068c79",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-redis-sg"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-9-aurora-allow-connected-cidr",
                "custom": true,
                "id": "sgrule-4199635202",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-019e4e71b14a092e2",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-4199635202",
                    "protocol": "tcp",
                    "securityGroupId": "sg-019e4e71b14a092e2",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-db-sg"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aurora-aws-provider::6ba79e86-133f-4bc7-93e0-e5bbc8297f8b",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-db-sg"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:iam/user:User::conn-sink-user",
                "custom": true,
                "id": "p-9-conn-sink-user",
                "type": "aws:iam/user:User",
                "inputs": {
                    "__defaults": [
                        "forceDestroy"
                    ],
                    "forceDestroy": false,
                    "name": "p-9-conn-sink-user",
                    "path": "/conf_conn_user/",
                    "tags": {
                        "__defaults": [],
                        "managed_by": "fennel.ai",
                        "plane": "p-9",
                        "sink": "p-9-training-data"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:iam::447769723736:user/conf_conn_user/p-9-conn-sink-user",
                    "forceDestroy": false,
                    "id": "p-9-conn-sink-user",
                    "name": "p-9-conn-sink-user",
                    "path": "/conf_conn_user/",
                    "tags": {
                        "managed_by": "fennel.ai",
                        "plane": "p-9",
                        "sink": "p-9-training-data"
                    },
                    "tagsAll": {
                        "managed_by": "fennel.ai",
                        "plane": "p-9",
                        "sink": "p-9-training-data"
                    },
                    "uniqueId": "AIDAWQQJHYNMKGZXFDREO"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:s3/bucket:Bucket::conn-sink-bucket"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::connector-sink-aws-provider::3f7621ef-ddce-4a3b-895e-b0d9d2d6ca0d",
                "propertyDependencies": {
                    "name": null,
                    "path": null,
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:memorydb/cluster:Cluster::p-9-redis-db",
                "custom": true,
                "id": "p-9-redis-db-455f35b",
                "type": "aws:memorydb/cluster:Cluster",
                "inputs": {
                    "__defaults": [
                        "description",
                        "name"
                    ],
                    "aclName": "open-access",
                    "autoMinorVersionUpgrade": true,
                    "description": "Managed by Terraform",
                    "engineVersion": "6.2",
                    "name": "p-9-redis-db-455f35b",
                    "nodeType": "db.t4g.medium",
                    "numReplicasPerShard": 1,
                    "numShards": 1,
                    "securityGroupIds": [
                        "sg-090af44dbb5698a19"
                    ],
                    "subnetGroupName": "p-9-redis-subnet-group-2393cd0",
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "tlsEnabled": true
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":7200000000000,\"delete\":7200000000000,\"update\":7200000000000}}",
                    "aclName": "open-access",
                    "arn": "arn:aws:memorydb:us-west-2:447769723736:cluster/p-9-redis-db-455f35b",
                    "autoMinorVersionUpgrade": true,
                    "clusterEndpoints": [
                        {
                            "address": "clustercfg.p-9-redis-db-455f35b.miwxob.memorydb.us-west-2.amazonaws.com",
                            "port": 6379
                        }
                    ],
                    "description": "Managed by Terraform",
                    "enginePatchVersion": "6.2.6",
                    "engineVersion": "6.2",
                    "id": "p-9-redis-db-455f35b",
                    "kmsKeyArn": "",
                    "maintenanceWindow": "fri:06:00-fri:07:00",
                    "name": "p-9-redis-db-455f35b",
                    "namePrefix": "",
                    "nodeType": "db.t4g.medium",
                    "numReplicasPerShard": 1,
                    "numShards": 1,
                    "parameterGroupName": "default.memorydb-redis6",
                    "port": 6379,
                    "securityGroupIds": [
                        "sg-090af44dbb5698a19"
                    ],
                    "shards": [
                        {
                            "name": "0001",
                            "nodes": [
                                {
                                    "availabilityZone": "us-west-2b",
                                    "createTime": "2022-06-20T23:29:22Z",
                                    "endpoints": [
                                        {
                                            "address": "p-9-redis-db-455f35b-0001-001.p-9-redis-db-455f35b.miwxob.memorydb.us-west-2.amazonaws.com",
                                            "port": 6379
                                        }
                                    ],
                                    "name": "p-9-redis-db-455f35b-0001-001"
                                },
                                {
                                    "availabilityZone": "us-west-2a",
                                    "createTime": "2022-06-20T23:29:22Z",
                                    "endpoints": [
                                        {
                                            "address": "p-9-redis-db-455f35b-0001-002.p-9-redis-db-455f35b.miwxob.memorydb.us-west-2.amazonaws.com",
                                            "port": 6379
                                        }
                                    ],
                                    "name": "p-9-redis-db-455f35b-0001-002"
                                }
                            ],
                            "numNodes": 2,
                            "slots": "0-16383"
                        }
                    ],
                    "snapshotRetentionLimit": 0,
                    "snapshotWindow": "13:00-14:00",
                    "snsTopicArn": "",
                    "subnetGroupName": "p-9-redis-subnet-group-2393cd0",
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "tlsEnabled": true
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-redis-sg",
                    "urn:pulumi:plane-9::launchpad::aws:memorydb/subnetGroup:SubnetGroup::p-9-redis-subnet-group"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::redis-aws-provider::b7af432d-e04a-45a6-8f20-442c18068c79",
                "propertyDependencies": {
                    "aclName": null,
                    "autoMinorVersionUpgrade": null,
                    "engineVersion": null,
                    "nodeType": null,
                    "numReplicasPerShard": null,
                    "numShards": null,
                    "securityGroupIds": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-redis-sg"
                    ],
                    "subnetGroupName": [
                        "urn:pulumi:plane-9::launchpad::aws:memorydb/subnetGroup:SubnetGroup::p-9-redis-subnet-group"
                    ],
                    "tags": null,
                    "tlsEnabled": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-9-cache-allow-connected-cidr",
                "custom": true,
                "id": "sgrule-2302155854",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-077d904ac75abc34b",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-2302155854",
                    "protocol": "tcp",
                    "securityGroupId": "sg-077d904ac75abc34b",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-cache-sg"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::cache-aws-provider::23c78f3d-33b3-4dbf-bfa4-703c4a31c829",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-cache-sg"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::confluent:index/kafkaCluster:KafkaCluster::cluster",
                "custom": true,
                "id": "lkc-38595m",
                "type": "confluent:index/kafkaCluster:KafkaCluster",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "availability": "LOW",
                    "environmentId": "env-7yp5do",
                    "name": "cluster-dfce553",
                    "region": "us-west-2",
                    "serviceProvider": "AWS"
                },
                "outputs": {
                    "availability": "LOW",
                    "bootstrapServers": "SASL_SSL://pkc-pgq85.us-west-2.aws.confluent.cloud:9092",
                    "environmentId": "env-7yp5do",
                    "id": "lkc-38595m",
                    "name": "cluster-dfce553",
                    "region": "us-west-2",
                    "serviceProvider": "AWS"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::confluent:index/confluentEnvironment:ConfluentEnvironment::conf-env"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:confluent::conf-provider::a8904b2e-78f9-47e1-bec2-41dc4e807754",
                "propertyDependencies": {
                    "availability": null,
                    "environmentId": [
                        "urn:pulumi:plane-9::launchpad::confluent:index/confluentEnvironment:ConfluentEnvironment::conf-env"
                    ],
                    "region": null,
                    "serviceProvider": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:s3/bucketObject:BucketObject::p-9-cf-source-object",
                "custom": true,
                "id": "cf.py",
                "type": "aws:s3/bucketObject:BucketObject",
                "inputs": {
                    "__defaults": [
                        "acl",
                        "forceDestroy"
                    ],
                    "acl": "private",
                    "bucket": "p-9-offline-aggregate-source",
                    "etag": "6a1f44bd15a1bac858fd46181d090274",
                    "forceDestroy": false,
                    "key": "cf.py",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "e30f3411875ccacd07deb9d591510357dfc5178820d4a842f2fbda3a4c9283eb",
                        "path": "/Users/mohitreddy/rexer/pyspark/cf.py"
                    },
                    "sourceHash": "6a1f44bd15a1bac858fd46181d090274"
                },
                "outputs": {
                    "acl": "private",
                    "bucket": "p-9-offline-aggregate-source",
                    "bucketKeyEnabled": false,
                    "cacheControl": "",
                    "contentDisposition": "",
                    "contentEncoding": "",
                    "contentLanguage": "",
                    "contentType": "binary/octet-stream",
                    "etag": "6a1f44bd15a1bac858fd46181d090274",
                    "forceDestroy": false,
                    "id": "cf.py",
                    "key": "cf.py",
                    "metadata": {},
                    "objectLockLegalHoldStatus": "",
                    "objectLockMode": "",
                    "objectLockRetainUntilDate": "",
                    "serverSideEncryption": "",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "e30f3411875ccacd07deb9d591510357dfc5178820d4a842f2fbda3a4c9283eb",
                        "path": "/Users/mohitreddy/rexer/pyspark/cf.py"
                    },
                    "sourceHash": "6a1f44bd15a1bac858fd46181d090274",
                    "storageClass": "STANDARD",
                    "tags": {},
                    "tagsAll": {},
                    "versionId": "",
                    "websiteRedirect": ""
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:s3/bucket:Bucket::p-9-offline-aggregate-source-bucket"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::offline-aggregate-source-aws-provider::a34206cb-11b0-43e2-ac99-08a1520c41c6",
                "propertyDependencies": {
                    "bucket": [
                        "urn:pulumi:plane-9::launchpad::aws:s3/bucket:Bucket::p-9-offline-aggregate-source-bucket"
                    ],
                    "etag": null,
                    "key": null,
                    "source": null,
                    "sourceHash": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:s3/bucketObject:BucketObject::p-9-topk-source-object",
                "custom": true,
                "id": "topk.py",
                "type": "aws:s3/bucketObject:BucketObject",
                "inputs": {
                    "__defaults": [
                        "acl",
                        "forceDestroy"
                    ],
                    "acl": "private",
                    "bucket": "p-9-offline-aggregate-source",
                    "etag": "47a215f2872099e6d776a49497b51e1c",
                    "forceDestroy": false,
                    "key": "topk.py",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "37952d2751e912c93e23326b3681845467b57155b9504e47697ee95bda3f3365",
                        "path": "/Users/mohitreddy/rexer/pyspark/topk.py"
                    },
                    "sourceHash": "47a215f2872099e6d776a49497b51e1c"
                },
                "outputs": {
                    "acl": "private",
                    "bucket": "p-9-offline-aggregate-source",
                    "bucketKeyEnabled": false,
                    "cacheControl": "",
                    "contentDisposition": "",
                    "contentEncoding": "",
                    "contentLanguage": "",
                    "contentType": "binary/octet-stream",
                    "etag": "47a215f2872099e6d776a49497b51e1c",
                    "forceDestroy": false,
                    "id": "topk.py",
                    "key": "topk.py",
                    "metadata": {},
                    "objectLockLegalHoldStatus": "",
                    "objectLockMode": "",
                    "objectLockRetainUntilDate": "",
                    "serverSideEncryption": "",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "37952d2751e912c93e23326b3681845467b57155b9504e47697ee95bda3f3365",
                        "path": "/Users/mohitreddy/rexer/pyspark/topk.py"
                    },
                    "sourceHash": "47a215f2872099e6d776a49497b51e1c",
                    "storageClass": "STANDARD",
                    "tags": {},
                    "tagsAll": {},
                    "versionId": "",
                    "websiteRedirect": ""
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:s3/bucket:Bucket::p-9-offline-aggregate-source-bucket"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::offline-aggregate-source-aws-provider::a34206cb-11b0-43e2-ac99-08a1520c41c6",
                "propertyDependencies": {
                    "bucket": [
                        "urn:pulumi:plane-9::launchpad::aws:s3/bucket:Bucket::p-9-offline-aggregate-source-bucket"
                    ],
                    "etag": null,
                    "key": null,
                    "source": null,
                    "sourceHash": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:elasticache/replicationGroup:ReplicationGroup::p-9-cache-cluster",
                "custom": true,
                "id": "p-9-cache-cluster-e84524a",
                "type": "aws:elasticache/replicationGroup:ReplicationGroup",
                "inputs": {
                    "__defaults": [
                        "autoMinorVersionUpgrade",
                        "multiAzEnabled",
                        "replicationGroupId"
                    ],
                    "applyImmediately": true,
                    "atRestEncryptionEnabled": true,
                    "autoMinorVersionUpgrade": true,
                    "automaticFailoverEnabled": true,
                    "clusterMode": {
                        "__defaults": [],
                        "numNodeGroups": 1,
                        "replicasPerNodeGroup": 1
                    },
                    "engine": "redis",
                    "engineVersion": "6.x",
                    "multiAzEnabled": false,
                    "nodeType": "cache.t4g.small",
                    "parameterGroupName": "p-9-cache-pg-9b5575f",
                    "replicationGroupDescription": "redis-based elastic cache",
                    "replicationGroupId": "p-9-cache-cluster-e84524a",
                    "securityGroupIds": [
                        "sg-077d904ac75abc34b"
                    ],
                    "subnetGroupName": "p-9-cache-subnets-574dfa0",
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "transitEncryptionEnabled": true
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":3600000000000,\"delete\":2400000000000,\"update\":2400000000000},\"schema_version\":\"1\"}",
                    "applyImmediately": true,
                    "arn": "arn:aws:elasticache:us-west-2:447769723736:replicationgroup:p-9-cache-cluster-e84524a",
                    "atRestEncryptionEnabled": true,
                    "authToken": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAJyF7qyQSMwHTDoQlWAPveaOKabessRNnzKmpyEAIA=="
                    },
                    "autoMinorVersionUpgrade": true,
                    "automaticFailoverEnabled": true,
                    "clusterEnabled": true,
                    "clusterMode": {
                        "numNodeGroups": 1,
                        "replicasPerNodeGroup": 1
                    },
                    "configurationEndpointAddress": "clustercfg.p-9-cache-cluster-e84524a.miwxob.usw2.cache.amazonaws.com",
                    "dataTieringEnabled": false,
                    "engine": "redis",
                    "engineVersion": "6.x",
                    "engineVersionActual": "6.2.6",
                    "id": "p-9-cache-cluster-e84524a",
                    "kmsKeyId": "",
                    "maintenanceWindow": "tue:08:30-tue:09:30",
                    "memberClusters": [
                        "p-9-cache-cluster-e84524a-0001-001",
                        "p-9-cache-cluster-e84524a-0001-002"
                    ],
                    "multiAzEnabled": false,
                    "nodeType": "cache.t4g.small",
                    "numberCacheClusters": 2,
                    "parameterGroupName": "p-9-cache-pg-9b5575f",
                    "port": 6379,
                    "replicationGroupDescription": "redis-based elastic cache",
                    "replicationGroupId": "p-9-cache-cluster-e84524a",
                    "securityGroupIds": [
                        "sg-077d904ac75abc34b"
                    ],
                    "securityGroupNames": [],
                    "snapshotRetentionLimit": 0,
                    "snapshotWindow": "06:00-07:00",
                    "subnetGroupName": "p-9-cache-subnets-574dfa0",
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "transitEncryptionEnabled": true,
                    "userGroupIds": []
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-cache-sg",
                    "urn:pulumi:plane-9::launchpad::aws:elasticache/parameterGroup:ParameterGroup::p-9-cache-pg",
                    "urn:pulumi:plane-9::launchpad::aws:elasticache/subnetGroup:SubnetGroup::p-9-cache-subnets"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::cache-aws-provider::23c78f3d-33b3-4dbf-bfa4-703c4a31c829",
                "propertyDependencies": {
                    "applyImmediately": null,
                    "atRestEncryptionEnabled": null,
                    "automaticFailoverEnabled": null,
                    "clusterMode": null,
                    "engine": null,
                    "engineVersion": null,
                    "nodeType": null,
                    "parameterGroupName": [
                        "urn:pulumi:plane-9::launchpad::aws:elasticache/parameterGroup:ParameterGroup::p-9-cache-pg"
                    ],
                    "replicationGroupDescription": null,
                    "securityGroupIds": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-cache-sg"
                    ],
                    "subnetGroupName": [
                        "urn:pulumi:plane-9::launchpad::aws:elasticache/subnetGroup:SubnetGroup::p-9-cache-subnets"
                    ],
                    "tags": null,
                    "transitEncryptionEnabled": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:secretsmanager/secret:Secret::msk-secret",
                "custom": true,
                "id": "arn:aws:secretsmanager:us-west-2:447769723736:secret:AmazonMSK_p-9-msk-secret-lu29bn",
                "type": "aws:secretsmanager/secret:Secret",
                "inputs": {
                    "__defaults": [
                        "forceOverwriteReplicaSecret",
                        "recoveryWindowInDays"
                    ],
                    "forceOverwriteReplicaSecret": false,
                    "kmsKeyId": "14a2465f-db6e-4a32-bea7-670c281a86f8",
                    "name": "AmazonMSK_p-9-msk-secret",
                    "recoveryWindowInDays": 30
                },
                "outputs": {
                    "arn": "arn:aws:secretsmanager:us-west-2:447769723736:secret:AmazonMSK_p-9-msk-secret-lu29bn",
                    "description": "",
                    "forceOverwriteReplicaSecret": false,
                    "id": "arn:aws:secretsmanager:us-west-2:447769723736:secret:AmazonMSK_p-9-msk-secret-lu29bn",
                    "kmsKeyId": "14a2465f-db6e-4a32-bea7-670c281a86f8",
                    "name": "AmazonMSK_p-9-msk-secret",
                    "policy": "",
                    "recoveryWindowInDays": 30,
                    "replicas": [],
                    "rotationEnabled": false,
                    "rotationLambdaArn": "",
                    "rotationRules": null,
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:kms/key:Key::msk-key"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::msk-aws-provider::1d9a65d6-5edf-4963-8c93-de1207911f37",
                "propertyDependencies": {
                    "kmsKeyId": [
                        "urn:pulumi:plane-9::launchpad::aws:kms/key:Key::msk-key"
                    ],
                    "name": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-9-msk-allow-connected-cidr",
                "custom": true,
                "id": "sgrule-558550813",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-0071525aa9b12294d",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-558550813",
                    "protocol": "tcp",
                    "securityGroupId": "sg-0071525aa9b12294d",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::msk-sg"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::msk-aws-provider::1d9a65d6-5edf-4963-8c93-de1207911f37",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::msk-sg"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-9-postgres-aurora-allow-connected-cidr",
                "custom": true,
                "id": "sgrule-3878002438",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-0029b09c156fcbdd0",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-3878002438",
                    "protocol": "tcp",
                    "securityGroupId": "sg-0029b09c156fcbdd0",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-postgres-db-sg"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::p-9-postgres-aurora-aws-provider::c95cb518-a030-4f31-85fb-1c3cb6c30a32",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-postgres-db-sg"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:rds/cluster:Cluster::p-9-postgres-db-instance",
                "custom": true,
                "id": "p-9-postgres-db-20220714181301166600000002",
                "type": "aws:rds/cluster:Cluster",
                "inputs": {
                    "__defaults": [
                        "backupRetentionPeriod",
                        "copyTagsToSnapshot",
                        "enableGlobalWriteForwarding",
                        "enableHttpEndpoint"
                    ],
                    "applyImmediately": true,
                    "backupRetentionPeriod": 1,
                    "clusterIdentifierPrefix": "p-9-postgres-db-",
                    "copyTagsToSnapshot": false,
                    "dbSubnetGroupName": "p-9-postgres-db-subnetgroup-c854c6f",
                    "enableGlobalWriteForwarding": false,
                    "enableHttpEndpoint": false,
                    "engine": "aurora-postgresql",
                    "engineMode": "serverless",
                    "masterPassword": "password",
                    "masterUsername": "username",
                    "scalingConfiguration": {
                        "__defaults": [
                            "autoPause",
                            "secondsUntilAutoPause",
                            "timeoutAction"
                        ],
                        "autoPause": true,
                        "maxCapacity": 2,
                        "minCapacity": 2,
                        "secondsUntilAutoPause": 300,
                        "timeoutAction": "RollbackCapacityChange"
                    },
                    "skipFinalSnapshot": true,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcSecurityGroupIds": [
                        "sg-0029b09c156fcbdd0"
                    ]
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":7200000000000,\"delete\":7200000000000,\"update\":7200000000000}}",
                    "applyImmediately": true,
                    "arn": "arn:aws:rds:us-west-2:447769723736:cluster:p-9-postgres-db-20220714181301166600000002",
                    "availabilityZones": [
                        "us-west-2c",
                        "us-west-2b",
                        "us-west-2a"
                    ],
                    "backtrackWindow": 0,
                    "backupRetentionPeriod": 1,
                    "clusterIdentifier": "p-9-postgres-db-20220714181301166600000002",
                    "clusterIdentifierPrefix": "p-9-postgres-db-",
                    "clusterMembers": [],
                    "clusterResourceId": "cluster-6D3H4RZMZUJPGAQB5AOCJMDGUU",
                    "copyTagsToSnapshot": false,
                    "dbClusterParameterGroupName": "default.aurora-postgresql10",
                    "dbSubnetGroupName": "p-9-postgres-db-subnetgroup-c854c6f",
                    "deletionProtection": false,
                    "enableGlobalWriteForwarding": false,
                    "enableHttpEndpoint": false,
                    "enabledCloudwatchLogsExports": [],
                    "endpoint": "p-9-postgres-db-20220714181301166600000002.cluster-c3pcef0tb3ss.us-west-2.rds.amazonaws.com",
                    "engine": "aurora-postgresql",
                    "engineMode": "serverless",
                    "engineVersion": "10.18",
                    "engineVersionActual": "10.18",
                    "globalClusterIdentifier": "",
                    "hostedZoneId": "Z1PVIF0B656C1W",
                    "iamDatabaseAuthenticationEnabled": false,
                    "iamRoles": [],
                    "id": "p-9-postgres-db-20220714181301166600000002",
                    "kmsKeyId": "arn:aws:kms:us-west-2:447769723736:key/b1f8240b-e504-4013-bb73-fc67148dab1b",
                    "masterPassword": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAKKcbUoVvCd8LUFpQxkm4b5CsEJyrru4oFeWTq8BXYBBuIB7kg4V"
                    },
                    "masterUsername": "username",
                    "port": 5432,
                    "preferredBackupWindow": "12:32-13:02",
                    "preferredMaintenanceWindow": "mon:10:24-mon:10:54",
                    "readerEndpoint": "",
                    "replicationSourceIdentifier": "",
                    "scalingConfiguration": {
                        "autoPause": true,
                        "maxCapacity": 2,
                        "minCapacity": 2,
                        "secondsUntilAutoPause": 300,
                        "timeoutAction": "RollbackCapacityChange"
                    },
                    "skipFinalSnapshot": true,
                    "storageEncrypted": true,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcSecurityGroupIds": [
                        "sg-0029b09c156fcbdd0"
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-postgres-db-sg",
                    "urn:pulumi:plane-9::launchpad::aws:rds/subnetGroup:SubnetGroup::p-9-postgres-db-subnetgroup"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::p-9-postgres-aurora-aws-provider::c95cb518-a030-4f31-85fb-1c3cb6c30a32",
                "propertyDependencies": {
                    "applyImmediately": null,
                    "clusterIdentifierPrefix": null,
                    "dbSubnetGroupName": [
                        "urn:pulumi:plane-9::launchpad::aws:rds/subnetGroup:SubnetGroup::p-9-postgres-db-subnetgroup"
                    ],
                    "engine": null,
                    "engineMode": null,
                    "masterPassword": null,
                    "masterUsername": null,
                    "scalingConfiguration": null,
                    "skipFinalSnapshot": null,
                    "tags": null,
                    "vpcSecurityGroupIds": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-postgres-db-sg"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::command:local:Command::cleanup",
                "custom": true,
                "id": "2192569b06f4e",
                "type": "command:local:Command",
                "inputs": {
                    "create": "rm -f ca.crt ca.key issuer.crt issuer.key"
                },
                "outputs": {
                    "create": "rm -f ca.crt ca.key issuer.crt issuer.key",
                    "stderr": "",
                    "stdout": ""
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::linkerd"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:command::default_0_0_3::cd6ef9a7-b155-431b-8d60-8e59eff618c9",
                "propertyDependencies": {
                    "create": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:ManagedNodeGroup$aws:eks/nodeGroup:NodeGroup::p-9-common-ng-arm64",
                "custom": true,
                "id": "p-9-eks-cluster-eksCluster-d890a2b:p-9-common-ng-arm6420220807175501027400000001",
                "type": "aws:eks/nodeGroup:NodeGroup",
                "inputs": {
                    "__defaults": [],
                    "amiType": "AL2_ARM_64",
                    "capacityType": "ON_DEMAND",
                    "clusterName": "p-9-eks-cluster-eksCluster-d890a2b",
                    "instanceTypes": [
                        "t4g.medium"
                    ],
                    "nodeGroupNamePrefix": "p-9-common-ng-arm64",
                    "nodeRoleArn": "arn:aws:iam::447769723736:role/p-9-eks-cluster-instanceRole-role-33db0f5",
                    "remoteAccess": {
                        "__defaults": [],
                        "ec2SshKey": "p-9-eks-workers-ada8435"
                    },
                    "scalingConfig": {
                        "__defaults": [],
                        "desiredSize": 1,
                        "maxSize": 3,
                        "minSize": 1
                    },
                    "subnetIds": [
                        "subnet-009d063028d2fd06f",
                        "subnet-02dad9a9948396f14"
                    ]
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":3600000000000,\"delete\":3600000000000,\"update\":3600000000000}}",
                    "amiType": "AL2_ARM_64",
                    "arn": "arn:aws:eks:us-west-2:447769723736:nodegroup/p-9-eks-cluster-eksCluster-d890a2b/p-9-common-ng-arm6420220807175501027400000001/90c13cb9-151d-de92-20c7-18a209155a8e",
                    "capacityType": "ON_DEMAND",
                    "clusterName": "p-9-eks-cluster-eksCluster-d890a2b",
                    "diskSize": 20,
                    "id": "p-9-eks-cluster-eksCluster-d890a2b:p-9-common-ng-arm6420220807175501027400000001",
                    "instanceTypes": [
                        "t4g.medium"
                    ],
                    "labels": {},
                    "launchTemplate": null,
                    "nodeGroupName": "p-9-common-ng-arm6420220807175501027400000001",
                    "nodeGroupNamePrefix": "p-9-common-ng-arm64",
                    "nodeRoleArn": "arn:aws:iam::447769723736:role/p-9-eks-cluster-instanceRole-role-33db0f5",
                    "releaseVersion": "1.22.9-20220725",
                    "remoteAccess": {
                        "ec2SshKey": "p-9-eks-workers-ada8435",
                        "sourceSecurityGroupIds": []
                    },
                    "resources": [
                        {
                            "autoscalingGroups": [
                                {
                                    "name": "eks-p-9-common-ng-arm6420220807175501027400000001-90c13cb9-151d-de92-20c7-18a209155a8e"
                                }
                            ],
                            "remoteAccessSecurityGroupId": "sg-0a3d01560a8453d01"
                        }
                    ],
                    "scalingConfig": {
                        "desiredSize": 1,
                        "maxSize": 3,
                        "minSize": 1
                    },
                    "status": "ACTIVE",
                    "subnetIds": [
                        "subnet-009d063028d2fd06f",
                        "subnet-02dad9a9948396f14"
                    ],
                    "tags": {},
                    "tagsAll": {},
                    "taints": [],
                    "updateConfig": {
                        "maxUnavailable": 1,
                        "maxUnavailablePercentage": 0
                    },
                    "version": "1.22"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:ManagedNodeGroup::p-9-common-ng-arm64",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/keyPair:KeyPair::p-9-eks-workers",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$kubernetes:core/v1:ConfigMap::p-9-eks-cluster-nodeAccess"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "amiType": null,
                    "capacityType": null,
                    "clusterName": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster"
                    ],
                    "instanceTypes": null,
                    "nodeGroupNamePrefix": null,
                    "nodeRoleArn": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2"
                    ],
                    "remoteAccess": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/keyPair:KeyPair::p-9-eks-workers"
                    ],
                    "scalingConfig": null,
                    "subnetIds": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::eks:index:ManagedNodeGroup$aws:eks/nodeGroup:NodeGroup::p-9-common-ng-x86",
                "custom": true,
                "id": "p-9-eks-cluster-eksCluster-d890a2b:p-9-common-ng-x8620220807175501553200000003",
                "type": "aws:eks/nodeGroup:NodeGroup",
                "inputs": {
                    "__defaults": [],
                    "amiType": "AL2_x86_64",
                    "capacityType": "ON_DEMAND",
                    "clusterName": "p-9-eks-cluster-eksCluster-d890a2b",
                    "instanceTypes": [
                        "t3.medium"
                    ],
                    "nodeGroupNamePrefix": "p-9-common-ng-x86",
                    "nodeRoleArn": "arn:aws:iam::447769723736:role/p-9-eks-cluster-instanceRole-role-33db0f5",
                    "remoteAccess": {
                        "__defaults": [],
                        "ec2SshKey": "p-9-eks-workers-ada8435"
                    },
                    "scalingConfig": {
                        "__defaults": [],
                        "desiredSize": 1,
                        "maxSize": 3,
                        "minSize": 1
                    },
                    "subnetIds": [
                        "subnet-009d063028d2fd06f",
                        "subnet-02dad9a9948396f14"
                    ]
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":3600000000000,\"delete\":3600000000000,\"update\":3600000000000}}",
                    "amiType": "AL2_x86_64",
                    "arn": "arn:aws:eks:us-west-2:447769723736:nodegroup/p-9-eks-cluster-eksCluster-d890a2b/p-9-common-ng-x8620220807175501553200000003/64c13cb9-1600-7db2-6975-b5aac370b1d8",
                    "capacityType": "ON_DEMAND",
                    "clusterName": "p-9-eks-cluster-eksCluster-d890a2b",
                    "diskSize": 20,
                    "id": "p-9-eks-cluster-eksCluster-d890a2b:p-9-common-ng-x8620220807175501553200000003",
                    "instanceTypes": [
                        "t3.medium"
                    ],
                    "labels": {},
                    "launchTemplate": null,
                    "nodeGroupName": "p-9-common-ng-x8620220807175501553200000003",
                    "nodeGroupNamePrefix": "p-9-common-ng-x86",
                    "nodeRoleArn": "arn:aws:iam::447769723736:role/p-9-eks-cluster-instanceRole-role-33db0f5",
                    "releaseVersion": "1.22.9-20220725",
                    "remoteAccess": {
                        "ec2SshKey": "p-9-eks-workers-ada8435",
                        "sourceSecurityGroupIds": []
                    },
                    "resources": [
                        {
                            "autoscalingGroups": [
                                {
                                    "name": "eks-p-9-common-ng-x8620220807175501553200000003-64c13cb9-1600-7db2-6975-b5aac370b1d8"
                                }
                            ],
                            "remoteAccessSecurityGroupId": "sg-0870b343e30e4cca2"
                        }
                    ],
                    "scalingConfig": {
                        "desiredSize": 1,
                        "maxSize": 3,
                        "minSize": 1
                    },
                    "status": "ACTIVE",
                    "subnetIds": [
                        "subnet-009d063028d2fd06f",
                        "subnet-02dad9a9948396f14"
                    ],
                    "tags": {},
                    "tagsAll": {},
                    "taints": [],
                    "updateConfig": {
                        "maxUnavailable": 1,
                        "maxUnavailablePercentage": 0
                    },
                    "version": "1.22"
                },
                "parent": "urn:pulumi:plane-9::launchpad::eks:index:ManagedNodeGroup::p-9-common-ng-x86",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/keyPair:KeyPair::p-9-eks-workers",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$kubernetes:core/v1:ConfigMap::p-9-eks-cluster-nodeAccess"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::eks-aws-provider::718062ae-ec1a-4fd0-addc-e7a74b5ac863",
                "propertyDependencies": {
                    "amiType": null,
                    "capacityType": null,
                    "clusterName": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster"
                    ],
                    "instanceTypes": null,
                    "nodeGroupNamePrefix": null,
                    "nodeRoleArn": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2"
                    ],
                    "remoteAccess": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/keyPair:KeyPair::p-9-eks-workers"
                    ],
                    "scalingConfig": null,
                    "subnetIds": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:rds/cluster:Cluster::db-instance",
                "custom": true,
                "id": "p-9-db-20220620231331812300000002",
                "type": "aws:rds/cluster:Cluster",
                "inputs": {
                    "__defaults": [
                        "backupRetentionPeriod",
                        "copyTagsToSnapshot",
                        "enableGlobalWriteForwarding",
                        "enableHttpEndpoint"
                    ],
                    "applyImmediately": true,
                    "backupRetentionPeriod": 1,
                    "clusterIdentifierPrefix": "p-9-db-",
                    "copyTagsToSnapshot": false,
                    "dbSubnetGroupName": "p-9-db-subnetgroup-55aa667",
                    "enableGlobalWriteForwarding": false,
                    "enableHttpEndpoint": false,
                    "engine": "aurora-mysql",
                    "engineMode": "serverless",
                    "engineVersion": "5.7.mysql_aurora.2.08.3",
                    "finalSnapshotIdentifier": "p-9-35f612c7-e2f4-4114-8b84-21747fc76eaa",
                    "masterPassword": "password",
                    "masterUsername": "admin",
                    "scalingConfiguration": {
                        "__defaults": [
                            "autoPause",
                            "secondsUntilAutoPause",
                            "timeoutAction"
                        ],
                        "autoPause": true,
                        "maxCapacity": 4,
                        "minCapacity": 1,
                        "secondsUntilAutoPause": 300,
                        "timeoutAction": "RollbackCapacityChange"
                    },
                    "skipFinalSnapshot": true,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcSecurityGroupIds": [
                        "sg-019e4e71b14a092e2"
                    ]
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":7200000000000,\"delete\":7200000000000,\"update\":7200000000000}}",
                    "applyImmediately": true,
                    "arn": "arn:aws:rds:us-west-2:447769723736:cluster:p-9-db-20220620231331812300000002",
                    "availabilityZones": [
                        "us-west-2c",
                        "us-west-2b",
                        "us-west-2a"
                    ],
                    "backtrackWindow": 0,
                    "backupRetentionPeriod": 1,
                    "clusterIdentifier": "p-9-db-20220620231331812300000002",
                    "clusterIdentifierPrefix": "p-9-db-",
                    "clusterMembers": [],
                    "clusterResourceId": "cluster-RPXYLDKTJGVV2IRNRKOVDLGBNI",
                    "copyTagsToSnapshot": false,
                    "dbClusterParameterGroupName": "default.aurora-mysql5.7",
                    "dbSubnetGroupName": "p-9-db-subnetgroup-55aa667",
                    "deletionProtection": false,
                    "enableGlobalWriteForwarding": false,
                    "enableHttpEndpoint": false,
                    "enabledCloudwatchLogsExports": [],
                    "endpoint": "p-9-db-20220620231331812300000002.cluster-c3pcef0tb3ss.us-west-2.rds.amazonaws.com",
                    "engine": "aurora-mysql",
                    "engineMode": "serverless",
                    "engineVersion": "5.7.mysql_aurora.2.08.3",
                    "engineVersionActual": "5.7.mysql_aurora.2.08.3",
                    "finalSnapshotIdentifier": "p-9-35f612c7-e2f4-4114-8b84-21747fc76eaa",
                    "globalClusterIdentifier": "",
                    "hostedZoneId": "Z1PVIF0B656C1W",
                    "iamDatabaseAuthenticationEnabled": false,
                    "iamRoles": [],
                    "id": "p-9-db-20220620231331812300000002",
                    "kmsKeyId": "arn:aws:kms:us-west-2:447769723736:key/b1f8240b-e504-4013-bb73-fc67148dab1b",
                    "masterPassword": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAIoCj9FK4dS7b+QtP14JJJG4jxmu+VsbpUvF2vDyTwDMMHGaOOGa"
                    },
                    "masterUsername": "admin",
                    "port": 3306,
                    "preferredBackupWindow": "11:13-11:43",
                    "preferredMaintenanceWindow": "tue:09:32-tue:10:02",
                    "readerEndpoint": "",
                    "replicationSourceIdentifier": "",
                    "restoreToPointInTime": null,
                    "s3Import": null,
                    "scalingConfiguration": {
                        "autoPause": true,
                        "maxCapacity": 4,
                        "minCapacity": 1,
                        "secondsUntilAutoPause": 300,
                        "timeoutAction": "RollbackCapacityChange"
                    },
                    "skipFinalSnapshot": true,
                    "storageEncrypted": true,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcSecurityGroupIds": [
                        "sg-019e4e71b14a092e2"
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:rds/subnetGroup:SubnetGroup::p-9-db-subnetgroup",
                    "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-db-sg"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aurora-aws-provider::6ba79e86-133f-4bc7-93e0-e5bbc8297f8b",
                "propertyDependencies": {
                    "applyImmediately": null,
                    "clusterIdentifierPrefix": null,
                    "dbSubnetGroupName": [
                        "urn:pulumi:plane-9::launchpad::aws:rds/subnetGroup:SubnetGroup::p-9-db-subnetgroup"
                    ],
                    "engine": null,
                    "engineMode": null,
                    "engineVersion": null,
                    "finalSnapshotIdentifier": null,
                    "masterPassword": null,
                    "masterUsername": null,
                    "scalingConfiguration": null,
                    "skipFinalSnapshot": null,
                    "tags": null,
                    "vpcSecurityGroupIds": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-db-sg"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:secretsmanager/secretVersion:SecretVersion::msk-secret-version",
                "custom": true,
                "id": "arn:aws:secretsmanager:us-west-2:447769723736:secret:AmazonMSK_p-9-msk-secret-lu29bn|3486ED84-DA8F-40B4-91EE-593F0CE4B866",
                "type": "aws:secretsmanager/secretVersion:SecretVersion",
                "inputs": {
                    "__defaults": [],
                    "secretId": "arn:aws:secretsmanager:us-west-2:447769723736:secret:AmazonMSK_p-9-msk-secret-lu29bn",
                    "secretString": "{\"username\":\"p-9-username\",\"password\":\"p-9-password\"}"
                },
                "outputs": {
                    "arn": "arn:aws:secretsmanager:us-west-2:447769723736:secret:AmazonMSK_p-9-msk-secret-lu29bn",
                    "id": "arn:aws:secretsmanager:us-west-2:447769723736:secret:AmazonMSK_p-9-msk-secret-lu29bn|3486ED84-DA8F-40B4-91EE-593F0CE4B866",
                    "secretBinary": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAD0VbQ2w70lrCTpA2pYNs6xqODwXP/08Wj8B/CqDtQ=="
                    },
                    "secretId": "arn:aws:secretsmanager:us-west-2:447769723736:secret:AmazonMSK_p-9-msk-secret-lu29bn",
                    "secretString": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAK201PtHiD0/t+16byvdpQ9pzM38cnXLXTEutJ5QkPZHCNUxDZ2bw4AJxmFRLgBwJh9+8YKPUpd3EiJvZ8vL4QmyJ0ALoDf3fkd/3os5mk57qIghqAolHr2XsEw="
                    },
                    "versionId": "3486ED84-DA8F-40B4-91EE-593F0CE4B866",
                    "versionStages": [
                        "AWSCURRENT"
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:secretsmanager/secret:Secret::msk-secret"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::msk-aws-provider::1d9a65d6-5edf-4963-8c93-de1207911f37",
                "propertyDependencies": {
                    "secretId": [
                        "urn:pulumi:plane-9::launchpad::aws:secretsmanager/secret:Secret::msk-secret"
                    ],
                    "secretString": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:iam/userPolicy:UserPolicy::conn-sink-user-policy",
                "custom": true,
                "id": "p-9-conn-sink-user:conn-sink-user-policy-13f27f9",
                "type": "aws:iam/userPolicy:UserPolicy",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "name": "conn-sink-user-policy-13f27f9",
                    "policy": "{\n        \"Version\":\"2012-10-17\",\n        \"Statement\":[\n            {\n                \"Effect\":\"Allow\",\n                \"Action\": [\n                    \"s3:ListAllMyBuckets\"\n                ],\n                \"Resource\":\"arn:aws:s3:::*\"\n            },\n            {\n                \"Effect\":\"Allow\",\n                \"Action\":[\n                    \"s3:ListBucket\",\n                    \"s3:GetBucketLocation\"\n                ],\n                \"Resource\":\"arn:aws:s3:::p-9-training-data\"\n            },\n            {\n                \"Effect\":\"Allow\",\n                \"Action\":[\n                    \"s3:PutObject\",\n                    \"s3:GetObject\",\n                    \"s3:AbortMultipartUpload\",\n                    \"s3:ListMultipartUploadParts\",\n                    \"s3:ListBucketMultipartUploads\"\n                ],\n                \"Resource\":\"arn:aws:s3:::p-9-training-data/*\"\n            }\n        ]\n    }",
                    "user": "p-9-conn-sink-user"
                },
                "outputs": {
                    "id": "p-9-conn-sink-user:conn-sink-user-policy-13f27f9",
                    "name": "conn-sink-user-policy-13f27f9",
                    "policy": "{\n        \"Version\":\"2012-10-17\",\n        \"Statement\":[\n            {\n                \"Effect\":\"Allow\",\n                \"Action\": [\n                    \"s3:ListAllMyBuckets\"\n                ],\n                \"Resource\":\"arn:aws:s3:::*\"\n            },\n            {\n                \"Effect\":\"Allow\",\n                \"Action\":[\n                    \"s3:ListBucket\",\n                    \"s3:GetBucketLocation\"\n                ],\n                \"Resource\":\"arn:aws:s3:::p-9-training-data\"\n            },\n            {\n                \"Effect\":\"Allow\",\n                \"Action\":[\n                    \"s3:PutObject\",\n                    \"s3:GetObject\",\n                    \"s3:AbortMultipartUpload\",\n                    \"s3:ListMultipartUploadParts\",\n                    \"s3:ListBucketMultipartUploads\"\n                ],\n                \"Resource\":\"arn:aws:s3:::p-9-training-data/*\"\n            }\n        ]\n    }",
                    "user": "p-9-conn-sink-user"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:iam/user:User::conn-sink-user"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::connector-sink-aws-provider::3f7621ef-ddce-4a3b-895e-b0d9d2d6ca0d",
                "propertyDependencies": {
                    "policy": null,
                    "user": [
                        "urn:pulumi:plane-9::launchpad::aws:iam/user:User::conn-sink-user"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:iam/accessKey:AccessKey::conn-sink-access-key",
                "custom": true,
                "id": "AKIAWQQJHYNMHEST6QPU",
                "type": "aws:iam/accessKey:AccessKey",
                "inputs": {
                    "__defaults": [
                        "status"
                    ],
                    "status": "Active",
                    "user": "p-9-conn-sink-user"
                },
                "outputs": {
                    "createDate": "2022-06-20T23:13:28Z",
                    "id": "AKIAWQQJHYNMHEST6QPU",
                    "secret": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAIUOeeSEcXwfH+KLkmWZDCpdnHFEWw3fTpGlp/+vczbyzBKrwnPjozOZXFd8HJFO45BX3ah0EQd54tzCK/XchTpqhlsm6iM="
                    },
                    "sesSmtpPasswordV4": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAHfQoolmA1ks9owd5CfHg3zsOJN0ob5fMMq+BZP4Eo72Qw5icdcRhKEXCLv/cLjAebprtCtbB6GBOb8cp2Eusa0cmMyrDYZYLznE"
                    },
                    "status": "Active",
                    "user": "p-9-conn-sink-user"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:iam/user:User::conn-sink-user"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::connector-sink-aws-provider::3f7621ef-ddce-4a3b-895e-b0d9d2d6ca0d",
                "propertyDependencies": {
                    "user": [
                        "urn:pulumi:plane-9::launchpad::aws:iam/user:User::conn-sink-user"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:secretsmanager/secretPolicy:SecretPolicy::msk-secret-policy",
                "custom": true,
                "id": "arn:aws:secretsmanager:us-west-2:447769723736:secret:AmazonMSK_p-9-msk-secret-lu29bn",
                "type": "aws:secretsmanager/secretPolicy:SecretPolicy",
                "inputs": {
                    "__defaults": [],
                    "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"kafka.amazonaws.com\"},\"Action\":\"secretsmanager:getSecretValue\",\"Resource\":\"arn:aws:secretsmanager:us-west-2:447769723736:secret:AmazonMSK_p-9-msk-secret-lu29bn\"}]}",
                    "secretArn": "arn:aws:secretsmanager:us-west-2:447769723736:secret:AmazonMSK_p-9-msk-secret-lu29bn"
                },
                "outputs": {
                    "id": "arn:aws:secretsmanager:us-west-2:447769723736:secret:AmazonMSK_p-9-msk-secret-lu29bn",
                    "policy": "{\"Statement\":[{\"Action\":\"secretsmanager:getSecretValue\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"kafka.amazonaws.com\"},\"Resource\":\"arn:aws:secretsmanager:us-west-2:447769723736:secret:AmazonMSK_p-9-msk-secret-lu29bn\"}],\"Version\":\"2012-10-17\"}",
                    "secretArn": "arn:aws:secretsmanager:us-west-2:447769723736:secret:AmazonMSK_p-9-msk-secret-lu29bn"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:secretsmanager/secret:Secret::msk-secret"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::msk-aws-provider::1d9a65d6-5edf-4963-8c93-de1207911f37",
                "propertyDependencies": {
                    "policy": null,
                    "secretArn": [
                        "urn:pulumi:plane-9::launchpad::aws:secretsmanager/secret:Secret::msk-secret"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::confluent:index/apiKey:ApiKey::key",
                "custom": true,
                "id": "9470912",
                "type": "confluent:index/apiKey:ApiKey",
                "inputs": {
                    "__defaults": [],
                    "clusterId": "lkc-38595m",
                    "environmentId": "env-7yp5do"
                },
                "outputs": {
                    "clusterId": "lkc-38595m",
                    "environmentId": "env-7yp5do",
                    "id": "9470912",
                    "key": "FBTCEWPII6SUGFMU",
                    "secret": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAOshVxBCmWBhYMYMYc90O1lAn+P9t25cjvlExG1ET9GBkzQ791ySTocBUG82RwFR+E+aNBvkhQIk2Em7Ddye5ub0iY34C+fB7+PwBFRzYsctCvcNTIibBH3KGA+0EUk="
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::confluent:index/kafkaCluster:KafkaCluster::cluster"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:confluent::conf-provider::a8904b2e-78f9-47e1-bec2-41dc4e807754",
                "propertyDependencies": {
                    "clusterId": [
                        "urn:pulumi:plane-9::launchpad::confluent:index/kafkaCluster:KafkaCluster::cluster"
                    ],
                    "environmentId": [
                        "urn:pulumi:plane-9::launchpad::confluent:index/kafkaCluster:KafkaCluster::cluster"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-9-postgres-allow-eks",
                "custom": true,
                "id": "sgrule-531219227",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-0029b09c156fcbdd0",
                    "sourceSecurityGroupId": "sg-05ea7c54b3f21042d",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "fromPort": 0,
                    "id": "sgrule-531219227",
                    "protocol": "tcp",
                    "securityGroupId": "sg-0029b09c156fcbdd0",
                    "self": false,
                    "sourceSecurityGroupId": "sg-05ea7c54b3f21042d",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-postgres-db-sg",
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::p-9-postgres-aurora-aws-provider::c95cb518-a030-4f31-85fb-1c3cb6c30a32",
                "propertyDependencies": {
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-postgres-db-sg"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::node-sagemaker-policy-attach",
                "custom": true,
                "id": "p-9-eks-cluster-instanceRole-role-33db0f5-20220709045624699900000001",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
                    "role": "p-9-eks-cluster-instanceRole-role-33db0f5"
                },
                "outputs": {
                    "id": "p-9-eks-cluster-instanceRole-role-33db0f5-20220709045624699900000001",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
                    "role": "p-9-eks-cluster-instanceRole-role-33db0f5"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::plane-eks-instance-iam-policy-provider::88df240f-9bcb-4b02-81bb-f4665a7683cd",
                "propertyDependencies": {
                    "policyArn": null,
                    "role": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "custom": false,
                "type": "kubernetes:yaml:ConfigFile",
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9"
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-9-allow-eks",
                "custom": true,
                "id": "sgrule-1022196660",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-019e4e71b14a092e2",
                    "sourceSecurityGroupId": "sg-05ea7c54b3f21042d",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "fromPort": 0,
                    "id": "sgrule-1022196660",
                    "protocol": "tcp",
                    "securityGroupId": "sg-019e4e71b14a092e2",
                    "self": false,
                    "sourceSecurityGroupId": "sg-05ea7c54b3f21042d",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-db-sg",
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::aurora-aws-provider::6ba79e86-133f-4bc7-93e0-e5bbc8297f8b",
                "propertyDependencies": {
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-db-sg"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::tele-k8s-provider",
                "custom": true,
                "id": "23764612-7965-42f4-9ad1-ff50b151cf26",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREl6TVRrek1sb1hEVE15TURZeE56SXpNVGt6TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNmCkNqN3NBWlBsYlYvb3hqdnkwRVdpZzRmemFqOVo4UjBKVUk0Vm9jWk8xQTNmMmRBUzFlZm1FTDN4ai9uNGd4RlYKWXNycWRXQUE2ZUNGZm9BYWJhT1hFU1RXOHFZdERGSjFCbWZIZi90dUxMcmtuY3dSK0pnUldQQWNscjh0OU1tYQpRU3BLQWJmd1JuUzFDM29FMHorcFdLUXhWWG5aWHNVQzYyZW5jc3F0di9oS1h1VDB2Y3craFY1eXRIRHBzZEVTClRFVUZSeFc2c2YzcC9ma2tWRnJremhJY3MvVGNLMFAzV3dsUEZteXh4YjZ6QnFCWUxXUjZDYkxGV1BOM2ZSNXIKN1E5SVZHbzZYcDVFOE9PN2RoejRsbWpoUEpPUDNJbHNjS2k0azFza25maGxqdkVhYU9OOTU2REtLZitET2RibgoyR0xkaHhMbS9QOEU4ZmNabnVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDZzBmSnoxbWRtNFJDdEtDV0Z0cnZscnNUdkVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREFGQnpkZllueC9PTHp2UFZzUApEbU5PU0YvWVZkazB6elhPcnFkcjJaeFppUytoMVUxR2hZb3FFbTJqUG9ienBkNnkyTE4rY1EyTlJkdVFQN0Y4ClVXM1hIUUVNbCtTakhMSzZmUTkrNDB5NVJ0TU8vVURpOVl3QTZWd2RSMlpITWx2V0UwZlpYaWw3ajVlWGNVaTQKd3luN2ZmSkVDejdUYjMyVzh1MWFOU0Evc0MyV0ZqMzJnSFR2WlZCMnU0S1JDUzR3MzJUN0lXUC9Wd3lrQlZmMQpLQmZvdDQ5aWpRdVpNRSt0c2pwQVo1Z3UzMCtEd09DSGhmcVFrU2JodFQ0OXY4cEdqWSsxdHVoQ0JHSkwrVjl1Cnl6QXZ0cnI3ZEVnVnpNV2tpMzQ4bWg2UHV5WmFiQ1lReE1XMkEwWEtsRVZSTEw2OFFrT2F4Zk0xcS9FVHRTZUQKd3FJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://21ADA50B71448C1056490BD03957CE68.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1beta1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-9-eks-cluster-eksCluster-d890a2b",
                                            "--role",
                                            "arn:aws:iam::447769723736:role/admin"
                                        ],
                                        "command": "aws",
                                        "env": [
                                            {
                                                "name": "KUBERNETES_EXEC_INFO",
                                                "value": "{\"apiVersion\": \"client.authentication.k8s.io/v1beta1\"}"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.21.2"
                },
                "outputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREl6TVRrek1sb1hEVE15TURZeE56SXpNVGt6TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNmCkNqN3NBWlBsYlYvb3hqdnkwRVdpZzRmemFqOVo4UjBKVUk0Vm9jWk8xQTNmMmRBUzFlZm1FTDN4ai9uNGd4RlYKWXNycWRXQUE2ZUNGZm9BYWJhT1hFU1RXOHFZdERGSjFCbWZIZi90dUxMcmtuY3dSK0pnUldQQWNscjh0OU1tYQpRU3BLQWJmd1JuUzFDM29FMHorcFdLUXhWWG5aWHNVQzYyZW5jc3F0di9oS1h1VDB2Y3craFY1eXRIRHBzZEVTClRFVUZSeFc2c2YzcC9ma2tWRnJremhJY3MvVGNLMFAzV3dsUEZteXh4YjZ6QnFCWUxXUjZDYkxGV1BOM2ZSNXIKN1E5SVZHbzZYcDVFOE9PN2RoejRsbWpoUEpPUDNJbHNjS2k0azFza25maGxqdkVhYU9OOTU2REtLZitET2RibgoyR0xkaHhMbS9QOEU4ZmNabnVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDZzBmSnoxbWRtNFJDdEtDV0Z0cnZscnNUdkVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREFGQnpkZllueC9PTHp2UFZzUApEbU5PU0YvWVZkazB6elhPcnFkcjJaeFppUytoMVUxR2hZb3FFbTJqUG9ienBkNnkyTE4rY1EyTlJkdVFQN0Y4ClVXM1hIUUVNbCtTakhMSzZmUTkrNDB5NVJ0TU8vVURpOVl3QTZWd2RSMlpITWx2V0UwZlpYaWw3ajVlWGNVaTQKd3luN2ZmSkVDejdUYjMyVzh1MWFOU0Evc0MyV0ZqMzJnSFR2WlZCMnU0S1JDUzR3MzJUN0lXUC9Wd3lrQlZmMQpLQmZvdDQ5aWpRdVpNRSt0c2pwQVo1Z3UzMCtEd09DSGhmcVFrU2JodFQ0OXY4cEdqWSsxdHVoQ0JHSkwrVjl1Cnl6QXZ0cnI3ZEVnVnpNV2tpMzQ4bWg2UHV5WmFiQ1lReE1XMkEwWEtsRVZSTEw2OFFrT2F4Zk0xcS9FVHRTZUQKd3FJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://21ADA50B71448C1056490BD03957CE68.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1beta1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-9-eks-cluster-eksCluster-d890a2b",
                                            "--role",
                                            "arn:aws:iam::447769723736:role/admin"
                                        ],
                                        "command": "aws",
                                        "env": [
                                            {
                                                "name": "KUBERNETES_EXEC_INFO",
                                                "value": "{\"apiVersion\": \"client.authentication.k8s.io/v1beta1\"}"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.21.2"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-9-redis-allow-eks",
                "custom": true,
                "id": "sgrule-2021886399",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-090af44dbb5698a19",
                    "sourceSecurityGroupId": "sg-05ea7c54b3f21042d",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "fromPort": 0,
                    "id": "sgrule-2021886399",
                    "protocol": "tcp",
                    "securityGroupId": "sg-090af44dbb5698a19",
                    "self": false,
                    "sourceSecurityGroupId": "sg-05ea7c54b3f21042d",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-redis-sg",
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::redis-aws-provider::b7af432d-e04a-45a6-8f20-442c18068c79",
                "propertyDependencies": {
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-redis-sg"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-otel-instance",
                "custom": true,
                "id": "p-9-eks-cluster-instanceRole-role-33db0f5-20220620232429327000000002",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::447769723736:policy/p-9-AWSDistroOpenTelemetryPolicy-20220620231316632900000001",
                    "role": "p-9-eks-cluster-instanceRole-role-33db0f5"
                },
                "outputs": {
                    "id": "p-9-eks-cluster-instanceRole-role-33db0f5-20220620232429327000000002",
                    "policyArn": "arn:aws:iam::447769723736:policy/p-9-AWSDistroOpenTelemetryPolicy-20220620231316632900000001",
                    "role": "p-9-eks-cluster-instanceRole-role-33db0f5"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:iam/policy:Policy::p-9-otel-collector-policy",
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::tele-aws-provider::d5512428-3d17-461f-815e-b9bf3fba8a86",
                "propertyDependencies": {
                    "policyArn": [
                        "urn:pulumi:plane-9::launchpad::aws:iam/policy:Policy::p-9-otel-collector-policy"
                    ],
                    "role": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-9-ec-allow-eks",
                "custom": true,
                "id": "sgrule-3311743557",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-077d904ac75abc34b",
                    "sourceSecurityGroupId": "sg-05ea7c54b3f21042d",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "fromPort": 0,
                    "id": "sgrule-3311743557",
                    "protocol": "tcp",
                    "securityGroupId": "sg-077d904ac75abc34b",
                    "self": false,
                    "sourceSecurityGroupId": "sg-05ea7c54b3f21042d",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-cache-sg",
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::cache-aws-provider::23c78f3d-33b3-4dbf-bfa4-703c4a31c829",
                "propertyDependencies": {
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::p-9-cache-sg"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-9-msk-allow-eks",
                "custom": true,
                "id": "sgrule-2186979109",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-0071525aa9b12294d",
                    "sourceSecurityGroupId": "sg-05ea7c54b3f21042d",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "fromPort": 0,
                    "id": "sgrule-2186979109",
                    "protocol": "tcp",
                    "securityGroupId": "sg-0071525aa9b12294d",
                    "self": false,
                    "sourceSecurityGroupId": "sg-05ea7c54b3f21042d",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::msk-sg",
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::msk-aws-provider::1d9a65d6-5edf-4963-8c93-de1207911f37",
                "propertyDependencies": {
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::msk-sg"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::prom-k8s-provider",
                "custom": true,
                "id": "a7446334-91d9-4344-a06a-5a991a884d03",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREl6TVRrek1sb1hEVE15TURZeE56SXpNVGt6TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNmCkNqN3NBWlBsYlYvb3hqdnkwRVdpZzRmemFqOVo4UjBKVUk0Vm9jWk8xQTNmMmRBUzFlZm1FTDN4ai9uNGd4RlYKWXNycWRXQUE2ZUNGZm9BYWJhT1hFU1RXOHFZdERGSjFCbWZIZi90dUxMcmtuY3dSK0pnUldQQWNscjh0OU1tYQpRU3BLQWJmd1JuUzFDM29FMHorcFdLUXhWWG5aWHNVQzYyZW5jc3F0di9oS1h1VDB2Y3craFY1eXRIRHBzZEVTClRFVUZSeFc2c2YzcC9ma2tWRnJremhJY3MvVGNLMFAzV3dsUEZteXh4YjZ6QnFCWUxXUjZDYkxGV1BOM2ZSNXIKN1E5SVZHbzZYcDVFOE9PN2RoejRsbWpoUEpPUDNJbHNjS2k0azFza25maGxqdkVhYU9OOTU2REtLZitET2RibgoyR0xkaHhMbS9QOEU4ZmNabnVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDZzBmSnoxbWRtNFJDdEtDV0Z0cnZscnNUdkVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREFGQnpkZllueC9PTHp2UFZzUApEbU5PU0YvWVZkazB6elhPcnFkcjJaeFppUytoMVUxR2hZb3FFbTJqUG9ienBkNnkyTE4rY1EyTlJkdVFQN0Y4ClVXM1hIUUVNbCtTakhMSzZmUTkrNDB5NVJ0TU8vVURpOVl3QTZWd2RSMlpITWx2V0UwZlpYaWw3ajVlWGNVaTQKd3luN2ZmSkVDejdUYjMyVzh1MWFOU0Evc0MyV0ZqMzJnSFR2WlZCMnU0S1JDUzR3MzJUN0lXUC9Wd3lrQlZmMQpLQmZvdDQ5aWpRdVpNRSt0c2pwQVo1Z3UzMCtEd09DSGhmcVFrU2JodFQ0OXY4cEdqWSsxdHVoQ0JHSkwrVjl1Cnl6QXZ0cnI3ZEVnVnpNV2tpMzQ4bWg2UHV5WmFiQ1lReE1XMkEwWEtsRVZSTEw2OFFrT2F4Zk0xcS9FVHRTZUQKd3FJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://21ADA50B71448C1056490BD03957CE68.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1beta1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-9-eks-cluster-eksCluster-d890a2b",
                                            "--role",
                                            "arn:aws:iam::447769723736:role/admin"
                                        ],
                                        "command": "aws",
                                        "env": [
                                            {
                                                "name": "KUBERNETES_EXEC_INFO",
                                                "value": "{\"apiVersion\": \"client.authentication.k8s.io/v1beta1\"}"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.21.2"
                },
                "outputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREl6TVRrek1sb1hEVE15TURZeE56SXpNVGt6TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNmCkNqN3NBWlBsYlYvb3hqdnkwRVdpZzRmemFqOVo4UjBKVUk0Vm9jWk8xQTNmMmRBUzFlZm1FTDN4ai9uNGd4RlYKWXNycWRXQUE2ZUNGZm9BYWJhT1hFU1RXOHFZdERGSjFCbWZIZi90dUxMcmtuY3dSK0pnUldQQWNscjh0OU1tYQpRU3BLQWJmd1JuUzFDM29FMHorcFdLUXhWWG5aWHNVQzYyZW5jc3F0di9oS1h1VDB2Y3craFY1eXRIRHBzZEVTClRFVUZSeFc2c2YzcC9ma2tWRnJremhJY3MvVGNLMFAzV3dsUEZteXh4YjZ6QnFCWUxXUjZDYkxGV1BOM2ZSNXIKN1E5SVZHbzZYcDVFOE9PN2RoejRsbWpoUEpPUDNJbHNjS2k0azFza25maGxqdkVhYU9OOTU2REtLZitET2RibgoyR0xkaHhMbS9QOEU4ZmNabnVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDZzBmSnoxbWRtNFJDdEtDV0Z0cnZscnNUdkVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREFGQnpkZllueC9PTHp2UFZzUApEbU5PU0YvWVZkazB6elhPcnFkcjJaeFppUytoMVUxR2hZb3FFbTJqUG9ienBkNnkyTE4rY1EyTlJkdVFQN0Y4ClVXM1hIUUVNbCtTakhMSzZmUTkrNDB5NVJ0TU8vVURpOVl3QTZWd2RSMlpITWx2V0UwZlpYaWw3ajVlWGNVaTQKd3luN2ZmSkVDejdUYjMyVzh1MWFOU0Evc0MyV0ZqMzJnSFR2WlZCMnU0S1JDUzR3MzJUN0lXUC9Wd3lrQlZmMQpLQmZvdDQ5aWpRdVpNRSt0c2pwQVo1Z3UzMCtEd09DSGhmcVFrU2JodFQ0OXY4cEdqWSsxdHVoQ0JHSkwrVjl1Cnl6QXZ0cnI3ZEVnVnpNV2tpMzQ4bWg2UHV5WmFiQ1lReE1XMkEwWEtsRVZSTEw2OFFrT2F4Zk0xcS9FVHRTZUQKd3FJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://21ADA50B71448C1056490BD03957CE68.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1beta1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-9-eks-cluster-eksCluster-d890a2b",
                                            "--role",
                                            "arn:aws:iam::447769723736:role/admin"
                                        ],
                                        "command": "aws",
                                        "env": [
                                            {
                                                "name": "KUBERNETES_EXEC_INFO",
                                                "value": "{\"apiVersion\": \"client.authentication.k8s.io/v1beta1\"}"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.21.2"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::strimzi-k8s-provider",
                "custom": true,
                "id": "38ca7f66-2516-4e64-a324-b1e09443488c",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREl6TVRrek1sb1hEVE15TURZeE56SXpNVGt6TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNmCkNqN3NBWlBsYlYvb3hqdnkwRVdpZzRmemFqOVo4UjBKVUk0Vm9jWk8xQTNmMmRBUzFlZm1FTDN4ai9uNGd4RlYKWXNycWRXQUE2ZUNGZm9BYWJhT1hFU1RXOHFZdERGSjFCbWZIZi90dUxMcmtuY3dSK0pnUldQQWNscjh0OU1tYQpRU3BLQWJmd1JuUzFDM29FMHorcFdLUXhWWG5aWHNVQzYyZW5jc3F0di9oS1h1VDB2Y3craFY1eXRIRHBzZEVTClRFVUZSeFc2c2YzcC9ma2tWRnJremhJY3MvVGNLMFAzV3dsUEZteXh4YjZ6QnFCWUxXUjZDYkxGV1BOM2ZSNXIKN1E5SVZHbzZYcDVFOE9PN2RoejRsbWpoUEpPUDNJbHNjS2k0azFza25maGxqdkVhYU9OOTU2REtLZitET2RibgoyR0xkaHhMbS9QOEU4ZmNabnVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDZzBmSnoxbWRtNFJDdEtDV0Z0cnZscnNUdkVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREFGQnpkZllueC9PTHp2UFZzUApEbU5PU0YvWVZkazB6elhPcnFkcjJaeFppUytoMVUxR2hZb3FFbTJqUG9ienBkNnkyTE4rY1EyTlJkdVFQN0Y4ClVXM1hIUUVNbCtTakhMSzZmUTkrNDB5NVJ0TU8vVURpOVl3QTZWd2RSMlpITWx2V0UwZlpYaWw3ajVlWGNVaTQKd3luN2ZmSkVDejdUYjMyVzh1MWFOU0Evc0MyV0ZqMzJnSFR2WlZCMnU0S1JDUzR3MzJUN0lXUC9Wd3lrQlZmMQpLQmZvdDQ5aWpRdVpNRSt0c2pwQVo1Z3UzMCtEd09DSGhmcVFrU2JodFQ0OXY4cEdqWSsxdHVoQ0JHSkwrVjl1Cnl6QXZ0cnI3ZEVnVnpNV2tpMzQ4bWg2UHV5WmFiQ1lReE1XMkEwWEtsRVZSTEw2OFFrT2F4Zk0xcS9FVHRTZUQKd3FJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://21ADA50B71448C1056490BD03957CE68.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1beta1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-9-eks-cluster-eksCluster-d890a2b",
                                            "--role",
                                            "arn:aws:iam::447769723736:role/admin"
                                        ],
                                        "command": "aws",
                                        "env": [
                                            {
                                                "name": "KUBERNETES_EXEC_INFO",
                                                "value": "{\"apiVersion\": \"client.authentication.k8s.io/v1beta1\"}"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.21.2"
                },
                "outputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUMvakNDQWVhZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EWXlNREl6TVRrek1sb1hEVE15TURZeE56SXpNVGt6TWxvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDNmCkNqN3NBWlBsYlYvb3hqdnkwRVdpZzRmemFqOVo4UjBKVUk0Vm9jWk8xQTNmMmRBUzFlZm1FTDN4ai9uNGd4RlYKWXNycWRXQUE2ZUNGZm9BYWJhT1hFU1RXOHFZdERGSjFCbWZIZi90dUxMcmtuY3dSK0pnUldQQWNscjh0OU1tYQpRU3BLQWJmd1JuUzFDM29FMHorcFdLUXhWWG5aWHNVQzYyZW5jc3F0di9oS1h1VDB2Y3craFY1eXRIRHBzZEVTClRFVUZSeFc2c2YzcC9ma2tWRnJremhJY3MvVGNLMFAzV3dsUEZteXh4YjZ6QnFCWUxXUjZDYkxGV1BOM2ZSNXIKN1E5SVZHbzZYcDVFOE9PN2RoejRsbWpoUEpPUDNJbHNjS2k0azFza25maGxqdkVhYU9OOTU2REtLZitET2RibgoyR0xkaHhMbS9QOEU4ZmNabnVzQ0F3RUFBYU5aTUZjd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZDZzBmSnoxbWRtNFJDdEtDV0Z0cnZscnNUdkVNQlVHQTFVZEVRUU8KTUF5Q0NtdDFZbVZ5Ym1WMFpYTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBREFGQnpkZllueC9PTHp2UFZzUApEbU5PU0YvWVZkazB6elhPcnFkcjJaeFppUytoMVUxR2hZb3FFbTJqUG9ienBkNnkyTE4rY1EyTlJkdVFQN0Y4ClVXM1hIUUVNbCtTakhMSzZmUTkrNDB5NVJ0TU8vVURpOVl3QTZWd2RSMlpITWx2V0UwZlpYaWw3ajVlWGNVaTQKd3luN2ZmSkVDejdUYjMyVzh1MWFOU0Evc0MyV0ZqMzJnSFR2WlZCMnU0S1JDUzR3MzJUN0lXUC9Wd3lrQlZmMQpLQmZvdDQ5aWpRdVpNRSt0c2pwQVo1Z3UzMCtEd09DSGhmcVFrU2JodFQ0OXY4cEdqWSsxdHVoQ0JHSkwrVjl1Cnl6QXZ0cnI3ZEVnVnpNV2tpMzQ4bWg2UHV5WmFiQ1lReE1XMkEwWEtsRVZSTEw2OFFrT2F4Zk0xcS9FVHRTZUQKd3FJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://21ADA50B71448C1056490BD03957CE68.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1beta1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-9-eks-cluster-eksCluster-d890a2b",
                                            "--role",
                                            "arn:aws:iam::447769723736:role/admin"
                                        ],
                                        "command": "aws",
                                        "env": [
                                            {
                                                "name": "KUBERNETES_EXEC_INFO",
                                                "value": "{\"apiVersion\": \"client.authentication.k8s.io/v1beta1\"}"
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.21.2"
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::ebs-csi-driver",
                "custom": true,
                "id": "kube-system/ebs-csi-driver-2k41fd6g",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "aws-ebs-csi-driver",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "ebs-csi-driver-2k41fd6g",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes-sigs.github.io/aws-ebs-csi-driver/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "CSIDriver.storage.k8s.io/storage.k8s.io/v1": [
                            "ebs.csi.aws.com"
                        ],
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "ebs-csi-node-role",
                            "ebs-external-attacher-role",
                            "ebs-external-provisioner-role",
                            "ebs-external-resizer-role",
                            "ebs-external-snapshotter-role"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "ebs-csi-attacher-binding",
                            "ebs-csi-node-getter-binding",
                            "ebs-csi-provisioner-binding",
                            "ebs-csi-resizer-binding",
                            "ebs-csi-snapshotter-binding"
                        ],
                        "DaemonSet.apps/apps/v1": [
                            "kube-system/ebs-csi-node"
                        ],
                        "Deployment.apps/apps/v1": [
                            "kube-system/ebs-csi-controller"
                        ],
                        "PodDisruptionBudget.policy/policy/v1": [
                            "kube-system/ebs-csi-controller"
                        ],
                        "ServiceAccount/v1": [
                            "kube-system/ebs-csi-node-sa"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "controller": {
                            "nodeSelector": {
                                "eks.amazonaws.com/capacityType": "ON_DEMAND"
                            },
                            "serviceAccount": {
                                "create": false,
                                "name": "ebs-csi-controller-sa"
                            }
                        },
                        "node": {
                            "nodeSelector": {
                                "eks.amazonaws.com/capacityType": "ON_DEMAND"
                            }
                        }
                    },
                    "verify": false,
                    "version": "v2.8.1",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABALeMpnntFDKdXll8jBM0W7jIqH5AQ1UQwJXqFW5AvF36mfwYU739NotR/xICsIiKJtKso5tyj4PT7E5smij4WbF+jghK5BoHI5MinDac+knmddz567FGxKZ1wss6R2i34JGb5pX2xcBWeKKca5Z3UDtaREmHXr/rC2N6BC/CwHN5AjX6Ruz4iDQSmEUK8Pblrmupm2KOWRLNJmqxlUuL6Z7AZvxhNyF4IiV5ZSiXb11nfMgm+t0goXKhZjSp8f/EK+wy6Y0q6Ri4XJRJQhNbVJmlVUD2sjfssMaRQkJuvpgc9uAlkW9bQJ/rpA7S/9h4sSYQWSb+hIJb+ONrwksnbWNoP8B3iGm2SztxALm7QPdAg10mSI775cWpfL/hHXtyG0CA2x0LPmY7Q49Aw7tOS2O5V6Jk9n+u2NR9l9nKfBm4cztnI4H3m7LbNCo+HSxw2XQw/tAsq9w1cnTDYvdISS0iCWd3mCBVXC+LL0G6DaQ83fqviNxmroYnkAOhLV7/lMD2RK+tap8cEM7d2NGMpRYS3v0FTzkVLM34CTGntgAQte9iXgGmQyPGFMswkvEhFWd+DuQuGenwKmN5bfV50WdrsPpl2AnvhUCJVrgIA6R/a3S8D3S5Fr/dV9omqNux1atdNuPv8MrWi0dtvIm+yu51fxvvPHhO/VcShwecCe3AS0pWr+sjCo/intf9/wZth2fCi+otoayJNCAodd+hy0ocAIoU99XCi95agMFPW2IILqQR+rxPj40YfmsFvCPb4tD/ulAWCBPeszurChWIxADK1vwaGKDYByf2EuVh+8EOOmMhptSaOAJKvaERnVAoN1hZwVUx4rQ4+iMeKEAzgvoWDzRQqyOnC2IBkq3Wx5AI23UJzkNPNb0yEwE2ZlaLAxcTzlGrI28G6AvsBPHBjZpW7nI+Tc1gTOqU2A6WqmgIEyOAZxSeLBATUkh8vfs+3/EF10Zz7E27Ly1IXMbzTN5YskRThLXY8VUXraPnhs/v1g7xv3m2Uu0EpQ9h77pskmoz6VibdyOTT+nqdVkTfaFzgd9KA1LE9JyZAmq7NZlu4ArKb1LuZsuoJx73AhdPeMYAocrMBK7vSpCRTJ0WhyUKKcfPVM331EOLG339Xu6Nn8j0SctKHGMNc4Z4HdUSNyktaNYsZuHP+lNCg2/Bo9SwRMqxSsv3/QlC7F2MWpDfi3qdBfnJFSkBrGPjREr48L+XE3WOSgPRad+NyMgUQW8Bgy8MFh3c91TwCjuj9fU+HOnBmfdwxzV2OF1KQIt459OUWKlgEnK4lzDjL7IU8b6TJIZFG6jC+4RrZyjOL3hndLQyAoomxZNeEmXRCwgjiHTqVrLPZoyTRGswF/DMYICpw4/lmAdihmXEhpxFpE24vnkw/9u/0ASff/3rtNrh0+NqTBiAvvdxO2FWsFMFKKuV4kYiseoy1/cP/oK0VPWun9YpxpGKx5BitUOfZYA/2VBfWG0T2pZeRV+r8MTMIQNhKlu2quRjBP78+l7x8ADmoUxJEFhhVDxIaHhE9uo0X6i4JbnmXyOKKetG6m9QPNL0m7ID3Fr0vecbFuOWkuW9mhb8n1AfqLWvdzAhohL+tjxOepxQ8yb52Oww7Z9EGzY4YbjjFNGEctsSKmctrbyTYJ6bXnguNs0pPQBXPORvPIvFGSlw3yVT2dzc6hbQ236wdZyh0zrAqQ7/EfR8sRErmLugEV6W3WXSUKZ0kB1pKMrC5hsH3nFXAZSIl8BpH23U2SguzOF4X9Cb0RWAxFtIQmVKXx+ZQwesw7IwFLD/guTw/Q1tsH1mg8dZL2Sgb05D+ezdrtEPBIGpiinFImnMblsq/RjhG+dUnniunPqnEvNE2NT7PF+lgHJ6A3aRqbrroa64il7rXBKno5bVBnFkVBPco7nexNEHC6Aq85l0fbS29TEiAIsiuadNfNQgt4leph91NJOVLOC/9hFLq3YiK0yFt6j8gy4fzkxN5GoWezbbeWQYVKb2K1RpHTevc4tjg7REfNkpWwWAUBSYTSrV+bvf/q/lqAiSWC6r1qvnz2/IPrIae62TbjEItX0UVaniFMO51mWqU3fJEJ16Q1G+NmLqD7kzVg341ea/I0gbPMaeeKrAo1BnL5VxID35qDxi8GU5ZMiSnLmJpdzMQBLUYFzYh3w40+GzbSjlNUIWLaeRTC7jwEXz+dtRgQTebvReWeXHM3Jc0m21izo4ZwEg5yeYwcCgnqBXNpxTUe//KLz7MVcOcBatc3MLKuP/Np06bB1TlwN9Ee28RS7akNbmZOZZ"
                    },
                    "atomic": false,
                    "chart": "aws-ebs-csi-driver",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "ebs-csi-driver-2k41fd6g",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes-sigs.github.io/aws-ebs-csi-driver/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "CSIDriver.storage.k8s.io/storage.k8s.io/v1": [
                            "ebs.csi.aws.com"
                        ],
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "ebs-csi-node-role",
                            "ebs-external-attacher-role",
                            "ebs-external-provisioner-role",
                            "ebs-external-resizer-role",
                            "ebs-external-snapshotter-role"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "ebs-csi-attacher-binding",
                            "ebs-csi-node-getter-binding",
                            "ebs-csi-provisioner-binding",
                            "ebs-csi-resizer-binding",
                            "ebs-csi-snapshotter-binding"
                        ],
                        "DaemonSet.apps/apps/v1": [
                            "kube-system/ebs-csi-node"
                        ],
                        "Deployment.apps/apps/v1": [
                            "kube-system/ebs-csi-controller"
                        ],
                        "PodDisruptionBudget.policy/policy/v1": [
                            "kube-system/ebs-csi-controller"
                        ],
                        "ServiceAccount/v1": [
                            "kube-system/ebs-csi-node-sa"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "1.9.0",
                        "chart": "aws-ebs-csi-driver",
                        "name": "ebs-csi-driver-2k41fd6g",
                        "namespace": "kube-system",
                        "revision": 3,
                        "status": "deployed",
                        "version": "2.8.1"
                    },
                    "timeout": 300,
                    "values": {
                        "controller": {
                            "nodeSelector": {
                                "eks.amazonaws.com/capacityType": "ON_DEMAND"
                            },
                            "serviceAccount": {
                                "create": false,
                                "name": "ebs-csi-controller-sa"
                            }
                        },
                        "node": {
                            "nodeSelector": {
                                "eks.amazonaws.com/capacityType": "ON_DEMAND"
                            }
                        }
                    },
                    "verify": false,
                    "version": "2.8.1",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-attach-ebs-policy"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "namespace": null,
                    "repositoryOpts": null,
                    "values": null,
                    "version": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc",
                "custom": true,
                "id": "kube-system/aws-lbc-hytm3j79",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "aws-load-balancer-controller",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "aws-lbc-hytm3j79",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://aws.github.io/eks-charts",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "aws-lbc-hytm3j79-aws-load-balancer-controller-role"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "aws-lbc-hytm3j79-aws-load-balancer-controller-rolebinding"
                        ],
                        "CustomResourceDefinition.apiextensions.k8s.io/apiextensions.k8s.io/v1": [
                            "ingressclassparams.elbv2.k8s.aws",
                            "targetgroupbindings.elbv2.k8s.aws"
                        ],
                        "Deployment.apps/apps/v1": [
                            "kube-system/aws-lbc-hytm3j79-aws-load-balancer-controller"
                        ],
                        "List/v1": [
                            "ingress-class"
                        ],
                        "MutatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "aws-load-balancer-webhook"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/aws-lbc-hytm3j79-aws-load-balancer-controller-leader-election-role"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/aws-lbc-hytm3j79-aws-load-balancer-controller-leader-election-rolebinding"
                        ],
                        "Secret/v1": [
                            "kube-system/aws-load-balancer-tls"
                        ],
                        "Service/v1": [
                            "kube-system/aws-load-balancer-webhook-service"
                        ],
                        "ValidatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "aws-load-balancer-webhook"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "clusterName": "p-9-eks-cluster-eksCluster-d890a2b",
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND"
                        },
                        "serviceAccount": {
                            "create": false,
                            "name": "aws-load-balancer-controller"
                        }
                    },
                    "verify": false,
                    "version": "",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAGXoFRjS8mGsI2xezVncDWPdE/guGl1faM3o0goUPS23CqW2k27f0UNw/qd2PQodBiaxQtWY9/7fbvxiO2OsXu7uYCkqgNMs1HULvSllb6tErXDEErGSjYx6OY9Exa0TsIjfc4GTyZDDjE8IUUr5rZhuYbVa/kKV3KRhiYm5ZhCS4luqcDVILeKeMGSsnTLTUVRzIIGHuS7MIuhGh5K8eWD+eRtaw3qAxjplR3hcwzZSV2pfyvSMpXSsq+BNmxiUD+JudBGmcQd3ZA1KKzEdW75OeMxgXqSknb4DGmvzXFzsSVG8oLX1/tGTFAhEKua5klC0sDXICRl2lTy8QlULVR5fKChfCE4vgBKONm3g0x+1XRZoJcN7ueoL33wzWiRwv8tQaihrGilQK4kynmwESQXYJHcoOnGdFOgFG628Gvf5Kb/4MeOQWTl7GJJlnlHlB9EjlbGW0MSRhIDt5aC2Q5eDF9T7ufV6XqUklWWKOhicK8EJ+Aw9qFYp96QZPwYkGW7Xegf2urf7HuBTotyCkP85CNAQubQT0cc4/hGZ6+kpNjYUhhGznsApNGwrCvF5maw5B+mw6GxtDjNivAAh1l7s4MuZ5IY3Yr6gw/uCURLid2Ba8Ll4UMStYEMCY99bFIN9LLE5UWt6XLcYUyk3629W3drw6trChM4KEXyqYh+qD04gDltY2cmLfA1vgSwROpa5RdQ94aU3Eje9D/xChQint3UAKfrs9o+OwON0hijg6F0QDUSu2dQ5BwtPGwZ43JFmUDJPhTwy3lJN6/RuwcNtmcPYoTbc6mKVO/iYUTGwpyAyUdaQyH/vW+3lKrYvq8oiJ46Z4m7Xxy5dVJ0AEUD4bXxpnWz20logt6jl9VlgEm2k8KbggEd0yT06r0MEb34UrCfn8zZ3176He0NzA0+nG19BGULWI54EIqkwuQUMntGbeKgC0xQ981ECin/gLlReZRxiB6kI0MMHFHwf4cFC0Kr/Gwthn0YNSxdUbeSUF2J9aw89v2FnFAvZZb+BIlGOQ3QkuG7L9DO/TddXlztPp/M+nDd39X9kYfkXvQuuUhoyW07WfDLwG6BdzyK5ERbEaadbpgRtFhy3iBXpFx7Mp7zqR9FDJ3GSeFJ4XHvV/wJ4Bfgxufew1Mk91w+AU8sLxFryb75tGNvY5H5r9euEtLY17MdpldFT5U/7GDRDMUhG79bgGJDZCHGScqPhVOrm+2+j6N+qKhum8kb0bTJrO+Te9EW1zsOmo/wIFEeGvBqOaadtP4joPJdQuYMqMO3rdUHmVirwGzW16DW5FI4znMIu5ZC+Mvi5gUKIjGPJQiIJlkDF3pGUe4u8/UHqBqkoC8aLG4qtF6sC2G7DGQzuc5VFs0iWPx2Qnu0Yd2bKQpkshijA4St6mpX6G0sVgt48RJBe2BYWV5N66TqhzVEExRLHV/g7BDH+CEGYHRo3jz4q48O6WnAB9MnbVNvZhHiNMje4ZzM0vSEsY4cyXawRqt8cmo90753+Trr9yvDDCkoOQBltLarXwVqjFmnOuIShma3gyEuyjyK9shdYy3tIxCN4ATF7EVRkc/axmCXD4FU5Ui63F5wBdOuDUPjShhOdtphngcOQFfE4tSQ9RsFjdIyHMUyyZxpfdE8yzwXpL9w4reM74rie/pnUG24aood2fEEJFas5ivPZo1I4kiPmrOpCnogzmziaQ73jSjuyb8QnypCROFysddFvp/SwPI2u8jCl5yrGXjPAjJDFWeYHmiE46bNlOgTm03xpwAvhdMMljO3D/PTezEhSZKuSgEfX+tRUJwpxGl6EGyHMKD897yS9wQFot3YI370qKHZuwy1MQeL1N5lRZ9DF66bjMBuXIm5zynGOXkWtzljm0oHCspwQ/00Ko/uUB+vzZwFwMeo34k++IM5tj35VSs3g0HvB4e+qH0B2rm0dW5Tp7Z1Y2IJoYxRKcRyxH3VCOZnJrcsPjO3zu5IV4lgF56f6ZWQ9R4TUTDQPq46Py28OyOs5MQRcbZ5Qg+rfZA28N3QzY0wHOj88fU6r/DdwSg0L+9wu4vaBLul3VnN34qWnjWuBhtozrsi0CecwxhNl/MC3lMJQlX4VJCUXQPg0oiYtjtvwj7h59d42ciXGpVwAGHDpfya2hxdsnDxcNRCYNuuitxWM/Hf3HXEjMRjSSd2m7FT7AM8d2npRbniUwsKnErf92YPlUWhOR7If4IlMbnQQzXMf+3KU53nqiFuGrDQLWTD4Ymm0y2lLaTBclEwW4ptBErXdjkJZ8nM/WCQ6mgy5Alsyl5c24xc+zbAyIhuLP1EFTxd+/0BDe0lm7I56Icl5KJ0HTJJmdVF24TF2ogpCF+mLK0uiwhP85zhsSUqXNOy+PrpufMEqBZfSSH7O2uGI3CspKZCguR9P0vpqu8W17J/W7d440Ikl5TyU4nM3VTEF8PXls17LCAJnUXC3J7RkZPEpkH2oI4oWnmcXqgQeMv9No7ynEMwDSFuqK4NG1xWYgrnlBfzXunfNNsu0+WCl9Cd1hFGWr5xSd7kJNBtafz3CevAroTvQeu7Ba2oSz5pb5fbDiC1p2Mhhl0CBd2X1eozRjZEl4rm4UNwj2dC6Y1EVDZsVVK7LiLPo6vmZyudG43wWTbxtqEkW2sAiaLVN08Q4qv6DyH/LRxDSQGBneiT3C5Ceg1XnwRMrvv6AVTRiOkAmb7S3jS1BVtGSiV+UsHylalV7WrY2W9WAuBx5iHDJMNLOV0vx7VtLsWv9b0zuhb0cd/qM4/XcH3pTiK8BvTCBInlO1sYzD++O59Y0Jj8dgkO+exCMP5+NEu4="
                    },
                    "atomic": false,
                    "chart": "aws-load-balancer-controller",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "aws-lbc-hytm3j79",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://aws.github.io/eks-charts",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "aws-lbc-hytm3j79-aws-load-balancer-controller-role"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "aws-lbc-hytm3j79-aws-load-balancer-controller-rolebinding"
                        ],
                        "Deployment.apps/apps/v1": [
                            "kube-system/aws-lbc-hytm3j79-aws-load-balancer-controller"
                        ],
                        "List/v1": [
                            "ingress-class"
                        ],
                        "MutatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "aws-load-balancer-webhook"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/aws-lbc-hytm3j79-aws-load-balancer-controller-leader-election-role"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/aws-lbc-hytm3j79-aws-load-balancer-controller-leader-election-rolebinding"
                        ],
                        "Secret/v1": [
                            "kube-system/aws-load-balancer-tls"
                        ],
                        "Service/v1": [
                            "kube-system/aws-load-balancer-webhook-service"
                        ],
                        "ValidatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "aws-load-balancer-webhook"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "v2.4.2",
                        "chart": "aws-load-balancer-controller",
                        "name": "aws-lbc-hytm3j79",
                        "namespace": "kube-system",
                        "revision": 3,
                        "status": "deployed",
                        "version": "1.4.3"
                    },
                    "timeout": 300,
                    "values": {
                        "clusterName": "p-9-eks-cluster-eksCluster-d890a2b",
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND"
                        },
                        "serviceAccount": {
                            "create": false,
                            "name": "aws-load-balancer-controller"
                        }
                    },
                    "verify": false,
                    "version": "1.4.3",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-attach-lbc-policy",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "namespace": null,
                    "repositoryOpts": null,
                    "values": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:core/v1:Namespace::cloudwatch-ns",
                "custom": true,
                "id": "amazon-cloudwatch",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "name": "amazon-cloudwatch"
                        },
                        "name": "amazon-cloudwatch"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "name": "amazon-cloudwatch"
                            },
                            "name": "amazon-cloudwatch"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"name\":\"amazon-cloudwatch\"},\"name\":\"amazon-cloudwatch\"}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:24:32Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "amazon-cloudwatch",
                            "name": "amazon-cloudwatch"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:kubernetes.io/metadata.name": {},
                                            "f:name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:32Z"
                            }
                        ],
                        "name": "amazon-cloudwatch",
                        "resourceVersion": "1156",
                        "uid": "8d251c95-65be-425c-9f2e-dbc7dad68637"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::23764612-7965-42f4-9ad1-ff50b151cf26",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:Namespace::otel-eks",
                "custom": true,
                "id": "otel-eks",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "name": "otel-eks"
                        },
                        "name": "otel-eks"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "name": "otel-eks"
                            },
                            "name": "otel-eks"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"name\":\"otel-eks\"},\"name\":\"otel-eks\"}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:24:32Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "otel-eks",
                            "name": "otel-eks"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:kubernetes.io/metadata.name": {},
                                            "f:name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:32Z"
                            }
                        ],
                        "name": "otel-eks",
                        "resourceVersion": "1151",
                        "uid": "8536a427-4f93-44e4-a31c-4ae3f4eb87a4"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::23764612-7965-42f4-9ad1-ff50b151cf26",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ConfigMap::otel-eks/otel-agent-conf",
                "custom": true,
                "id": "otel-eks/otel-agent-conf",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "otel-agent-config": "extensions:\n  health_check:\n  pprof:\n  zpages:\n\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:4318\n\nprocessors:\n  # increase the timeout (time after which a batch is sent regardless), defaults to 200ms to maximizing\n  # the number of spans sent collectively to the destination (cloudwatch xray).\n  # rest of the values are set to default `end_batch_size (default = 8192)` and `send_batch_max_size (default = 0)`\n  batch/traces:\n    timeout: 10s\n  batch/metrics:\n    timeout: 60s\n  resourcedetection:\n    detectors:\n      - env\n      - system\n      - ec2\n      - eks\n    timeout: 10s\n    override: false\n  resource:\n    attributes:\n      - key: TaskId\n        from_attribute: job\n        action: insert\n\nexporters:\n  awsxray:\n\nservice:\n  telemetry:\n    logs:\n      level: \"debug\"\n  extensions:\n    - health_check\n    - pprof\n    - zpages\n  pipelines:\n    traces:\n      receivers:\n        - otlp\n      processors:\n        - batch/traces\n      exporters:\n        - awsxray\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app": "opentelemetry",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "component": "otel-agent-conf"
                        },
                        "name": "otel-agent-conf",
                        "namespace": "otel-eks"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "otel-agent-config": "extensions:\n  health_check:\n  pprof:\n  zpages:\n\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:4318\n\nprocessors:\n  # increase the timeout (time after which a batch is sent regardless), defaults to 200ms to maximizing\n  # the number of spans sent collectively to the destination (cloudwatch xray).\n  # rest of the values are set to default `end_batch_size (default = 8192)` and `send_batch_max_size (default = 0)`\n  batch/traces:\n    timeout: 10s\n  batch/metrics:\n    timeout: 60s\n  resourcedetection:\n    detectors:\n      - env\n      - system\n      - ec2\n      - eks\n    timeout: 10s\n    override: false\n  resource:\n    attributes:\n      - key: TaskId\n        from_attribute: job\n        action: insert\n\nexporters:\n  awsxray:\n\nservice:\n  telemetry:\n    logs:\n      level: \"debug\"\n  extensions:\n    - health_check\n    - pprof\n    - zpages\n  pipelines:\n    traces:\n      receivers:\n        - otlp\n      processors:\n        - batch/traces\n      exporters:\n        - awsxray\n"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app": "opentelemetry",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "component": "otel-agent-conf"
                            },
                            "name": "otel-agent-conf",
                            "namespace": "otel-eks"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "otel-agent-config": "extensions:\n  health_check:\n  pprof:\n  zpages:\n\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:4318\n\nprocessors:\n  # increase the timeout (time after which a batch is sent regardless), defaults to 200ms to maximizing\n  # the number of spans sent collectively to the destination (cloudwatch xray).\n  # rest of the values are set to default `end_batch_size (default = 8192)` and `send_batch_max_size (default = 0)`\n  batch/traces:\n    timeout: 10s\n  batch/metrics:\n    timeout: 60s\n  resourcedetection:\n    detectors:\n      - env\n      - system\n      - ec2\n      - eks\n    timeout: 10s\n    override: false\n  resource:\n    attributes:\n      - key: TaskId\n        from_attribute: job\n        action: insert\n\nexporters:\n  awsxray:\n\nservice:\n  telemetry:\n    logs:\n      level: \"debug\"\n  extensions:\n    - health_check\n    - pprof\n    - zpages\n  pipelines:\n    traces:\n      receivers:\n        - otlp\n      processors:\n        - batch/traces\n      exporters:\n        - awsxray\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"otel-agent-config\":\"extensions:\\n  health_check:\\n  pprof:\\n  zpages:\\n\\nreceivers:\\n  otlp:\\n    protocols:\\n      grpc:\\n        endpoint: 0.0.0.0:4317\\n      http:\\n        endpoint: 0.0.0.0:4318\\n\\nprocessors:\\n  # increase the timeout (time after which a batch is sent regardless), defaults to 200ms to maximizing\\n  # the number of spans sent collectively to the destination (cloudwatch xray).\\n  # rest of the values are set to default `end_batch_size (default = 8192)` and `send_batch_max_size (default = 0)`\\n  batch/traces:\\n    timeout: 10s\\n  batch/metrics:\\n    timeout: 60s\\n  resourcedetection:\\n    detectors:\\n      - env\\n      - system\\n      - ec2\\n      - eks\\n    timeout: 10s\\n    override: false\\n  resource:\\n    attributes:\\n      - key: TaskId\\n        from_attribute: job\\n        action: insert\\n\\nexporters:\\n  awsxray:\\n\\nservice:\\n  telemetry:\\n    logs:\\n      level: \\\"debug\\\"\\n  extensions:\\n    - health_check\\n    - pprof\\n    - zpages\\n  pipelines:\\n    traces:\\n      receivers:\\n        - otlp\\n      processors:\\n        - batch/traces\\n      exporters:\\n        - awsxray\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app\":\"opentelemetry\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"component\":\"otel-agent-conf\"},\"name\":\"otel-agent-conf\",\"namespace\":\"otel-eks\"}}\n"
                        },
                        "creationTimestamp": "2022-07-21T22:13:45Z",
                        "labels": {
                            "app": "opentelemetry",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "component": "otel-agent-conf"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:otel-agent-config": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:component": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-07-21T22:13:45Z"
                            }
                        ],
                        "name": "otel-agent-conf",
                        "namespace": "otel-eks",
                        "resourceVersion": "11362934",
                        "uid": "95b6971d-eb6c-4cf9-b94a-ef0bef20d5ce"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::23764612-7965-42f4-9ad1-ff50b151cf26",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ServiceAccount::otel-eks/otel-collector-account",
                "custom": true,
                "id": "otel-eks/otel-collector-account",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "otel-collector-account",
                        "namespace": "otel-eks"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "otel-collector-account",
                            "namespace": "otel-eks"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"otel-collector-account\",\"namespace\":\"otel-eks\"}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:24:34Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"otel-collector-account-token-wjfxn\"}": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:34Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:34Z"
                            }
                        ],
                        "name": "otel-collector-account",
                        "namespace": "otel-eks",
                        "resourceVersion": "1190",
                        "uid": "b5f1050e-d79e-4057-9dde-d1189cb507c5"
                    },
                    "secrets": [
                        {
                            "name": "otel-collector-account-token-wjfxn"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::23764612-7965-42f4-9ad1-ff50b151cf26",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::aoc-agent-role-binding",
                "custom": true,
                "id": "aoc-agent-role-binding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "aoc-agent-role-binding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "aoc-agent-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "otel-collector-account",
                            "namespace": "otel-eks"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "aoc-agent-role-binding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "aoc-agent-role"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "otel-collector-account",
                                "namespace": "otel-eks"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"aoc-agent-role-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"aoc-agent-role\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"otel-collector-account\",\"namespace\":\"otel-eks\"}]}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:24:32Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:32Z"
                            }
                        ],
                        "name": "aoc-agent-role-binding",
                        "resourceVersion": "1149",
                        "uid": "181635fe-1b02-4985-b2f5-ae24c1fef637"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "aoc-agent-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "otel-collector-account",
                            "namespace": "otel-eks"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::23764612-7965-42f4-9ad1-ff50b151cf26",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:Service::otel-eks/otel-collector",
                "custom": true,
                "id": "otel-eks/otel-collector",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "otel-collector",
                        "namespace": "otel-eks"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "otlp",
                                "port": 4317,
                                "protocol": "TCP",
                                "targetPort": "otlp"
                            },
                            {
                                "name": "otlp-http",
                                "port": 4318,
                                "protocol": "TCP",
                                "targetPort": "otlp-http"
                            }
                        ],
                        "selector": {
                            "name": "otel-collector"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "otel-collector",
                            "namespace": "otel-eks"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "otlp",
                                    "port": 4317,
                                    "protocol": "TCP",
                                    "targetPort": "otlp"
                                },
                                {
                                    "name": "otlp-http",
                                    "port": 4318,
                                    "protocol": "TCP",
                                    "targetPort": "otlp-http"
                                }
                            ],
                            "selector": {
                                "name": "otel-collector"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"otel-collector\",\"namespace\":\"otel-eks\"},\"spec\":{\"ports\":[{\"name\":\"otlp\",\"port\":4317,\"protocol\":\"TCP\",\"targetPort\":\"otlp\"},{\"name\":\"otlp-http\",\"port\":4318,\"protocol\":\"TCP\",\"targetPort\":\"otlp-http\"}],\"selector\":{\"name\":\"otel-collector\"},\"type\":\"ClusterIP\"}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:24:33Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:internalTrafficPolicy": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"port\":4317,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            },
                                            "k:{\"port\":4318,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:sessionAffinity": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:33Z"
                            }
                        ],
                        "name": "otel-collector",
                        "namespace": "otel-eks",
                        "resourceVersion": "1181",
                        "uid": "e7ba90af-9344-4b56-81f3-e61408b627a4"
                    },
                    "spec": {
                        "clusterIP": "172.20.88.73",
                        "clusterIPs": [
                            "172.20.88.73"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "otlp",
                                "port": 4317,
                                "protocol": "TCP",
                                "targetPort": "otlp"
                            },
                            {
                                "name": "otlp-http",
                                "port": 4318,
                                "protocol": "TCP",
                                "targetPort": "otlp-http"
                            }
                        ],
                        "selector": {
                            "name": "otel-collector"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::23764612-7965-42f4-9ad1-ff50b151cf26",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::aoc-agent-role",
                "custom": true,
                "id": "aoc-agent-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "aoc-agent-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes",
                                "nodes/proxy",
                                "nodes/metrics",
                                "services",
                                "endpoints",
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes/stats",
                                "configmaps",
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "otel-container-insight-clusterleader"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "ingresses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "replicasets"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "jobs"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "nonResourceURLs": [
                                "/metrics"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "aoc-agent-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes",
                                    "nodes/proxy",
                                    "nodes/metrics",
                                    "services",
                                    "endpoints",
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/stats",
                                    "configmaps",
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "otel-container-insight-clusterleader"
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "ingresses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "replicasets"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "nonResourceURLs": [
                                    "/metrics"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"aoc-agent-role\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\",\"nodes/proxy\",\"nodes/metrics\",\"services\",\"endpoints\",\"pods\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes/stats\",\"configmaps\",\"events\"],\"verbs\":[\"create\",\"get\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"otel-container-insight-clusterleader\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"update\"]},{\"apiGroups\":[\"extensions\"],\"resources\":[\"ingresses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"replicasets\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"batch\"],\"resources\":[\"jobs\"],\"verbs\":[\"list\",\"watch\"]},{\"nonResourceURLs\":[\"/metrics\"],\"verbs\":[\"get\"]}]}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:24:32Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:32Z"
                            }
                        ],
                        "name": "aoc-agent-role",
                        "resourceVersion": "1150",
                        "uid": "564f252c-14df-46cc-ba7d-275f1d730eed"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes",
                                "nodes/proxy",
                                "nodes/metrics",
                                "services",
                                "endpoints",
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes/stats",
                                "configmaps",
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "otel-container-insight-clusterleader"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "ingresses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "replicasets"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "jobs"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "nonResourceURLs": [
                                "/metrics"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::23764612-7965-42f4-9ad1-ff50b151cf26",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apps/v1:Deployment::otel-eks/otel-collector",
                "custom": true,
                "id": "otel-eks/otel-collector",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "otel-collector",
                        "namespace": "otel-eks"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "name": "otel-collector"
                            }
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "name": "otel-collector"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "--config",
                                            "/conf/otel-agent-config.yaml"
                                        ],
                                        "env": [
                                            {
                                                "name": "K8S_NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_IP",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "status.hostIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "K8S_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "AWS_REGION",
                                                "value": "us-west-2"
                                            },
                                            {
                                                "name": "OTEL_RESOURCE_ATTRIBUTES",
                                                "value": "ClusterName=p-9-eks-cluster-eksCluster-d890a2b,FileHash=7af3121977d289a93015720f60c84423"
                                            }
                                        ],
                                        "image": "otel/opentelemetry-collector-contrib:latest",
                                        "imagePullPolicy": "Always",
                                        "name": "otel-collector",
                                        "ports": [
                                            {
                                                "containerPort": 4317,
                                                "name": "otlp",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 4318,
                                                "name": "otlp-http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "512m",
                                                "memory": "8G"
                                            },
                                            "requests": {
                                                "cpu": "128m",
                                                "memory": "3G"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/rootfs",
                                                "name": "rootfs",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/run/docker.sock",
                                                "name": "dockersock",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/lib/docker",
                                                "name": "varlibdocker",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/sys",
                                                "name": "sys",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/dev/disk",
                                                "name": "devdisk",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/conf",
                                                "name": "otel-agent-config-vol"
                                            }
                                        ]
                                    }
                                ],
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                },
                                "serviceAccountName": "otel-collector-account",
                                "volumes": [
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "otel-agent-config",
                                                    "path": "otel-agent-config.yaml"
                                                }
                                            ],
                                            "name": "otel-agent-conf"
                                        },
                                        "name": "otel-agent-config-vol"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/"
                                        },
                                        "name": "rootfs"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/run/docker.sock"
                                        },
                                        "name": "dockersock"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/lib/docker"
                                        },
                                        "name": "varlibdocker"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/sys"
                                        },
                                        "name": "sys"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/dev/disk/"
                                        },
                                        "name": "devdisk"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "otel-collector",
                            "namespace": "otel-eks"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "name": "otel-collector"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "otel-collector"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "--config",
                                                "/conf/otel-agent-config.yaml"
                                            ],
                                            "env": [
                                                {
                                                    "name": "K8S_NODE_NAME",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.nodeName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "HOST_IP",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "status.hostIP"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "HOST_NAME",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.nodeName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "K8S_NAMESPACE",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.namespace"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "AWS_REGION",
                                                    "value": "us-west-2"
                                                },
                                                {
                                                    "name": "OTEL_RESOURCE_ATTRIBUTES",
                                                    "value": "ClusterName=p-9-eks-cluster-eksCluster-d890a2b,FileHash=7af3121977d289a93015720f60c84423"
                                                }
                                            ],
                                            "image": "otel/opentelemetry-collector-contrib:latest",
                                            "imagePullPolicy": "Always",
                                            "name": "otel-collector",
                                            "ports": [
                                                {
                                                    "containerPort": 4317,
                                                    "name": "otlp",
                                                    "protocol": "TCP"
                                                },
                                                {
                                                    "containerPort": 4318,
                                                    "name": "otlp-http",
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "resources": {
                                                "limits": {
                                                    "cpu": "512m",
                                                    "memory": "8G"
                                                },
                                                "requests": {
                                                    "cpu": "128m",
                                                    "memory": "3G"
                                                }
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/rootfs",
                                                    "name": "rootfs",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/var/run/docker.sock",
                                                    "name": "dockersock",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/var/lib/docker",
                                                    "name": "varlibdocker",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/sys",
                                                    "name": "sys",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/dev/disk",
                                                    "name": "devdisk",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/conf",
                                                    "name": "otel-agent-config-vol"
                                                }
                                            ]
                                        }
                                    ],
                                    "nodeSelector": {
                                        "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                        "kubernetes.io/arch": "amd64"
                                    },
                                    "serviceAccountName": "otel-collector-account",
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "otel-agent-config",
                                                        "path": "otel-agent-config.yaml"
                                                    }
                                                ],
                                                "name": "otel-agent-conf"
                                            },
                                            "name": "otel-agent-config-vol"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/"
                                            },
                                            "name": "rootfs"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/run/docker.sock"
                                            },
                                            "name": "dockersock"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/lib/docker"
                                            },
                                            "name": "varlibdocker"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/sys"
                                            },
                                            "name": "sys"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/dev/disk/"
                                            },
                                            "name": "devdisk"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "11",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"otel-collector\",\"namespace\":\"otel-eks\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"otel-collector\"}},\"template\":{\"metadata\":{\"labels\":{\"name\":\"otel-collector\"}},\"spec\":{\"containers\":[{\"args\":[\"--config\",\"/conf/otel-agent-config.yaml\"],\"env\":[{\"name\":\"K8S_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"HOST_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"K8S_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"AWS_REGION\",\"value\":\"us-west-2\"},{\"name\":\"OTEL_RESOURCE_ATTRIBUTES\",\"value\":\"ClusterName=p-9-eks-cluster-eksCluster-d890a2b,FileHash=7af3121977d289a93015720f60c84423\"}],\"image\":\"otel/opentelemetry-collector-contrib:latest\",\"imagePullPolicy\":\"Always\",\"name\":\"otel-collector\",\"ports\":[{\"containerPort\":4317,\"name\":\"otlp\",\"protocol\":\"TCP\"},{\"containerPort\":4318,\"name\":\"otlp-http\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"512m\",\"memory\":\"8G\"},\"requests\":{\"cpu\":\"128m\",\"memory\":\"3G\"}},\"volumeMounts\":[{\"mountPath\":\"/rootfs\",\"name\":\"rootfs\",\"readOnly\":true},{\"mountPath\":\"/var/run/docker.sock\",\"name\":\"dockersock\",\"readOnly\":true},{\"mountPath\":\"/var/lib/docker\",\"name\":\"varlibdocker\",\"readOnly\":true},{\"mountPath\":\"/sys\",\"name\":\"sys\",\"readOnly\":true},{\"mountPath\":\"/dev/disk\",\"name\":\"devdisk\",\"readOnly\":true},{\"mountPath\":\"/conf\",\"name\":\"otel-agent-config-vol\"}]}],\"nodeSelector\":{\"eks.amazonaws.com/capacityType\":\"ON_DEMAND\",\"kubernetes.io/arch\":\"amd64\"},\"serviceAccountName\":\"otel-collector-account\",\"volumes\":[{\"configMap\":{\"items\":[{\"key\":\"otel-agent-config\",\"path\":\"otel-agent-config.yaml\"}],\"name\":\"otel-agent-conf\"},\"name\":\"otel-agent-config-vol\"},{\"hostPath\":{\"path\":\"/\"},\"name\":\"rootfs\"},{\"hostPath\":{\"path\":\"/var/run/docker.sock\"},\"name\":\"dockersock\"},{\"hostPath\":{\"path\":\"/var/lib/docker\"},\"name\":\"varlibdocker\"},{\"hostPath\":{\"path\":\"/sys\"},\"name\":\"sys\"},{\"hostPath\":{\"path\":\"/dev/disk/\"},\"name\":\"devdisk\"}]}}}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:24:33Z",
                        "generation": 11,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:progressDeadlineSeconds": {},
                                        "f:replicas": {},
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:strategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        },
                                        "f:template": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    ".": {},
                                                    "f:name": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"otel-collector\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"AWS_REGION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"HOST_IP\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"HOST_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"K8S_NAMESPACE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"K8S_NODE_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"OTEL_RESOURCE_ATTRIBUTES\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":4317,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            },
                                                            "k:{\"containerPort\":4318,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/conf\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/dev/disk\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/rootfs\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/sys\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/lib/docker\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/run/docker.sock\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:nodeSelector": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"devdisk\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"dockersock\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"otel-agent-config-vol\"}": {
                                                        ".": {},
                                                        "f:configMap": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:items": {},
                                                            "f:name": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"rootfs\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"sys\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"varlibdocker\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-07-29T19:24:30Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-09-06T16:03:01Z"
                            }
                        ],
                        "name": "otel-collector",
                        "namespace": "otel-eks",
                        "resourceVersion": "29524463",
                        "uid": "e4d3c3ef-e80b-4db2-b746-4a4617681a23"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "name": "otel-collector"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "name": "otel-collector"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "--config",
                                            "/conf/otel-agent-config.yaml"
                                        ],
                                        "env": [
                                            {
                                                "name": "K8S_NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_IP",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.hostIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "K8S_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "AWS_REGION",
                                                "value": "us-west-2"
                                            },
                                            {
                                                "name": "OTEL_RESOURCE_ATTRIBUTES",
                                                "value": "ClusterName=p-9-eks-cluster-eksCluster-d890a2b,FileHash=7af3121977d289a93015720f60c84423"
                                            }
                                        ],
                                        "image": "otel/opentelemetry-collector-contrib:latest",
                                        "imagePullPolicy": "Always",
                                        "name": "otel-collector",
                                        "ports": [
                                            {
                                                "containerPort": 4317,
                                                "name": "otlp",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 4318,
                                                "name": "otlp-http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "512m",
                                                "memory": "8G"
                                            },
                                            "requests": {
                                                "cpu": "128m",
                                                "memory": "3G"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/rootfs",
                                                "name": "rootfs",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/run/docker.sock",
                                                "name": "dockersock",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/lib/docker",
                                                "name": "varlibdocker",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/sys",
                                                "name": "sys",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/dev/disk",
                                                "name": "devdisk",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/conf",
                                                "name": "otel-agent-config-vol"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "otel-collector-account",
                                "serviceAccountName": "otel-collector-account",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "items": [
                                                {
                                                    "key": "otel-agent-config",
                                                    "path": "otel-agent-config.yaml"
                                                }
                                            ],
                                            "name": "otel-agent-conf"
                                        },
                                        "name": "otel-agent-config-vol"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/",
                                            "type": ""
                                        },
                                        "name": "rootfs"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/run/docker.sock",
                                            "type": ""
                                        },
                                        "name": "dockersock"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/lib/docker",
                                            "type": ""
                                        },
                                        "name": "varlibdocker"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/sys",
                                            "type": ""
                                        },
                                        "name": "sys"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/dev/disk/",
                                            "type": ""
                                        },
                                        "name": "devdisk"
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-07T17:58:06Z",
                                "lastUpdateTime": "2022-08-07T17:58:06Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2022-06-20T23:24:33Z",
                                "lastUpdateTime": "2022-09-06T16:03:01Z",
                                "message": "ReplicaSet \"otel-collector-7985b4785\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 11,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::23764612-7965-42f4-9ad1-ff50b151cf26",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:core/v1:Namespace::strimzi-ns",
                "custom": true,
                "id": "strimzi",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "strimzi"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "strimzi"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"strimzi\"}}\n"
                        },
                        "creationTimestamp": "2022-09-06T16:01:51Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "strimzi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:kubernetes.io/metadata.name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-06T16:01:51Z"
                            }
                        ],
                        "name": "strimzi",
                        "resourceVersion": "29523813",
                        "uid": "c42963d6-e46b-444c-b359-131061ea4930"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::strimzi-k8s-provider::38ca7f66-2516-4e64-a324-b1e09443488c",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "custom": false,
                "type": "kubernetes:yaml:ConfigFile",
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ]
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ConfigMap::strimzi/mirror-maker2-metrics",
                "custom": true,
                "id": "strimzi/mirror-maker2-metrics",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "metrics-config.yml": "# See https://github.com/prometheus/jmx_exporter for more info about JMX Prometheus Exporter metrics\nlowercaseOutputName: true\nlowercaseOutputLabelNames: true\nrules:\n#kafka.connect:type=app-info,client-id=\"{clientid}\"\n#kafka.consumer:type=app-info,client-id=\"{clientid}\"\n#kafka.producer:type=app-info,client-id=\"{clientid}\"\n- pattern: 'kafka.(.+)\u003ctype=app-info, client-id=(.+)\u003e\u003c\u003estart-time-ms'\n  name: kafka_$1_start_time_seconds\n  labels:\n    clientId: \"$2\"\n  help: \"Kafka $1 JMX metric start time seconds\"\n  type: GAUGE\n  valueFactor: 0.001\n- pattern: 'kafka.(.+)\u003ctype=app-info, client-id=(.+)\u003e\u003c\u003e(commit-id|version): (.+)'\n  name: kafka_$1_$3_info\n  value: 1\n  labels:\n    clientId: \"$2\"\n    $3: \"$4\"\n  help: \"Kafka $1 JMX metric info version and commit-id\"\n  type: GAUGE\n#kafka.producer:type=producer-topic-metrics,client-id=\"{clientid}\",topic=\"{topic}\"\", partition=\"{partition}\"\n#kafka.consumer:type=consumer-fetch-manager-metrics,client-id=\"{clientid}\",topic=\"{topic}\"\", partition=\"{partition}\"\n- pattern: kafka.(.+)\u003ctype=(.+)-metrics, client-id=(.+), topic=(.+), partition=(.+)\u003e\u003c\u003e(.+-total|compression-rate|.+-avg|.+-replica|.+-lag|.+-lead)\n  name: kafka_$2_$6\n  labels:\n    clientId: \"$3\"\n    topic: \"$4\"\n    partition: \"$5\"\n  help: \"Kafka $1 JMX metric type $2\"\n  type: GAUGE\n#kafka.producer:type=producer-topic-metrics,client-id=\"{clientid}\",topic=\"{topic}\"\n#kafka.consumer:type=consumer-fetch-manager-metrics,client-id=\"{clientid}\",topic=\"{topic}\"\", partition=\"{partition}\"\n- pattern: kafka.(.+)\u003ctype=(.+)-metrics, client-id=(.+), topic=(.+)\u003e\u003c\u003e(.+-total|compression-rate|.+-avg)\n  name: kafka_$2_$5\n  labels:\n    clientId: \"$3\"\n    topic: \"$4\"\n  help: \"Kafka $1 JMX metric type $2\"\n  type: GAUGE\n#kafka.connect:type=connect-node-metrics,client-id=\"{clientid}\",node-id=\"{nodeid}\"\n#kafka.consumer:type=consumer-node-metrics,client-id=consumer-1,node-id=\"{nodeid}\"\n- pattern: kafka.(.+)\u003ctype=(.+)-metrics, client-id=(.+), node-id=(.+)\u003e\u003c\u003e(.+-total|.+-avg)\n  name: kafka_$2_$5\n  labels:\n    clientId: \"$3\"\n    nodeId: \"$4\"\n  help: \"Kafka $1 JMX metric type $2\"\n  type: UNTYPED\n#kafka.connect:type=kafka-metrics-count,client-id=\"{clientid}\"\n#kafka.consumer:type=consumer-fetch-manager-metrics,client-id=\"{clientid}\"\n#kafka.consumer:type=consumer-coordinator-metrics,client-id=\"{clientid}\"\n#kafka.consumer:type=consumer-metrics,client-id=\"{clientid}\"\n- pattern: kafka.(.+)\u003ctype=(.+)-metrics, client-id=(.*)\u003e\u003c\u003e(.+-total|.+-avg|.+-bytes|.+-count|.+-ratio|.+-age|.+-flight|.+-threads|.+-connectors|.+-tasks|.+-ago)\n  name: kafka_$2_$4\n  labels:\n    clientId: \"$3\"\n  help: \"Kafka $1 JMX metric type $2\"\n  type: GAUGE\n#kafka.connect:type=connector-task-metrics,connector=\"{connector}\",task=\"{task}\u003c\u003e status\"\n- pattern: 'kafka.connect\u003ctype=connector-task-metrics, connector=(.+), task=(.+)\u003e\u003c\u003estatus: ([a-z-]+)'\n  name: kafka_connect_connector_status\n  value: 1\n  labels:\n    connector: \"$1\"\n    task: \"$2\"\n    status: \"$3\"\n  help: \"Kafka Connect JMX Connector status\"\n  type: GAUGE\n#kafka.connect:type=task-error-metrics,connector=\"{connector}\",task=\"{task}\"\n#kafka.connect:type=source-task-metrics,connector=\"{connector}\",task=\"{task}\"\n#kafka.connect:type=sink-task-metrics,connector=\"{connector}\",task=\"{task}\"\n#kafka.connect:type=connector-task-metrics,connector=\"{connector}\",task=\"{task}\"\n- pattern: kafka.connect\u003ctype=(.+)-metrics, connector=(.+), task=(.+)\u003e\u003c\u003e(.+-total|.+-count|.+-ms|.+-ratio|.+-avg|.+-failures|.+-requests|.+-timestamp|.+-logged|.+-errors|.+-retries|.+-skipped)\n  name: kafka_connect_$1_$4\n  labels:\n    connector: \"$2\"\n    task: \"$3\"\n  help: \"Kafka Connect JMX metric type $1\"\n  type: GAUGE\n#kafka.connect:type=connector-metrics,connector=\"{connector}\"\n#kafka.connect:type=connect-worker-metrics,connector=\"{connector}\"\n- pattern: kafka.connect\u003ctype=connect-worker-metrics, connector=(.+)\u003e\u003c\u003e([a-z-]+)\n  name: kafka_connect_worker_$2\n  labels:\n    connector: \"$1\"\n  help: \"Kafka Connect JMX metric $1\"\n  type: GAUGE\n#kafka.connect:type=connect-worker-metrics\n- pattern: kafka.connect\u003ctype=connect-worker-metrics\u003e\u003c\u003e([a-z-]+)\n  name: kafka_connect_worker_$1\n  help: \"Kafka Connect JMX metric worker\"\n  type: GAUGE\n#kafka.connect:type=connect-worker-rebalance-metrics\n- pattern: kafka.connect\u003ctype=connect-worker-rebalance-metrics\u003e\u003c\u003e([a-z-]+)\n  name: kafka_connect_worker_rebalance_$1\n  help: \"Kafka Connect JMX metric rebalance information\"\n  type: GAUGE\n#kafka.connect:type=MirrorSourceConnector\n- pattern: kafka.connect.mirror\u003ctype=MirrorSourceConnector, target=(.+), topic=(.+), partition=(.+)\u003e\u003c\u003e([a-z-_]+)\n  name: kafka_connect_mirror_mirrorsourceconnector_$4\n  labels:\n    target: \"$1\"\n    topic: \"$2\"\n    partition: \"$3\"\n  help: \"Kafka Mirror Maker 2 Source Connector metrics\"\n  type: GAUGE\n#kafka.connect:type=MirrorCheckpointConnector\n- pattern: kafka.connect.mirror\u003ctype=MirrorCheckpointConnector, source=(.+), target=(.+)\u003e\u003c\u003e([a-z-_]+)\n  name: kafka_connect_mirror_mirrorcheckpointconnector_$3\n  labels:\n    source: \"$1\"\n    target: \"$2\"\n  help: \"Kafka Mirror Maker 2 Checkpoint Connector metrics\"\n  type: GAUGE\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app": "strimzi",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "mirror-maker2-metrics",
                        "namespace": "strimzi"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "metrics-config.yml": "# See https://github.com/prometheus/jmx_exporter for more info about JMX Prometheus Exporter metrics\nlowercaseOutputName: true\nlowercaseOutputLabelNames: true\nrules:\n#kafka.connect:type=app-info,client-id=\"{clientid}\"\n#kafka.consumer:type=app-info,client-id=\"{clientid}\"\n#kafka.producer:type=app-info,client-id=\"{clientid}\"\n- pattern: 'kafka.(.+)\u003ctype=app-info, client-id=(.+)\u003e\u003c\u003estart-time-ms'\n  name: kafka_$1_start_time_seconds\n  labels:\n    clientId: \"$2\"\n  help: \"Kafka $1 JMX metric start time seconds\"\n  type: GAUGE\n  valueFactor: 0.001\n- pattern: 'kafka.(.+)\u003ctype=app-info, client-id=(.+)\u003e\u003c\u003e(commit-id|version): (.+)'\n  name: kafka_$1_$3_info\n  value: 1\n  labels:\n    clientId: \"$2\"\n    $3: \"$4\"\n  help: \"Kafka $1 JMX metric info version and commit-id\"\n  type: GAUGE\n#kafka.producer:type=producer-topic-metrics,client-id=\"{clientid}\",topic=\"{topic}\"\", partition=\"{partition}\"\n#kafka.consumer:type=consumer-fetch-manager-metrics,client-id=\"{clientid}\",topic=\"{topic}\"\", partition=\"{partition}\"\n- pattern: kafka.(.+)\u003ctype=(.+)-metrics, client-id=(.+), topic=(.+), partition=(.+)\u003e\u003c\u003e(.+-total|compression-rate|.+-avg|.+-replica|.+-lag|.+-lead)\n  name: kafka_$2_$6\n  labels:\n    clientId: \"$3\"\n    topic: \"$4\"\n    partition: \"$5\"\n  help: \"Kafka $1 JMX metric type $2\"\n  type: GAUGE\n#kafka.producer:type=producer-topic-metrics,client-id=\"{clientid}\",topic=\"{topic}\"\n#kafka.consumer:type=consumer-fetch-manager-metrics,client-id=\"{clientid}\",topic=\"{topic}\"\", partition=\"{partition}\"\n- pattern: kafka.(.+)\u003ctype=(.+)-metrics, client-id=(.+), topic=(.+)\u003e\u003c\u003e(.+-total|compression-rate|.+-avg)\n  name: kafka_$2_$5\n  labels:\n    clientId: \"$3\"\n    topic: \"$4\"\n  help: \"Kafka $1 JMX metric type $2\"\n  type: GAUGE\n#kafka.connect:type=connect-node-metrics,client-id=\"{clientid}\",node-id=\"{nodeid}\"\n#kafka.consumer:type=consumer-node-metrics,client-id=consumer-1,node-id=\"{nodeid}\"\n- pattern: kafka.(.+)\u003ctype=(.+)-metrics, client-id=(.+), node-id=(.+)\u003e\u003c\u003e(.+-total|.+-avg)\n  name: kafka_$2_$5\n  labels:\n    clientId: \"$3\"\n    nodeId: \"$4\"\n  help: \"Kafka $1 JMX metric type $2\"\n  type: UNTYPED\n#kafka.connect:type=kafka-metrics-count,client-id=\"{clientid}\"\n#kafka.consumer:type=consumer-fetch-manager-metrics,client-id=\"{clientid}\"\n#kafka.consumer:type=consumer-coordinator-metrics,client-id=\"{clientid}\"\n#kafka.consumer:type=consumer-metrics,client-id=\"{clientid}\"\n- pattern: kafka.(.+)\u003ctype=(.+)-metrics, client-id=(.*)\u003e\u003c\u003e(.+-total|.+-avg|.+-bytes|.+-count|.+-ratio|.+-age|.+-flight|.+-threads|.+-connectors|.+-tasks|.+-ago)\n  name: kafka_$2_$4\n  labels:\n    clientId: \"$3\"\n  help: \"Kafka $1 JMX metric type $2\"\n  type: GAUGE\n#kafka.connect:type=connector-task-metrics,connector=\"{connector}\",task=\"{task}\u003c\u003e status\"\n- pattern: 'kafka.connect\u003ctype=connector-task-metrics, connector=(.+), task=(.+)\u003e\u003c\u003estatus: ([a-z-]+)'\n  name: kafka_connect_connector_status\n  value: 1\n  labels:\n    connector: \"$1\"\n    task: \"$2\"\n    status: \"$3\"\n  help: \"Kafka Connect JMX Connector status\"\n  type: GAUGE\n#kafka.connect:type=task-error-metrics,connector=\"{connector}\",task=\"{task}\"\n#kafka.connect:type=source-task-metrics,connector=\"{connector}\",task=\"{task}\"\n#kafka.connect:type=sink-task-metrics,connector=\"{connector}\",task=\"{task}\"\n#kafka.connect:type=connector-task-metrics,connector=\"{connector}\",task=\"{task}\"\n- pattern: kafka.connect\u003ctype=(.+)-metrics, connector=(.+), task=(.+)\u003e\u003c\u003e(.+-total|.+-count|.+-ms|.+-ratio|.+-avg|.+-failures|.+-requests|.+-timestamp|.+-logged|.+-errors|.+-retries|.+-skipped)\n  name: kafka_connect_$1_$4\n  labels:\n    connector: \"$2\"\n    task: \"$3\"\n  help: \"Kafka Connect JMX metric type $1\"\n  type: GAUGE\n#kafka.connect:type=connector-metrics,connector=\"{connector}\"\n#kafka.connect:type=connect-worker-metrics,connector=\"{connector}\"\n- pattern: kafka.connect\u003ctype=connect-worker-metrics, connector=(.+)\u003e\u003c\u003e([a-z-]+)\n  name: kafka_connect_worker_$2\n  labels:\n    connector: \"$1\"\n  help: \"Kafka Connect JMX metric $1\"\n  type: GAUGE\n#kafka.connect:type=connect-worker-metrics\n- pattern: kafka.connect\u003ctype=connect-worker-metrics\u003e\u003c\u003e([a-z-]+)\n  name: kafka_connect_worker_$1\n  help: \"Kafka Connect JMX metric worker\"\n  type: GAUGE\n#kafka.connect:type=connect-worker-rebalance-metrics\n- pattern: kafka.connect\u003ctype=connect-worker-rebalance-metrics\u003e\u003c\u003e([a-z-]+)\n  name: kafka_connect_worker_rebalance_$1\n  help: \"Kafka Connect JMX metric rebalance information\"\n  type: GAUGE\n#kafka.connect:type=MirrorSourceConnector\n- pattern: kafka.connect.mirror\u003ctype=MirrorSourceConnector, target=(.+), topic=(.+), partition=(.+)\u003e\u003c\u003e([a-z-_]+)\n  name: kafka_connect_mirror_mirrorsourceconnector_$4\n  labels:\n    target: \"$1\"\n    topic: \"$2\"\n    partition: \"$3\"\n  help: \"Kafka Mirror Maker 2 Source Connector metrics\"\n  type: GAUGE\n#kafka.connect:type=MirrorCheckpointConnector\n- pattern: kafka.connect.mirror\u003ctype=MirrorCheckpointConnector, source=(.+), target=(.+)\u003e\u003c\u003e([a-z-_]+)\n  name: kafka_connect_mirror_mirrorcheckpointconnector_$3\n  labels:\n    source: \"$1\"\n    target: \"$2\"\n  help: \"Kafka Mirror Maker 2 Checkpoint Connector metrics\"\n  type: GAUGE\n"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app": "strimzi",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "mirror-maker2-metrics",
                            "namespace": "strimzi"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "metrics-config.yml": "# See https://github.com/prometheus/jmx_exporter for more info about JMX Prometheus Exporter metrics\nlowercaseOutputName: true\nlowercaseOutputLabelNames: true\nrules:\n#kafka.connect:type=app-info,client-id=\"{clientid}\"\n#kafka.consumer:type=app-info,client-id=\"{clientid}\"\n#kafka.producer:type=app-info,client-id=\"{clientid}\"\n- pattern: 'kafka.(.+)\u003ctype=app-info, client-id=(.+)\u003e\u003c\u003estart-time-ms'\n  name: kafka_$1_start_time_seconds\n  labels:\n    clientId: \"$2\"\n  help: \"Kafka $1 JMX metric start time seconds\"\n  type: GAUGE\n  valueFactor: 0.001\n- pattern: 'kafka.(.+)\u003ctype=app-info, client-id=(.+)\u003e\u003c\u003e(commit-id|version): (.+)'\n  name: kafka_$1_$3_info\n  value: 1\n  labels:\n    clientId: \"$2\"\n    $3: \"$4\"\n  help: \"Kafka $1 JMX metric info version and commit-id\"\n  type: GAUGE\n#kafka.producer:type=producer-topic-metrics,client-id=\"{clientid}\",topic=\"{topic}\"\", partition=\"{partition}\"\n#kafka.consumer:type=consumer-fetch-manager-metrics,client-id=\"{clientid}\",topic=\"{topic}\"\", partition=\"{partition}\"\n- pattern: kafka.(.+)\u003ctype=(.+)-metrics, client-id=(.+), topic=(.+), partition=(.+)\u003e\u003c\u003e(.+-total|compression-rate|.+-avg|.+-replica|.+-lag|.+-lead)\n  name: kafka_$2_$6\n  labels:\n    clientId: \"$3\"\n    topic: \"$4\"\n    partition: \"$5\"\n  help: \"Kafka $1 JMX metric type $2\"\n  type: GAUGE\n#kafka.producer:type=producer-topic-metrics,client-id=\"{clientid}\",topic=\"{topic}\"\n#kafka.consumer:type=consumer-fetch-manager-metrics,client-id=\"{clientid}\",topic=\"{topic}\"\", partition=\"{partition}\"\n- pattern: kafka.(.+)\u003ctype=(.+)-metrics, client-id=(.+), topic=(.+)\u003e\u003c\u003e(.+-total|compression-rate|.+-avg)\n  name: kafka_$2_$5\n  labels:\n    clientId: \"$3\"\n    topic: \"$4\"\n  help: \"Kafka $1 JMX metric type $2\"\n  type: GAUGE\n#kafka.connect:type=connect-node-metrics,client-id=\"{clientid}\",node-id=\"{nodeid}\"\n#kafka.consumer:type=consumer-node-metrics,client-id=consumer-1,node-id=\"{nodeid}\"\n- pattern: kafka.(.+)\u003ctype=(.+)-metrics, client-id=(.+), node-id=(.+)\u003e\u003c\u003e(.+-total|.+-avg)\n  name: kafka_$2_$5\n  labels:\n    clientId: \"$3\"\n    nodeId: \"$4\"\n  help: \"Kafka $1 JMX metric type $2\"\n  type: UNTYPED\n#kafka.connect:type=kafka-metrics-count,client-id=\"{clientid}\"\n#kafka.consumer:type=consumer-fetch-manager-metrics,client-id=\"{clientid}\"\n#kafka.consumer:type=consumer-coordinator-metrics,client-id=\"{clientid}\"\n#kafka.consumer:type=consumer-metrics,client-id=\"{clientid}\"\n- pattern: kafka.(.+)\u003ctype=(.+)-metrics, client-id=(.*)\u003e\u003c\u003e(.+-total|.+-avg|.+-bytes|.+-count|.+-ratio|.+-age|.+-flight|.+-threads|.+-connectors|.+-tasks|.+-ago)\n  name: kafka_$2_$4\n  labels:\n    clientId: \"$3\"\n  help: \"Kafka $1 JMX metric type $2\"\n  type: GAUGE\n#kafka.connect:type=connector-task-metrics,connector=\"{connector}\",task=\"{task}\u003c\u003e status\"\n- pattern: 'kafka.connect\u003ctype=connector-task-metrics, connector=(.+), task=(.+)\u003e\u003c\u003estatus: ([a-z-]+)'\n  name: kafka_connect_connector_status\n  value: 1\n  labels:\n    connector: \"$1\"\n    task: \"$2\"\n    status: \"$3\"\n  help: \"Kafka Connect JMX Connector status\"\n  type: GAUGE\n#kafka.connect:type=task-error-metrics,connector=\"{connector}\",task=\"{task}\"\n#kafka.connect:type=source-task-metrics,connector=\"{connector}\",task=\"{task}\"\n#kafka.connect:type=sink-task-metrics,connector=\"{connector}\",task=\"{task}\"\n#kafka.connect:type=connector-task-metrics,connector=\"{connector}\",task=\"{task}\"\n- pattern: kafka.connect\u003ctype=(.+)-metrics, connector=(.+), task=(.+)\u003e\u003c\u003e(.+-total|.+-count|.+-ms|.+-ratio|.+-avg|.+-failures|.+-requests|.+-timestamp|.+-logged|.+-errors|.+-retries|.+-skipped)\n  name: kafka_connect_$1_$4\n  labels:\n    connector: \"$2\"\n    task: \"$3\"\n  help: \"Kafka Connect JMX metric type $1\"\n  type: GAUGE\n#kafka.connect:type=connector-metrics,connector=\"{connector}\"\n#kafka.connect:type=connect-worker-metrics,connector=\"{connector}\"\n- pattern: kafka.connect\u003ctype=connect-worker-metrics, connector=(.+)\u003e\u003c\u003e([a-z-]+)\n  name: kafka_connect_worker_$2\n  labels:\n    connector: \"$1\"\n  help: \"Kafka Connect JMX metric $1\"\n  type: GAUGE\n#kafka.connect:type=connect-worker-metrics\n- pattern: kafka.connect\u003ctype=connect-worker-metrics\u003e\u003c\u003e([a-z-]+)\n  name: kafka_connect_worker_$1\n  help: \"Kafka Connect JMX metric worker\"\n  type: GAUGE\n#kafka.connect:type=connect-worker-rebalance-metrics\n- pattern: kafka.connect\u003ctype=connect-worker-rebalance-metrics\u003e\u003c\u003e([a-z-]+)\n  name: kafka_connect_worker_rebalance_$1\n  help: \"Kafka Connect JMX metric rebalance information\"\n  type: GAUGE\n#kafka.connect:type=MirrorSourceConnector\n- pattern: kafka.connect.mirror\u003ctype=MirrorSourceConnector, target=(.+), topic=(.+), partition=(.+)\u003e\u003c\u003e([a-z-_]+)\n  name: kafka_connect_mirror_mirrorsourceconnector_$4\n  labels:\n    target: \"$1\"\n    topic: \"$2\"\n    partition: \"$3\"\n  help: \"Kafka Mirror Maker 2 Source Connector metrics\"\n  type: GAUGE\n#kafka.connect:type=MirrorCheckpointConnector\n- pattern: kafka.connect.mirror\u003ctype=MirrorCheckpointConnector, source=(.+), target=(.+)\u003e\u003c\u003e([a-z-_]+)\n  name: kafka_connect_mirror_mirrorcheckpointconnector_$3\n  labels:\n    source: \"$1\"\n    target: \"$2\"\n  help: \"Kafka Mirror Maker 2 Checkpoint Connector metrics\"\n  type: GAUGE\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"metrics-config.yml\":\"# See https://github.com/prometheus/jmx_exporter for more info about JMX Prometheus Exporter metrics\\nlowercaseOutputName: true\\nlowercaseOutputLabelNames: true\\nrules:\\n#kafka.connect:type=app-info,client-id=\\\"{clientid}\\\"\\n#kafka.consumer:type=app-info,client-id=\\\"{clientid}\\\"\\n#kafka.producer:type=app-info,client-id=\\\"{clientid}\\\"\\n- pattern: 'kafka.(.+)\\u003ctype=app-info, client-id=(.+)\\u003e\\u003c\\u003estart-time-ms'\\n  name: kafka_$1_start_time_seconds\\n  labels:\\n    clientId: \\\"$2\\\"\\n  help: \\\"Kafka $1 JMX metric start time seconds\\\"\\n  type: GAUGE\\n  valueFactor: 0.001\\n- pattern: 'kafka.(.+)\\u003ctype=app-info, client-id=(.+)\\u003e\\u003c\\u003e(commit-id|version): (.+)'\\n  name: kafka_$1_$3_info\\n  value: 1\\n  labels:\\n    clientId: \\\"$2\\\"\\n    $3: \\\"$4\\\"\\n  help: \\\"Kafka $1 JMX metric info version and commit-id\\\"\\n  type: GAUGE\\n#kafka.producer:type=producer-topic-metrics,client-id=\\\"{clientid}\\\",topic=\\\"{topic}\\\"\\\", partition=\\\"{partition}\\\"\\n#kafka.consumer:type=consumer-fetch-manager-metrics,client-id=\\\"{clientid}\\\",topic=\\\"{topic}\\\"\\\", partition=\\\"{partition}\\\"\\n- pattern: kafka.(.+)\\u003ctype=(.+)-metrics, client-id=(.+), topic=(.+), partition=(.+)\\u003e\\u003c\\u003e(.+-total|compression-rate|.+-avg|.+-replica|.+-lag|.+-lead)\\n  name: kafka_$2_$6\\n  labels:\\n    clientId: \\\"$3\\\"\\n    topic: \\\"$4\\\"\\n    partition: \\\"$5\\\"\\n  help: \\\"Kafka $1 JMX metric type $2\\\"\\n  type: GAUGE\\n#kafka.producer:type=producer-topic-metrics,client-id=\\\"{clientid}\\\",topic=\\\"{topic}\\\"\\n#kafka.consumer:type=consumer-fetch-manager-metrics,client-id=\\\"{clientid}\\\",topic=\\\"{topic}\\\"\\\", partition=\\\"{partition}\\\"\\n- pattern: kafka.(.+)\\u003ctype=(.+)-metrics, client-id=(.+), topic=(.+)\\u003e\\u003c\\u003e(.+-total|compression-rate|.+-avg)\\n  name: kafka_$2_$5\\n  labels:\\n    clientId: \\\"$3\\\"\\n    topic: \\\"$4\\\"\\n  help: \\\"Kafka $1 JMX metric type $2\\\"\\n  type: GAUGE\\n#kafka.connect:type=connect-node-metrics,client-id=\\\"{clientid}\\\",node-id=\\\"{nodeid}\\\"\\n#kafka.consumer:type=consumer-node-metrics,client-id=consumer-1,node-id=\\\"{nodeid}\\\"\\n- pattern: kafka.(.+)\\u003ctype=(.+)-metrics, client-id=(.+), node-id=(.+)\\u003e\\u003c\\u003e(.+-total|.+-avg)\\n  name: kafka_$2_$5\\n  labels:\\n    clientId: \\\"$3\\\"\\n    nodeId: \\\"$4\\\"\\n  help: \\\"Kafka $1 JMX metric type $2\\\"\\n  type: UNTYPED\\n#kafka.connect:type=kafka-metrics-count,client-id=\\\"{clientid}\\\"\\n#kafka.consumer:type=consumer-fetch-manager-metrics,client-id=\\\"{clientid}\\\"\\n#kafka.consumer:type=consumer-coordinator-metrics,client-id=\\\"{clientid}\\\"\\n#kafka.consumer:type=consumer-metrics,client-id=\\\"{clientid}\\\"\\n- pattern: kafka.(.+)\\u003ctype=(.+)-metrics, client-id=(.*)\\u003e\\u003c\\u003e(.+-total|.+-avg|.+-bytes|.+-count|.+-ratio|.+-age|.+-flight|.+-threads|.+-connectors|.+-tasks|.+-ago)\\n  name: kafka_$2_$4\\n  labels:\\n    clientId: \\\"$3\\\"\\n  help: \\\"Kafka $1 JMX metric type $2\\\"\\n  type: GAUGE\\n#kafka.connect:type=connector-task-metrics,connector=\\\"{connector}\\\",task=\\\"{task}\\u003c\\u003e status\\\"\\n- pattern: 'kafka.connect\\u003ctype=connector-task-metrics, connector=(.+), task=(.+)\\u003e\\u003c\\u003estatus: ([a-z-]+)'\\n  name: kafka_connect_connector_status\\n  value: 1\\n  labels:\\n    connector: \\\"$1\\\"\\n    task: \\\"$2\\\"\\n    status: \\\"$3\\\"\\n  help: \\\"Kafka Connect JMX Connector status\\\"\\n  type: GAUGE\\n#kafka.connect:type=task-error-metrics,connector=\\\"{connector}\\\",task=\\\"{task}\\\"\\n#kafka.connect:type=source-task-metrics,connector=\\\"{connector}\\\",task=\\\"{task}\\\"\\n#kafka.connect:type=sink-task-metrics,connector=\\\"{connector}\\\",task=\\\"{task}\\\"\\n#kafka.connect:type=connector-task-metrics,connector=\\\"{connector}\\\",task=\\\"{task}\\\"\\n- pattern: kafka.connect\\u003ctype=(.+)-metrics, connector=(.+), task=(.+)\\u003e\\u003c\\u003e(.+-total|.+-count|.+-ms|.+-ratio|.+-avg|.+-failures|.+-requests|.+-timestamp|.+-logged|.+-errors|.+-retries|.+-skipped)\\n  name: kafka_connect_$1_$4\\n  labels:\\n    connector: \\\"$2\\\"\\n    task: \\\"$3\\\"\\n  help: \\\"Kafka Connect JMX metric type $1\\\"\\n  type: GAUGE\\n#kafka.connect:type=connector-metrics,connector=\\\"{connector}\\\"\\n#kafka.connect:type=connect-worker-metrics,connector=\\\"{connector}\\\"\\n- pattern: kafka.connect\\u003ctype=connect-worker-metrics, connector=(.+)\\u003e\\u003c\\u003e([a-z-]+)\\n  name: kafka_connect_worker_$2\\n  labels:\\n    connector: \\\"$1\\\"\\n  help: \\\"Kafka Connect JMX metric $1\\\"\\n  type: GAUGE\\n#kafka.connect:type=connect-worker-metrics\\n- pattern: kafka.connect\\u003ctype=connect-worker-metrics\\u003e\\u003c\\u003e([a-z-]+)\\n  name: kafka_connect_worker_$1\\n  help: \\\"Kafka Connect JMX metric worker\\\"\\n  type: GAUGE\\n#kafka.connect:type=connect-worker-rebalance-metrics\\n- pattern: kafka.connect\\u003ctype=connect-worker-rebalance-metrics\\u003e\\u003c\\u003e([a-z-]+)\\n  name: kafka_connect_worker_rebalance_$1\\n  help: \\\"Kafka Connect JMX metric rebalance information\\\"\\n  type: GAUGE\\n#kafka.connect:type=MirrorSourceConnector\\n- pattern: kafka.connect.mirror\\u003ctype=MirrorSourceConnector, target=(.+), topic=(.+), partition=(.+)\\u003e\\u003c\\u003e([a-z-_]+)\\n  name: kafka_connect_mirror_mirrorsourceconnector_$4\\n  labels:\\n    target: \\\"$1\\\"\\n    topic: \\\"$2\\\"\\n    partition: \\\"$3\\\"\\n  help: \\\"Kafka Mirror Maker 2 Source Connector metrics\\\"\\n  type: GAUGE\\n#kafka.connect:type=MirrorCheckpointConnector\\n- pattern: kafka.connect.mirror\\u003ctype=MirrorCheckpointConnector, source=(.+), target=(.+)\\u003e\\u003c\\u003e([a-z-_]+)\\n  name: kafka_connect_mirror_mirrorcheckpointconnector_$3\\n  labels:\\n    source: \\\"$1\\\"\\n    target: \\\"$2\\\"\\n  help: \\\"Kafka Mirror Maker 2 Checkpoint Connector metrics\\\"\\n  type: GAUGE\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app\":\"strimzi\",\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"mirror-maker2-metrics\",\"namespace\":\"strimzi\"}}\n"
                        },
                        "creationTimestamp": "2022-09-06T16:01:53Z",
                        "labels": {
                            "app": "strimzi",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:metrics-config.yml": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-06T16:01:53Z"
                            }
                        ],
                        "name": "mirror-maker2-metrics",
                        "namespace": "strimzi",
                        "resourceVersion": "29523822",
                        "uid": "3589c89d-2aa4-4646-9353-bb6f34dfdcd4"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::mirrormaker2-metrics",
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::strimzi-k8s-provider::38ca7f66-2516-4e64-a324-b1e09443488c",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:core/v1:ConfigMap::cluster-info-configmap",
                "custom": true,
                "id": "amazon-cloudwatch/fluent-bit-cluster-info",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "cluster.name": "p-9-eks-cluster-eksCluster-d890a2b",
                        "http.port": "2020",
                        "http.server": "On",
                        "logs.region": "us-west-2",
                        "plane.id": "plane-9",
                        "read.head": "Off",
                        "read.tail": "On"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "fluent-bit-cluster-info",
                        "namespace": "amazon-cloudwatch"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "cluster.name": "p-9-eks-cluster-eksCluster-d890a2b",
                            "http.port": "2020",
                            "http.server": "On",
                            "logs.region": "us-west-2",
                            "plane.id": "plane-9",
                            "read.head": "Off",
                            "read.tail": "On"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "fluent-bit-cluster-info",
                            "namespace": "amazon-cloudwatch"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "cluster.name": "p-9-eks-cluster-eksCluster-d890a2b",
                        "http.port": "2020",
                        "http.server": "On",
                        "logs.region": "us-west-2",
                        "plane.id": "plane-9",
                        "read.head": "Off",
                        "read.tail": "On"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"cluster.name\":\"p-9-eks-cluster-eksCluster-d890a2b\",\"http.port\":\"2020\",\"http.server\":\"On\",\"logs.region\":\"us-west-2\",\"plane.id\":\"plane-9\",\"read.head\":\"Off\",\"read.tail\":\"On\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"fluent-bit-cluster-info\",\"namespace\":\"amazon-cloudwatch\"}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:24:34Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:cluster.name": {},
                                        "f:http.port": {},
                                        "f:http.server": {},
                                        "f:logs.region": {},
                                        "f:plane.id": {},
                                        "f:read.head": {},
                                        "f:read.tail": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:34Z"
                            }
                        ],
                        "name": "fluent-bit-cluster-info",
                        "namespace": "amazon-cloudwatch",
                        "resourceVersion": "1200",
                        "uid": "15cae676-3bd1-43cc-903b-8906618a3dcd"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-9::launchpad::kubernetes:core/v1:Namespace::cloudwatch-ns",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::23764612-7965-42f4-9ad1-ff50b151cf26",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": [
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-9-eks-cluster-eksCluster",
                        "urn:pulumi:plane-9::launchpad::aws:organizations/account:Account::convoy",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-9-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-9-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-9::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-9-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-9::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ],
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:plane-9::launchpad::kubernetes:core/v1:Namespace::cloudwatch-ns"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ServiceAccount::emissary-system/emissary-apiext",
                "custom": true,
                "id": "emissary-system/emissary-apiext",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext",
                        "namespace": "emissary-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:07Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"emissary-apiext-token-dd4gh\"}": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:07Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:07Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "namespace": "emissary-system",
                        "resourceVersion": "3235",
                        "uid": "1a684f84-c3e0-444b-b366-e31696c1b094"
                    },
                    "secrets": [
                        {
                            "name": "emissary-apiext-token-dd4gh"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:Service::emissary-system/emissary-apiext",
                "custom": true,
                "id": "emissary-system/emissary-apiext",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext",
                        "namespace": "emissary-system"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "https",
                                "port": 443,
                                "targetPort": "https"
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "https",
                                    "port": 443,
                                    "targetPort": "https"
                                }
                            ],
                            "selector": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"},\"spec\":{\"ports\":[{\"name\":\"https\",\"port\":443,\"targetPort\":\"https\"}],\"selector\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"type\":\"ClusterIP\"}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:07Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:internalTrafficPolicy": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"port\":443,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:sessionAffinity": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:07Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "namespace": "emissary-system",
                        "resourceVersion": "3220",
                        "uid": "efbd33fa-721e-4c65-a360-1ab412cacd0a"
                    },
                    "spec": {
                        "clusterIP": "172.20.116.6",
                        "clusterIPs": [
                            "172.20.116.6"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "https",
                                "port": 443,
                                "protocol": "TCP",
                                "targetPort": "https"
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:Namespace::emissary-system",
                "custom": true,
                "id": "emissary-system",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "emissary-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "emissary-system"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"emissary-system\"}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:07Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "emissary-system"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:kubernetes.io/metadata.name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:07Z"
                            }
                        ],
                        "name": "emissary-system",
                        "resourceVersion": "3206",
                        "uid": "26a99082-34d2-4316-9475-19b0ed654378"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apps/v1:Deployment::emissary-system/emissary-apiext",
                "custom": true,
                "id": "emissary-system/emissary-apiext",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext",
                        "namespace": "emissary-system"
                    },
                    "spec": {
                        "replicas": 3,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            }
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "app.kubernetes.io/instance": "emissary-apiext",
                                    "app.kubernetes.io/managed-by": "kubectl_apply_-f_emissary-apiext.yaml",
                                    "app.kubernetes.io/name": "emissary-apiext",
                                    "app.kubernetes.io/part-of": "emissary-apiext"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "apiext",
                                            "emissary-apiext"
                                        ],
                                        "image": "docker.io/emissaryingress/emissary:3.0.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/probes/live",
                                                "port": 8080,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 5,
                                            "periodSeconds": 3
                                        },
                                        "name": "emissary-apiext",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "name": "http"
                                            },
                                            {
                                                "containerPort": 8443,
                                                "name": "https"
                                            }
                                        ]
                                    }
                                ],
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                },
                                "serviceAccountName": "emissary-apiext"
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        },
                        "spec": {
                            "replicas": 3,
                            "selector": {
                                "matchLabels": {
                                    "app.kubernetes.io/instance": "emissary-apiext",
                                    "app.kubernetes.io/name": "emissary-apiext",
                                    "app.kubernetes.io/part-of": "emissary-apiext"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "app.kubernetes.io/instance": "emissary-apiext",
                                        "app.kubernetes.io/managed-by": "kubectl_apply_-f_emissary-apiext.yaml",
                                        "app.kubernetes.io/name": "emissary-apiext",
                                        "app.kubernetes.io/part-of": "emissary-apiext"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "command": [
                                                "apiext",
                                                "emissary-apiext"
                                            ],
                                            "image": "docker.io/emissaryingress/emissary:3.0.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/probes/live",
                                                    "port": 8080,
                                                    "scheme": "HTTP"
                                                },
                                                "initialDelaySeconds": 5,
                                                "periodSeconds": 3
                                            },
                                            "name": "emissary-apiext",
                                            "ports": [
                                                {
                                                    "containerPort": 8080,
                                                    "name": "http"
                                                },
                                                {
                                                    "containerPort": 8443,
                                                    "name": "https"
                                                }
                                            ]
                                        }
                                    ],
                                    "nodeSelector": {
                                        "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                        "kubernetes.io/arch": "amd64"
                                    },
                                    "serviceAccountName": "emissary-apiext"
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "5",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"kubectl_apply_-f_emissary-apiext.yaml\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"}},\"spec\":{\"containers\":[{\"command\":[\"apiext\",\"emissary-apiext\"],\"image\":\"docker.io/emissaryingress/emissary:3.0.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/probes/live\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":5,\"periodSeconds\":3},\"name\":\"emissary-apiext\",\"ports\":[{\"containerPort\":8080,\"name\":\"http\"},{\"containerPort\":8443,\"name\":\"https\"}]}],\"nodeSelector\":{\"eks.amazonaws.com/capacityType\":\"ON_DEMAND\",\"kubernetes.io/arch\":\"amd64\"},\"serviceAccountName\":\"emissary-apiext\"}}}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:07Z",
                        "generation": 5,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:progressDeadlineSeconds": {},
                                        "f:replicas": {},
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:strategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        },
                                        "f:template": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"emissary-apiext\"}": {
                                                        ".": {},
                                                        "f:command": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            },
                                                            "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:resources": {},
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {}
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:nodeSelector": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-07-09T04:35:28Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-01T21:59:46Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "namespace": "emissary-system",
                        "resourceVersion": "15417537",
                        "uid": "e448e950-020f-4066-be9f-10259595bac8"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 3,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "app.kubernetes.io/instance": "emissary-apiext",
                                    "app.kubernetes.io/managed-by": "kubectl_apply_-f_emissary-apiext.yaml",
                                    "app.kubernetes.io/name": "emissary-apiext",
                                    "app.kubernetes.io/part-of": "emissary-apiext"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "apiext",
                                            "emissary-apiext"
                                        ],
                                        "image": "docker.io/emissaryingress/emissary:3.0.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/probes/live",
                                                "port": 8080,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 5,
                                            "periodSeconds": 3,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "emissary-apiext",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "name": "http",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 8443,
                                                "name": "https",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {},
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "emissary-apiext",
                                "serviceAccountName": "emissary-apiext",
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 3,
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-07-14T18:30:16Z",
                                "lastUpdateTime": "2022-07-14T18:30:16Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2022-06-20T23:31:07Z",
                                "lastUpdateTime": "2022-08-01T21:59:46Z",
                                "message": "ReplicaSet \"emissary-apiext-7cbc86f56\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 5,
                        "readyReplicas": 3,
                        "replicas": 3,
                        "updatedReplicas": 3
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::emissary-apiext",
                "custom": true,
                "id": "emissary-apiext",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "apiextensions.k8s.io"
                            ],
                            "resources": [
                                "customresourcedefinitions"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apiextensions.k8s.io"
                            ],
                            "resourceNames": [
                                "authservices.getambassador.io",
                                "consulresolvers.getambassador.io",
                                "devportals.getambassador.io",
                                "hosts.getambassador.io",
                                "kubernetesendpointresolvers.getambassador.io",
                                "kubernetesserviceresolvers.getambassador.io",
                                "listeners.getambassador.io",
                                "logservices.getambassador.io",
                                "mappings.getambassador.io",
                                "modules.getambassador.io",
                                "ratelimitservices.getambassador.io",
                                "tcpmappings.getambassador.io",
                                "tlscontexts.getambassador.io",
                                "tracingservices.getambassador.io"
                            ],
                            "resources": [
                                "customresourcedefinitions"
                            ],
                            "verbs": [
                                "update"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "apiextensions.k8s.io"
                                ],
                                "resources": [
                                    "customresourcedefinitions"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apiextensions.k8s.io"
                                ],
                                "resourceNames": [
                                    "authservices.getambassador.io",
                                    "consulresolvers.getambassador.io",
                                    "devportals.getambassador.io",
                                    "hosts.getambassador.io",
                                    "kubernetesendpointresolvers.getambassador.io",
                                    "kubernetesserviceresolvers.getambassador.io",
                                    "listeners.getambassador.io",
                                    "logservices.getambassador.io",
                                    "mappings.getambassador.io",
                                    "modules.getambassador.io",
                                    "ratelimitservices.getambassador.io",
                                    "tcpmappings.getambassador.io",
                                    "tlscontexts.getambassador.io",
                                    "tracingservices.getambassador.io"
                                ],
                                "resources": [
                                    "customresourcedefinitions"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\"},\"rules\":[{\"apiGroups\":[\"apiextensions.k8s.io\"],\"resources\":[\"customresourcedefinitions\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"apiextensions.k8s.io\"],\"resourceNames\":[\"authservices.getambassador.io\",\"consulresolvers.getambassador.io\",\"devportals.getambassador.io\",\"hosts.getambassador.io\",\"kubernetesendpointresolvers.getambassador.io\",\"kubernetesserviceresolvers.getambassador.io\",\"listeners.getambassador.io\",\"logservices.getambassador.io\",\"mappings.getambassador.io\",\"modules.getambassador.io\",\"ratelimitservices.getambassador.io\",\"tcpmappings.getambassador.io\",\"tlscontexts.getambassador.io\",\"tracingservices.getambassador.io\"],\"resources\":[\"customresourcedefinitions\"],\"verbs\":[\"update\"]}]}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:07Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:07Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "resourceVersion": "3211",
                        "uid": "19c4e03d-daa0-4497-9e9e-d224dc2fae61"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "apiextensions.k8s.io"
                            ],
                            "resources": [
                                "customresourcedefinitions"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apiextensions.k8s.io"
                            ],
                            "resourceNames": [
                                "authservices.getambassador.io",
                                "consulresolvers.getambassador.io",
                                "devportals.getambassador.io",
                                "hosts.getambassador.io",
                                "kubernetesendpointresolvers.getambassador.io",
                                "kubernetesserviceresolvers.getambassador.io",
                                "listeners.getambassador.io",
                                "logservices.getambassador.io",
                                "mappings.getambassador.io",
                                "modules.getambassador.io",
                                "ratelimitservices.getambassador.io",
                                "tcpmappings.getambassador.io",
                                "tlscontexts.getambassador.io",
                                "tracingservices.getambassador.io"
                            ],
                            "resources": [
                                "customresourcedefinitions"
                            ],
                            "verbs": [
                                "update"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::emissary-apiext",
                "custom": true,
                "id": "emissary-apiext",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "emissary-apiext"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "emissary-apiext"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "emissary-apiext",
                                "namespace": "emissary-system"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"emissary-apiext\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}]}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:07Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:07Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "resourceVersion": "3252",
                        "uid": "37cb0716-2b71-448f-a5e6-9f93e916949e"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "emissary-apiext"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:Role::emissary-system/emissary-apiext",
                "custom": true,
                "id": "emissary-system/emissary-apiext",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:Role",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext",
                        "namespace": "emissary-system"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "emissary-ingress-webhook-ca"
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "get",
                                "update"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "emissary-ingress-webhook-ca"
                                ],
                                "resources": [
                                    "secrets"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"secrets\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"emissary-ingress-webhook-ca\"],\"resources\":[\"secrets\"],\"verbs\":[\"get\",\"update\"]}]}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:07Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:07Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "namespace": "emissary-system",
                        "resourceVersion": "3264",
                        "uid": "9cded3c2-f2b5-4f5e-b893-24bfe230c53b"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "emissary-ingress-webhook-ca"
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "get",
                                "update"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::logservices.getambassador.io",
                "custom": true,
                "id": "logservices.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "logservices.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "LogService",
                            "listKind": "LogServiceList",
                            "plural": "logservices",
                            "singular": "logservice"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "LogServiceSpec defines the desired state of LogService",
                                                "properties": {
                                                    "driver": {
                                                        "enum": [
                                                            "tcp",
                                                            "http"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "driver_config": {
                                                        "properties": {
                                                            "additional_log_headers": {
                                                                "items": {
                                                                    "properties": {
                                                                        "during_request": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_response": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_trailer": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "header_name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "flush_interval_byte_size": {
                                                        "type": "integer"
                                                    },
                                                    "flush_interval_time": {
                                                        "type": "integer"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "v3ProtocolVersion": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "LogServiceSpec defines the desired state of LogService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "tcp",
                                                            "http"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "driver_config": {
                                                        "properties": {
                                                            "additional_log_headers": {
                                                                "items": {
                                                                    "properties": {
                                                                        "during_request": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_response": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_trailer": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "header_name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "flush_interval_byte_size": {
                                                        "type": "integer"
                                                    },
                                                    "flush_interval_time": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}s`/`SecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "grpc": {
                                                        "description": "TODO(lukeshu): In v3alpha2, drop this LogService.spec.grpc.  Due to sloppy implementation it is required to be present, and required to be 'true'.  It is silly to have a required field with only one valid value, we should just remove the thing.",
                                                        "type": "boolean"
                                                    },
                                                    "protocol_version": {
                                                        "description": "ProtocolVersion is the envoy api transport protocol version",
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "logservices.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "LogService",
                                "listKind": "LogServiceList",
                                "plural": "logservices",
                                "singular": "logservice"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "LogService is the Schema for the logservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "LogServiceSpec defines the desired state of LogService",
                                                    "properties": {
                                                        "driver": {
                                                            "enum": [
                                                                "tcp",
                                                                "http"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "driver_config": {
                                                            "properties": {
                                                                "additional_log_headers": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "during_request": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "during_response": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "during_trailer": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "header_name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "flush_interval_byte_size": {
                                                            "type": "integer"
                                                        },
                                                        "flush_interval_time": {
                                                            "type": "integer"
                                                        },
                                                        "grpc": {
                                                            "type": "boolean"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "v3ProtocolVersion": {
                                                            "enum": [
                                                                "v2",
                                                                "v3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "LogService is the Schema for the logservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "LogServiceSpec defines the desired state of LogService",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "driver": {
                                                            "enum": [
                                                                "tcp",
                                                                "http"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "driver_config": {
                                                            "properties": {
                                                                "additional_log_headers": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "during_request": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "during_response": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "during_trailer": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "header_name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "flush_interval_byte_size": {
                                                            "type": "integer"
                                                        },
                                                        "flush_interval_time": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}s`/`SecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "grpc": {
                                                            "description": "TODO(lukeshu): In v3alpha2, drop this LogService.spec.grpc.  Due to sloppy implementation it is required to be present, and required to be 'true'.  It is silly to have a required field with only one valid value, we should just remove the thing.",
                                                            "type": "boolean"
                                                        },
                                                        "protocol_version": {
                                                            "description": "ProtocolVersion is the envoy api transport protocol version",
                                                            "enum": [
                                                                "v2",
                                                                "v3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "LogService is the Schema for the logservices API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"logservices.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"LogService\",\"listKind\":\"LogServiceList\",\"plural\":\"logservices\",\"singular\":\"logservice\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"LogService is the Schema for the logservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"LogServiceSpec defines the desired state of LogService\",\"properties\":{\"driver\":{\"enum\":[\"tcp\",\"http\"],\"type\":\"string\"},\"driver_config\":{\"properties\":{\"additional_log_headers\":{\"items\":{\"properties\":{\"during_request\":{\"type\":\"boolean\"},\"during_response\":{\"type\":\"boolean\"},\"during_trailer\":{\"type\":\"boolean\"},\"header_name\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"},\"flush_interval_byte_size\":{\"type\":\"integer\"},\"flush_interval_time\":{\"type\":\"integer\"},\"grpc\":{\"type\":\"boolean\"},\"service\":{\"type\":\"string\"},\"v3ProtocolVersion\":{\"enum\":[\"v2\",\"v3\"],\"type\":\"string\"},\"v3StatsName\":{\"type\":\"string\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"LogService is the Schema for the logservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"LogServiceSpec defines the desired state of LogService\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"driver\":{\"enum\":[\"tcp\",\"http\"],\"type\":\"string\"},\"driver_config\":{\"properties\":{\"additional_log_headers\":{\"items\":{\"properties\":{\"during_request\":{\"type\":\"boolean\"},\"during_response\":{\"type\":\"boolean\"},\"during_trailer\":{\"type\":\"boolean\"},\"header_name\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"},\"flush_interval_byte_size\":{\"type\":\"integer\"},\"flush_interval_time\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}s`/`SecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"grpc\":{\"description\":\"TODO(lukeshu): In v3alpha2, drop this LogService.spec.grpc.  Due to sloppy implementation it is required to be present, and required to be 'true'.  It is silly to have a required field with only one valid value, we should just remove the thing.\",\"type\":\"boolean\"},\"protocol_version\":{\"description\":\"ProtocolVersion is the envoy api transport protocol version\",\"enum\":[\"v2\",\"v3\"],\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"stats_name\":{\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"LogService is the Schema for the logservices API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:07Z",
                        "generation": 4,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:07Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:07Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:conversion": {
                                            "f:webhook": {
                                                "f:clientConfig": {
                                                    "f:caBundle": {},
                                                    "f:service": {
                                                        "f:path": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "apiext",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:21Z"
                            }
                        ],
                        "name": "logservices.getambassador.io",
                        "resourceVersion": "10647545",
                        "uid": "d4c1e4b6-0fb0-40f4-b9c6-8518103779f7"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZJRENDQXdpZ0F3SUJBZ0lSQU5qKzkvNlFaVjN5cGRqUjhaSXByakl3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUI0WERUSXlNRFl5TURJek16RXlNVm9YRFRJegpNRFl5TURJek16RXlNVm93R2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUlJQ0lqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBOWFnSE5MVFd5dkdVbFY3SnArUDJScll2bko2cWhmaWsKbURUbndlWDFaMDNTMVJhTnFyTUVzY2lsMC82Mmlub250L1gyS3J4ckhhT3ltZEt4MGF3ZldpR0w3TWZuRHVwMwpsMVhxUEhNeFYyVjFLazZsOHNkbDBObytpTVAwSGhPTEVRcXkxQ0E1MTJCbmF0THUxblVjTEhiMUVnbEhET01NCnlkbWdPenRUMXhMS3prN3pYWGI2K3RxK1I3N2lOSU5xcnF5T3J1SW9qeG1MdGN0LzdielFWTXRodkhDR3hvWFMKbU94ZXJFczVlUHJMN0g5L1hSYzZCSFJEcXhKZDVFMXpJcVZzdFB1OWkxSjJSMnhqZXNqRC9xSEQ4eEEzRkdLcApRWER0RW5rR0I1TWpMbUhjSGZTRTBqY01QU1ZMME84ZWNmcEY5Q1Z6dE5QOGdUaUhuRnBxYU5MWVl1SThJQXo1CnZsZkJ1QmRPWTU2OGc0bGN3OG1JbldqY2J3VlNhYlpYVVdTZ1JmVjJaN2hZS2JQeFhYcndJR0pjc1hsYk0xeWoKWFlNU3JWZFZSOHI0ZnhDWi9HY0loL0RxelQ4ZHhiUnYrZjJjY2NNOG5NOGlsYTJYQkpkZnFrdURZcnl3S204LwpSTWVZMml5ckZKZkg1bmYrTjZYMERVK1FoMWlPMG1jYWhXdFZ6d2x6dzFuZGpkRXVocXJzV1BuNDRrbWlKL3dUCmx3OWZBKy9tdHV0STJjQStxdTFTcEMxR0h0cTZ3MEhBKzhrSTQxOUtwRkhYNSt6bFAxMFhzbWNEY0w4ekhlMnkKSmY2ZVI0YmE0enduZWRqUE5pcXFhZVlwVm1mT3RlanMyUkJRd2Z2Q2ErcjBEQ3BJeXhsY0FzN2ZKSENzdXRsUQpuVnB6NzZsa2FLTUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLRU1CMEdBMVVkSlFRV01CUUdDQ3NHCkFRVUZCd01DQmdnckJnRUZCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTbUZJTEwKQlBZQmduUFRqY0Z5UWNscEZNVUNCREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBd013dkNUeDJOWTNQUStsSQpKbTlvV0dHVTdIRVI0Qlh5dnJ0UkhicXhodzl3R1ZEam54aHNjQXNYUDBKL1Jrd2JRTmVZbFJMbkFLNGxzcDdCCmFjcEFsbmtzc2pRZlI1Z25jbUI1aklzQUZLOEhvbHhSOFVGYzUvblFkbitPVDZGYyt2RHljM2JPUWd5aHphTzgKTHowbFNTYXlIaS9adlZqOHlxdVZMSEpmYWh1MWpWWm9oQktVZ1V2YlUyMnhLRkpidUViVE9IVUQvU2tVWjBGeQpKUnpNMVpKZXh1dVdYZk5US0tYQ3M2Q1dHdlpMT2VpNGZpbzRoMjgvS3lJYU9Tb2JES0RlY2I1dmRKUDlnRjJFCmxNWjNsWjUvWFhmV2RGR1B1ZkUzNHd5WHdpNjh0bXZydlZLOEk5WGhmM0haWUg2RDhxbjhvYVRnZ05FUG84a0MKS25VUWdhUFRDYWt4R1hjTmpiZmIyeEpOd1RIVUs5ZzIxZnkyWkRIUHhQczg4eW1pbWwzbEh0eGUzRU8xZGxpagp5QitmekcvOXVlZzJEUncrUDFRM21VOEQ3L1ZJRWtoZlV3Zzk1T1JkMmlDTk05SklYMzJHWU1uakk1ZEJyVHpPCjlMMXE0OEx2QzZkNm40b2h5MkZtZnZmNHQwREtOQkdIMlBHQXRWa0EwNUh4R3VQYlR2OUdNeFAxbUNyb2NkWjUKcVRpNThNYmRGZE9BM2pHNHBObHhMTytJSGxoTm9IOS9WMVcwU1JHYzB6OXhnN05Jc2tCQ3pNc1AvdGVjc01LRApPczlvK3g5VlJ6MlJBWlI2VHFlNHdCSFllWC9uLzJPYnNPZ0VzSnMrYVFrdHBJVEs3RzVkZDhJaGx6OXNDell6CnNWMWlsYWFTZG1ZclYwKzg1YWtFbklMczhNST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "path": "/webhooks/crd-convert",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "LogService",
                            "listKind": "LogServiceList",
                            "plural": "logservices",
                            "singular": "logservice"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "LogServiceSpec defines the desired state of LogService",
                                                "properties": {
                                                    "driver": {
                                                        "enum": [
                                                            "tcp",
                                                            "http"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "driver_config": {
                                                        "properties": {
                                                            "additional_log_headers": {
                                                                "items": {
                                                                    "properties": {
                                                                        "during_request": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_response": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_trailer": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "header_name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "flush_interval_byte_size": {
                                                        "type": "integer"
                                                    },
                                                    "flush_interval_time": {
                                                        "type": "integer"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "v3ProtocolVersion": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "LogServiceSpec defines the desired state of LogService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "tcp",
                                                            "http"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "driver_config": {
                                                        "properties": {
                                                            "additional_log_headers": {
                                                                "items": {
                                                                    "properties": {
                                                                        "during_request": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_response": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_trailer": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "header_name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "flush_interval_byte_size": {
                                                        "type": "integer"
                                                    },
                                                    "flush_interval_time": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}s`/`SecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "grpc": {
                                                        "description": "TODO(lukeshu): In v3alpha2, drop this LogService.spec.grpc.  Due to sloppy implementation it is required to be present, and required to be 'true'.  It is silly to have a required field with only one valid value, we should just remove the thing.",
                                                        "type": "boolean"
                                                    },
                                                    "protocol_version": {
                                                        "description": "ProtocolVersion is the envoy api transport protocol version",
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "LogService",
                            "listKind": "LogServiceList",
                            "plural": "logservices",
                            "singular": "logservice"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-06-20T23:31:07Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-06-20T23:31:07Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::modules.getambassador.io",
                "custom": true,
                "id": "modules.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "modules.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Module",
                            "listKind": "ModuleList",
                            "plural": "modules",
                            "singular": "module"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "properties": {
                                                    "config": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TODO(lukeshu): In v3alpha2, get rid of unnecessary nesting and move `ModuleSpec.config.*` to `ModuleSpec.*`.",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "config": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change the default from `diagnostics.enabled=true` to `diagnostics.enabled=false`.  This needs conversion support in apiext.  See the related comment in irambassador.py. \n TODO(lukeshu): Structurally type ModuleSpec.Config.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    }
                                                },
                                                "required": [
                                                    "config"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\".",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "modules.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "Module",
                                "listKind": "ModuleList",
                                "plural": "modules",
                                "singular": "module"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "properties": {
                                                        "config": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TODO(lukeshu): In v3alpha2, get rid of unnecessary nesting and move `ModuleSpec.config.*` to `ModuleSpec.*`.",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "config": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change the default from `diagnostics.enabled=true` to `diagnostics.enabled=false`.  This needs conversion support in apiext.  See the related comment in irambassador.py. \n TODO(lukeshu): Structurally type ModuleSpec.Config.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        }
                                                    },
                                                    "required": [
                                                        "config"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\".",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"modules.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"Module\",\"listKind\":\"ModuleList\",\"plural\":\"modules\",\"singular\":\"module\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \\\"ambassador\\\" or \\\"tls\\\". \\n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"properties\":{\"config\":{\"description\":\"UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \\\"ambassador\\\" or \\\"tls\\\". \\n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TODO(lukeshu): In v3alpha2, get rid of unnecessary nesting and move `ModuleSpec.config.*` to `ModuleSpec.*`.\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"config\":{\"description\":\"TODO(lukeshu): In v3alpha2, change the default from `diagnostics.enabled=true` to `diagnostics.enabled=false`.  This needs conversion support in apiext.  See the related comment in irambassador.py. \\n TODO(lukeshu): Structurally type ModuleSpec.Config.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"required\":[\"config\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \\\"ambassador\\\" or \\\"tls\\\".\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:10Z",
                        "generation": 3,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:10Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:10Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:conversion": {
                                            "f:webhook": {
                                                "f:clientConfig": {
                                                    "f:caBundle": {},
                                                    "f:service": {
                                                        "f:path": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "apiext",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:21Z"
                            }
                        ],
                        "name": "modules.getambassador.io",
                        "resourceVersion": "10647544",
                        "uid": "522b54da-e960-46cf-bbef-afe2c51515b8"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZJRENDQXdpZ0F3SUJBZ0lSQU5qKzkvNlFaVjN5cGRqUjhaSXByakl3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUI0WERUSXlNRFl5TURJek16RXlNVm9YRFRJegpNRFl5TURJek16RXlNVm93R2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUlJQ0lqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBOWFnSE5MVFd5dkdVbFY3SnArUDJScll2bko2cWhmaWsKbURUbndlWDFaMDNTMVJhTnFyTUVzY2lsMC82Mmlub250L1gyS3J4ckhhT3ltZEt4MGF3ZldpR0w3TWZuRHVwMwpsMVhxUEhNeFYyVjFLazZsOHNkbDBObytpTVAwSGhPTEVRcXkxQ0E1MTJCbmF0THUxblVjTEhiMUVnbEhET01NCnlkbWdPenRUMXhMS3prN3pYWGI2K3RxK1I3N2lOSU5xcnF5T3J1SW9qeG1MdGN0LzdielFWTXRodkhDR3hvWFMKbU94ZXJFczVlUHJMN0g5L1hSYzZCSFJEcXhKZDVFMXpJcVZzdFB1OWkxSjJSMnhqZXNqRC9xSEQ4eEEzRkdLcApRWER0RW5rR0I1TWpMbUhjSGZTRTBqY01QU1ZMME84ZWNmcEY5Q1Z6dE5QOGdUaUhuRnBxYU5MWVl1SThJQXo1CnZsZkJ1QmRPWTU2OGc0bGN3OG1JbldqY2J3VlNhYlpYVVdTZ1JmVjJaN2hZS2JQeFhYcndJR0pjc1hsYk0xeWoKWFlNU3JWZFZSOHI0ZnhDWi9HY0loL0RxelQ4ZHhiUnYrZjJjY2NNOG5NOGlsYTJYQkpkZnFrdURZcnl3S204LwpSTWVZMml5ckZKZkg1bmYrTjZYMERVK1FoMWlPMG1jYWhXdFZ6d2x6dzFuZGpkRXVocXJzV1BuNDRrbWlKL3dUCmx3OWZBKy9tdHV0STJjQStxdTFTcEMxR0h0cTZ3MEhBKzhrSTQxOUtwRkhYNSt6bFAxMFhzbWNEY0w4ekhlMnkKSmY2ZVI0YmE0enduZWRqUE5pcXFhZVlwVm1mT3RlanMyUkJRd2Z2Q2ErcjBEQ3BJeXhsY0FzN2ZKSENzdXRsUQpuVnB6NzZsa2FLTUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLRU1CMEdBMVVkSlFRV01CUUdDQ3NHCkFRVUZCd01DQmdnckJnRUZCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTbUZJTEwKQlBZQmduUFRqY0Z5UWNscEZNVUNCREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBd013dkNUeDJOWTNQUStsSQpKbTlvV0dHVTdIRVI0Qlh5dnJ0UkhicXhodzl3R1ZEam54aHNjQXNYUDBKL1Jrd2JRTmVZbFJMbkFLNGxzcDdCCmFjcEFsbmtzc2pRZlI1Z25jbUI1aklzQUZLOEhvbHhSOFVGYzUvblFkbitPVDZGYyt2RHljM2JPUWd5aHphTzgKTHowbFNTYXlIaS9adlZqOHlxdVZMSEpmYWh1MWpWWm9oQktVZ1V2YlUyMnhLRkpidUViVE9IVUQvU2tVWjBGeQpKUnpNMVpKZXh1dVdYZk5US0tYQ3M2Q1dHdlpMT2VpNGZpbzRoMjgvS3lJYU9Tb2JES0RlY2I1dmRKUDlnRjJFCmxNWjNsWjUvWFhmV2RGR1B1ZkUzNHd5WHdpNjh0bXZydlZLOEk5WGhmM0haWUg2RDhxbjhvYVRnZ05FUG84a0MKS25VUWdhUFRDYWt4R1hjTmpiZmIyeEpOd1RIVUs5ZzIxZnkyWkRIUHhQczg4eW1pbWwzbEh0eGUzRU8xZGxpagp5QitmekcvOXVlZzJEUncrUDFRM21VOEQ3L1ZJRWtoZlV3Zzk1T1JkMmlDTk05SklYMzJHWU1uakk1ZEJyVHpPCjlMMXE0OEx2QzZkNm40b2h5MkZtZnZmNHQwREtOQkdIMlBHQXRWa0EwNUh4R3VQYlR2OUdNeFAxbUNyb2NkWjUKcVRpNThNYmRGZE9BM2pHNHBObHhMTytJSGxoTm9IOS9WMVcwU1JHYzB6OXhnN05Jc2tCQ3pNc1AvdGVjc01LRApPczlvK3g5VlJ6MlJBWlI2VHFlNHdCSFllWC9uLzJPYnNPZ0VzSnMrYVFrdHBJVEs3RzVkZDhJaGx6OXNDell6CnNWMWlsYWFTZG1ZclYwKzg1YWtFbklMczhNST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "path": "/webhooks/crd-convert",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Module",
                            "listKind": "ModuleList",
                            "plural": "modules",
                            "singular": "module"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "properties": {
                                                    "config": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TODO(lukeshu): In v3alpha2, get rid of unnecessary nesting and move `ModuleSpec.config.*` to `ModuleSpec.*`.",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "config": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change the default from `diagnostics.enabled=true` to `diagnostics.enabled=false`.  This needs conversion support in apiext.  See the related comment in irambassador.py. \n TODO(lukeshu): Structurally type ModuleSpec.Config.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    }
                                                },
                                                "required": [
                                                    "config"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\".",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Module",
                            "listKind": "ModuleList",
                            "plural": "modules",
                            "singular": "module"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-06-20T23:31:10Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-06-20T23:31:10Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::devportals.getambassador.io",
                "custom": true,
                "id": "devportals.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "devportals.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "DevPortal",
                            "listKind": "DevPortalList",
                            "plural": "devportals",
                            "singular": "devportal"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "DevPortalSpec defines the desired state of DevPortal",
                                                "properties": {
                                                    "content": {
                                                        "description": "Content specifies where the content shown in the DevPortal come from",
                                                        "properties": {
                                                            "branch": {
                                                                "type": "string"
                                                            },
                                                            "dir": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "default": {
                                                        "description": "Default must be true when this is the default DevPortal",
                                                        "type": "boolean"
                                                    },
                                                    "docs": {
                                                        "description": "Docs is a static docs definition",
                                                        "items": {
                                                            "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                            "properties": {
                                                                "service": {
                                                                    "description": "Service is the service being documented",
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "description": "URL is the URL used for obtaining docs",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "naming_scheme": {
                                                        "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                        "enum": [
                                                            "namespace.name",
                                                            "name.prefix"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "preserve_servers": {
                                                        "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                        "type": "boolean"
                                                    },
                                                    "search": {
                                                        "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                        "properties": {
                                                            "enabled": {
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                "enum": [
                                                                    "title-only",
                                                                    "all-content"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector is used for choosing what is shown in the DevPortal",
                                                        "properties": {
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                "type": "object"
                                                            },
                                                            "matchNamespaces": {
                                                                "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "DevPortalSpec defines the desired state of DevPortal",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "content": {
                                                        "description": "Content specifies where the content shown in the DevPortal come from",
                                                        "properties": {
                                                            "branch": {
                                                                "type": "string"
                                                            },
                                                            "dir": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "default": {
                                                        "description": "Default must be true when this is the default DevPortal",
                                                        "type": "boolean"
                                                    },
                                                    "docs": {
                                                        "description": "Docs is a static docs definition",
                                                        "items": {
                                                            "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                            "properties": {
                                                                "service": {
                                                                    "description": "Service is the service being documented",
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "description": "URL is the URL used for obtaining docs",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "naming_scheme": {
                                                        "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                        "enum": [
                                                            "namespace.name",
                                                            "name.prefix"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "preserve_servers": {
                                                        "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                        "type": "boolean"
                                                    },
                                                    "search": {
                                                        "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                        "properties": {
                                                            "enabled": {
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                "enum": [
                                                                    "title-only",
                                                                    "all-content"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector is used for choosing what is shown in the DevPortal",
                                                        "properties": {
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                "type": "object"
                                                            },
                                                            "matchNamespaces": {
                                                                "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "devportals.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "DevPortal",
                                "listKind": "DevPortalList",
                                "plural": "devportals",
                                "singular": "devportal"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "DevPortalSpec defines the desired state of DevPortal",
                                                    "properties": {
                                                        "content": {
                                                            "description": "Content specifies where the content shown in the DevPortal come from",
                                                            "properties": {
                                                                "branch": {
                                                                    "type": "string"
                                                                },
                                                                "dir": {
                                                                    "type": "string"
                                                                },
                                                                "url": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "default": {
                                                            "description": "Default must be true when this is the default DevPortal",
                                                            "type": "boolean"
                                                        },
                                                        "docs": {
                                                            "description": "Docs is a static docs definition",
                                                            "items": {
                                                                "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                                "properties": {
                                                                    "service": {
                                                                        "description": "Service is the service being documented",
                                                                        "type": "string"
                                                                    },
                                                                    "timeout_ms": {
                                                                        "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                        "type": "integer"
                                                                    },
                                                                    "url": {
                                                                        "description": "URL is the URL used for obtaining docs",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "naming_scheme": {
                                                            "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                            "enum": [
                                                                "namespace.name",
                                                                "name.prefix"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "preserve_servers": {
                                                            "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                            "type": "boolean"
                                                        },
                                                        "search": {
                                                            "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                            "properties": {
                                                                "enabled": {
                                                                    "type": "boolean"
                                                                },
                                                                "type": {
                                                                    "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                    "enum": [
                                                                        "title-only",
                                                                        "all-content"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "selector": {
                                                            "description": "Selector is used for choosing what is shown in the DevPortal",
                                                            "properties": {
                                                                "matchLabels": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                    "type": "object"
                                                                },
                                                                "matchNamespaces": {
                                                                    "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "DevPortalSpec defines the desired state of DevPortal",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "content": {
                                                            "description": "Content specifies where the content shown in the DevPortal come from",
                                                            "properties": {
                                                                "branch": {
                                                                    "type": "string"
                                                                },
                                                                "dir": {
                                                                    "type": "string"
                                                                },
                                                                "url": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "default": {
                                                            "description": "Default must be true when this is the default DevPortal",
                                                            "type": "boolean"
                                                        },
                                                        "docs": {
                                                            "description": "Docs is a static docs definition",
                                                            "items": {
                                                                "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                                "properties": {
                                                                    "service": {
                                                                        "description": "Service is the service being documented",
                                                                        "type": "string"
                                                                    },
                                                                    "timeout_ms": {
                                                                        "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                        "type": "integer"
                                                                    },
                                                                    "url": {
                                                                        "description": "URL is the URL used for obtaining docs",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "naming_scheme": {
                                                            "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                            "enum": [
                                                                "namespace.name",
                                                                "name.prefix"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "preserve_servers": {
                                                            "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                            "type": "boolean"
                                                        },
                                                        "search": {
                                                            "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                            "properties": {
                                                                "enabled": {
                                                                    "type": "boolean"
                                                                },
                                                                "type": {
                                                                    "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                    "enum": [
                                                                        "title-only",
                                                                        "all-content"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "selector": {
                                                            "description": "Selector is used for choosing what is shown in the DevPortal",
                                                            "properties": {
                                                                "matchLabels": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                    "type": "object"
                                                                },
                                                                "matchNamespaces": {
                                                                    "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "DevPortal is the Schema for the DevPortals API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"devportals.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"DevPortal\",\"listKind\":\"DevPortalList\",\"plural\":\"devportals\",\"singular\":\"devportal\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"DevPortal is the Schema for the DevPortals API \\n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \\n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \\n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"DevPortalSpec defines the desired state of DevPortal\",\"properties\":{\"content\":{\"description\":\"Content specifies where the content shown in the DevPortal come from\",\"properties\":{\"branch\":{\"type\":\"string\"},\"dir\":{\"type\":\"string\"},\"url\":{\"type\":\"string\"}},\"type\":\"object\"},\"default\":{\"description\":\"Default must be true when this is the default DevPortal\",\"type\":\"boolean\"},\"docs\":{\"description\":\"Docs is a static docs definition\",\"items\":{\"description\":\"DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \\u003cservice\\u003e:\\u003cURL\\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.\",\"properties\":{\"service\":{\"description\":\"Service is the service being documented\",\"type\":\"string\"},\"timeout_ms\":{\"description\":\"Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back\",\"type\":\"integer\"},\"url\":{\"description\":\"URL is the URL used for obtaining docs\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"naming_scheme\":{\"description\":\"Describes how to display \\\"services\\\" in the DevPortal. Default namespace.name\",\"enum\":[\"namespace.name\",\"name.prefix\"],\"type\":\"string\"},\"preserve_servers\":{\"description\":\"Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.\",\"type\":\"boolean\"},\"search\":{\"description\":\"DevPortalSearchSpec allows configuration over search functionality for the DevPortal\",\"properties\":{\"enabled\":{\"type\":\"boolean\"},\"type\":{\"description\":\"Type of search. \\\"title-only\\\" does a fuzzy search over openapi and page titles \\\"all-content\\\" will fuzzy search over all openapi and page content. \\\"title-only\\\" is the default. warning:  using all-content may incur a larger memory footprint\",\"enum\":[\"title-only\",\"all-content\"],\"type\":\"string\"}},\"type\":\"object\"},\"selector\":{\"description\":\"Selector is used for choosing what is shown in the DevPortal\",\"properties\":{\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.\",\"type\":\"object\"},\"matchNamespaces\":{\"description\":\"MatchNamespaces is a list of namespaces that will be included in this DevPortal.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"DevPortal is the Schema for the DevPortals API \\n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \\n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \\n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"DevPortalSpec defines the desired state of DevPortal\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"content\":{\"description\":\"Content specifies where the content shown in the DevPortal come from\",\"properties\":{\"branch\":{\"type\":\"string\"},\"dir\":{\"type\":\"string\"},\"url\":{\"type\":\"string\"}},\"type\":\"object\"},\"default\":{\"description\":\"Default must be true when this is the default DevPortal\",\"type\":\"boolean\"},\"docs\":{\"description\":\"Docs is a static docs definition\",\"items\":{\"description\":\"DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \\u003cservice\\u003e:\\u003cURL\\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.\",\"properties\":{\"service\":{\"description\":\"Service is the service being documented\",\"type\":\"string\"},\"timeout_ms\":{\"description\":\"Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back\",\"type\":\"integer\"},\"url\":{\"description\":\"URL is the URL used for obtaining docs\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"naming_scheme\":{\"description\":\"Describes how to display \\\"services\\\" in the DevPortal. Default namespace.name\",\"enum\":[\"namespace.name\",\"name.prefix\"],\"type\":\"string\"},\"preserve_servers\":{\"description\":\"Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.\",\"type\":\"boolean\"},\"search\":{\"description\":\"DevPortalSearchSpec allows configuration over search functionality for the DevPortal\",\"properties\":{\"enabled\":{\"type\":\"boolean\"},\"type\":{\"description\":\"Type of search. \\\"title-only\\\" does a fuzzy search over openapi and page titles \\\"all-content\\\" will fuzzy search over all openapi and page content. \\\"title-only\\\" is the default. warning:  using all-content may incur a larger memory footprint\",\"enum\":[\"title-only\",\"all-content\"],\"type\":\"string\"}},\"type\":\"object\"},\"selector\":{\"description\":\"Selector is used for choosing what is shown in the DevPortal\",\"properties\":{\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.\",\"type\":\"object\"},\"matchNamespaces\":{\"description\":\"MatchNamespaces is a list of namespaces that will be included in this DevPortal.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"DevPortal is the Schema for the DevPortals API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:07Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-06-20T23:31:07Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:07Z"
                            }
                        ],
                        "name": "devportals.getambassador.io",
                        "resourceVersion": "3222",
                        "uid": "30686721-dde6-4ae2-8c71-e5acaff5cabb"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "DevPortal",
                            "listKind": "DevPortalList",
                            "plural": "devportals",
                            "singular": "devportal"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "DevPortalSpec defines the desired state of DevPortal",
                                                "properties": {
                                                    "content": {
                                                        "description": "Content specifies where the content shown in the DevPortal come from",
                                                        "properties": {
                                                            "branch": {
                                                                "type": "string"
                                                            },
                                                            "dir": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "default": {
                                                        "description": "Default must be true when this is the default DevPortal",
                                                        "type": "boolean"
                                                    },
                                                    "docs": {
                                                        "description": "Docs is a static docs definition",
                                                        "items": {
                                                            "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                            "properties": {
                                                                "service": {
                                                                    "description": "Service is the service being documented",
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "description": "URL is the URL used for obtaining docs",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "naming_scheme": {
                                                        "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                        "enum": [
                                                            "namespace.name",
                                                            "name.prefix"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "preserve_servers": {
                                                        "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                        "type": "boolean"
                                                    },
                                                    "search": {
                                                        "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                        "properties": {
                                                            "enabled": {
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                "enum": [
                                                                    "title-only",
                                                                    "all-content"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector is used for choosing what is shown in the DevPortal",
                                                        "properties": {
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                "type": "object"
                                                            },
                                                            "matchNamespaces": {
                                                                "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "DevPortalSpec defines the desired state of DevPortal",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "content": {
                                                        "description": "Content specifies where the content shown in the DevPortal come from",
                                                        "properties": {
                                                            "branch": {
                                                                "type": "string"
                                                            },
                                                            "dir": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "default": {
                                                        "description": "Default must be true when this is the default DevPortal",
                                                        "type": "boolean"
                                                    },
                                                    "docs": {
                                                        "description": "Docs is a static docs definition",
                                                        "items": {
                                                            "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                            "properties": {
                                                                "service": {
                                                                    "description": "Service is the service being documented",
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "description": "URL is the URL used for obtaining docs",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "naming_scheme": {
                                                        "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                        "enum": [
                                                            "namespace.name",
                                                            "name.prefix"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "preserve_servers": {
                                                        "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                        "type": "boolean"
                                                    },
                                                    "search": {
                                                        "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                        "properties": {
                                                            "enabled": {
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                "enum": [
                                                                    "title-only",
                                                                    "all-content"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector is used for choosing what is shown in the DevPortal",
                                                        "properties": {
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                "type": "object"
                                                            },
                                                            "matchNamespaces": {
                                                                "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "DevPortal",
                            "listKind": "DevPortalList",
                            "plural": "devportals",
                            "singular": "devportal"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-06-20T23:31:07Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-06-20T23:31:07Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::emissary-system/emissary-apiext",
                "custom": true,
                "id": "emissary-system/emissary-apiext",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:RoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext",
                        "namespace": "emissary-system"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "emissary-apiext"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "emissary-apiext"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "emissary-apiext",
                                "namespace": "emissary-system"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"emissary-apiext\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}]}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:11Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:11Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "namespace": "emissary-system",
                        "resourceVersion": "3285",
                        "uid": "0d128953-f114-407d-8f40-bb4328713c00"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "emissary-apiext"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::kubernetesserviceresolvers.getambassador.io",
                "custom": true,
                "id": "kubernetesserviceresolvers.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "kubernetesserviceresolvers.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesServiceResolver",
                            "listKind": "KubernetesServiceResolverList",
                            "plural": "kubernetesserviceresolvers",
                            "singular": "kubernetesserviceresolver"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "kubernetesserviceresolvers.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "KubernetesServiceResolver",
                                "listKind": "KubernetesServiceResolverList",
                                "plural": "kubernetesserviceresolvers",
                                "singular": "kubernetesserviceresolver"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"kubernetesserviceresolvers.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"KubernetesServiceResolver\",\"listKind\":\"KubernetesServiceResolverList\",\"plural\":\"kubernetesserviceresolvers\",\"singular\":\"kubernetesserviceresolver\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:11Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-06-20T23:31:11Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:11Z"
                            }
                        ],
                        "name": "kubernetesserviceresolvers.getambassador.io",
                        "resourceVersion": "3288",
                        "uid": "f7f787c4-9d14-4f45-87fe-f8225841be14"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesServiceResolver",
                            "listKind": "KubernetesServiceResolverList",
                            "plural": "kubernetesserviceresolvers",
                            "singular": "kubernetesserviceresolver"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesServiceResolver",
                            "listKind": "KubernetesServiceResolverList",
                            "plural": "kubernetesserviceresolvers",
                            "singular": "kubernetesserviceresolver"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-06-20T23:31:11Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-06-20T23:31:11Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::kubernetesendpointresolvers.getambassador.io",
                "custom": true,
                "id": "kubernetesendpointresolvers.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "kubernetesendpointresolvers.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesEndpointResolver",
                            "listKind": "KubernetesEndpointResolverList",
                            "plural": "kubernetesendpointresolvers",
                            "singular": "kubernetesendpointresolver"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "kubernetesendpointresolvers.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "KubernetesEndpointResolver",
                                "listKind": "KubernetesEndpointResolverList",
                                "plural": "kubernetesendpointresolvers",
                                "singular": "kubernetesendpointresolver"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"kubernetesendpointresolvers.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"KubernetesEndpointResolver\",\"listKind\":\"KubernetesEndpointResolverList\",\"plural\":\"kubernetesendpointresolvers\",\"singular\":\"kubernetesendpointresolver\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:07Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-06-20T23:31:07Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:07Z"
                            }
                        ],
                        "name": "kubernetesendpointresolvers.getambassador.io",
                        "resourceVersion": "3227",
                        "uid": "a8decb42-1b9d-4bc8-bdd7-23a41ab9d3f3"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesEndpointResolver",
                            "listKind": "KubernetesEndpointResolverList",
                            "plural": "kubernetesendpointresolvers",
                            "singular": "kubernetesendpointresolver"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesEndpointResolver",
                            "listKind": "KubernetesEndpointResolverList",
                            "plural": "kubernetesendpointresolvers",
                            "singular": "kubernetesendpointresolver"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-06-20T23:31:07Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-06-20T23:31:07Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::tracingservices.getambassador.io",
                "custom": true,
                "id": "tracingservices.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "tracingservices.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TracingService",
                            "listKind": "TracingServiceList",
                            "plural": "tracingservices",
                            "singular": "tracingservice"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TracingServiceSpec defines the desired state of TracingService",
                                                "properties": {
                                                    "config": {
                                                        "properties": {
                                                            "access_token_file": {
                                                                "type": "string"
                                                            },
                                                            "collector_cluster": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint_version": {
                                                                "enum": [
                                                                    "HTTP_JSON_V1",
                                                                    "HTTP_JSON",
                                                                    "HTTP_PROTO"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "collector_hostname": {
                                                                "type": "string"
                                                            },
                                                            "service_name": {
                                                                "type": "string"
                                                            },
                                                            "shared_span_context": {
                                                                "type": "boolean"
                                                            },
                                                            "trace_id_128bit": {
                                                                "type": "boolean"
                                                            },
                                                            "v3PropagationModes": {
                                                                "items": {
                                                                    "enum": [
                                                                        "ENVOY",
                                                                        "LIGHTSTEP",
                                                                        "B3",
                                                                        "TRACE_CONTEXT"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "lightstep",
                                                            "zipkin",
                                                            "datadog"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "sampling": {
                                                        "properties": {
                                                            "client": {
                                                                "type": "integer"
                                                            },
                                                            "overall": {
                                                                "type": "integer"
                                                            },
                                                            "random": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "tag_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "driver",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TracingServiceSpec defines the desired state of TracingService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "config": {
                                                        "properties": {
                                                            "access_token_file": {
                                                                "type": "string"
                                                            },
                                                            "collector_cluster": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint_version": {
                                                                "enum": [
                                                                    "HTTP_JSON_V1",
                                                                    "HTTP_JSON",
                                                                    "HTTP_PROTO"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "collector_hostname": {
                                                                "type": "string"
                                                            },
                                                            "propagation_modes": {
                                                                "items": {
                                                                    "enum": [
                                                                        "ENVOY",
                                                                        "LIGHTSTEP",
                                                                        "B3",
                                                                        "TRACE_CONTEXT"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "service_name": {
                                                                "type": "string"
                                                            },
                                                            "shared_span_context": {
                                                                "type": "boolean"
                                                            },
                                                            "trace_id_128bit": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "lightstep",
                                                            "zipkin",
                                                            "datadog"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "sampling": {
                                                        "properties": {
                                                            "client": {
                                                                "type": "integer"
                                                            },
                                                            "overall": {
                                                                "type": "integer"
                                                            },
                                                            "random": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "tag_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "driver",
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "tracingservices.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "TracingService",
                                "listKind": "TracingServiceList",
                                "plural": "tracingservices",
                                "singular": "tracingservice"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TracingService is the Schema for the tracingservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TracingServiceSpec defines the desired state of TracingService",
                                                    "properties": {
                                                        "config": {
                                                            "properties": {
                                                                "access_token_file": {
                                                                    "type": "string"
                                                                },
                                                                "collector_cluster": {
                                                                    "type": "string"
                                                                },
                                                                "collector_endpoint": {
                                                                    "type": "string"
                                                                },
                                                                "collector_endpoint_version": {
                                                                    "enum": [
                                                                        "HTTP_JSON_V1",
                                                                        "HTTP_JSON",
                                                                        "HTTP_PROTO"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "collector_hostname": {
                                                                    "type": "string"
                                                                },
                                                                "service_name": {
                                                                    "type": "string"
                                                                },
                                                                "shared_span_context": {
                                                                    "type": "boolean"
                                                                },
                                                                "trace_id_128bit": {
                                                                    "type": "boolean"
                                                                },
                                                                "v3PropagationModes": {
                                                                    "items": {
                                                                        "enum": [
                                                                            "ENVOY",
                                                                            "LIGHTSTEP",
                                                                            "B3",
                                                                            "TRACE_CONTEXT"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "driver": {
                                                            "enum": [
                                                                "lightstep",
                                                                "zipkin",
                                                                "datadog"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "sampling": {
                                                            "properties": {
                                                                "client": {
                                                                    "type": "integer"
                                                                },
                                                                "overall": {
                                                                    "type": "integer"
                                                                },
                                                                "random": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "tag_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "driver",
                                                        "service"
                                                    ],
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TracingService is the Schema for the tracingservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TracingServiceSpec defines the desired state of TracingService",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "config": {
                                                            "properties": {
                                                                "access_token_file": {
                                                                    "type": "string"
                                                                },
                                                                "collector_cluster": {
                                                                    "type": "string"
                                                                },
                                                                "collector_endpoint": {
                                                                    "type": "string"
                                                                },
                                                                "collector_endpoint_version": {
                                                                    "enum": [
                                                                        "HTTP_JSON_V1",
                                                                        "HTTP_JSON",
                                                                        "HTTP_PROTO"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "collector_hostname": {
                                                                    "type": "string"
                                                                },
                                                                "propagation_modes": {
                                                                    "items": {
                                                                        "enum": [
                                                                            "ENVOY",
                                                                            "LIGHTSTEP",
                                                                            "B3",
                                                                            "TRACE_CONTEXT"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "service_name": {
                                                                    "type": "string"
                                                                },
                                                                "shared_span_context": {
                                                                    "type": "boolean"
                                                                },
                                                                "trace_id_128bit": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "driver": {
                                                            "enum": [
                                                                "lightstep",
                                                                "zipkin",
                                                                "datadog"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "sampling": {
                                                            "properties": {
                                                                "client": {
                                                                    "type": "integer"
                                                                },
                                                                "overall": {
                                                                    "type": "integer"
                                                                },
                                                                "random": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        },
                                                        "tag_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "required": [
                                                        "driver",
                                                        "service"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TracingService is the Schema for the tracingservices API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"tracingservices.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"TracingService\",\"listKind\":\"TracingServiceList\",\"plural\":\"tracingservices\",\"singular\":\"tracingservice\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TracingService is the Schema for the tracingservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TracingServiceSpec defines the desired state of TracingService\",\"properties\":{\"config\":{\"properties\":{\"access_token_file\":{\"type\":\"string\"},\"collector_cluster\":{\"type\":\"string\"},\"collector_endpoint\":{\"type\":\"string\"},\"collector_endpoint_version\":{\"enum\":[\"HTTP_JSON_V1\",\"HTTP_JSON\",\"HTTP_PROTO\"],\"type\":\"string\"},\"collector_hostname\":{\"type\":\"string\"},\"service_name\":{\"type\":\"string\"},\"shared_span_context\":{\"type\":\"boolean\"},\"trace_id_128bit\":{\"type\":\"boolean\"},\"v3PropagationModes\":{\"items\":{\"enum\":[\"ENVOY\",\"LIGHTSTEP\",\"B3\",\"TRACE_CONTEXT\"],\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"driver\":{\"enum\":[\"lightstep\",\"zipkin\",\"datadog\"],\"type\":\"string\"},\"sampling\":{\"properties\":{\"client\":{\"type\":\"integer\"},\"overall\":{\"type\":\"integer\"},\"random\":{\"type\":\"integer\"}},\"type\":\"object\"},\"service\":{\"type\":\"string\"},\"tag_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"v3StatsName\":{\"type\":\"string\"}},\"required\":[\"driver\",\"service\"],\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TracingService is the Schema for the tracingservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TracingServiceSpec defines the desired state of TracingService\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"config\":{\"properties\":{\"access_token_file\":{\"type\":\"string\"},\"collector_cluster\":{\"type\":\"string\"},\"collector_endpoint\":{\"type\":\"string\"},\"collector_endpoint_version\":{\"enum\":[\"HTTP_JSON_V1\",\"HTTP_JSON\",\"HTTP_PROTO\"],\"type\":\"string\"},\"collector_hostname\":{\"type\":\"string\"},\"propagation_modes\":{\"items\":{\"enum\":[\"ENVOY\",\"LIGHTSTEP\",\"B3\",\"TRACE_CONTEXT\"],\"type\":\"string\"},\"type\":\"array\"},\"service_name\":{\"type\":\"string\"},\"shared_span_context\":{\"type\":\"boolean\"},\"trace_id_128bit\":{\"type\":\"boolean\"}},\"type\":\"object\"},\"driver\":{\"enum\":[\"lightstep\",\"zipkin\",\"datadog\"],\"type\":\"string\"},\"sampling\":{\"properties\":{\"client\":{\"type\":\"integer\"},\"overall\":{\"type\":\"integer\"},\"random\":{\"type\":\"integer\"}},\"type\":\"object\"},\"service\":{\"type\":\"string\"},\"stats_name\":{\"type\":\"string\"},\"tag_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"driver\",\"service\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TracingService is the Schema for the tracingservices API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:24Z",
                        "generation": 3,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:conversion": {
                                            "f:webhook": {
                                                "f:clientConfig": {
                                                    "f:caBundle": {},
                                                    "f:service": {
                                                        "f:path": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "apiext",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:24Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:24Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:24Z"
                            }
                        ],
                        "name": "tracingservices.getambassador.io",
                        "resourceVersion": "10597955",
                        "uid": "e3331e52-ed93-442e-bf71-af45ff86b048"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZJRENDQXdpZ0F3SUJBZ0lSQU5qKzkvNlFaVjN5cGRqUjhaSXByakl3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUI0WERUSXlNRFl5TURJek16RXlNVm9YRFRJegpNRFl5TURJek16RXlNVm93R2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUlJQ0lqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBOWFnSE5MVFd5dkdVbFY3SnArUDJScll2bko2cWhmaWsKbURUbndlWDFaMDNTMVJhTnFyTUVzY2lsMC82Mmlub250L1gyS3J4ckhhT3ltZEt4MGF3ZldpR0w3TWZuRHVwMwpsMVhxUEhNeFYyVjFLazZsOHNkbDBObytpTVAwSGhPTEVRcXkxQ0E1MTJCbmF0THUxblVjTEhiMUVnbEhET01NCnlkbWdPenRUMXhMS3prN3pYWGI2K3RxK1I3N2lOSU5xcnF5T3J1SW9qeG1MdGN0LzdielFWTXRodkhDR3hvWFMKbU94ZXJFczVlUHJMN0g5L1hSYzZCSFJEcXhKZDVFMXpJcVZzdFB1OWkxSjJSMnhqZXNqRC9xSEQ4eEEzRkdLcApRWER0RW5rR0I1TWpMbUhjSGZTRTBqY01QU1ZMME84ZWNmcEY5Q1Z6dE5QOGdUaUhuRnBxYU5MWVl1SThJQXo1CnZsZkJ1QmRPWTU2OGc0bGN3OG1JbldqY2J3VlNhYlpYVVdTZ1JmVjJaN2hZS2JQeFhYcndJR0pjc1hsYk0xeWoKWFlNU3JWZFZSOHI0ZnhDWi9HY0loL0RxelQ4ZHhiUnYrZjJjY2NNOG5NOGlsYTJYQkpkZnFrdURZcnl3S204LwpSTWVZMml5ckZKZkg1bmYrTjZYMERVK1FoMWlPMG1jYWhXdFZ6d2x6dzFuZGpkRXVocXJzV1BuNDRrbWlKL3dUCmx3OWZBKy9tdHV0STJjQStxdTFTcEMxR0h0cTZ3MEhBKzhrSTQxOUtwRkhYNSt6bFAxMFhzbWNEY0w4ekhlMnkKSmY2ZVI0YmE0enduZWRqUE5pcXFhZVlwVm1mT3RlanMyUkJRd2Z2Q2ErcjBEQ3BJeXhsY0FzN2ZKSENzdXRsUQpuVnB6NzZsa2FLTUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLRU1CMEdBMVVkSlFRV01CUUdDQ3NHCkFRVUZCd01DQmdnckJnRUZCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTbUZJTEwKQlBZQmduUFRqY0Z5UWNscEZNVUNCREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBd013dkNUeDJOWTNQUStsSQpKbTlvV0dHVTdIRVI0Qlh5dnJ0UkhicXhodzl3R1ZEam54aHNjQXNYUDBKL1Jrd2JRTmVZbFJMbkFLNGxzcDdCCmFjcEFsbmtzc2pRZlI1Z25jbUI1aklzQUZLOEhvbHhSOFVGYzUvblFkbitPVDZGYyt2RHljM2JPUWd5aHphTzgKTHowbFNTYXlIaS9adlZqOHlxdVZMSEpmYWh1MWpWWm9oQktVZ1V2YlUyMnhLRkpidUViVE9IVUQvU2tVWjBGeQpKUnpNMVpKZXh1dVdYZk5US0tYQ3M2Q1dHdlpMT2VpNGZpbzRoMjgvS3lJYU9Tb2JES0RlY2I1dmRKUDlnRjJFCmxNWjNsWjUvWFhmV2RGR1B1ZkUzNHd5WHdpNjh0bXZydlZLOEk5WGhmM0haWUg2RDhxbjhvYVRnZ05FUG84a0MKS25VUWdhUFRDYWt4R1hjTmpiZmIyeEpOd1RIVUs5ZzIxZnkyWkRIUHhQczg4eW1pbWwzbEh0eGUzRU8xZGxpagp5QitmekcvOXVlZzJEUncrUDFRM21VOEQ3L1ZJRWtoZlV3Zzk1T1JkMmlDTk05SklYMzJHWU1uakk1ZEJyVHpPCjlMMXE0OEx2QzZkNm40b2h5MkZtZnZmNHQwREtOQkdIMlBHQXRWa0EwNUh4R3VQYlR2OUdNeFAxbUNyb2NkWjUKcVRpNThNYmRGZE9BM2pHNHBObHhMTytJSGxoTm9IOS9WMVcwU1JHYzB6OXhnN05Jc2tCQ3pNc1AvdGVjc01LRApPczlvK3g5VlJ6MlJBWlI2VHFlNHdCSFllWC9uLzJPYnNPZ0VzSnMrYVFrdHBJVEs3RzVkZDhJaGx6OXNDell6CnNWMWlsYWFTZG1ZclYwKzg1YWtFbklMczhNST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "path": "/webhooks/crd-convert",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TracingService",
                            "listKind": "TracingServiceList",
                            "plural": "tracingservices",
                            "singular": "tracingservice"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TracingServiceSpec defines the desired state of TracingService",
                                                "properties": {
                                                    "config": {
                                                        "properties": {
                                                            "access_token_file": {
                                                                "type": "string"
                                                            },
                                                            "collector_cluster": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint_version": {
                                                                "enum": [
                                                                    "HTTP_JSON_V1",
                                                                    "HTTP_JSON",
                                                                    "HTTP_PROTO"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "collector_hostname": {
                                                                "type": "string"
                                                            },
                                                            "service_name": {
                                                                "type": "string"
                                                            },
                                                            "shared_span_context": {
                                                                "type": "boolean"
                                                            },
                                                            "trace_id_128bit": {
                                                                "type": "boolean"
                                                            },
                                                            "v3PropagationModes": {
                                                                "items": {
                                                                    "enum": [
                                                                        "ENVOY",
                                                                        "LIGHTSTEP",
                                                                        "B3",
                                                                        "TRACE_CONTEXT"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "lightstep",
                                                            "zipkin",
                                                            "datadog"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "sampling": {
                                                        "properties": {
                                                            "client": {
                                                                "type": "integer"
                                                            },
                                                            "overall": {
                                                                "type": "integer"
                                                            },
                                                            "random": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "tag_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "driver",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TracingServiceSpec defines the desired state of TracingService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "config": {
                                                        "properties": {
                                                            "access_token_file": {
                                                                "type": "string"
                                                            },
                                                            "collector_cluster": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint_version": {
                                                                "enum": [
                                                                    "HTTP_JSON_V1",
                                                                    "HTTP_JSON",
                                                                    "HTTP_PROTO"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "collector_hostname": {
                                                                "type": "string"
                                                            },
                                                            "propagation_modes": {
                                                                "items": {
                                                                    "enum": [
                                                                        "ENVOY",
                                                                        "LIGHTSTEP",
                                                                        "B3",
                                                                        "TRACE_CONTEXT"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "service_name": {
                                                                "type": "string"
                                                            },
                                                            "shared_span_context": {
                                                                "type": "boolean"
                                                            },
                                                            "trace_id_128bit": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "lightstep",
                                                            "zipkin",
                                                            "datadog"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "sampling": {
                                                        "properties": {
                                                            "client": {
                                                                "type": "integer"
                                                            },
                                                            "overall": {
                                                                "type": "integer"
                                                            },
                                                            "random": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "tag_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "driver",
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TracingService",
                            "listKind": "TracingServiceList",
                            "plural": "tracingservices",
                            "singular": "tracingservice"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-06-20T23:31:24Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-06-20T23:31:24Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::consulresolvers.getambassador.io",
                "custom": true,
                "id": "consulresolvers.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "consulresolvers.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "ConsulResolver",
                            "listKind": "ConsulResolverList",
                            "plural": "consulresolvers",
                            "singular": "consulresolver"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "datacenter": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "datacenter": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "consulresolvers.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "ConsulResolver",
                                "listKind": "ConsulResolverList",
                                "plural": "consulresolvers",
                                "singular": "consulresolver"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "datacenter": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "datacenter": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"consulresolvers.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"ConsulResolver\",\"listKind\":\"ConsulResolverList\",\"plural\":\"consulresolvers\",\"singular\":\"consulresolver\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"ConsulResolver is the Schema for the ConsulResolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.\",\"properties\":{\"address\":{\"type\":\"string\"},\"datacenter\":{\"type\":\"string\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"ConsulResolver is the Schema for the ConsulResolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.\",\"properties\":{\"address\":{\"type\":\"string\"},\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"datacenter\":{\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"ConsulResolver is the Schema for the ConsulResolver API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:07Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-06-20T23:31:07Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:07Z"
                            }
                        ],
                        "name": "consulresolvers.getambassador.io",
                        "resourceVersion": "3224",
                        "uid": "4919043c-187d-4eb3-a0a3-7c15c7a925fe"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "ConsulResolver",
                            "listKind": "ConsulResolverList",
                            "plural": "consulresolvers",
                            "singular": "consulresolver"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "datacenter": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "datacenter": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "ConsulResolver",
                            "listKind": "ConsulResolverList",
                            "plural": "consulresolvers",
                            "singular": "consulresolver"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-06-20T23:31:07Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-06-20T23:31:07Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::ratelimitservices.getambassador.io",
                "custom": true,
                "id": "ratelimitservices.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "ratelimitservices.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "RateLimitService",
                            "listKind": "RateLimitServiceList",
                            "plural": "ratelimitservices",
                            "singular": "ratelimitservice"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                "properties": {
                                                    "domain": {
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "Common to all Ambassador objects.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "domain": {
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "description": "ProtocolVersion is the envoy api transport protocol version",
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "ratelimitservices.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "RateLimitService",
                                "listKind": "RateLimitServiceList",
                                "plural": "ratelimitservices",
                                "singular": "ratelimitservice"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "RateLimitService is the Schema for the ratelimitservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                    "properties": {
                                                        "domain": {
                                                            "type": "string"
                                                        },
                                                        "protocol_version": {
                                                            "enum": [
                                                                "v2",
                                                                "v3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "timeout_ms": {
                                                            "type": "integer"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "service"
                                                    ],
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "RateLimitService is the Schema for the ratelimitservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "Common to all Ambassador objects.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "domain": {
                                                            "type": "string"
                                                        },
                                                        "protocol_version": {
                                                            "description": "ProtocolVersion is the envoy api transport protocol version",
                                                            "enum": [
                                                                "v2",
                                                                "v3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        },
                                                        "timeout_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "tls": {
                                                            "type": "string"
                                                        },
                                                        "v2ExplicitTLS": {
                                                            "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                            "properties": {
                                                                "serviceScheme": {
                                                                    "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                    "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                    "type": "string"
                                                                },
                                                                "tls": {
                                                                    "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                    "enum": [
                                                                        "",
                                                                        "null",
                                                                        "bool:true",
                                                                        "bool:false",
                                                                        "string"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "service"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "RateLimitService is the Schema for the ratelimitservices API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"ratelimitservices.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"RateLimitService\",\"listKind\":\"RateLimitServiceList\",\"plural\":\"ratelimitservices\",\"singular\":\"ratelimitservice\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"RateLimitService is the Schema for the ratelimitservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"RateLimitServiceSpec defines the desired state of RateLimitService\",\"properties\":{\"domain\":{\"type\":\"string\"},\"protocol_version\":{\"enum\":[\"v2\",\"v3\"],\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"timeout_ms\":{\"type\":\"integer\"},\"v3StatsName\":{\"type\":\"string\"}},\"required\":[\"service\"],\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"RateLimitService is the Schema for the ratelimitservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"RateLimitServiceSpec defines the desired state of RateLimitService\",\"properties\":{\"ambassador_id\":{\"description\":\"Common to all Ambassador objects.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"domain\":{\"type\":\"string\"},\"protocol_version\":{\"description\":\"ProtocolVersion is the envoy api transport protocol version\",\"enum\":[\"v2\",\"v3\"],\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"stats_name\":{\"type\":\"string\"},\"timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"tls\":{\"type\":\"string\"},\"v2ExplicitTLS\":{\"description\":\"V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.\",\"properties\":{\"serviceScheme\":{\"description\":\"ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \\n Acceptable values are \\\"http://\\\" (case-insensitive), \\\"https://\\\" (case-insensitive), or \\\"\\\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.\",\"pattern\":\"^([hH][tT][tT][pP][sS]?://)?$\",\"type\":\"string\"},\"tls\":{\"description\":\"TLS controls whether and how to represent the \\\"tls\\\" field when its value could be implied by the \\\"service\\\" field.  In v2, there were a lot of different ways to spell an \\\"empty\\\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \\n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \\\"\\\"           | omit the field                        | defer to service (no TLSContext)   |  | \\\"null\\\"       | store an explicit \\\"null\\\" in the field | defer to service (no TLSContext)   |  | \\\"string\\\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \\\"bool:false\\\" | store a Boolean \\\"false\\\" in the field  | defer to service (no TLSContext)   |  | \\\"bool:true\\\"  | store a Boolean \\\"true\\\" in the field   | originate TLS (no TLSContext)      | \\n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \\\"bool:true\\\" if TLS is not to be originated), then this field is ignored.\",\"enum\":[\"\",\"null\",\"bool:true\",\"bool:false\",\"string\"],\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"service\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"RateLimitService is the Schema for the ratelimitservices API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:07Z",
                        "generation": 3,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:07Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:07Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:conversion": {
                                            "f:webhook": {
                                                "f:clientConfig": {
                                                    "f:caBundle": {},
                                                    "f:service": {
                                                        "f:path": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "apiext",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:22Z"
                            }
                        ],
                        "name": "ratelimitservices.getambassador.io",
                        "resourceVersion": "10647547",
                        "uid": "fef1b483-cbfb-48f2-a9d0-256a26d4b3c0"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZJRENDQXdpZ0F3SUJBZ0lSQU5qKzkvNlFaVjN5cGRqUjhaSXByakl3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUI0WERUSXlNRFl5TURJek16RXlNVm9YRFRJegpNRFl5TURJek16RXlNVm93R2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUlJQ0lqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBOWFnSE5MVFd5dkdVbFY3SnArUDJScll2bko2cWhmaWsKbURUbndlWDFaMDNTMVJhTnFyTUVzY2lsMC82Mmlub250L1gyS3J4ckhhT3ltZEt4MGF3ZldpR0w3TWZuRHVwMwpsMVhxUEhNeFYyVjFLazZsOHNkbDBObytpTVAwSGhPTEVRcXkxQ0E1MTJCbmF0THUxblVjTEhiMUVnbEhET01NCnlkbWdPenRUMXhMS3prN3pYWGI2K3RxK1I3N2lOSU5xcnF5T3J1SW9qeG1MdGN0LzdielFWTXRodkhDR3hvWFMKbU94ZXJFczVlUHJMN0g5L1hSYzZCSFJEcXhKZDVFMXpJcVZzdFB1OWkxSjJSMnhqZXNqRC9xSEQ4eEEzRkdLcApRWER0RW5rR0I1TWpMbUhjSGZTRTBqY01QU1ZMME84ZWNmcEY5Q1Z6dE5QOGdUaUhuRnBxYU5MWVl1SThJQXo1CnZsZkJ1QmRPWTU2OGc0bGN3OG1JbldqY2J3VlNhYlpYVVdTZ1JmVjJaN2hZS2JQeFhYcndJR0pjc1hsYk0xeWoKWFlNU3JWZFZSOHI0ZnhDWi9HY0loL0RxelQ4ZHhiUnYrZjJjY2NNOG5NOGlsYTJYQkpkZnFrdURZcnl3S204LwpSTWVZMml5ckZKZkg1bmYrTjZYMERVK1FoMWlPMG1jYWhXdFZ6d2x6dzFuZGpkRXVocXJzV1BuNDRrbWlKL3dUCmx3OWZBKy9tdHV0STJjQStxdTFTcEMxR0h0cTZ3MEhBKzhrSTQxOUtwRkhYNSt6bFAxMFhzbWNEY0w4ekhlMnkKSmY2ZVI0YmE0enduZWRqUE5pcXFhZVlwVm1mT3RlanMyUkJRd2Z2Q2ErcjBEQ3BJeXhsY0FzN2ZKSENzdXRsUQpuVnB6NzZsa2FLTUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLRU1CMEdBMVVkSlFRV01CUUdDQ3NHCkFRVUZCd01DQmdnckJnRUZCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTbUZJTEwKQlBZQmduUFRqY0Z5UWNscEZNVUNCREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBd013dkNUeDJOWTNQUStsSQpKbTlvV0dHVTdIRVI0Qlh5dnJ0UkhicXhodzl3R1ZEam54aHNjQXNYUDBKL1Jrd2JRTmVZbFJMbkFLNGxzcDdCCmFjcEFsbmtzc2pRZlI1Z25jbUI1aklzQUZLOEhvbHhSOFVGYzUvblFkbitPVDZGYyt2RHljM2JPUWd5aHphTzgKTHowbFNTYXlIaS9adlZqOHlxdVZMSEpmYWh1MWpWWm9oQktVZ1V2YlUyMnhLRkpidUViVE9IVUQvU2tVWjBGeQpKUnpNMVpKZXh1dVdYZk5US0tYQ3M2Q1dHdlpMT2VpNGZpbzRoMjgvS3lJYU9Tb2JES0RlY2I1dmRKUDlnRjJFCmxNWjNsWjUvWFhmV2RGR1B1ZkUzNHd5WHdpNjh0bXZydlZLOEk5WGhmM0haWUg2RDhxbjhvYVRnZ05FUG84a0MKS25VUWdhUFRDYWt4R1hjTmpiZmIyeEpOd1RIVUs5ZzIxZnkyWkRIUHhQczg4eW1pbWwzbEh0eGUzRU8xZGxpagp5QitmekcvOXVlZzJEUncrUDFRM21VOEQ3L1ZJRWtoZlV3Zzk1T1JkMmlDTk05SklYMzJHWU1uakk1ZEJyVHpPCjlMMXE0OEx2QzZkNm40b2h5MkZtZnZmNHQwREtOQkdIMlBHQXRWa0EwNUh4R3VQYlR2OUdNeFAxbUNyb2NkWjUKcVRpNThNYmRGZE9BM2pHNHBObHhMTytJSGxoTm9IOS9WMVcwU1JHYzB6OXhnN05Jc2tCQ3pNc1AvdGVjc01LRApPczlvK3g5VlJ6MlJBWlI2VHFlNHdCSFllWC9uLzJPYnNPZ0VzSnMrYVFrdHBJVEs3RzVkZDhJaGx6OXNDell6CnNWMWlsYWFTZG1ZclYwKzg1YWtFbklMczhNST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "path": "/webhooks/crd-convert",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "RateLimitService",
                            "listKind": "RateLimitServiceList",
                            "plural": "ratelimitservices",
                            "singular": "ratelimitservice"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                "properties": {
                                                    "domain": {
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "Common to all Ambassador objects.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "domain": {
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "description": "ProtocolVersion is the envoy api transport protocol version",
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "RateLimitService",
                            "listKind": "RateLimitServiceList",
                            "plural": "ratelimitservices",
                            "singular": "ratelimitservice"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-06-20T23:31:07Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-06-20T23:31:07Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::tcpmappings.getambassador.io",
                "custom": true,
                "id": "tcpmappings.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "tcpmappings.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TCPMapping",
                            "listKind": "TCPMappingList",
                            "plural": "tcpmappings",
                            "singular": "tcpmapping"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                        "type": "string"
                                                    },
                                                    "port": {
                                                        "description": "Port isn't a pointer because it's required.",
                                                        "type": "integer"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "port",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                        "type": "string"
                                                    },
                                                    "port": {
                                                        "description": "Port isn't a pointer because it's required.",
                                                        "type": "integer"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "port",
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "tcpmappings.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "TCPMapping",
                                "listKind": "TCPMappingList",
                                "plural": "tcpmappings",
                                "singular": "tcpmapping"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TCPMapping is the Schema for the tcpmappings API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "circuit_breakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "cluster_tag": {
                                                            "type": "string"
                                                        },
                                                        "enable_ipv4": {
                                                            "type": "boolean"
                                                        },
                                                        "enable_ipv6": {
                                                            "type": "boolean"
                                                        },
                                                        "host": {
                                                            "type": "string"
                                                        },
                                                        "idle_timeout_ms": {
                                                            "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                            "type": "string"
                                                        },
                                                        "port": {
                                                            "description": "Port isn't a pointer because it's required.",
                                                            "type": "integer"
                                                        },
                                                        "resolver": {
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        },
                                                        "weight": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "port",
                                                        "service"
                                                    ],
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TCPMapping is the Schema for the tcpmappings API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "circuit_breakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "cluster_tag": {
                                                            "type": "string"
                                                        },
                                                        "enable_ipv4": {
                                                            "type": "boolean"
                                                        },
                                                        "enable_ipv6": {
                                                            "type": "boolean"
                                                        },
                                                        "host": {
                                                            "type": "string"
                                                        },
                                                        "idle_timeout_ms": {
                                                            "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                            "type": "string"
                                                        },
                                                        "port": {
                                                            "description": "Port isn't a pointer because it's required.",
                                                            "type": "integer"
                                                        },
                                                        "resolver": {
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        },
                                                        "tls": {
                                                            "type": "string"
                                                        },
                                                        "v2ExplicitTLS": {
                                                            "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                            "properties": {
                                                                "serviceScheme": {
                                                                    "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                    "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                    "type": "string"
                                                                },
                                                                "tls": {
                                                                    "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                    "enum": [
                                                                        "",
                                                                        "null",
                                                                        "bool:true",
                                                                        "bool:false",
                                                                        "string"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "weight": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "port",
                                                        "service"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TCPMapping is the Schema for the tcpmappings API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"tcpmappings.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"TCPMapping\",\"listKind\":\"TCPMappingList\",\"plural\":\"tcpmappings\",\"singular\":\"tcpmapping\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TCPMapping is the Schema for the tcpmappings API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TCPMappingSpec defines the desired state of TCPMapping\",\"properties\":{\"address\":{\"type\":\"string\"},\"circuit_breakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"cluster_tag\":{\"type\":\"string\"},\"enable_ipv4\":{\"type\":\"boolean\"},\"enable_ipv6\":{\"type\":\"boolean\"},\"host\":{\"type\":\"string\"},\"idle_timeout_ms\":{\"description\":\"FIXME(lukeshu): Surely this should be an 'int'?\",\"type\":\"string\"},\"port\":{\"description\":\"Port isn't a pointer because it's required.\",\"type\":\"integer\"},\"resolver\":{\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"v3StatsName\":{\"type\":\"string\"},\"weight\":{\"type\":\"integer\"}},\"required\":[\"port\",\"service\"],\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TCPMapping is the Schema for the tcpmappings API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TCPMappingSpec defines the desired state of TCPMapping\",\"properties\":{\"address\":{\"type\":\"string\"},\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"circuit_breakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"cluster_tag\":{\"type\":\"string\"},\"enable_ipv4\":{\"type\":\"boolean\"},\"enable_ipv6\":{\"type\":\"boolean\"},\"host\":{\"type\":\"string\"},\"idle_timeout_ms\":{\"description\":\"FIXME(lukeshu): Surely this should be an 'int'?\",\"type\":\"string\"},\"port\":{\"description\":\"Port isn't a pointer because it's required.\",\"type\":\"integer\"},\"resolver\":{\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"stats_name\":{\"type\":\"string\"},\"tls\":{\"type\":\"string\"},\"v2ExplicitTLS\":{\"description\":\"V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.\",\"properties\":{\"serviceScheme\":{\"description\":\"ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \\n Acceptable values are \\\"http://\\\" (case-insensitive), \\\"https://\\\" (case-insensitive), or \\\"\\\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.\",\"pattern\":\"^([hH][tT][tT][pP][sS]?://)?$\",\"type\":\"string\"},\"tls\":{\"description\":\"TLS controls whether and how to represent the \\\"tls\\\" field when its value could be implied by the \\\"service\\\" field.  In v2, there were a lot of different ways to spell an \\\"empty\\\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \\n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \\\"\\\"           | omit the field                        | defer to service (no TLSContext)   |  | \\\"null\\\"       | store an explicit \\\"null\\\" in the field | defer to service (no TLSContext)   |  | \\\"string\\\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \\\"bool:false\\\" | store a Boolean \\\"false\\\" in the field  | defer to service (no TLSContext)   |  | \\\"bool:true\\\"  | store a Boolean \\\"true\\\" in the field   | originate TLS (no TLSContext)      | \\n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \\\"bool:true\\\" if TLS is not to be originated), then this field is ignored.\",\"enum\":[\"\",\"null\",\"bool:true\",\"bool:false\",\"string\"],\"type\":\"string\"}},\"type\":\"object\"},\"weight\":{\"type\":\"integer\"}},\"required\":[\"port\",\"service\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TCPMapping is the Schema for the tcpmappings API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:07Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-06-20T23:31:07Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:07Z"
                            }
                        ],
                        "name": "tcpmappings.getambassador.io",
                        "resourceVersion": "3237",
                        "uid": "1363fa04-e6fd-453e-8d5f-5525d46d51d3"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TCPMapping",
                            "listKind": "TCPMappingList",
                            "plural": "tcpmappings",
                            "singular": "tcpmapping"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                        "type": "string"
                                                    },
                                                    "port": {
                                                        "description": "Port isn't a pointer because it's required.",
                                                        "type": "integer"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "port",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                        "type": "string"
                                                    },
                                                    "port": {
                                                        "description": "Port isn't a pointer because it's required.",
                                                        "type": "integer"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "port",
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TCPMapping",
                            "listKind": "TCPMappingList",
                            "plural": "tcpmappings",
                            "singular": "tcpmapping"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-06-20T23:31:07Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-06-20T23:31:07Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::authservices.getambassador.io",
                "custom": true,
                "id": "authservices.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "authservices.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "AuthService",
                            "listKind": "AuthServiceList",
                            "plural": "authservices",
                            "singular": "authservice"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "AuthServiceSpec defines the desired state of AuthService",
                                                "properties": {
                                                    "add_auth_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "allow_request_body": {
                                                        "type": "boolean"
                                                    },
                                                    "allowed_authorization_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "allowed_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_service": {
                                                        "type": "string"
                                                    },
                                                    "failure_mode_allow": {
                                                        "type": "boolean"
                                                    },
                                                    "include_body": {
                                                        "properties": {
                                                            "allow_partial": {
                                                                "type": "boolean"
                                                            },
                                                            "max_bytes": {
                                                                "description": "These aren't pointer types because they are required.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "allow_partial",
                                                            "max_bytes"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "path_prefix": {
                                                        "type": "string"
                                                    },
                                                    "proto": {
                                                        "enum": [
                                                            "http",
                                                            "grpc"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "status_on_error": {
                                                        "description": "Why isn't this just an int??",
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "v3CircuitBreakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "auth_service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "AuthServiceSpec defines the desired state of AuthService",
                                                "properties": {
                                                    "add_auth_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "allow_request_body": {
                                                        "description": "TODO(lukeshu): In v3alpha2, drop allow_request_body in favor of include_body. allow_request_body has been deprecated for a long time.",
                                                        "type": "boolean"
                                                    },
                                                    "allowed_authorization_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "allowed_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_service": {
                                                        "description": "TODO(lukeshu): In v3alpha2, consider renameing `auth_service` to just `service`, for consistency with the other resource types.",
                                                        "type": "string"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "failure_mode_allow": {
                                                        "type": "boolean"
                                                    },
                                                    "include_body": {
                                                        "properties": {
                                                            "allow_partial": {
                                                                "type": "boolean"
                                                            },
                                                            "max_bytes": {
                                                                "description": "These aren't pointer types because they are required.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "allow_partial",
                                                            "max_bytes"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "path_prefix": {
                                                        "type": "string"
                                                    },
                                                    "proto": {
                                                        "enum": [
                                                            "http",
                                                            "grpc"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "description": "ProtocolVersion is the envoy api transport protocol version",
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "status_on_error": {
                                                        "description": "TODO(lukeshu): In v3alpha2, consider getting rid of this struct type in favor of just using an int (i.e. `statusOnError: 500` instead of the current `statusOnError: { code: 500 }`).",
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "auth_service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "authservices.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "AuthService",
                                "listKind": "AuthServiceList",
                                "plural": "authservices",
                                "singular": "authservice"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "AuthService is the Schema for the authservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "AuthServiceSpec defines the desired state of AuthService",
                                                    "properties": {
                                                        "add_auth_headers": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "add_linkerd_headers": {
                                                            "type": "boolean"
                                                        },
                                                        "allow_request_body": {
                                                            "type": "boolean"
                                                        },
                                                        "allowed_authorization_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "allowed_request_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "auth_service": {
                                                            "type": "string"
                                                        },
                                                        "failure_mode_allow": {
                                                            "type": "boolean"
                                                        },
                                                        "include_body": {
                                                            "properties": {
                                                                "allow_partial": {
                                                                    "type": "boolean"
                                                                },
                                                                "max_bytes": {
                                                                    "description": "These aren't pointer types because they are required.",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "allow_partial",
                                                                "max_bytes"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "path_prefix": {
                                                            "type": "string"
                                                        },
                                                        "proto": {
                                                            "enum": [
                                                                "http",
                                                                "grpc"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "protocol_version": {
                                                            "enum": [
                                                                "v2",
                                                                "v3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "status_on_error": {
                                                            "description": "Why isn't this just an int??",
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "timeout_ms": {
                                                            "type": "integer"
                                                        },
                                                        "v3CircuitBreakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "auth_service"
                                                    ],
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "AuthService is the Schema for the authservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "AuthServiceSpec defines the desired state of AuthService",
                                                    "properties": {
                                                        "add_auth_headers": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "add_linkerd_headers": {
                                                            "type": "boolean"
                                                        },
                                                        "allow_request_body": {
                                                            "description": "TODO(lukeshu): In v3alpha2, drop allow_request_body in favor of include_body. allow_request_body has been deprecated for a long time.",
                                                            "type": "boolean"
                                                        },
                                                        "allowed_authorization_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "allowed_request_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "auth_service": {
                                                            "description": "TODO(lukeshu): In v3alpha2, consider renameing `auth_service` to just `service`, for consistency with the other resource types.",
                                                            "type": "string"
                                                        },
                                                        "circuit_breakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "failure_mode_allow": {
                                                            "type": "boolean"
                                                        },
                                                        "include_body": {
                                                            "properties": {
                                                                "allow_partial": {
                                                                    "type": "boolean"
                                                                },
                                                                "max_bytes": {
                                                                    "description": "These aren't pointer types because they are required.",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "allow_partial",
                                                                "max_bytes"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "path_prefix": {
                                                            "type": "string"
                                                        },
                                                        "proto": {
                                                            "enum": [
                                                                "http",
                                                                "grpc"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "protocol_version": {
                                                            "description": "ProtocolVersion is the envoy api transport protocol version",
                                                            "enum": [
                                                                "v2",
                                                                "v3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        },
                                                        "status_on_error": {
                                                            "description": "TODO(lukeshu): In v3alpha2, consider getting rid of this struct type in favor of just using an int (i.e. `statusOnError: 500` instead of the current `statusOnError: { code: 500 }`).",
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "timeout_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "tls": {
                                                            "type": "string"
                                                        },
                                                        "v2ExplicitTLS": {
                                                            "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                            "properties": {
                                                                "serviceScheme": {
                                                                    "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                    "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                    "type": "string"
                                                                },
                                                                "tls": {
                                                                    "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                    "enum": [
                                                                        "",
                                                                        "null",
                                                                        "bool:true",
                                                                        "bool:false",
                                                                        "string"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "auth_service"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "AuthService is the Schema for the authservices API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"authservices.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"AuthService\",\"listKind\":\"AuthServiceList\",\"plural\":\"authservices\",\"singular\":\"authservice\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"AuthService is the Schema for the authservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"AuthServiceSpec defines the desired state of AuthService\",\"properties\":{\"add_auth_headers\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"add_linkerd_headers\":{\"type\":\"boolean\"},\"allow_request_body\":{\"type\":\"boolean\"},\"allowed_authorization_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"allowed_request_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"auth_service\":{\"type\":\"string\"},\"failure_mode_allow\":{\"type\":\"boolean\"},\"include_body\":{\"properties\":{\"allow_partial\":{\"type\":\"boolean\"},\"max_bytes\":{\"description\":\"These aren't pointer types because they are required.\",\"type\":\"integer\"}},\"required\":[\"allow_partial\",\"max_bytes\"],\"type\":\"object\"},\"path_prefix\":{\"type\":\"string\"},\"proto\":{\"enum\":[\"http\",\"grpc\"],\"type\":\"string\"},\"protocol_version\":{\"enum\":[\"v2\",\"v3\"],\"type\":\"string\"},\"status_on_error\":{\"description\":\"Why isn't this just an int??\",\"properties\":{\"code\":{\"type\":\"integer\"}},\"type\":\"object\"},\"timeout_ms\":{\"type\":\"integer\"},\"v3CircuitBreakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"v3StatsName\":{\"type\":\"string\"}},\"required\":[\"auth_service\"],\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"AuthService is the Schema for the authservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"AuthServiceSpec defines the desired state of AuthService\",\"properties\":{\"add_auth_headers\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"add_linkerd_headers\":{\"type\":\"boolean\"},\"allow_request_body\":{\"description\":\"TODO(lukeshu): In v3alpha2, drop allow_request_body in favor of include_body. allow_request_body has been deprecated for a long time.\",\"type\":\"boolean\"},\"allowed_authorization_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"allowed_request_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"auth_service\":{\"description\":\"TODO(lukeshu): In v3alpha2, consider renameing `auth_service` to just `service`, for consistency with the other resource types.\",\"type\":\"string\"},\"circuit_breakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"failure_mode_allow\":{\"type\":\"boolean\"},\"include_body\":{\"properties\":{\"allow_partial\":{\"type\":\"boolean\"},\"max_bytes\":{\"description\":\"These aren't pointer types because they are required.\",\"type\":\"integer\"}},\"required\":[\"allow_partial\",\"max_bytes\"],\"type\":\"object\"},\"path_prefix\":{\"type\":\"string\"},\"proto\":{\"enum\":[\"http\",\"grpc\"],\"type\":\"string\"},\"protocol_version\":{\"description\":\"ProtocolVersion is the envoy api transport protocol version\",\"enum\":[\"v2\",\"v3\"],\"type\":\"string\"},\"stats_name\":{\"type\":\"string\"},\"status_on_error\":{\"description\":\"TODO(lukeshu): In v3alpha2, consider getting rid of this struct type in favor of just using an int (i.e. `statusOnError: 500` instead of the current `statusOnError: { code: 500 }`).\",\"properties\":{\"code\":{\"type\":\"integer\"}},\"type\":\"object\"},\"timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"tls\":{\"type\":\"string\"},\"v2ExplicitTLS\":{\"description\":\"V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.\",\"properties\":{\"serviceScheme\":{\"description\":\"ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \\n Acceptable values are \\\"http://\\\" (case-insensitive), \\\"https://\\\" (case-insensitive), or \\\"\\\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.\",\"pattern\":\"^([hH][tT][tT][pP][sS]?://)?$\",\"type\":\"string\"},\"tls\":{\"description\":\"TLS controls whether and how to represent the \\\"tls\\\" field when its value could be implied by the \\\"service\\\" field.  In v2, there were a lot of different ways to spell an \\\"empty\\\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \\n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \\\"\\\"           | omit the field                        | defer to service (no TLSContext)   |  | \\\"null\\\"       | store an explicit \\\"null\\\" in the field | defer to service (no TLSContext)   |  | \\\"string\\\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \\\"bool:false\\\" | store a Boolean \\\"false\\\" in the field  | defer to service (no TLSContext)   |  | \\\"bool:true\\\"  | store a Boolean \\\"true\\\" in the field   | originate TLS (no TLSContext)      | \\n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \\\"bool:true\\\" if TLS is not to be originated), then this field is ignored.\",\"enum\":[\"\",\"null\",\"bool:true\",\"bool:false\",\"string\"],\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"auth_service\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"AuthService is the Schema for the authservices API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:16Z",
                        "generation": 4,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:16Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:16Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:conversion": {
                                            "f:webhook": {
                                                "f:clientConfig": {
                                                    "f:caBundle": {},
                                                    "f:service": {
                                                        "f:path": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "apiext",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:21Z"
                            }
                        ],
                        "name": "authservices.getambassador.io",
                        "resourceVersion": "10647554",
                        "uid": "49a1521e-a791-4d0b-8079-7516e6a06901"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZJRENDQXdpZ0F3SUJBZ0lSQU5qKzkvNlFaVjN5cGRqUjhaSXByakl3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUI0WERUSXlNRFl5TURJek16RXlNVm9YRFRJegpNRFl5TURJek16RXlNVm93R2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUlJQ0lqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBOWFnSE5MVFd5dkdVbFY3SnArUDJScll2bko2cWhmaWsKbURUbndlWDFaMDNTMVJhTnFyTUVzY2lsMC82Mmlub250L1gyS3J4ckhhT3ltZEt4MGF3ZldpR0w3TWZuRHVwMwpsMVhxUEhNeFYyVjFLazZsOHNkbDBObytpTVAwSGhPTEVRcXkxQ0E1MTJCbmF0THUxblVjTEhiMUVnbEhET01NCnlkbWdPenRUMXhMS3prN3pYWGI2K3RxK1I3N2lOSU5xcnF5T3J1SW9qeG1MdGN0LzdielFWTXRodkhDR3hvWFMKbU94ZXJFczVlUHJMN0g5L1hSYzZCSFJEcXhKZDVFMXpJcVZzdFB1OWkxSjJSMnhqZXNqRC9xSEQ4eEEzRkdLcApRWER0RW5rR0I1TWpMbUhjSGZTRTBqY01QU1ZMME84ZWNmcEY5Q1Z6dE5QOGdUaUhuRnBxYU5MWVl1SThJQXo1CnZsZkJ1QmRPWTU2OGc0bGN3OG1JbldqY2J3VlNhYlpYVVdTZ1JmVjJaN2hZS2JQeFhYcndJR0pjc1hsYk0xeWoKWFlNU3JWZFZSOHI0ZnhDWi9HY0loL0RxelQ4ZHhiUnYrZjJjY2NNOG5NOGlsYTJYQkpkZnFrdURZcnl3S204LwpSTWVZMml5ckZKZkg1bmYrTjZYMERVK1FoMWlPMG1jYWhXdFZ6d2x6dzFuZGpkRXVocXJzV1BuNDRrbWlKL3dUCmx3OWZBKy9tdHV0STJjQStxdTFTcEMxR0h0cTZ3MEhBKzhrSTQxOUtwRkhYNSt6bFAxMFhzbWNEY0w4ekhlMnkKSmY2ZVI0YmE0enduZWRqUE5pcXFhZVlwVm1mT3RlanMyUkJRd2Z2Q2ErcjBEQ3BJeXhsY0FzN2ZKSENzdXRsUQpuVnB6NzZsa2FLTUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLRU1CMEdBMVVkSlFRV01CUUdDQ3NHCkFRVUZCd01DQmdnckJnRUZCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTbUZJTEwKQlBZQmduUFRqY0Z5UWNscEZNVUNCREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBd013dkNUeDJOWTNQUStsSQpKbTlvV0dHVTdIRVI0Qlh5dnJ0UkhicXhodzl3R1ZEam54aHNjQXNYUDBKL1Jrd2JRTmVZbFJMbkFLNGxzcDdCCmFjcEFsbmtzc2pRZlI1Z25jbUI1aklzQUZLOEhvbHhSOFVGYzUvblFkbitPVDZGYyt2RHljM2JPUWd5aHphTzgKTHowbFNTYXlIaS9adlZqOHlxdVZMSEpmYWh1MWpWWm9oQktVZ1V2YlUyMnhLRkpidUViVE9IVUQvU2tVWjBGeQpKUnpNMVpKZXh1dVdYZk5US0tYQ3M2Q1dHdlpMT2VpNGZpbzRoMjgvS3lJYU9Tb2JES0RlY2I1dmRKUDlnRjJFCmxNWjNsWjUvWFhmV2RGR1B1ZkUzNHd5WHdpNjh0bXZydlZLOEk5WGhmM0haWUg2RDhxbjhvYVRnZ05FUG84a0MKS25VUWdhUFRDYWt4R1hjTmpiZmIyeEpOd1RIVUs5ZzIxZnkyWkRIUHhQczg4eW1pbWwzbEh0eGUzRU8xZGxpagp5QitmekcvOXVlZzJEUncrUDFRM21VOEQ3L1ZJRWtoZlV3Zzk1T1JkMmlDTk05SklYMzJHWU1uakk1ZEJyVHpPCjlMMXE0OEx2QzZkNm40b2h5MkZtZnZmNHQwREtOQkdIMlBHQXRWa0EwNUh4R3VQYlR2OUdNeFAxbUNyb2NkWjUKcVRpNThNYmRGZE9BM2pHNHBObHhMTytJSGxoTm9IOS9WMVcwU1JHYzB6OXhnN05Jc2tCQ3pNc1AvdGVjc01LRApPczlvK3g5VlJ6MlJBWlI2VHFlNHdCSFllWC9uLzJPYnNPZ0VzSnMrYVFrdHBJVEs3RzVkZDhJaGx6OXNDell6CnNWMWlsYWFTZG1ZclYwKzg1YWtFbklMczhNST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "path": "/webhooks/crd-convert",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "AuthService",
                            "listKind": "AuthServiceList",
                            "plural": "authservices",
                            "singular": "authservice"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "AuthServiceSpec defines the desired state of AuthService",
                                                "properties": {
                                                    "add_auth_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "allow_request_body": {
                                                        "type": "boolean"
                                                    },
                                                    "allowed_authorization_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "allowed_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_service": {
                                                        "type": "string"
                                                    },
                                                    "failure_mode_allow": {
                                                        "type": "boolean"
                                                    },
                                                    "include_body": {
                                                        "properties": {
                                                            "allow_partial": {
                                                                "type": "boolean"
                                                            },
                                                            "max_bytes": {
                                                                "description": "These aren't pointer types because they are required.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "allow_partial",
                                                            "max_bytes"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "path_prefix": {
                                                        "type": "string"
                                                    },
                                                    "proto": {
                                                        "enum": [
                                                            "http",
                                                            "grpc"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "status_on_error": {
                                                        "description": "Why isn't this just an int??",
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "v3CircuitBreakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "auth_service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "AuthServiceSpec defines the desired state of AuthService",
                                                "properties": {
                                                    "add_auth_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "allow_request_body": {
                                                        "description": "TODO(lukeshu): In v3alpha2, drop allow_request_body in favor of include_body. allow_request_body has been deprecated for a long time.",
                                                        "type": "boolean"
                                                    },
                                                    "allowed_authorization_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "allowed_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_service": {
                                                        "description": "TODO(lukeshu): In v3alpha2, consider renameing `auth_service` to just `service`, for consistency with the other resource types.",
                                                        "type": "string"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "failure_mode_allow": {
                                                        "type": "boolean"
                                                    },
                                                    "include_body": {
                                                        "properties": {
                                                            "allow_partial": {
                                                                "type": "boolean"
                                                            },
                                                            "max_bytes": {
                                                                "description": "These aren't pointer types because they are required.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "allow_partial",
                                                            "max_bytes"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "path_prefix": {
                                                        "type": "string"
                                                    },
                                                    "proto": {
                                                        "enum": [
                                                            "http",
                                                            "grpc"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "description": "ProtocolVersion is the envoy api transport protocol version",
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "status_on_error": {
                                                        "description": "TODO(lukeshu): In v3alpha2, consider getting rid of this struct type in favor of just using an int (i.e. `statusOnError: 500` instead of the current `statusOnError: { code: 500 }`).",
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "auth_service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "AuthService",
                            "listKind": "AuthServiceList",
                            "plural": "authservices",
                            "singular": "authservice"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-06-20T23:31:16Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-06-20T23:31:16Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::listeners.getambassador.io",
                "custom": true,
                "id": "listeners.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "listeners.getambassador.io"
                    },
                    "spec": {
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Listener",
                            "listKind": "ListenerList",
                            "plural": "listeners",
                            "singular": "listener"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.port",
                                        "name": "Port",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.protocol",
                                        "name": "Protocol",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.protocolStack",
                                        "name": "Stack",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.statsPrefix",
                                        "name": "StatsPrefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.securityModel",
                                        "name": "Security",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.l7Depth",
                                        "name": "L7Depth",
                                        "type": "string"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Listener is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ListenerSpec defines the desired state of this Port",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hostBinding": {
                                                        "description": "HostBinding allows restricting which Hosts will be used for this Listener.",
                                                        "properties": {
                                                            "namespace": {
                                                                "description": "NamespaceBindingType defines we we specify which namespaces to look for Hosts in.",
                                                                "properties": {
                                                                    "from": {
                                                                        "description": "NamespaceFromType defines how we evaluate a NamespaceBindingType.",
                                                                        "enum": [
                                                                            "SELF",
                                                                            "ALL",
                                                                            "SELECTOR"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "selector": {
                                                                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                                "properties": {
                                                                    "matchExpressions": {
                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                        "items": {
                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                    "type": "string"
                                                                                },
                                                                                "values": {
                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "key",
                                                                                "operator"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "matchLabels": {
                                                                        "additionalProperties": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "l7Depth": {
                                                        "description": "L7Depth specifies how many layer 7 load balancers are between us and the edge of the network.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "port": {
                                                        "description": "Port is the network port. Only one Listener can use a given port.",
                                                        "format": "int32",
                                                        "maximum": 65535,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "protocol": {
                                                        "description": "Protocol is a shorthand for certain predefined stacks. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                        "enum": [
                                                            "HTTP",
                                                            "HTTPS",
                                                            "HTTPPROXY",
                                                            "HTTPSPROXY",
                                                            "TCP",
                                                            "TLS",
                                                            "UDP"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocolStack": {
                                                        "description": "ProtocolStack explicitly specifies the protocol stack to set up. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                        "items": {
                                                            "description": "ProtocolStackElement defines specific layers that may be combined in a protocol stack for processing connections to a port.",
                                                            "enum": [
                                                                "HTTP",
                                                                "PROXY",
                                                                "TLS",
                                                                "TCP",
                                                                "UDP"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "securityModel": {
                                                        "description": "SecurityModel specifies how to determine whether connections to this port are secure or insecure.",
                                                        "enum": [
                                                            "XFP",
                                                            "SECURE",
                                                            "INSECURE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "statsPrefix": {
                                                        "description": "StatsPrefix specifies the prefix for statistics sent by Envoy about this Listener. The default depends on the protocol: \"ingress-http\", \"ingress-https\", \"ingress-tls-$port\", or \"ingress-$port\".",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "hostBinding",
                                                    "port",
                                                    "securityModel"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {}
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "listeners.getambassador.io"
                        },
                        "spec": {
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "Listener",
                                "listKind": "ListenerList",
                                "plural": "listeners",
                                "singular": "listener"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "additionalPrinterColumns": [
                                        {
                                            "jsonPath": ".spec.port",
                                            "name": "Port",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.protocol",
                                            "name": "Protocol",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.protocolStack",
                                            "name": "Stack",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.statsPrefix",
                                            "name": "StatsPrefix",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.securityModel",
                                            "name": "Security",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.l7Depth",
                                            "name": "L7Depth",
                                            "type": "string"
                                        }
                                    ],
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Listener is the Schema for the hosts API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "ListenerSpec defines the desired state of this Port",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "hostBinding": {
                                                            "description": "HostBinding allows restricting which Hosts will be used for this Listener.",
                                                            "properties": {
                                                                "namespace": {
                                                                    "description": "NamespaceBindingType defines we we specify which namespaces to look for Hosts in.",
                                                                    "properties": {
                                                                        "from": {
                                                                            "description": "NamespaceFromType defines how we evaluate a NamespaceBindingType.",
                                                                            "enum": [
                                                                                "SELF",
                                                                                "ALL",
                                                                                "SELECTOR"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "selector": {
                                                                    "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                                    "properties": {
                                                                        "matchExpressions": {
                                                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                            "items": {
                                                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "key is the label key that the selector applies to.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "operator": {
                                                                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "values": {
                                                                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key",
                                                                                    "operator"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "matchLabels": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "l7Depth": {
                                                            "description": "L7Depth specifies how many layer 7 load balancers are between us and the edge of the network.",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "port": {
                                                            "description": "Port is the network port. Only one Listener can use a given port.",
                                                            "format": "int32",
                                                            "maximum": 65535,
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        },
                                                        "protocol": {
                                                            "description": "Protocol is a shorthand for certain predefined stacks. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                            "enum": [
                                                                "HTTP",
                                                                "HTTPS",
                                                                "HTTPPROXY",
                                                                "HTTPSPROXY",
                                                                "TCP",
                                                                "TLS",
                                                                "UDP"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "protocolStack": {
                                                            "description": "ProtocolStack explicitly specifies the protocol stack to set up. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                            "items": {
                                                                "description": "ProtocolStackElement defines specific layers that may be combined in a protocol stack for processing connections to a port.",
                                                                "enum": [
                                                                    "HTTP",
                                                                    "PROXY",
                                                                    "TLS",
                                                                    "TCP",
                                                                    "UDP"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "securityModel": {
                                                            "description": "SecurityModel specifies how to determine whether connections to this port are secure or insecure.",
                                                            "enum": [
                                                                "XFP",
                                                                "SECURE",
                                                                "INSECURE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "statsPrefix": {
                                                            "description": "StatsPrefix specifies the prefix for statistics sent by Envoy about this Listener. The default depends on the protocol: \"ingress-http\", \"ingress-https\", \"ingress-tls-$port\", or \"ingress-$port\".",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "hostBinding",
                                                        "port",
                                                        "securityModel"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {}
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"listeners.getambassador.io\"},\"spec\":{\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"Listener\",\"listKind\":\"ListenerList\",\"plural\":\"listeners\",\"singular\":\"listener\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".spec.port\",\"name\":\"Port\",\"type\":\"string\"},{\"jsonPath\":\".spec.protocol\",\"name\":\"Protocol\",\"type\":\"string\"},{\"jsonPath\":\".spec.protocolStack\",\"name\":\"Stack\",\"type\":\"string\"},{\"jsonPath\":\".spec.statsPrefix\",\"name\":\"StatsPrefix\",\"type\":\"string\"},{\"jsonPath\":\".spec.securityModel\",\"name\":\"Security\",\"type\":\"string\"},{\"jsonPath\":\".spec.l7Depth\",\"name\":\"L7Depth\",\"type\":\"string\"}],\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Listener is the Schema for the hosts API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"ListenerSpec defines the desired state of this Port\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"hostBinding\":{\"description\":\"HostBinding allows restricting which Hosts will be used for this Listener.\",\"properties\":{\"namespace\":{\"description\":\"NamespaceBindingType defines we we specify which namespaces to look for Hosts in.\",\"properties\":{\"from\":{\"description\":\"NamespaceFromType defines how we evaluate a NamespaceBindingType.\",\"enum\":[\"SELF\",\"ALL\",\"SELECTOR\"],\"type\":\"string\"}},\"type\":\"object\"},\"selector\":{\"description\":\"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.\",\"properties\":{\"matchExpressions\":{\"description\":\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\"items\":{\"description\":\"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\"properties\":{\"key\":{\"description\":\"key is the label key that the selector applies to.\",\"type\":\"string\"},\"operator\":{\"description\":\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\"type\":\"string\"},\"values\":{\"description\":\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"key\",\"operator\"],\"type\":\"object\"},\"type\":\"array\"},\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"},\"l7Depth\":{\"description\":\"L7Depth specifies how many layer 7 load balancers are between us and the edge of the network.\",\"format\":\"int32\",\"type\":\"integer\"},\"port\":{\"description\":\"Port is the network port. Only one Listener can use a given port.\",\"format\":\"int32\",\"maximum\":65535,\"minimum\":1,\"type\":\"integer\"},\"protocol\":{\"description\":\"Protocol is a shorthand for certain predefined stacks. Exactly one of Protocol or ProtocolStack must be supplied.\",\"enum\":[\"HTTP\",\"HTTPS\",\"HTTPPROXY\",\"HTTPSPROXY\",\"TCP\",\"TLS\",\"UDP\"],\"type\":\"string\"},\"protocolStack\":{\"description\":\"ProtocolStack explicitly specifies the protocol stack to set up. Exactly one of Protocol or ProtocolStack must be supplied.\",\"items\":{\"description\":\"ProtocolStackElement defines specific layers that may be combined in a protocol stack for processing connections to a port.\",\"enum\":[\"HTTP\",\"PROXY\",\"TLS\",\"TCP\",\"UDP\"],\"type\":\"string\"},\"type\":\"array\"},\"securityModel\":{\"description\":\"SecurityModel specifies how to determine whether connections to this port are secure or insecure.\",\"enum\":[\"XFP\",\"SECURE\",\"INSECURE\"],\"type\":\"string\"},\"statsPrefix\":{\"description\":\"StatsPrefix specifies the prefix for statistics sent by Envoy about this Listener. The default depends on the protocol: \\\"ingress-http\\\", \\\"ingress-https\\\", \\\"ingress-tls-$port\\\", or \\\"ingress-$port\\\".\",\"type\":\"string\"}},\"required\":[\"hostBinding\",\"port\",\"securityModel\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{}}]}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:16Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-06-20T23:31:16Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {}
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:16Z"
                            }
                        ],
                        "name": "listeners.getambassador.io",
                        "resourceVersion": "3310",
                        "uid": "3d399d17-7a5a-4655-a697-45030ee2dd63"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "None"
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Listener",
                            "listKind": "ListenerList",
                            "plural": "listeners",
                            "singular": "listener"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.port",
                                        "name": "Port",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.protocol",
                                        "name": "Protocol",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.protocolStack",
                                        "name": "Stack",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.statsPrefix",
                                        "name": "StatsPrefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.securityModel",
                                        "name": "Security",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.l7Depth",
                                        "name": "L7Depth",
                                        "type": "string"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Listener is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ListenerSpec defines the desired state of this Port",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hostBinding": {
                                                        "description": "HostBinding allows restricting which Hosts will be used for this Listener.",
                                                        "properties": {
                                                            "namespace": {
                                                                "description": "NamespaceBindingType defines we we specify which namespaces to look for Hosts in.",
                                                                "properties": {
                                                                    "from": {
                                                                        "description": "NamespaceFromType defines how we evaluate a NamespaceBindingType.",
                                                                        "enum": [
                                                                            "SELF",
                                                                            "ALL",
                                                                            "SELECTOR"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "selector": {
                                                                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                                "properties": {
                                                                    "matchExpressions": {
                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                        "items": {
                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                    "type": "string"
                                                                                },
                                                                                "values": {
                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "key",
                                                                                "operator"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "matchLabels": {
                                                                        "additionalProperties": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "l7Depth": {
                                                        "description": "L7Depth specifies how many layer 7 load balancers are between us and the edge of the network.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "port": {
                                                        "description": "Port is the network port. Only one Listener can use a given port.",
                                                        "format": "int32",
                                                        "maximum": 65535,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "protocol": {
                                                        "description": "Protocol is a shorthand for certain predefined stacks. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                        "enum": [
                                                            "HTTP",
                                                            "HTTPS",
                                                            "HTTPPROXY",
                                                            "HTTPSPROXY",
                                                            "TCP",
                                                            "TLS",
                                                            "UDP"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocolStack": {
                                                        "description": "ProtocolStack explicitly specifies the protocol stack to set up. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                        "items": {
                                                            "description": "ProtocolStackElement defines specific layers that may be combined in a protocol stack for processing connections to a port.",
                                                            "enum": [
                                                                "HTTP",
                                                                "PROXY",
                                                                "TLS",
                                                                "TCP",
                                                                "UDP"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "securityModel": {
                                                        "description": "SecurityModel specifies how to determine whether connections to this port are secure or insecure.",
                                                        "enum": [
                                                            "XFP",
                                                            "SECURE",
                                                            "INSECURE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "statsPrefix": {
                                                        "description": "StatsPrefix specifies the prefix for statistics sent by Envoy about this Listener. The default depends on the protocol: \"ingress-http\", \"ingress-https\", \"ingress-tls-$port\", or \"ingress-$port\".",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "hostBinding",
                                                    "port",
                                                    "securityModel"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {}
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Listener",
                            "listKind": "ListenerList",
                            "plural": "listeners",
                            "singular": "listener"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-06-20T23:31:16Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-06-20T23:31:16Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v3alpha1"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "custom": false,
                "type": "kubernetes:yaml:ConfigFile",
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:core/v1:ConfigMap::cluster-info-configmap"
                ]
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::tlscontexts.getambassador.io",
                "custom": true,
                "id": "tlscontexts.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "tlscontexts.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TLSContext",
                            "listKind": "TLSContextList",
                            "plural": "tlscontexts",
                            "singular": "tlscontext"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TLSContextSpec defines the desired state of TLSContext",
                                                "properties": {
                                                    "alpn_protocols": {
                                                        "type": "string"
                                                    },
                                                    "ca_secret": {
                                                        "type": "string"
                                                    },
                                                    "cacert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_required": {
                                                        "type": "boolean"
                                                    },
                                                    "cipher_suites": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ecdh_curves": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hosts": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "max_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "min_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "private_key_file": {
                                                        "type": "string"
                                                    },
                                                    "redirect_cleartext_from": {
                                                        "type": "integer"
                                                    },
                                                    "secret": {
                                                        "type": "string"
                                                    },
                                                    "secret_namespacing": {
                                                        "type": "boolean"
                                                    },
                                                    "sni": {
                                                        "type": "string"
                                                    },
                                                    "v3CRLSecret": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TLSContextSpec defines the desired state of TLSContext",
                                                "properties": {
                                                    "alpn_protocols": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ca_secret": {
                                                        "type": "string"
                                                    },
                                                    "cacert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_required": {
                                                        "type": "boolean"
                                                    },
                                                    "cipher_suites": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "crl_secret": {
                                                        "type": "string"
                                                    },
                                                    "ecdh_curves": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hosts": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "max_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "min_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "private_key_file": {
                                                        "type": "string"
                                                    },
                                                    "redirect_cleartext_from": {
                                                        "type": "integer"
                                                    },
                                                    "secret": {
                                                        "type": "string"
                                                    },
                                                    "secret_namespacing": {
                                                        "type": "boolean"
                                                    },
                                                    "sni": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "tlscontexts.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "TLSContext",
                                "listKind": "TLSContextList",
                                "plural": "tlscontexts",
                                "singular": "tlscontext"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TLSContext is the Schema for the tlscontexts API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TLSContextSpec defines the desired state of TLSContext",
                                                    "properties": {
                                                        "alpn_protocols": {
                                                            "type": "string"
                                                        },
                                                        "ca_secret": {
                                                            "type": "string"
                                                        },
                                                        "cacert_chain_file": {
                                                            "type": "string"
                                                        },
                                                        "cert_chain_file": {
                                                            "type": "string"
                                                        },
                                                        "cert_required": {
                                                            "type": "boolean"
                                                        },
                                                        "cipher_suites": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "ecdh_curves": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "hosts": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "max_tls_version": {
                                                            "enum": [
                                                                "v1.0",
                                                                "v1.1",
                                                                "v1.2",
                                                                "v1.3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "min_tls_version": {
                                                            "enum": [
                                                                "v1.0",
                                                                "v1.1",
                                                                "v1.2",
                                                                "v1.3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "private_key_file": {
                                                            "type": "string"
                                                        },
                                                        "redirect_cleartext_from": {
                                                            "type": "integer"
                                                        },
                                                        "secret": {
                                                            "type": "string"
                                                        },
                                                        "secret_namespacing": {
                                                            "type": "boolean"
                                                        },
                                                        "sni": {
                                                            "type": "string"
                                                        },
                                                        "v3CRLSecret": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TLSContext is the Schema for the tlscontexts API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TLSContextSpec defines the desired state of TLSContext",
                                                    "properties": {
                                                        "alpn_protocols": {
                                                            "type": "string"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "ca_secret": {
                                                            "type": "string"
                                                        },
                                                        "cacert_chain_file": {
                                                            "type": "string"
                                                        },
                                                        "cert_chain_file": {
                                                            "type": "string"
                                                        },
                                                        "cert_required": {
                                                            "type": "boolean"
                                                        },
                                                        "cipher_suites": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "crl_secret": {
                                                            "type": "string"
                                                        },
                                                        "ecdh_curves": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "hosts": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "max_tls_version": {
                                                            "enum": [
                                                                "v1.0",
                                                                "v1.1",
                                                                "v1.2",
                                                                "v1.3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "min_tls_version": {
                                                            "enum": [
                                                                "v1.0",
                                                                "v1.1",
                                                                "v1.2",
                                                                "v1.3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "private_key_file": {
                                                            "type": "string"
                                                        },
                                                        "redirect_cleartext_from": {
                                                            "type": "integer"
                                                        },
                                                        "secret": {
                                                            "type": "string"
                                                        },
                                                        "secret_namespacing": {
                                                            "type": "boolean"
                                                        },
                                                        "sni": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TLSContext is the Schema for the tlscontexts API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"tlscontexts.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"TLSContext\",\"listKind\":\"TLSContextList\",\"plural\":\"tlscontexts\",\"singular\":\"tlscontext\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TLSContext is the Schema for the tlscontexts API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TLSContextSpec defines the desired state of TLSContext\",\"properties\":{\"alpn_protocols\":{\"type\":\"string\"},\"ca_secret\":{\"type\":\"string\"},\"cacert_chain_file\":{\"type\":\"string\"},\"cert_chain_file\":{\"type\":\"string\"},\"cert_required\":{\"type\":\"boolean\"},\"cipher_suites\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ecdh_curves\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"hosts\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"max_tls_version\":{\"enum\":[\"v1.0\",\"v1.1\",\"v1.2\",\"v1.3\"],\"type\":\"string\"},\"min_tls_version\":{\"enum\":[\"v1.0\",\"v1.1\",\"v1.2\",\"v1.3\"],\"type\":\"string\"},\"private_key_file\":{\"type\":\"string\"},\"redirect_cleartext_from\":{\"type\":\"integer\"},\"secret\":{\"type\":\"string\"},\"secret_namespacing\":{\"type\":\"boolean\"},\"sni\":{\"type\":\"string\"},\"v3CRLSecret\":{\"type\":\"string\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TLSContext is the Schema for the tlscontexts API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TLSContextSpec defines the desired state of TLSContext\",\"properties\":{\"alpn_protocols\":{\"type\":\"string\"},\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ca_secret\":{\"type\":\"string\"},\"cacert_chain_file\":{\"type\":\"string\"},\"cert_chain_file\":{\"type\":\"string\"},\"cert_required\":{\"type\":\"boolean\"},\"cipher_suites\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"crl_secret\":{\"type\":\"string\"},\"ecdh_curves\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"hosts\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"max_tls_version\":{\"enum\":[\"v1.0\",\"v1.1\",\"v1.2\",\"v1.3\"],\"type\":\"string\"},\"min_tls_version\":{\"enum\":[\"v1.0\",\"v1.1\",\"v1.2\",\"v1.3\"],\"type\":\"string\"},\"private_key_file\":{\"type\":\"string\"},\"redirect_cleartext_from\":{\"type\":\"integer\"},\"secret\":{\"type\":\"string\"},\"secret_namespacing\":{\"type\":\"boolean\"},\"sni\":{\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TLSContext is the Schema for the tlscontexts API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:12Z",
                        "generation": 3,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:12Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:12Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:conversion": {
                                            "f:webhook": {
                                                "f:clientConfig": {
                                                    "f:caBundle": {},
                                                    "f:service": {
                                                        "f:path": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "apiext",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:22Z"
                            }
                        ],
                        "name": "tlscontexts.getambassador.io",
                        "resourceVersion": "10597971",
                        "uid": "1e6dba38-8371-4b85-93d6-ec6f203abc3c"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZJRENDQXdpZ0F3SUJBZ0lSQU5qKzkvNlFaVjN5cGRqUjhaSXByakl3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUI0WERUSXlNRFl5TURJek16RXlNVm9YRFRJegpNRFl5TURJek16RXlNVm93R2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUlJQ0lqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBOWFnSE5MVFd5dkdVbFY3SnArUDJScll2bko2cWhmaWsKbURUbndlWDFaMDNTMVJhTnFyTUVzY2lsMC82Mmlub250L1gyS3J4ckhhT3ltZEt4MGF3ZldpR0w3TWZuRHVwMwpsMVhxUEhNeFYyVjFLazZsOHNkbDBObytpTVAwSGhPTEVRcXkxQ0E1MTJCbmF0THUxblVjTEhiMUVnbEhET01NCnlkbWdPenRUMXhMS3prN3pYWGI2K3RxK1I3N2lOSU5xcnF5T3J1SW9qeG1MdGN0LzdielFWTXRodkhDR3hvWFMKbU94ZXJFczVlUHJMN0g5L1hSYzZCSFJEcXhKZDVFMXpJcVZzdFB1OWkxSjJSMnhqZXNqRC9xSEQ4eEEzRkdLcApRWER0RW5rR0I1TWpMbUhjSGZTRTBqY01QU1ZMME84ZWNmcEY5Q1Z6dE5QOGdUaUhuRnBxYU5MWVl1SThJQXo1CnZsZkJ1QmRPWTU2OGc0bGN3OG1JbldqY2J3VlNhYlpYVVdTZ1JmVjJaN2hZS2JQeFhYcndJR0pjc1hsYk0xeWoKWFlNU3JWZFZSOHI0ZnhDWi9HY0loL0RxelQ4ZHhiUnYrZjJjY2NNOG5NOGlsYTJYQkpkZnFrdURZcnl3S204LwpSTWVZMml5ckZKZkg1bmYrTjZYMERVK1FoMWlPMG1jYWhXdFZ6d2x6dzFuZGpkRXVocXJzV1BuNDRrbWlKL3dUCmx3OWZBKy9tdHV0STJjQStxdTFTcEMxR0h0cTZ3MEhBKzhrSTQxOUtwRkhYNSt6bFAxMFhzbWNEY0w4ekhlMnkKSmY2ZVI0YmE0enduZWRqUE5pcXFhZVlwVm1mT3RlanMyUkJRd2Z2Q2ErcjBEQ3BJeXhsY0FzN2ZKSENzdXRsUQpuVnB6NzZsa2FLTUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLRU1CMEdBMVVkSlFRV01CUUdDQ3NHCkFRVUZCd01DQmdnckJnRUZCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTbUZJTEwKQlBZQmduUFRqY0Z5UWNscEZNVUNCREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBd013dkNUeDJOWTNQUStsSQpKbTlvV0dHVTdIRVI0Qlh5dnJ0UkhicXhodzl3R1ZEam54aHNjQXNYUDBKL1Jrd2JRTmVZbFJMbkFLNGxzcDdCCmFjcEFsbmtzc2pRZlI1Z25jbUI1aklzQUZLOEhvbHhSOFVGYzUvblFkbitPVDZGYyt2RHljM2JPUWd5aHphTzgKTHowbFNTYXlIaS9adlZqOHlxdVZMSEpmYWh1MWpWWm9oQktVZ1V2YlUyMnhLRkpidUViVE9IVUQvU2tVWjBGeQpKUnpNMVpKZXh1dVdYZk5US0tYQ3M2Q1dHdlpMT2VpNGZpbzRoMjgvS3lJYU9Tb2JES0RlY2I1dmRKUDlnRjJFCmxNWjNsWjUvWFhmV2RGR1B1ZkUzNHd5WHdpNjh0bXZydlZLOEk5WGhmM0haWUg2RDhxbjhvYVRnZ05FUG84a0MKS25VUWdhUFRDYWt4R1hjTmpiZmIyeEpOd1RIVUs5ZzIxZnkyWkRIUHhQczg4eW1pbWwzbEh0eGUzRU8xZGxpagp5QitmekcvOXVlZzJEUncrUDFRM21VOEQ3L1ZJRWtoZlV3Zzk1T1JkMmlDTk05SklYMzJHWU1uakk1ZEJyVHpPCjlMMXE0OEx2QzZkNm40b2h5MkZtZnZmNHQwREtOQkdIMlBHQXRWa0EwNUh4R3VQYlR2OUdNeFAxbUNyb2NkWjUKcVRpNThNYmRGZE9BM2pHNHBObHhMTytJSGxoTm9IOS9WMVcwU1JHYzB6OXhnN05Jc2tCQ3pNc1AvdGVjc01LRApPczlvK3g5VlJ6MlJBWlI2VHFlNHdCSFllWC9uLzJPYnNPZ0VzSnMrYVFrdHBJVEs3RzVkZDhJaGx6OXNDell6CnNWMWlsYWFTZG1ZclYwKzg1YWtFbklMczhNST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "path": "/webhooks/crd-convert",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TLSContext",
                            "listKind": "TLSContextList",
                            "plural": "tlscontexts",
                            "singular": "tlscontext"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TLSContextSpec defines the desired state of TLSContext",
                                                "properties": {
                                                    "alpn_protocols": {
                                                        "type": "string"
                                                    },
                                                    "ca_secret": {
                                                        "type": "string"
                                                    },
                                                    "cacert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_required": {
                                                        "type": "boolean"
                                                    },
                                                    "cipher_suites": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ecdh_curves": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hosts": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "max_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "min_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "private_key_file": {
                                                        "type": "string"
                                                    },
                                                    "redirect_cleartext_from": {
                                                        "type": "integer"
                                                    },
                                                    "secret": {
                                                        "type": "string"
                                                    },
                                                    "secret_namespacing": {
                                                        "type": "boolean"
                                                    },
                                                    "sni": {
                                                        "type": "string"
                                                    },
                                                    "v3CRLSecret": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TLSContextSpec defines the desired state of TLSContext",
                                                "properties": {
                                                    "alpn_protocols": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ca_secret": {
                                                        "type": "string"
                                                    },
                                                    "cacert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_required": {
                                                        "type": "boolean"
                                                    },
                                                    "cipher_suites": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "crl_secret": {
                                                        "type": "string"
                                                    },
                                                    "ecdh_curves": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hosts": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "max_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "min_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "private_key_file": {
                                                        "type": "string"
                                                    },
                                                    "redirect_cleartext_from": {
                                                        "type": "integer"
                                                    },
                                                    "secret": {
                                                        "type": "string"
                                                    },
                                                    "secret_namespacing": {
                                                        "type": "boolean"
                                                    },
                                                    "sni": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TLSContext",
                            "listKind": "TLSContextList",
                            "plural": "tlscontexts",
                            "singular": "tlscontext"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-06-20T23:31:12Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-06-20T23:31:12Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::hosts.getambassador.io",
                "custom": true,
                "id": "hosts.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "hosts.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Host",
                            "listKind": "HostList",
                            "plural": "hosts",
                            "singular": "host"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.hostname",
                                        "name": "Hostname",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phaseCompleted",
                                        "name": "Phase Completed",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phasePending",
                                        "name": "Phase Pending",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".metadata.creationTimestamp",
                                        "name": "Age",
                                        "type": "date"
                                    }
                                ],
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Host is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "HostSpec defines the desired state of Host",
                                                "properties": {
                                                    "acmeProvider": {
                                                        "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                        "properties": {
                                                            "authority": {
                                                                "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "privateKeySecret": {
                                                                "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "registration": {
                                                                "description": "This is normally set automatically",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname by which the Ambassador can be reached.",
                                                        "type": "string"
                                                    },
                                                    "previewUrl": {
                                                        "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                        "properties": {
                                                            "enabled": {
                                                                "description": "Is the Preview URL feature enabled?",
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "What type of Preview URL is allowed?",
                                                                "enum": [
                                                                    "Path"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "requestPolicy": {
                                                        "description": "Request policy definition.",
                                                        "properties": {
                                                            "insecure": {
                                                                "properties": {
                                                                    "action": {
                                                                        "enum": [
                                                                            "Redirect",
                                                                            "Reject",
                                                                            "Route"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "additionalPort": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector by which we can find further configuration. Defaults to hostname=$hostname",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                        "properties": {
                                                            "alpn_protocols": {
                                                                "type": "string"
                                                            },
                                                            "ca_secret": {
                                                                "type": "string"
                                                            },
                                                            "cacert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_required": {
                                                                "type": "boolean"
                                                            },
                                                            "cipher_suites": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "ecdh_curves": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "min_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "private_key_file": {
                                                                "type": "string"
                                                            },
                                                            "redirect_cleartext_from": {
                                                                "type": "integer"
                                                            },
                                                            "sni": {
                                                                "type": "string"
                                                            },
                                                            "v3CRLSecret": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsContext": {
                                                        "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSecret": {
                                                        "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "status": {
                                                "description": "HostStatus defines the observed state of Host",
                                                "properties": {
                                                    "errorBackoff": {
                                                        "type": "string"
                                                    },
                                                    "errorReason": {
                                                        "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                        "type": "string"
                                                    },
                                                    "errorTimestamp": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "phaseCompleted": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "phasePending": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                        "enum": [
                                                            "Initial",
                                                            "Pending",
                                                            "Ready",
                                                            "Error"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "tlsCertificateSource": {
                                                        "enum": [
                                                            "Unknown",
                                                            "None",
                                                            "Other",
                                                            "ACME"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.hostname",
                                        "name": "Hostname",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phaseCompleted",
                                        "name": "Phase Completed",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phasePending",
                                        "name": "Phase Pending",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".metadata.creationTimestamp",
                                        "name": "Age",
                                        "type": "date"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Host is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "HostSpec defines the desired state of Host",
                                                "properties": {
                                                    "acmeProvider": {
                                                        "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                        "properties": {
                                                            "authority": {
                                                                "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "privateKeySecret": {
                                                                "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "registration": {
                                                                "description": "This is normally set automatically",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "Common to all Ambassador objects (and optional).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname by which the Ambassador can be reached.",
                                                        "type": "string"
                                                    },
                                                    "mappingSelector": {
                                                        "description": "Selector for Mappings we'll associate with this Host. At the moment, Selector and MappingSelector are synonyms, but that will change soon.",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "previewUrl": {
                                                        "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                        "properties": {
                                                            "enabled": {
                                                                "description": "Is the Preview URL feature enabled?",
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "What type of Preview URL is allowed?",
                                                                "enum": [
                                                                    "Path"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "requestPolicy": {
                                                        "description": "Request policy definition.",
                                                        "properties": {
                                                            "insecure": {
                                                                "properties": {
                                                                    "action": {
                                                                        "enum": [
                                                                            "Redirect",
                                                                            "Reject",
                                                                            "Route"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "additionalPort": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "DEPRECATED: Selector by which we can find further configuration. Use MappingSelector instead. \n TODO(lukeshu): In v3alpha2, figure out how to get rid of HostSpec.DeprecatedSelector.",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                        "properties": {
                                                            "alpn_protocols": {
                                                                "type": "string"
                                                            },
                                                            "ca_secret": {
                                                                "type": "string"
                                                            },
                                                            "cacert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_required": {
                                                                "type": "boolean"
                                                            },
                                                            "cipher_suites": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "crl_secret": {
                                                                "type": "string"
                                                            },
                                                            "ecdh_curves": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "min_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "private_key_file": {
                                                                "type": "string"
                                                            },
                                                            "redirect_cleartext_from": {
                                                                "type": "integer"
                                                            },
                                                            "sni": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsContext": {
                                                        "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSecret": {
                                                        "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "HostStatus defines the observed state of Host",
                                                "properties": {
                                                    "errorBackoff": {
                                                        "type": "string"
                                                    },
                                                    "errorReason": {
                                                        "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                        "type": "string"
                                                    },
                                                    "errorTimestamp": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "phaseCompleted": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "phasePending": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                        "enum": [
                                                            "Initial",
                                                            "Pending",
                                                            "Ready",
                                                            "Error"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "tlsCertificateSource": {
                                                        "enum": [
                                                            "Unknown",
                                                            "None",
                                                            "Other",
                                                            "ACME"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "hosts.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "Host",
                                "listKind": "HostList",
                                "plural": "hosts",
                                "singular": "host"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "additionalPrinterColumns": [
                                        {
                                            "jsonPath": ".spec.hostname",
                                            "name": "Hostname",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.state",
                                            "name": "State",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.phaseCompleted",
                                            "name": "Phase Completed",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.phasePending",
                                            "name": "Phase Pending",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".metadata.creationTimestamp",
                                            "name": "Age",
                                            "type": "date"
                                        }
                                    ],
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Host is the Schema for the hosts API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "HostSpec defines the desired state of Host",
                                                    "properties": {
                                                        "acmeProvider": {
                                                            "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                            "properties": {
                                                                "authority": {
                                                                    "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                    "type": "string"
                                                                },
                                                                "email": {
                                                                    "type": "string"
                                                                },
                                                                "privateKeySecret": {
                                                                    "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "registration": {
                                                                    "description": "This is normally set automatically",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "hostname": {
                                                            "description": "Hostname by which the Ambassador can be reached.",
                                                            "type": "string"
                                                        },
                                                        "previewUrl": {
                                                            "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                            "properties": {
                                                                "enabled": {
                                                                    "description": "Is the Preview URL feature enabled?",
                                                                    "type": "boolean"
                                                                },
                                                                "type": {
                                                                    "description": "What type of Preview URL is allowed?",
                                                                    "enum": [
                                                                        "Path"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "requestPolicy": {
                                                            "description": "Request policy definition.",
                                                            "properties": {
                                                                "insecure": {
                                                                    "properties": {
                                                                        "action": {
                                                                            "enum": [
                                                                                "Redirect",
                                                                                "Reject",
                                                                                "Route"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "additionalPort": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "selector": {
                                                            "description": "Selector by which we can find further configuration. Defaults to hostname=$hostname",
                                                            "properties": {
                                                                "matchExpressions": {
                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                    "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                            },
                                                                            "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                            },
                                                                            "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "key",
                                                                            "operator"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "matchLabels": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tls": {
                                                            "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                            "properties": {
                                                                "alpn_protocols": {
                                                                    "type": "string"
                                                                },
                                                                "ca_secret": {
                                                                    "type": "string"
                                                                },
                                                                "cacert_chain_file": {
                                                                    "type": "string"
                                                                },
                                                                "cert_chain_file": {
                                                                    "type": "string"
                                                                },
                                                                "cert_required": {
                                                                    "type": "boolean"
                                                                },
                                                                "cipher_suites": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "ecdh_curves": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "max_tls_version": {
                                                                    "type": "string"
                                                                },
                                                                "min_tls_version": {
                                                                    "type": "string"
                                                                },
                                                                "private_key_file": {
                                                                    "type": "string"
                                                                },
                                                                "redirect_cleartext_from": {
                                                                    "type": "integer"
                                                                },
                                                                "sni": {
                                                                    "type": "string"
                                                                },
                                                                "v3CRLSecret": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tlsContext": {
                                                            "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tlsSecret": {
                                                            "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                },
                                                "status": {
                                                    "description": "HostStatus defines the observed state of Host",
                                                    "properties": {
                                                        "errorBackoff": {
                                                            "type": "string"
                                                        },
                                                        "errorReason": {
                                                            "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                            "type": "string"
                                                        },
                                                        "errorTimestamp": {
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "phaseCompleted": {
                                                            "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                            "enum": [
                                                                "NA",
                                                                "DefaultsFilled",
                                                                "ACMEUserPrivateKeyCreated",
                                                                "ACMEUserRegistered",
                                                                "ACMECertificateChallenge"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "phasePending": {
                                                            "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                            "enum": [
                                                                "NA",
                                                                "DefaultsFilled",
                                                                "ACMEUserPrivateKeyCreated",
                                                                "ACMEUserRegistered",
                                                                "ACMECertificateChallenge"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                            "enum": [
                                                                "Initial",
                                                                "Pending",
                                                                "Ready",
                                                                "Error"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "tlsCertificateSource": {
                                                            "enum": [
                                                                "Unknown",
                                                                "None",
                                                                "Other",
                                                                "ACME"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {
                                        "status": {}
                                    }
                                },
                                {
                                    "additionalPrinterColumns": [
                                        {
                                            "jsonPath": ".spec.hostname",
                                            "name": "Hostname",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.state",
                                            "name": "State",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.phaseCompleted",
                                            "name": "Phase Completed",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.phasePending",
                                            "name": "Phase Pending",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".metadata.creationTimestamp",
                                            "name": "Age",
                                            "type": "date"
                                        }
                                    ],
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Host is the Schema for the hosts API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "HostSpec defines the desired state of Host",
                                                    "properties": {
                                                        "acmeProvider": {
                                                            "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                            "properties": {
                                                                "authority": {
                                                                    "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                    "type": "string"
                                                                },
                                                                "email": {
                                                                    "type": "string"
                                                                },
                                                                "privateKeySecret": {
                                                                    "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "registration": {
                                                                    "description": "This is normally set automatically",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "Common to all Ambassador objects (and optional).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "hostname": {
                                                            "description": "Hostname by which the Ambassador can be reached.",
                                                            "type": "string"
                                                        },
                                                        "mappingSelector": {
                                                            "description": "Selector for Mappings we'll associate with this Host. At the moment, Selector and MappingSelector are synonyms, but that will change soon.",
                                                            "properties": {
                                                                "matchExpressions": {
                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                    "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                            },
                                                                            "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                            },
                                                                            "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "key",
                                                                            "operator"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "matchLabels": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "previewUrl": {
                                                            "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                            "properties": {
                                                                "enabled": {
                                                                    "description": "Is the Preview URL feature enabled?",
                                                                    "type": "boolean"
                                                                },
                                                                "type": {
                                                                    "description": "What type of Preview URL is allowed?",
                                                                    "enum": [
                                                                        "Path"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "requestPolicy": {
                                                            "description": "Request policy definition.",
                                                            "properties": {
                                                                "insecure": {
                                                                    "properties": {
                                                                        "action": {
                                                                            "enum": [
                                                                                "Redirect",
                                                                                "Reject",
                                                                                "Route"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "additionalPort": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "selector": {
                                                            "description": "DEPRECATED: Selector by which we can find further configuration. Use MappingSelector instead. \n TODO(lukeshu): In v3alpha2, figure out how to get rid of HostSpec.DeprecatedSelector.",
                                                            "properties": {
                                                                "matchExpressions": {
                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                    "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                            },
                                                                            "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                            },
                                                                            "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "key",
                                                                            "operator"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "matchLabels": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tls": {
                                                            "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                            "properties": {
                                                                "alpn_protocols": {
                                                                    "type": "string"
                                                                },
                                                                "ca_secret": {
                                                                    "type": "string"
                                                                },
                                                                "cacert_chain_file": {
                                                                    "type": "string"
                                                                },
                                                                "cert_chain_file": {
                                                                    "type": "string"
                                                                },
                                                                "cert_required": {
                                                                    "type": "boolean"
                                                                },
                                                                "cipher_suites": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "crl_secret": {
                                                                    "type": "string"
                                                                },
                                                                "ecdh_curves": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "max_tls_version": {
                                                                    "type": "string"
                                                                },
                                                                "min_tls_version": {
                                                                    "type": "string"
                                                                },
                                                                "private_key_file": {
                                                                    "type": "string"
                                                                },
                                                                "redirect_cleartext_from": {
                                                                    "type": "integer"
                                                                },
                                                                "sni": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tlsContext": {
                                                            "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tlsSecret": {
                                                            "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "status": {
                                                    "description": "HostStatus defines the observed state of Host",
                                                    "properties": {
                                                        "errorBackoff": {
                                                            "type": "string"
                                                        },
                                                        "errorReason": {
                                                            "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                            "type": "string"
                                                        },
                                                        "errorTimestamp": {
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "phaseCompleted": {
                                                            "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                            "enum": [
                                                                "NA",
                                                                "DefaultsFilled",
                                                                "ACMEUserPrivateKeyCreated",
                                                                "ACMEUserRegistered",
                                                                "ACMECertificateChallenge"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "phasePending": {
                                                            "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                            "enum": [
                                                                "NA",
                                                                "DefaultsFilled",
                                                                "ACMEUserPrivateKeyCreated",
                                                                "ACMEUserRegistered",
                                                                "ACMECertificateChallenge"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                            "enum": [
                                                                "Initial",
                                                                "Pending",
                                                                "Ready",
                                                                "Error"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "tlsCertificateSource": {
                                                            "enum": [
                                                                "Unknown",
                                                                "None",
                                                                "Other",
                                                                "ACME"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false,
                                    "subresources": {
                                        "status": {}
                                    }
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"hosts.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"Host\",\"listKind\":\"HostList\",\"plural\":\"hosts\",\"singular\":\"host\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".spec.hostname\",\"name\":\"Hostname\",\"type\":\"string\"},{\"jsonPath\":\".status.state\",\"name\":\"State\",\"type\":\"string\"},{\"jsonPath\":\".status.phaseCompleted\",\"name\":\"Phase Completed\",\"type\":\"string\"},{\"jsonPath\":\".status.phasePending\",\"name\":\"Phase Pending\",\"type\":\"string\"},{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"}],\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Host is the Schema for the hosts API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"HostSpec defines the desired state of Host\",\"properties\":{\"acmeProvider\":{\"description\":\"Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.\",\"properties\":{\"authority\":{\"description\":\"Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \\\"none\\\" (case-insensitive), do not try to do ACME for this Host.\",\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"privateKeySecret\":{\"description\":\"Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"registration\":{\"description\":\"This is normally set automatically\",\"type\":\"string\"}},\"type\":\"object\"},\"hostname\":{\"description\":\"Hostname by which the Ambassador can be reached.\",\"type\":\"string\"},\"previewUrl\":{\"description\":\"Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.\",\"properties\":{\"enabled\":{\"description\":\"Is the Preview URL feature enabled?\",\"type\":\"boolean\"},\"type\":{\"description\":\"What type of Preview URL is allowed?\",\"enum\":[\"Path\"],\"type\":\"string\"}},\"type\":\"object\"},\"requestPolicy\":{\"description\":\"Request policy definition.\",\"properties\":{\"insecure\":{\"properties\":{\"action\":{\"enum\":[\"Redirect\",\"Reject\",\"Route\"],\"type\":\"string\"},\"additionalPort\":{\"type\":\"integer\"}},\"type\":\"object\"}},\"type\":\"object\"},\"selector\":{\"description\":\"Selector by which we can find further configuration. Defaults to hostname=$hostname\",\"properties\":{\"matchExpressions\":{\"description\":\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\"items\":{\"description\":\"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\"properties\":{\"key\":{\"description\":\"key is the label key that the selector applies to.\",\"type\":\"string\"},\"operator\":{\"description\":\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\"type\":\"string\"},\"values\":{\"description\":\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"key\",\"operator\"],\"type\":\"object\"},\"type\":\"array\"},\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\"type\":\"object\"}},\"type\":\"object\"},\"tls\":{\"description\":\"TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.\",\"properties\":{\"alpn_protocols\":{\"type\":\"string\"},\"ca_secret\":{\"type\":\"string\"},\"cacert_chain_file\":{\"type\":\"string\"},\"cert_chain_file\":{\"type\":\"string\"},\"cert_required\":{\"type\":\"boolean\"},\"cipher_suites\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ecdh_curves\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"max_tls_version\":{\"type\":\"string\"},\"min_tls_version\":{\"type\":\"string\"},\"private_key_file\":{\"type\":\"string\"},\"redirect_cleartext_from\":{\"type\":\"integer\"},\"sni\":{\"type\":\"string\"},\"v3CRLSecret\":{\"type\":\"string\"}},\"type\":\"object\"},\"tlsContext\":{\"description\":\"Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"tlsSecret\":{\"description\":\"Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \\\"\\\".  If the value is \\\"\\\", then we do not do TLS for this Host. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"status\":{\"description\":\"HostStatus defines the observed state of Host\",\"properties\":{\"errorBackoff\":{\"type\":\"string\"},\"errorReason\":{\"description\":\"errorReason, errorTimestamp, and errorBackoff are valid when state==Error.\",\"type\":\"string\"},\"errorTimestamp\":{\"format\":\"date-time\",\"type\":\"string\"},\"phaseCompleted\":{\"description\":\"phaseCompleted and phasePending are valid when state==Pending or state==Error.\",\"enum\":[\"NA\",\"DefaultsFilled\",\"ACMEUserPrivateKeyCreated\",\"ACMEUserRegistered\",\"ACMECertificateChallenge\"],\"type\":\"string\"},\"phasePending\":{\"description\":\"phaseCompleted and phasePending are valid when state==Pending or state==Error.\",\"enum\":[\"NA\",\"DefaultsFilled\",\"ACMEUserPrivateKeyCreated\",\"ACMEUserRegistered\",\"ACMECertificateChallenge\"],\"type\":\"string\"},\"state\":{\"description\":\"The first value listed in the Enum marker becomes the \\\"zero\\\" value, and it would be great if \\\"Pending\\\" could be the default value; but it's Important that the \\\"zero\\\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \\\"Pending\\\" in the \\\"STATE\\\" column, and not leave the column empty.\",\"enum\":[\"Initial\",\"Pending\",\"Ready\",\"Error\"],\"type\":\"string\"},\"tlsCertificateSource\":{\"enum\":[\"Unknown\",\"None\",\"Other\",\"ACME\"],\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}},{\"additionalPrinterColumns\":[{\"jsonPath\":\".spec.hostname\",\"name\":\"Hostname\",\"type\":\"string\"},{\"jsonPath\":\".status.state\",\"name\":\"State\",\"type\":\"string\"},{\"jsonPath\":\".status.phaseCompleted\",\"name\":\"Phase Completed\",\"type\":\"string\"},{\"jsonPath\":\".status.phasePending\",\"name\":\"Phase Pending\",\"type\":\"string\"},{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"}],\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Host is the Schema for the hosts API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"HostSpec defines the desired state of Host\",\"properties\":{\"acmeProvider\":{\"description\":\"Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.\",\"properties\":{\"authority\":{\"description\":\"Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \\\"none\\\" (case-insensitive), do not try to do ACME for this Host.\",\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"privateKeySecret\":{\"description\":\"Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"registration\":{\"description\":\"This is normally set automatically\",\"type\":\"string\"}},\"type\":\"object\"},\"ambassador_id\":{\"description\":\"Common to all Ambassador objects (and optional).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"hostname\":{\"description\":\"Hostname by which the Ambassador can be reached.\",\"type\":\"string\"},\"mappingSelector\":{\"description\":\"Selector for Mappings we'll associate with this Host. At the moment, Selector and MappingSelector are synonyms, but that will change soon.\",\"properties\":{\"matchExpressions\":{\"description\":\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\"items\":{\"description\":\"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\"properties\":{\"key\":{\"description\":\"key is the label key that the selector applies to.\",\"type\":\"string\"},\"operator\":{\"description\":\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\"type\":\"string\"},\"values\":{\"description\":\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"key\",\"operator\"],\"type\":\"object\"},\"type\":\"array\"},\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\"type\":\"object\"}},\"type\":\"object\"},\"previewUrl\":{\"description\":\"Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.\",\"properties\":{\"enabled\":{\"description\":\"Is the Preview URL feature enabled?\",\"type\":\"boolean\"},\"type\":{\"description\":\"What type of Preview URL is allowed?\",\"enum\":[\"Path\"],\"type\":\"string\"}},\"type\":\"object\"},\"requestPolicy\":{\"description\":\"Request policy definition.\",\"properties\":{\"insecure\":{\"properties\":{\"action\":{\"enum\":[\"Redirect\",\"Reject\",\"Route\"],\"type\":\"string\"},\"additionalPort\":{\"type\":\"integer\"}},\"type\":\"object\"}},\"type\":\"object\"},\"selector\":{\"description\":\"DEPRECATED: Selector by which we can find further configuration. Use MappingSelector instead. \\n TODO(lukeshu): In v3alpha2, figure out how to get rid of HostSpec.DeprecatedSelector.\",\"properties\":{\"matchExpressions\":{\"description\":\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\"items\":{\"description\":\"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\"properties\":{\"key\":{\"description\":\"key is the label key that the selector applies to.\",\"type\":\"string\"},\"operator\":{\"description\":\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\"type\":\"string\"},\"values\":{\"description\":\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"key\",\"operator\"],\"type\":\"object\"},\"type\":\"array\"},\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\"type\":\"object\"}},\"type\":\"object\"},\"tls\":{\"description\":\"TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.\",\"properties\":{\"alpn_protocols\":{\"type\":\"string\"},\"ca_secret\":{\"type\":\"string\"},\"cacert_chain_file\":{\"type\":\"string\"},\"cert_chain_file\":{\"type\":\"string\"},\"cert_required\":{\"type\":\"boolean\"},\"cipher_suites\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"crl_secret\":{\"type\":\"string\"},\"ecdh_curves\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"max_tls_version\":{\"type\":\"string\"},\"min_tls_version\":{\"type\":\"string\"},\"private_key_file\":{\"type\":\"string\"},\"redirect_cleartext_from\":{\"type\":\"integer\"},\"sni\":{\"type\":\"string\"}},\"type\":\"object\"},\"tlsContext\":{\"description\":\"Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"tlsSecret\":{\"description\":\"Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \\\"\\\".  If the value is \\\"\\\", then we do not do TLS for this Host. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"status\":{\"description\":\"HostStatus defines the observed state of Host\",\"properties\":{\"errorBackoff\":{\"type\":\"string\"},\"errorReason\":{\"description\":\"errorReason, errorTimestamp, and errorBackoff are valid when state==Error.\",\"type\":\"string\"},\"errorTimestamp\":{\"format\":\"date-time\",\"type\":\"string\"},\"phaseCompleted\":{\"description\":\"phaseCompleted and phasePending are valid when state==Pending or state==Error.\",\"enum\":[\"NA\",\"DefaultsFilled\",\"ACMEUserPrivateKeyCreated\",\"ACMEUserRegistered\",\"ACMECertificateChallenge\"],\"type\":\"string\"},\"phasePending\":{\"description\":\"phaseCompleted and phasePending are valid when state==Pending or state==Error.\",\"enum\":[\"NA\",\"DefaultsFilled\",\"ACMEUserPrivateKeyCreated\",\"ACMEUserRegistered\",\"ACMECertificateChallenge\"],\"type\":\"string\"},\"state\":{\"description\":\"The first value listed in the Enum marker becomes the \\\"zero\\\" value, and it would be great if \\\"Pending\\\" could be the default value; but it's Important that the \\\"zero\\\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \\\"Pending\\\" in the \\\"STATE\\\" column, and not leave the column empty.\",\"enum\":[\"Initial\",\"Pending\",\"Ready\",\"Error\"],\"type\":\"string\"},\"tlsCertificateSource\":{\"enum\":[\"Unknown\",\"None\",\"Other\",\"ACME\"],\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false,\"subresources\":{\"status\":{}}}]}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:33Z",
                        "generation": 3,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:conversion": {
                                            "f:webhook": {
                                                "f:clientConfig": {
                                                    "f:caBundle": {},
                                                    "f:service": {
                                                        "f:path": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "apiext",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:33Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:33Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:33Z"
                            }
                        ],
                        "name": "hosts.getambassador.io",
                        "resourceVersion": "10597983",
                        "uid": "dadc7ea6-af20-4aab-9480-2e906d8a22e4"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZJRENDQXdpZ0F3SUJBZ0lSQU5qKzkvNlFaVjN5cGRqUjhaSXByakl3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUI0WERUSXlNRFl5TURJek16RXlNVm9YRFRJegpNRFl5TURJek16RXlNVm93R2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUlJQ0lqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBOWFnSE5MVFd5dkdVbFY3SnArUDJScll2bko2cWhmaWsKbURUbndlWDFaMDNTMVJhTnFyTUVzY2lsMC82Mmlub250L1gyS3J4ckhhT3ltZEt4MGF3ZldpR0w3TWZuRHVwMwpsMVhxUEhNeFYyVjFLazZsOHNkbDBObytpTVAwSGhPTEVRcXkxQ0E1MTJCbmF0THUxblVjTEhiMUVnbEhET01NCnlkbWdPenRUMXhMS3prN3pYWGI2K3RxK1I3N2lOSU5xcnF5T3J1SW9qeG1MdGN0LzdielFWTXRodkhDR3hvWFMKbU94ZXJFczVlUHJMN0g5L1hSYzZCSFJEcXhKZDVFMXpJcVZzdFB1OWkxSjJSMnhqZXNqRC9xSEQ4eEEzRkdLcApRWER0RW5rR0I1TWpMbUhjSGZTRTBqY01QU1ZMME84ZWNmcEY5Q1Z6dE5QOGdUaUhuRnBxYU5MWVl1SThJQXo1CnZsZkJ1QmRPWTU2OGc0bGN3OG1JbldqY2J3VlNhYlpYVVdTZ1JmVjJaN2hZS2JQeFhYcndJR0pjc1hsYk0xeWoKWFlNU3JWZFZSOHI0ZnhDWi9HY0loL0RxelQ4ZHhiUnYrZjJjY2NNOG5NOGlsYTJYQkpkZnFrdURZcnl3S204LwpSTWVZMml5ckZKZkg1bmYrTjZYMERVK1FoMWlPMG1jYWhXdFZ6d2x6dzFuZGpkRXVocXJzV1BuNDRrbWlKL3dUCmx3OWZBKy9tdHV0STJjQStxdTFTcEMxR0h0cTZ3MEhBKzhrSTQxOUtwRkhYNSt6bFAxMFhzbWNEY0w4ekhlMnkKSmY2ZVI0YmE0enduZWRqUE5pcXFhZVlwVm1mT3RlanMyUkJRd2Z2Q2ErcjBEQ3BJeXhsY0FzN2ZKSENzdXRsUQpuVnB6NzZsa2FLTUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLRU1CMEdBMVVkSlFRV01CUUdDQ3NHCkFRVUZCd01DQmdnckJnRUZCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTbUZJTEwKQlBZQmduUFRqY0Z5UWNscEZNVUNCREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBd013dkNUeDJOWTNQUStsSQpKbTlvV0dHVTdIRVI0Qlh5dnJ0UkhicXhodzl3R1ZEam54aHNjQXNYUDBKL1Jrd2JRTmVZbFJMbkFLNGxzcDdCCmFjcEFsbmtzc2pRZlI1Z25jbUI1aklzQUZLOEhvbHhSOFVGYzUvblFkbitPVDZGYyt2RHljM2JPUWd5aHphTzgKTHowbFNTYXlIaS9adlZqOHlxdVZMSEpmYWh1MWpWWm9oQktVZ1V2YlUyMnhLRkpidUViVE9IVUQvU2tVWjBGeQpKUnpNMVpKZXh1dVdYZk5US0tYQ3M2Q1dHdlpMT2VpNGZpbzRoMjgvS3lJYU9Tb2JES0RlY2I1dmRKUDlnRjJFCmxNWjNsWjUvWFhmV2RGR1B1ZkUzNHd5WHdpNjh0bXZydlZLOEk5WGhmM0haWUg2RDhxbjhvYVRnZ05FUG84a0MKS25VUWdhUFRDYWt4R1hjTmpiZmIyeEpOd1RIVUs5ZzIxZnkyWkRIUHhQczg4eW1pbWwzbEh0eGUzRU8xZGxpagp5QitmekcvOXVlZzJEUncrUDFRM21VOEQ3L1ZJRWtoZlV3Zzk1T1JkMmlDTk05SklYMzJHWU1uakk1ZEJyVHpPCjlMMXE0OEx2QzZkNm40b2h5MkZtZnZmNHQwREtOQkdIMlBHQXRWa0EwNUh4R3VQYlR2OUdNeFAxbUNyb2NkWjUKcVRpNThNYmRGZE9BM2pHNHBObHhMTytJSGxoTm9IOS9WMVcwU1JHYzB6OXhnN05Jc2tCQ3pNc1AvdGVjc01LRApPczlvK3g5VlJ6MlJBWlI2VHFlNHdCSFllWC9uLzJPYnNPZ0VzSnMrYVFrdHBJVEs3RzVkZDhJaGx6OXNDell6CnNWMWlsYWFTZG1ZclYwKzg1YWtFbklMczhNST0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "path": "/webhooks/crd-convert",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Host",
                            "listKind": "HostList",
                            "plural": "hosts",
                            "singular": "host"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.hostname",
                                        "name": "Hostname",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phaseCompleted",
                                        "name": "Phase Completed",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phasePending",
                                        "name": "Phase Pending",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".metadata.creationTimestamp",
                                        "name": "Age",
                                        "type": "date"
                                    }
                                ],
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Host is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "HostSpec defines the desired state of Host",
                                                "properties": {
                                                    "acmeProvider": {
                                                        "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                        "properties": {
                                                            "authority": {
                                                                "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "privateKeySecret": {
                                                                "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "registration": {
                                                                "description": "This is normally set automatically",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname by which the Ambassador can be reached.",
                                                        "type": "string"
                                                    },
                                                    "previewUrl": {
                                                        "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                        "properties": {
                                                            "enabled": {
                                                                "description": "Is the Preview URL feature enabled?",
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "What type of Preview URL is allowed?",
                                                                "enum": [
                                                                    "Path"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "requestPolicy": {
                                                        "description": "Request policy definition.",
                                                        "properties": {
                                                            "insecure": {
                                                                "properties": {
                                                                    "action": {
                                                                        "enum": [
                                                                            "Redirect",
                                                                            "Reject",
                                                                            "Route"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "additionalPort": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector by which we can find further configuration. Defaults to hostname=$hostname",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                        "properties": {
                                                            "alpn_protocols": {
                                                                "type": "string"
                                                            },
                                                            "ca_secret": {
                                                                "type": "string"
                                                            },
                                                            "cacert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_required": {
                                                                "type": "boolean"
                                                            },
                                                            "cipher_suites": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "ecdh_curves": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "min_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "private_key_file": {
                                                                "type": "string"
                                                            },
                                                            "redirect_cleartext_from": {
                                                                "type": "integer"
                                                            },
                                                            "sni": {
                                                                "type": "string"
                                                            },
                                                            "v3CRLSecret": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsContext": {
                                                        "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSecret": {
                                                        "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "status": {
                                                "description": "HostStatus defines the observed state of Host",
                                                "properties": {
                                                    "errorBackoff": {
                                                        "type": "string"
                                                    },
                                                    "errorReason": {
                                                        "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                        "type": "string"
                                                    },
                                                    "errorTimestamp": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "phaseCompleted": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "phasePending": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                        "enum": [
                                                            "Initial",
                                                            "Pending",
                                                            "Ready",
                                                            "Error"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "tlsCertificateSource": {
                                                        "enum": [
                                                            "Unknown",
                                                            "None",
                                                            "Other",
                                                            "ACME"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.hostname",
                                        "name": "Hostname",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phaseCompleted",
                                        "name": "Phase Completed",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phasePending",
                                        "name": "Phase Pending",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".metadata.creationTimestamp",
                                        "name": "Age",
                                        "type": "date"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Host is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "HostSpec defines the desired state of Host",
                                                "properties": {
                                                    "acmeProvider": {
                                                        "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                        "properties": {
                                                            "authority": {
                                                                "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "privateKeySecret": {
                                                                "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "registration": {
                                                                "description": "This is normally set automatically",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "Common to all Ambassador objects (and optional).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname by which the Ambassador can be reached.",
                                                        "type": "string"
                                                    },
                                                    "mappingSelector": {
                                                        "description": "Selector for Mappings we'll associate with this Host. At the moment, Selector and MappingSelector are synonyms, but that will change soon.",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "previewUrl": {
                                                        "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                        "properties": {
                                                            "enabled": {
                                                                "description": "Is the Preview URL feature enabled?",
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "What type of Preview URL is allowed?",
                                                                "enum": [
                                                                    "Path"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "requestPolicy": {
                                                        "description": "Request policy definition.",
                                                        "properties": {
                                                            "insecure": {
                                                                "properties": {
                                                                    "action": {
                                                                        "enum": [
                                                                            "Redirect",
                                                                            "Reject",
                                                                            "Route"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "additionalPort": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "DEPRECATED: Selector by which we can find further configuration. Use MappingSelector instead. \n TODO(lukeshu): In v3alpha2, figure out how to get rid of HostSpec.DeprecatedSelector.",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                        "properties": {
                                                            "alpn_protocols": {
                                                                "type": "string"
                                                            },
                                                            "ca_secret": {
                                                                "type": "string"
                                                            },
                                                            "cacert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_required": {
                                                                "type": "boolean"
                                                            },
                                                            "cipher_suites": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "crl_secret": {
                                                                "type": "string"
                                                            },
                                                            "ecdh_curves": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "min_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "private_key_file": {
                                                                "type": "string"
                                                            },
                                                            "redirect_cleartext_from": {
                                                                "type": "integer"
                                                            },
                                                            "sni": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsContext": {
                                                        "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSecret": {
                                                        "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "HostStatus defines the observed state of Host",
                                                "properties": {
                                                    "errorBackoff": {
                                                        "type": "string"
                                                    },
                                                    "errorReason": {
                                                        "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                        "type": "string"
                                                    },
                                                    "errorTimestamp": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "phaseCompleted": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "phasePending": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                        "enum": [
                                                            "Initial",
                                                            "Pending",
                                                            "Ready",
                                                            "Error"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "tlsCertificateSource": {
                                                        "enum": [
                                                            "Unknown",
                                                            "None",
                                                            "Other",
                                                            "ACME"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Host",
                            "listKind": "HostList",
                            "plural": "hosts",
                            "singular": "host"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-06-20T23:31:33Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-06-20T23:31:33Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::prometheus",
                "custom": true,
                "id": "default/prometheus-3bbq0lda",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "prometheus",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "prometheus-3bbq0lda",
                    "namespace": "default",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://prometheus-community.github.io/helm-charts",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "prometheus-3bbq0lda-kube-state-metrics",
                            "prometheus-3bbq0lda-server"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "prometheus-3bbq0lda-kube-state-metrics",
                            "prometheus-3bbq0lda-server"
                        ],
                        "ConfigMap/v1": [
                            "default/prometheus-3bbq0lda-server"
                        ],
                        "Deployment.apps/apps/v1": [
                            "default/prometheus-3bbq0lda-kube-state-metrics",
                            "default/prometheus-3bbq0lda-server"
                        ],
                        "PersistentVolumeClaim/v1": [
                            "default/prometheus-3bbq0lda-server"
                        ],
                        "Service/v1": [
                            "default/prometheus-3bbq0lda-kube-state-metrics",
                            "default/prometheus-3bbq0lda-server"
                        ],
                        "ServiceAccount/v1": [
                            "default/prometheus-3bbq0lda-kube-state-metrics",
                            "default/prometheus-3bbq0lda-server"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "alertmanager": {
                            "enabled": false
                        },
                        "configmapReload": {
                            "prometheus": {
                                "enabled": false
                            }
                        },
                        "kube-state-metrics": {
                            "metricLabelsAllowlist": [
                                "nodes=[eks.amazonaws.com/capacityType,eks.amazonaws.com/nodegroup,kubernetes.io/arch]"
                            ]
                        },
                        "nodeExporter": {
                            "enabled": false
                        },
                        "pushgateway": {
                            "enabled": false
                        },
                        "server": {
                            "extraFlags": [
                                "storage.tsdb.no-lockfile"
                            ],
                            "nodeSelector": {
                                "eks.amazonaws.com/capacityType": "ON_DEMAND"
                            },
                            "persistentVolume": {
                                "size": "256Gi"
                            },
                            "retention": "60d",
                            "service": {
                                "type": "LoadBalancer"
                            }
                        },
                        "serverFiles": {
                            "prometheus.yml": {
                                "scrape_configs": [
                                    {
                                        "job_name": "kubernetes-pods",
                                        "kubernetes_sd_configs": [
                                            {
                                                "role": "pod"
                                            }
                                        ],
                                        "relabel_configs": [
                                            {
                                                "action": "keep",
                                                "regex": true,
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_annotation_prometheus_io_scrape"
                                                ]
                                            },
                                            {
                                                "action": "replace",
                                                "regex": "([^:]+)(?::d+)?;(d+)",
                                                "replacement": "$$1:$$2",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_annotation_prometheus_io_port",
                                                    "__address__"
                                                ],
                                                "target_label": "__address__"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_namespace"
                                                ],
                                                "target_label": "Namespace"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_name"
                                                ],
                                                "target_label": "PodName"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_container_name"
                                                ],
                                                "target_label": "ContainerName"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_controller_name"
                                                ],
                                                "target_label": "PodControllerName"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_controller_kind"
                                                ],
                                                "target_label": "PodControllerKind"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_phase"
                                                ],
                                                "target_label": "PodPhase"
                                            },
                                            {
                                                "action": "drop",
                                                "regex": "(linkerd-init|linkerd-proxy)",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_container_name"
                                                ]
                                            }
                                        ],
                                        "sample_limit": 10000
                                    },
                                    {
                                        "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                                        "job_name": "kubernetes-nodes-cadvisor",
                                        "kubernetes_sd_configs": [
                                            {
                                                "role": "node"
                                            }
                                        ],
                                        "metrics_path": "/metrics/cadvisor",
                                        "relabel_configs": [
                                            {
                                                "action": "labelmap",
                                                "regex": "__meta_kubernetes_node_label_(.+)"
                                            }
                                        ],
                                        "scheme": "https",
                                        "scrape_interval": "10s",
                                        "tls_config": {
                                            "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                                            "insecure_skip_verify": true
                                        }
                                    },
                                    {
                                        "job_name": "kubernetes-services",
                                        "kubernetes_sd_configs": [
                                            {
                                                "role": "service"
                                            }
                                        ],
                                        "relabel_configs": [
                                            {
                                                "action": "labelmap",
                                                "regex": "__meta_kubernetes_service_label_(.+)"
                                            },
                                            {
                                                "source_labels": [
                                                    "__meta_kubernetes_namespace"
                                                ],
                                                "target_label": "Namespace"
                                            },
                                            {
                                                "source_labels": [
                                                    "__meta_kubernetes_service_name"
                                                ],
                                                "target_label": "Service"
                                            }
                                        ]
                                    },
                                    {
                                        "job_name": "broker",
                                        "static_configs": [
                                            {
                                                "labels": {
                                                    "job": "jmx"
                                                },
                                                "targets": [
                                                    "b-1.:11001",
                                                    "b-2.:11001"
                                                ]
                                            },
                                            {
                                                "labels": {
                                                    "job": "node"
                                                },
                                                "targets": [
                                                    "b-1.:11002",
                                                    "b-2.:11002"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "serviceAccounts": {
                            "alertmanager": {
                                "create": false
                            },
                            "nodeExporter": {
                                "create": false
                            },
                            "pushgateway": {
                                "create": false
                            }
                        }
                    },
                    "verify": false,
                    "version": "",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAHgwUf+tR6iZSPKcAlZD6JdxvvjX1wOQS3hzOR3QYr2hG7igwJm6iKharJIWcCcVrJhRDzwS/7EirEl9AyaQFwhZk9BEX7YX20hqJGJun2AtdAZjcFRLw58lGaZsV6G4Fkskzouw2ZZ0DM1+yvN0M+m1TR0lc52GeO+DNqxJzNOT5avQfw0hwxTP/C1bVk4SEqDBE+XBq2Tqgn8lmICSjtXytwbPwe1cIV0XVgL+34DcEQur6JqnvRZAyuLpINGFd49KuQd1KXbrZgcJA/DDyAN0HQd+OXNL6kIfQqBYLM50gWAGVfNTXcpCNXq8R6Ik7sz1BnWbAk9fky/hTUKiG9FK04SGwg9KwZQa+aXFFuObiaACcAeKZ2ahcWfcM5nm2KgvVHbAvvMPcim59Reh2AFrVaXKmtcJkMarZIULnXnRx8H62by2x6yZnbj/wh2/7vDqdVLp8ur+dt9W79D3FvgecNM6Z4gPdIw1QPkHMOckBRSDab86EW/i033RChIcGWgVNP91u8A3uevfpAvFVN+SCo/wAr1fm0BLEpeKez+0kaH5DU8n19Z7OD/IcdyGzIf2ykuWYc+fuOMojOJ95uEtyxX4SwY7c4REQqqoKyvX5HJ+e7qGx+g00auoBUKbml7CTzp4m0SE5ABaKSWnX+fYJIxyMFMXmvtNEhOa6yyAAe+Vp+SHmaDwtQphcTvOjdj9HFFu/jcuf1+6uuesRIYPSghI3Xl4gQCOS3c7X0QYzth6Fqq+qzQRTD9lUxSalmTxtRRPUCDCdi2C0j7jn716+GnLWAfWmFL31U1Qy9OchE5X4NyrRB+Wqv91Xam2Rqju4bs4VoHlMFxuWbdny9pSgh55MNlLuyrcae0fgdQ1NpDffdsfryd2+QPaRz0awlUodSjA/7qC8gJ7Uu2smA4i3eHQhvj7nLLtqwmIuufFqrxeikI0X0q9TMN8rRtGdMX6eaeaN2gZynRDMzbEyewbYdGc7JapuR6rxREF5hPG6xoUc4Q4PGiRsrnpoU7pGpmwrQMR7dcH1/kABzNzR/LjPvR6/5SkiNrBnwK/FzsHNvz67YgwXjt0ge8EoLvdYiP77oRNPcrLlNjmkRc5EHsR27UcFz/PR3ifKAc5bAhJj47OSt3iSWiC2wmi3dKilgcJkUcBpDUGhR9Y++fbEmATNt9fcM6ApZuXksigIZxwruFrEAiMTPwiG7lJNwGYBbjOz2jZp6OL1f++xjkG0VbZALJdZb2rTjjVN8aSokxzkZfBapSPRkNOBgd82G831Ky/ZuHvsoiJ792MJSfqNKOuZp1AkWVpS8skgNcr/gneuSqSB1beENkTobuwUtvppeCmlDjw2cO3VjTtHKNdxHduwUQvBeClZdSkXvud40jMNuzCEYYs6VmOUdIKM+8B+J4mxExq9zaDDewHpigFWJWz/zcujiwPw+8vAxhsSbpFw62MT8mh7Kwd2V5fd0GhMzK2EoCiZZd36OfzHSNptPlMM+nkOXuEGleghrmUQBTS9Jbg62gQRaqXiJ4nsGnvpvAACNtzbAW6lJcQAckUrUZ6HlMuyeV+Lno1o6aGTxkXra2TNijCZuKU7B5up5pNHfQb38/a30HxgGuWh3rPaOTqiNe0aP5dHCmjCGBws/b9qm/eS5lA9Knf2A6nEkcONmJ7m7MqaPsuwz6zFEObMth+yqNHrog9beRKsZ7HObC1yRcOFMFtnkrbPGfhTsVQHNausx//TWdKYWZbuKiqo2Tx72zyI3YlMiLkpdJFKT+WpIaPdytXS3800PyiDTTt8sqYcHjtO+SFnSozzhTmJPt5+Qo7KV0ArW0sPxK51bbfMqsP43RjX2QGYKZcPDEd1npTCd4HS/XBC3hVnOvJf9IMj0c3AonodIIgWuSND6A2qR2mj+7gM+Kfa+mCEgTT+9QNNtZbAaETPU5m4kojTs5q7ABaVBjJ+5CxCuPPf7g/i2/C9Vxd8OxVNa5DcBrahujgnrOqDtwXScMyNAUcy6iHWAYOGcEHEqAcmJe30HHzQQODfs4PM2D/F9wt0DNlR/CawHx+hmkXngDrUCV3EeHJnLu6qcveHfhs+E6PZVD/FqON87fpFBGX0ufoLe+MScc4cpLBCG702f5KKBBySVKg6cXRIC0amMQ99Hx5A3jOw5S2IcT5YimDXCPFwTYhtWIBoR4a8rwyBVnALU2+axQbeGCuLzJdnS+8sRV5cfHWQ6+PCfK9MJgHVKPeYuHIkPe3VOn1bbm1LJDB/0cB2rlmsorSl4ZtYTMcS+WXB9rjr9Qr2x5byWWRGOhIk54hTkcxbK7e197cFV1eVdUo0ZGA+BpUYW94FY3L9PLqEGVHlSouewG4iWhxq19+qTsvl3hRXevRqmpHkUEy7m3OmtGMKIdSmAq2ogGX8N2w8MuZX12+1z//YmfJdElvaLQIjB3vPZMpTTkqUACO24LukYyj2Nxs/qBOZWyoWE7N7ZKYghHr+Dsrd7dp4OTo2JKjMnUR8TpmC164t/P9en9hJluQaSedZ9ekemAXHWLWRl4RPrMJujBRQjPC5hY9tNYHAqraLtZfi4VaFphcfaoIkmMV+vjQL5xFU3zVQ3a+vGmVw/ujt9pd7R4B0yMwH6RU8e3J/VcNheYtwL3s1RhoRiPrc76sm4IhCFlS2QyOoYJCkwlKPifv8BBGKJaoNZ9fG0eb/enBKJ0rQRH4ykGA3iqGiIg73fikN01/4YmwPUqK87TuoNaWHek9TgKbSR5TYS6FYO7KpzxO8YHkDra3RTBmr6DIFaGj98wHINom7izIHQFLPTwQTOHBvzTdWZS/q2WDyqli3X9aVxKtwlpzpYMXK2PAd4Eh4UAweGLxSyYzgVZthdugc3JjaYCgJXIa/gJEv/g7O/A4CSjh3ZgFjrQVOBRXXMx1NDmLILllyd1DoUiH9q7KWpuTzOfdMbHEfeMTNQDQbU5G0OCVl+eIG0k7qXVuZs80dXrBaS3lj1zLuuwzmpZ7sZcub6b2EkkbqA+f72OpsukG3OqvIX8Jm9etXiRIftQWLoxUSfZN85dKBuys01mDjlLd7IP9ahKcXiitGXFJrimS1NIrrv1mSncyM2ZPN2J+cb+VyX4UldQr23zcQFVHn7NE4+qwjmz4+QHw+u+VXJTYXJyrwQD+oLANyC8XpVt5SyzgMB6PVCF7IzdCpc5gUCkL6VMz2kgd8EhHtUH2Q4v4br4ICxTu9MDF8UIuQ2GsMc9b8b1hWBqLPkFFSrskokplWyf69qnoAY93gJoywHScRFNDMyLThnmODs+kRLsdLnQPmv0pzUQOHvMTriz/muNl7nCu78EM6+bnkh2jfNHC0P2qfQ14B9nOQ306iepHxk2faPXGoEu2dYyWx54Ls9Z5sk9EkKEoFtURd3ODil1DZzh3NmC7tEtTo167+fibn4+ti4/WJ6+wmXqNJYG3hNT+2rsj96P7W9ZYu0f1x1uuy1I+u2UMomq3XPO19O8L92bdADKnkHbbtnaSpxY3XpoJDfIKuAQpnRogxiIWTQrytxsspcRBDfmh7l8aVN4Fm9/zApzQiJ1ZqWNKzsLjBPLXlLX3Zlp1kT2HWPjw2IoiLjz49lVXEFxOMQXZd7VoBX6Y7REixckzYBccRXBs9JAblF+WZCeQB2fORhTGV086roI/76vqJxnqiAvJ6IkBY5KDovS7/iJsWbRl+nJvvV4anQf58E8T052UkRon/x4/qCqSmMSsvveaPGwRxYnZ3PCKhAtApO9ZmhoMf89h7Cvlazvu18FuWYKxxNVDS9h09pU/5D6/6RO4jgarIuiGaxoQ7ISlLDJ/peFQQwy1tpKJCd0V3zBjhYQnnGrIaizYmmqGpYwPjs0rrtOjCt60pBDPPyW83ptNDC/tQBmrb4uFDNFD7V3ke1qdnkNACq+kiH7I06SYxD2nlcq3s8mDTq3+1GWFStY/0+zJLKAOfdbLqyV4DGyNIkGJWaYQ6cRA3NG+l80mz6B+3BY9FjEuUlh5zjJqVsvj5aKmA2xwKWFr5iwA7ownkNiymCK61wZgms8RbWjgaQ2+TDoFuCT2FEnpVugZ7zxd6VnAUinn57WTLbpx/lOs1mJVY+NYWdf1AQSxRAdXWGHpnD+Pj2DXuGDn6J7h/uS5kQEQnGr3MCz0r9UwQrItF78V9BmkFJDGaP9U/oGMO9BjDC2d+9Y1L9O7BP0ZyiZ5xMX/Z868mYXtueCypzYEOLb+JjbKkqDEiixF17N7qw0IiQaySd6QyxbGEwyV0cwG9zZLakdDiVWmbgWOwsq+voz+CiE2xOEllzGcYlf1rGnnJ55vTpDXgn+UIquSoKMxEeULhT/YUGIwEBdbfLB8wi42lzdkpN8YV9W/EPYSvGslOyEYrdioI0cj15K3guuQvr0rZWaTjSfuJdS319cLLivgMIkWKVa+AUm1XBgiOt47KYXLU0Jr+NIl0ypEkFqyFTIfYblhU6q1G0c2AKYjzKvciQgF7FU4mzgTTeA+wjMhqhtOXdPfs2cx+dBPfj6eK6VjWs9EXu0fAGcbAn539gGf8iW2xc4e5KbMTqyfH0/8D9Wa/kgOJ6bLzVKOR8CS7bttw4TjxVAI5PmJNdJEnVO6SSL8bANdPkbNxJZWsmr1LX2WUBv5dUdcoI1EVOfs87PIcA7wKc//4j5Q+ueMRwohVwF9+oPoIySgw8zjvcOkSWTZIGQxdk17IznbS3aZwVT+x42lOrnx58S9SO9+AFswGZQyPkNLqoU7kmYg9P39O8LVIvN2SGxDQhsjcwrxsugoLXlVNyJGq9u5qRxahIVD5MiPByuXJMVGgqtvUy8wYWb1K5alUEEEQyhn9ObjYo225C9pPOwYVuF6Jqxd0+LG2c4yqL63hhISZoGxrnjJ+XBO/MFv/Yrpyf3FtyO/BT/ZAgnrLoSs1gzOIM+weEqUwMjnQObkAm/BLcOI0po40Q5VuCBgy7QX2vOuTtuADOacRuYxuQHVY4ba0yVzlCpPg0D1TjdFGcd2WL+7LgdqPf4wQ2SDiFTRNVy4hbr/IcYcYGNgVq4elX82QhV1krizwCG4FN1EVsFfHkb5G0pK++VH5nimuM8Qm47zE0y1LTwi6W3BqaHX6iIkzWBEgxTVi7ioJEFGXaVmkBrjOOhKtfb+AzEvixezho90LsPxUAP4+77fTV1sMsur7Dz16KH+o/aXa/YzR/oNsYuNgnnXbWIxg3pPnjn81spr2w3Ns3msOC+rT6/LnxmF14HVeaXHQ27EUgyayXXrKo472shabn+1li/7mfgdSWHunwObjy16e0nW8EhxINyodkI5wPAqV6Vc11N9k3Z5HDDhsgpr73j5PK6ed+Yw2Gr5MfjEiWX8ZxPwIihGK3KxbQnAO8sAdRRY3a24Eq3gsGaZhyq0RToRMAmL9k3V8mElBIIyTX4GtbM1A2YLdcLvxA1Ey0a4CoCa3VGnscQZkq74s8uEiMbAPytaYV73wLrI5jMtXPJjgB8/CM1Uejl+IaXPDKcnAYfs9v1uz0ONlHZKDKYSCXj2dAusVaIZTPqH9SXlBO62KOOSAH9Jj43dddN/d9qaL5K2X2jhU4Qui87P4A=="
                    },
                    "atomic": false,
                    "chart": "prometheus",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "prometheus-3bbq0lda",
                    "namespace": "default",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://prometheus-community.github.io/helm-charts",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "prometheus-3bbq0lda-kube-state-metrics",
                            "prometheus-3bbq0lda-server"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "prometheus-3bbq0lda-kube-state-metrics",
                            "prometheus-3bbq0lda-server"
                        ],
                        "ConfigMap/v1": [
                            "default/prometheus-3bbq0lda-server"
                        ],
                        "Deployment.apps/apps/v1": [
                            "default/prometheus-3bbq0lda-kube-state-metrics",
                            "default/prometheus-3bbq0lda-server"
                        ],
                        "PersistentVolumeClaim/v1": [
                            "default/prometheus-3bbq0lda-server"
                        ],
                        "Service/v1": [
                            "default/prometheus-3bbq0lda-kube-state-metrics",
                            "default/prometheus-3bbq0lda-server"
                        ],
                        "ServiceAccount/v1": [
                            "default/prometheus-3bbq0lda-kube-state-metrics",
                            "default/prometheus-3bbq0lda-server"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "2.36.2",
                        "chart": "prometheus",
                        "name": "prometheus-3bbq0lda",
                        "namespace": "default",
                        "revision": 7,
                        "status": "deployed",
                        "version": "15.12.0"
                    },
                    "timeout": 300,
                    "values": {
                        "alertmanager": {
                            "enabled": false
                        },
                        "configmapReload": {
                            "prometheus": {
                                "enabled": false
                            }
                        },
                        "kube-state-metrics": {
                            "metricLabelsAllowlist": [
                                "nodes=[eks.amazonaws.com/capacityType,eks.amazonaws.com/nodegroup,kubernetes.io/arch]"
                            ]
                        },
                        "nodeExporter": {
                            "enabled": false
                        },
                        "pushgateway": {
                            "enabled": false
                        },
                        "server": {
                            "extraFlags": [
                                "storage.tsdb.no-lockfile"
                            ],
                            "nodeSelector": {
                                "eks.amazonaws.com/capacityType": "ON_DEMAND"
                            },
                            "persistentVolume": {
                                "size": "256Gi"
                            },
                            "retention": "60d",
                            "service": {
                                "type": "LoadBalancer"
                            }
                        },
                        "serverFiles": {
                            "prometheus.yml": {
                                "scrape_configs": [
                                    {
                                        "job_name": "kubernetes-pods",
                                        "kubernetes_sd_configs": [
                                            {
                                                "role": "pod"
                                            }
                                        ],
                                        "relabel_configs": [
                                            {
                                                "action": "keep",
                                                "regex": true,
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_annotation_prometheus_io_scrape"
                                                ]
                                            },
                                            {
                                                "action": "replace",
                                                "regex": "([^:]+)(?::d+)?;(d+)",
                                                "replacement": "$$1:$$2",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_annotation_prometheus_io_port",
                                                    "__address__"
                                                ],
                                                "target_label": "__address__"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_namespace"
                                                ],
                                                "target_label": "Namespace"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_name"
                                                ],
                                                "target_label": "PodName"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_container_name"
                                                ],
                                                "target_label": "ContainerName"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_controller_name"
                                                ],
                                                "target_label": "PodControllerName"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_controller_kind"
                                                ],
                                                "target_label": "PodControllerKind"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_phase"
                                                ],
                                                "target_label": "PodPhase"
                                            },
                                            {
                                                "action": "drop",
                                                "regex": "(linkerd-init|linkerd-proxy)",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_container_name"
                                                ]
                                            }
                                        ],
                                        "sample_limit": 10000
                                    },
                                    {
                                        "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                                        "job_name": "kubernetes-nodes-cadvisor",
                                        "kubernetes_sd_configs": [
                                            {
                                                "role": "node"
                                            }
                                        ],
                                        "metrics_path": "/metrics/cadvisor",
                                        "relabel_configs": [
                                            {
                                                "action": "labelmap",
                                                "regex": "__meta_kubernetes_node_label_(.+)"
                                            }
                                        ],
                                        "scheme": "https",
                                        "scrape_interval": "10s",
                                        "tls_config": {
                                            "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                                            "insecure_skip_verify": true
                                        }
                                    },
                                    {
                                        "job_name": "kubernetes-services",
                                        "kubernetes_sd_configs": [
                                            {
                                                "role": "service"
                                            }
                                        ],
                                        "relabel_configs": [
                                            {
                                                "action": "labelmap",
                                                "regex": "__meta_kubernetes_service_label_(.+)"
                                            },
                                            {
                                                "source_labels": [
                                                    "__meta_kubernetes_namespace"
                                                ],
                                                "target_label": "Namespace"
                                            },
                                            {
                                                "source_labels": [
                                                    "__meta_kubernetes_service_name"
                                                ],
                                                "target_label": "Service"
                                            }
                                        ]
                                    },
                                    {
                                        "job_name": "broker",
                                        "static_configs": [
                                            {
                                                "labels": {
                                                    "job": "jmx"
                                                },
                                                "targets": [
                                                    "b-1.:11001",
                                                    "b-2.:11001"
                                                ]
                                            },
                                            {
                                                "labels": {
                                                    "job": "node"
                                                },
                                                "targets": [
                                                    "b-1.:11002",
                                                    "b-2.:11002"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "serviceAccounts": {
                            "alertmanager": {
                                "create": false
                            },
                            "nodeExporter": {
                                "create": false
                            },
                            "pushgateway": {
                                "create": false
                            }
                        }
                    },
                    "verify": false,
                    "version": "15.12.0",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "protect": true,
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::prom-k8s-provider::a7446334-91d9-4344-a06a-5a991a884d03",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "repositoryOpts": null,
                    "values": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::strimzi",
                "custom": true,
                "id": "strimzi/strimzi-z42tebwc",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "strimzi-kafka-operator",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "strimzi-z42tebwc",
                    "namespace": "strimzi",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://strimzi.io/charts/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "strimzi-cluster-operator-global",
                            "strimzi-cluster-operator-namespaced",
                            "strimzi-entity-operator",
                            "strimzi-kafka-broker",
                            "strimzi-kafka-client"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "strimzi-cluster-operator",
                            "strimzi-cluster-operator-kafka-broker-delegation",
                            "strimzi-cluster-operator-kafka-client-delegation"
                        ],
                        "ConfigMap/v1": [
                            "strimzi-cluster-operator"
                        ],
                        "CustomResourceDefinition.apiextensions.k8s.io/apiextensions.k8s.io/v1": [
                            "kafkabridges.kafka.strimzi.io",
                            "kafkaconnectors.kafka.strimzi.io",
                            "kafkaconnects.kafka.strimzi.io",
                            "kafkamirrormaker2s.kafka.strimzi.io",
                            "kafkamirrormakers.kafka.strimzi.io",
                            "kafkarebalances.kafka.strimzi.io",
                            "kafkas.kafka.strimzi.io",
                            "kafkatopics.kafka.strimzi.io",
                            "kafkausers.kafka.strimzi.io",
                            "strimzipodsets.core.strimzi.io"
                        ],
                        "Deployment.apps/apps/v1": [
                            "strimzi-cluster-operator"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "strimzi/strimzi-cluster-operator",
                            "strimzi/strimzi-cluster-operator-entity-operator-delegation"
                        ],
                        "ServiceAccount/v1": [
                            "strimzi-cluster-operator"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        }
                    },
                    "verify": false,
                    "version": "0.29.0",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABABY24r2751L31qyg7fZeMXg4gNUovwKxIZ7UYV6mT59bhK4iLyngIhqe3UpeccxBqBoNQEszQhrsPNkAgmDXZ5sXNCKCk2LTUYcsl6Y7GItr2WdycaIswLz378xb4Gs249c3lkJI5RyZdtDmaCM1ZtaOCqw77njK2uqHl7hZkMJhHYiS12/x8jy/IniwJTbWtZJTqejeO/xUPPIXtA/KSVwbqfdLXe0h8ynGkjec17uq4qvWqjdXyyj32gIhYmRM0u+KFN5mI0+D3F2Lx3oIxuRk6OJD+n58cIDz8+712bDAp+y4JQ+/2r5huTa2mPWvbjXDQmfildpyJsXzeDL9qMevKOkGHNw/llOVsZhENZs43KizXido5q6iM4dOuX4uRUlV+GaaSL+u38H7dyP3buspcEZTwWEmIGtzwWRr9uscXwQkVbs155Qq7GE8+TABLp8ORZ6/e/8NXlZwG7UjjWajx8a8iqINXI/yZL1HkfGF3WO5UYNre3EhCCmfCqH3YqaBcfpONwa5R/XkAaOqyiVu6Kt09fNHeK125szTUbgf4bXtGhGhG769RsL8jqORbyQVEZCqfD5xnfKDYOLO6UYi5MyxkaMwfG0TtEIEiR69B/1V4goT6KRcCRNtwEqvMSlheyv+hrGy9tLyKyvqaqtRy1F4U6gWlbGgZ0Xs5uwDz+EAXaaZ/JOQbGlJ5o3UWbcN1oKNTf/+d+aR1PZM8u/OkxblBiDFkrn7arBU/h8f5IgwuLJY36MiaOPEDDErbRfBq2oLsA+BKY9989LNTfAmbvR2iSmPnz3dHGRsU5uFeZvpV2xRZkFjExUQSk7kd0HDgiKmyULKKapc2BbDeEBwexIWn59k2xV5jW7ib3KgbXHdAkNvZYd097vMysrzZX1yjZY7qB4jyMLiwA9j2O88xbMCYxVWe1soFAlfFp4Xj22PVMkRgvFBG46YeeP1K9gDTbseBCKWKHANFXdlC/nZ0hvcV1dE9VRH7Z6T9VkGt2MKUX7DGbMPj7sDvzRBM6FBbJyxonVFOJol3DN9J0QHVV/VjIBuUJoNBms/2JhggjM8WForpTYqM1vl6yzTifKtI4ZoX7F4W/eDgc3JDS++XK1LUi87XcHYvUO5XuMTd7711UjaYnqfs4JBYk3cjiS03coJLhw4XFEa62c6CnkTqFCdq/GdJ1AG0gz1YnvWhOJ/zBL0ObMW/6kwlYuCi3vVGeiotGEiEmhKrtU5iQ2UncmEnd7RuuNBZbEaiIaxw7hnIUntVzX9ZBuEOcdPK3W7kBhDCfDtddHeN8/sxLNvx1MVYpbNlaZFxvmky/b8htKA1FtSfNKFYVed1P0tRrbzryPNMNMKN5PS+wCD4QGHtnRXfidKuolcnwNZAERlHastg2ubmmVCcFCbWPxlXK8Zwmk5Aq7Nm6FHuETOkbPgb5HP+yIMJ0gBaxxFRHwm/4SUcB9pl8+gsqpfS+8hrxLWk5vIlhnXPauS7NP+wugyVDNr1x+UL7nqxEnzuA2SeYmO0umFht9dBivKthN1VpFUgyItCVMbW2E3WHw3kbhjqkXD0fGBTCjV6VEi3YA4kwHsuWQMv4lfLbG4pBQJRHSP1xEc1iSQ0WH0KcY/ujoDPiCVJqgykMoMooi77zzrgS6Zm0n19w5N84yVWC9H7OogY0pK9Y+1Xwc0YS1HEzJ8GPYvvQX1fxLxlIPHrb79Ua1b2qGW0zMTmcsHt8xlRMbgrb0B2fwwk9dc/S3N7S70XLD1qC0VCSKjkA17EZxnyR8chuDqy2PRRV2HSuAaBAzFM/lEeJ2Hz0fQX7ddV6XBuZG05jeZOqrMG5guGzZ84YYzuGGrjib9MZinkmIM2iptaf3IsppsIds2kFh9nimNhh7khtaaOEQbUIoChszLRoHq1AsoQu0apiiZfDR8F3BTJ3vTYso+7i43C2muz7YoXdi3YPsKzXrDETsrcHEQXoIVUvjhkjLi7TZL+B39A8Wf7AZM0Xh0OgGVsGb3MZ/1XzblvS1qg9/GQmn3QQMTTCrRfMV1f+n55+EQZIbPMnOhFI076ZYuUzZ3UE+Aev30Wgq/9o6dD2WauXHXQNOg2WQMZuOZ5e+0qe1DL612apN79DcYoktPoyMMA4nLaShdgIkB/qRWv+q37Q6uY71XkgQ7roMNaeQwwf06wOl3rNEzB0P7z+pqAEoJJyiXVbWCODS3WFwrFSrU6m+AtCf80923f11vXWTK2H7B3enFxirVeEoNXfzBp+1wwooBdlmrEBgYnQflSVJUEPoaZphH9GQetYy7A/abYPOypLFVQBO119fJoGbGGXs6bmYtDObLoqPs4ruyvmuaPO4wHDx9F373nl7pi8QzCpGHIje7hFr6QMdjy4sbgUF7CIdC5X3iBG2QcOUGcHTa0mxMApx0zHz6HLC1yf/eRx7fp6//OjZTHGMGh3S3YX3uvCT/3X8PpKBuqhmTD63XEezi1G+SYuu87IMBLV1Astgd1KuKttntBEt+f4YWdAX0gG/V6AavwRwKhfsw7it1b4DOC4tf5Os8vYLN2uhTTtEpqg=="
                    },
                    "atomic": false,
                    "chart": "strimzi-kafka-operator",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "strimzi-z42tebwc",
                    "namespace": "strimzi",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://strimzi.io/charts/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "strimzi-cluster-operator-global",
                            "strimzi-cluster-operator-namespaced",
                            "strimzi-entity-operator",
                            "strimzi-kafka-broker",
                            "strimzi-kafka-client"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "strimzi-cluster-operator",
                            "strimzi-cluster-operator-kafka-broker-delegation",
                            "strimzi-cluster-operator-kafka-client-delegation"
                        ],
                        "ConfigMap/v1": [
                            "strimzi-cluster-operator"
                        ],
                        "Deployment.apps/apps/v1": [
                            "strimzi-cluster-operator"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "strimzi/strimzi-cluster-operator",
                            "strimzi/strimzi-cluster-operator-entity-operator-delegation"
                        ],
                        "ServiceAccount/v1": [
                            "strimzi-cluster-operator"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "0.29.0",
                        "chart": "strimzi-kafka-operator",
                        "name": "strimzi-z42tebwc",
                        "namespace": "strimzi",
                        "revision": 2,
                        "status": "deployed",
                        "version": "0.29.0"
                    },
                    "timeout": 300,
                    "values": {
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        }
                    },
                    "verify": false,
                    "version": "0.29.0",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:core/v1:Namespace::strimzi-ns"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::strimzi-k8s-provider::38ca7f66-2516-4e64-a324-b1e09443488c",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "namespace": [
                        "urn:pulumi:plane-9::launchpad::kubernetes:core/v1:Namespace::strimzi-ns"
                    ],
                    "repositoryOpts": null,
                    "values": null,
                    "version": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::mappings.getambassador.io",
                "custom": true,
                "id": "mappings.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "mappings.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Mapping",
                            "listKind": "MappingList",
                            "plural": "mappings",
                            "singular": "mapping"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.host",
                                        "name": "Source Host",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.prefix",
                                        "name": "Source Prefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.service",
                                        "name": "Dest Service",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.reason",
                                        "name": "Reason",
                                        "type": "string"
                                    }
                                ],
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "MappingSpec defines the desired state of Mapping",
                                                "properties": {
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "add_request_headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "add_response_headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "allow_upgrade": {
                                                        "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_context_extensions": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "auto_host_rewrite": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_auth": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_error_response_overrides": {
                                                        "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                        "type": "boolean"
                                                    },
                                                    "case_sensitive": {
                                                        "type": "boolean"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_idle_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cluster_max_connection_lifetime_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "connect_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cors": {
                                                        "properties": {
                                                            "credentials": {
                                                                "type": "boolean"
                                                            },
                                                            "max_age": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "dns_type": {
                                                        "type": "string"
                                                    },
                                                    "docs": {
                                                        "description": "DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)",
                                                        "properties": {
                                                            "display_name": {
                                                                "type": "string"
                                                            },
                                                            "ignored": {
                                                                "type": "boolean"
                                                            },
                                                            "path": {
                                                                "type": "string"
                                                            },
                                                            "timeout_ms": {
                                                                "type": "integer"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "envoy_override": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "error_response_overrides": {
                                                        "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                        "items": {
                                                            "description": "A response rewrite for an HTTP error response",
                                                            "properties": {
                                                                "body": {
                                                                    "description": "The new response body",
                                                                    "properties": {
                                                                        "content_type": {
                                                                            "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                            "type": "string"
                                                                        },
                                                                        "json_format": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                            "type": "object"
                                                                        },
                                                                        "text_format": {
                                                                            "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                            "type": "string"
                                                                        },
                                                                        "text_format_source": {
                                                                            "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                            "properties": {
                                                                                "filename": {
                                                                                    "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "on_status_code": {
                                                                    "description": "The status code to match on -- not a pointer because it's required.",
                                                                    "maximum": 599,
                                                                    "minimum": 400,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "body",
                                                                "on_status_code"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "host_redirect": {
                                                        "type": "boolean"
                                                    },
                                                    "host_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "host_rewrite": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "keepalive": {
                                                        "properties": {
                                                            "idle_time": {
                                                                "type": "integer"
                                                            },
                                                            "interval": {
                                                                "type": "integer"
                                                            },
                                                            "probes": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "additionalProperties": {
                                                            "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                            "items": {
                                                                "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                "maxProperties": 1,
                                                                "minProperties": 1,
                                                                "type": "object",
                                                                "x-kubernetes-preserve-unknown-fields": true
                                                            },
                                                            "type": "array"
                                                        },
                                                        "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                        "type": "object"
                                                    },
                                                    "load_balancer": {
                                                        "properties": {
                                                            "cookie": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "path": {
                                                                        "type": "string"
                                                                    },
                                                                    "ttl": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "header": {
                                                                "type": "string"
                                                            },
                                                            "policy": {
                                                                "enum": [
                                                                    "round_robin",
                                                                    "ring_hash",
                                                                    "maglev",
                                                                    "least_request"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "source_ip": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "policy"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "method": {
                                                        "type": "string"
                                                    },
                                                    "method_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "modules": {
                                                        "items": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "type": "array"
                                                    },
                                                    "outlier_detection": {
                                                        "type": "string"
                                                    },
                                                    "path_redirect": {
                                                        "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "precedence": {
                                                        "type": "integer"
                                                    },
                                                    "prefix": {
                                                        "type": "string"
                                                    },
                                                    "prefix_exact": {
                                                        "type": "boolean"
                                                    },
                                                    "prefix_redirect": {
                                                        "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "prefix_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "priority": {
                                                        "type": "string"
                                                    },
                                                    "query_parameters": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "redirect_response_code": {
                                                        "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                        "enum": [
                                                            301,
                                                            302,
                                                            303,
                                                            307,
                                                            308
                                                        ],
                                                        "type": "integer"
                                                    },
                                                    "regex_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_redirect": {
                                                        "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_rewrite": {
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "respect_dns_ttl": {
                                                        "type": "boolean"
                                                    },
                                                    "retry_policy": {
                                                        "properties": {
                                                            "num_retries": {
                                                                "type": "integer"
                                                            },
                                                            "per_try_timeout": {
                                                                "type": "string"
                                                            },
                                                            "retry_on": {
                                                                "enum": [
                                                                    "5xx",
                                                                    "gateway-error",
                                                                    "connect-failure",
                                                                    "retriable-4xx",
                                                                    "refused-stream",
                                                                    "retriable-status-codes"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "rewrite": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "shadow": {
                                                        "type": "boolean"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                        "type": "integer"
                                                    },
                                                    "use_websocket": {
                                                        "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]`",
                                                        "type": "boolean"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "prefix",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "status": {
                                                "description": "MappingStatus defines the observed state of Mapping",
                                                "properties": {
                                                    "reason": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "enum": [
                                                            "",
                                                            "Inactive",
                                                            "Running"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.host",
                                        "name": "Source Host",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.prefix",
                                        "name": "Source Prefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.service",
                                        "name": "Dest Service",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.reason",
                                        "name": "Reason",
                                        "type": "string"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "MappingSpec defines the desired state of Mapping",
                                                "properties": {
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "add_request_headers": {
                                                        "additionalProperties": {
                                                            "properties": {
                                                                "append": {
                                                                    "type": "boolean"
                                                                },
                                                                "v2Representation": {
                                                                    "enum": [
                                                                        "",
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_response_headers": {
                                                        "additionalProperties": {
                                                            "properties": {
                                                                "append": {
                                                                    "type": "boolean"
                                                                },
                                                                "v2Representation": {
                                                                    "enum": [
                                                                        "",
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "allow_upgrade": {
                                                        "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_context_extensions": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "auto_host_rewrite": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_auth": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_error_response_overrides": {
                                                        "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                        "type": "boolean"
                                                    },
                                                    "case_sensitive": {
                                                        "type": "boolean"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_idle_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cluster_max_connection_lifetime_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "connect_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cors": {
                                                        "properties": {
                                                            "credentials": {
                                                                "type": "boolean"
                                                            },
                                                            "exposed_headers": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "headers": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_age": {
                                                                "type": "string"
                                                            },
                                                            "methods": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "origins": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "v2CommaSeparatedOrigins": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "dns_type": {
                                                        "type": "string"
                                                    },
                                                    "docs": {
                                                        "description": "DocsInfo provides some extra information about the docs for the Mapping. Docs is used by both the agent and the DevPortal.",
                                                        "properties": {
                                                            "display_name": {
                                                                "type": "string"
                                                            },
                                                            "ignored": {
                                                                "type": "boolean"
                                                            },
                                                            "path": {
                                                                "type": "string"
                                                            },
                                                            "timeout_ms": {
                                                                "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                                "type": "integer"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "envoy_override": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "error_response_overrides": {
                                                        "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                        "items": {
                                                            "description": "A response rewrite for an HTTP error response",
                                                            "properties": {
                                                                "body": {
                                                                    "description": "The new response body",
                                                                    "properties": {
                                                                        "content_type": {
                                                                            "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                            "type": "string"
                                                                        },
                                                                        "json_format": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                            "type": "object"
                                                                        },
                                                                        "text_format": {
                                                                            "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                            "type": "string"
                                                                        },
                                                                        "text_format_source": {
                                                                            "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                            "properties": {
                                                                                "filename": {
                                                                                    "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "on_status_code": {
                                                                    "description": "The status code to match on -- not a pointer because it's required.",
                                                                    "maximum": 599,
                                                                    "minimum": 400,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "body",
                                                                "on_status_code"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "host": {
                                                        "description": "Exact match for the hostname of a request if HostRegex is false; regex match for the hostname if HostRegex is true. \n Host specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Host will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used. \n DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                        "type": "string"
                                                    },
                                                    "host_redirect": {
                                                        "type": "boolean"
                                                    },
                                                    "host_regex": {
                                                        "description": "DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                        "type": "boolean"
                                                    },
                                                    "host_rewrite": {
                                                        "type": "string"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname is a DNS glob specifying the hosts to which this Mapping applies. \n Hostname specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Hostname will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used.",
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "keepalive": {
                                                        "properties": {
                                                            "idle_time": {
                                                                "type": "integer"
                                                            },
                                                            "interval": {
                                                                "type": "integer"
                                                            },
                                                            "probes": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "additionalProperties": {
                                                            "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                            "items": {
                                                                "additionalProperties": {
                                                                    "description": "A MappingLabelsArray is the value in the MappingLabelGroup: an array of label specifiers.",
                                                                    "items": {
                                                                        "description": "A MappingLabelSpecifier (finally!) defines a single label. \n This mimics envoy/config/route/v3/route_components.proto:RateLimit:Action:action_specifier.",
                                                                        "maxProperties": 1,
                                                                        "minProperties": 1,
                                                                        "properties": {
                                                                            "destination_cluster": {
                                                                                "description": "Sets the label \"destination_cluster=«Envoy destination cluster name»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "destination_cluster"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "generic_key": {
                                                                                "description": "Sets the label \"«key»=«value»\" (where by default «key» is \"generic_key\").",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "The default is \"generic_key\".",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "v2Shorthand": {
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "value": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "value"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "remote_address": {
                                                                                "description": "Sets the label \"remote_address=«IP address of the client»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "remote_address"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "request_headers": {
                                                                                "description": "If the «header_name» header is set, then set the label \"«key»=«Value of the «header_name» header»\"; otherwise skip applying this label group.",
                                                                                "properties": {
                                                                                    "header_name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "omit_if_not_present": {
                                                                                        "type": "boolean"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "header_name",
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "source_cluster": {
                                                                                "description": "Sets the label \"source_cluster=«Envoy source cluster name»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "source_cluster"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                "maxProperties": 1,
                                                                "minProperties": 1,
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                        "type": "object"
                                                    },
                                                    "load_balancer": {
                                                        "properties": {
                                                            "cookie": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "path": {
                                                                        "type": "string"
                                                                    },
                                                                    "ttl": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "header": {
                                                                "type": "string"
                                                            },
                                                            "policy": {
                                                                "enum": [
                                                                    "round_robin",
                                                                    "ring_hash",
                                                                    "maglev",
                                                                    "least_request"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "source_ip": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "policy"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "method": {
                                                        "type": "string"
                                                    },
                                                    "method_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "modules": {
                                                        "items": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "type": "array"
                                                    },
                                                    "outlier_detection": {
                                                        "type": "string"
                                                    },
                                                    "path_redirect": {
                                                        "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "precedence": {
                                                        "type": "integer"
                                                    },
                                                    "prefix": {
                                                        "type": "string"
                                                    },
                                                    "prefix_exact": {
                                                        "type": "boolean"
                                                    },
                                                    "prefix_redirect": {
                                                        "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "prefix_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "priority": {
                                                        "type": "string"
                                                    },
                                                    "query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "redirect_response_code": {
                                                        "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                        "enum": [
                                                            301,
                                                            302,
                                                            303,
                                                            307,
                                                            308
                                                        ],
                                                        "type": "integer"
                                                    },
                                                    "regex_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_redirect": {
                                                        "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_rewrite": {
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "remove_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "remove_response_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "respect_dns_ttl": {
                                                        "type": "boolean"
                                                    },
                                                    "retry_policy": {
                                                        "properties": {
                                                            "num_retries": {
                                                                "type": "integer"
                                                            },
                                                            "per_try_timeout": {
                                                                "type": "string"
                                                            },
                                                            "retry_on": {
                                                                "enum": [
                                                                    "5xx",
                                                                    "gateway-error",
                                                                    "connect-failure",
                                                                    "retriable-4xx",
                                                                    "refused-stream",
                                                                    "retriable-status-codes"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "rewrite": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "shadow": {
                                                        "type": "boolean"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "use_websocket": {
                                                        "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]` \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.DeprecatedUseWebsocket.",
                                                        "type": "boolean"
                                                    },
                                                    "v2BoolHeaders": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v2BoolQueryParameters": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "prefix",
                                                    "service"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "MappingStatus defines the observed state of Mapping",
                                                "properties": {
                                                    "reason": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "enum": [
                                                            "",
                                                            "Inactive",
                                                            "Running"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "mappings.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "Mapping",
                                "listKind": "MappingList",
                                "plural": "mappings",
                                "singular": "mapping"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "additionalPrinterColumns": [
                                        {
                                            "jsonPath": ".spec.host",
                                            "name": "Source Host",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.prefix",
                                            "name": "Source Prefix",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.service",
                                            "name": "Dest Service",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.state",
                                            "name": "State",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.reason",
                                            "name": "Reason",
                                            "type": "string"
                                        }
                                    ],
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Mapping is the Schema for the mappings API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "MappingSpec defines the desired state of Mapping",
                                                    "properties": {
                                                        "add_linkerd_headers": {
                                                            "type": "boolean"
                                                        },
                                                        "add_request_headers": {
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "add_response_headers": {
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "allow_upgrade": {
                                                            "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "auth_context_extensions": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "auto_host_rewrite": {
                                                            "type": "boolean"
                                                        },
                                                        "bypass_auth": {
                                                            "type": "boolean"
                                                        },
                                                        "bypass_error_response_overrides": {
                                                            "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                            "type": "boolean"
                                                        },
                                                        "case_sensitive": {
                                                            "type": "boolean"
                                                        },
                                                        "circuit_breakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "cluster_idle_timeout_ms": {
                                                            "type": "integer"
                                                        },
                                                        "cluster_max_connection_lifetime_ms": {
                                                            "type": "integer"
                                                        },
                                                        "cluster_tag": {
                                                            "type": "string"
                                                        },
                                                        "connect_timeout_ms": {
                                                            "type": "integer"
                                                        },
                                                        "cors": {
                                                            "properties": {
                                                                "credentials": {
                                                                    "type": "boolean"
                                                                },
                                                                "max_age": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "dns_type": {
                                                            "type": "string"
                                                        },
                                                        "docs": {
                                                            "description": "DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)",
                                                            "properties": {
                                                                "display_name": {
                                                                    "type": "string"
                                                                },
                                                                "ignored": {
                                                                    "type": "boolean"
                                                                },
                                                                "path": {
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "enable_ipv4": {
                                                            "type": "boolean"
                                                        },
                                                        "enable_ipv6": {
                                                            "type": "boolean"
                                                        },
                                                        "envoy_override": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "error_response_overrides": {
                                                            "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                            "items": {
                                                                "description": "A response rewrite for an HTTP error response",
                                                                "properties": {
                                                                    "body": {
                                                                        "description": "The new response body",
                                                                        "properties": {
                                                                            "content_type": {
                                                                                "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                                "type": "string"
                                                                            },
                                                                            "json_format": {
                                                                                "additionalProperties": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                                "type": "object"
                                                                            },
                                                                            "text_format": {
                                                                                "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                                "type": "string"
                                                                            },
                                                                            "text_format_source": {
                                                                                "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                                "properties": {
                                                                                    "filename": {
                                                                                        "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "on_status_code": {
                                                                        "description": "The status code to match on -- not a pointer because it's required.",
                                                                        "maximum": 599,
                                                                        "minimum": 400,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "body",
                                                                    "on_status_code"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        "grpc": {
                                                            "type": "boolean"
                                                        },
                                                        "headers": {
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "host": {
                                                            "type": "string"
                                                        },
                                                        "host_redirect": {
                                                            "type": "boolean"
                                                        },
                                                        "host_regex": {
                                                            "type": "boolean"
                                                        },
                                                        "host_rewrite": {
                                                            "type": "string"
                                                        },
                                                        "idle_timeout_ms": {
                                                            "type": "integer"
                                                        },
                                                        "keepalive": {
                                                            "properties": {
                                                                "idle_time": {
                                                                    "type": "integer"
                                                                },
                                                                "interval": {
                                                                    "type": "integer"
                                                                },
                                                                "probes": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "labels": {
                                                            "additionalProperties": {
                                                                "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                                "items": {
                                                                    "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                    "maxProperties": 1,
                                                                    "minProperties": 1,
                                                                    "type": "object",
                                                                    "x-kubernetes-preserve-unknown-fields": true
                                                                },
                                                                "type": "array"
                                                            },
                                                            "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                            "type": "object"
                                                        },
                                                        "load_balancer": {
                                                            "properties": {
                                                                "cookie": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "path": {
                                                                            "type": "string"
                                                                        },
                                                                        "ttl": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "header": {
                                                                    "type": "string"
                                                                },
                                                                "policy": {
                                                                    "enum": [
                                                                        "round_robin",
                                                                        "ring_hash",
                                                                        "maglev",
                                                                        "least_request"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "source_ip": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "required": [
                                                                "policy"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "method": {
                                                            "type": "string"
                                                        },
                                                        "method_regex": {
                                                            "type": "boolean"
                                                        },
                                                        "modules": {
                                                            "items": {
                                                                "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                                "type": "object",
                                                                "x-kubernetes-preserve-unknown-fields": true
                                                            },
                                                            "type": "array"
                                                        },
                                                        "outlier_detection": {
                                                            "type": "string"
                                                        },
                                                        "path_redirect": {
                                                            "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "type": "string"
                                                        },
                                                        "precedence": {
                                                            "type": "integer"
                                                        },
                                                        "prefix": {
                                                            "type": "string"
                                                        },
                                                        "prefix_exact": {
                                                            "type": "boolean"
                                                        },
                                                        "prefix_redirect": {
                                                            "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "type": "string"
                                                        },
                                                        "prefix_regex": {
                                                            "type": "boolean"
                                                        },
                                                        "priority": {
                                                            "type": "string"
                                                        },
                                                        "query_parameters": {
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "redirect_response_code": {
                                                            "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                            "enum": [
                                                                301,
                                                                302,
                                                                303,
                                                                307,
                                                                308
                                                            ],
                                                            "type": "integer"
                                                        },
                                                        "regex_headers": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_query_parameters": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_redirect": {
                                                            "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "properties": {
                                                                "pattern": {
                                                                    "type": "string"
                                                                },
                                                                "substitution": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_rewrite": {
                                                            "properties": {
                                                                "pattern": {
                                                                    "type": "string"
                                                                },
                                                                "substitution": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "resolver": {
                                                            "type": "string"
                                                        },
                                                        "respect_dns_ttl": {
                                                            "type": "boolean"
                                                        },
                                                        "retry_policy": {
                                                            "properties": {
                                                                "num_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "per_try_timeout": {
                                                                    "type": "string"
                                                                },
                                                                "retry_on": {
                                                                    "enum": [
                                                                        "5xx",
                                                                        "gateway-error",
                                                                        "connect-failure",
                                                                        "retriable-4xx",
                                                                        "refused-stream",
                                                                        "retriable-status-codes"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "rewrite": {
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "shadow": {
                                                            "type": "boolean"
                                                        },
                                                        "timeout_ms": {
                                                            "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                            "type": "integer"
                                                        },
                                                        "use_websocket": {
                                                            "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]`",
                                                            "type": "boolean"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        },
                                                        "weight": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "prefix",
                                                        "service"
                                                    ],
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                },
                                                "status": {
                                                    "description": "MappingStatus defines the observed state of Mapping",
                                                    "properties": {
                                                        "reason": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "enum": [
                                                                "",
                                                                "Inactive",
                                                                "Running"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {
                                        "status": {}
                                    }
                                },
                                {
                                    "additionalPrinterColumns": [
                                        {
                                            "jsonPath": ".spec.host",
                                            "name": "Source Host",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.prefix",
                                            "name": "Source Prefix",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.service",
                                            "name": "Dest Service",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.state",
                                            "name": "State",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.reason",
                                            "name": "Reason",
                                            "type": "string"
                                        }
                                    ],
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Mapping is the Schema for the mappings API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "MappingSpec defines the desired state of Mapping",
                                                    "properties": {
                                                        "add_linkerd_headers": {
                                                            "type": "boolean"
                                                        },
                                                        "add_request_headers": {
                                                            "additionalProperties": {
                                                                "properties": {
                                                                    "append": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "v2Representation": {
                                                                        "enum": [
                                                                            "",
                                                                            "string",
                                                                            "null"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "add_response_headers": {
                                                            "additionalProperties": {
                                                                "properties": {
                                                                    "append": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "v2Representation": {
                                                                        "enum": [
                                                                            "",
                                                                            "string",
                                                                            "null"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "allow_upgrade": {
                                                            "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "auth_context_extensions": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "auto_host_rewrite": {
                                                            "type": "boolean"
                                                        },
                                                        "bypass_auth": {
                                                            "type": "boolean"
                                                        },
                                                        "bypass_error_response_overrides": {
                                                            "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                            "type": "boolean"
                                                        },
                                                        "case_sensitive": {
                                                            "type": "boolean"
                                                        },
                                                        "circuit_breakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "cluster_idle_timeout_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "cluster_max_connection_lifetime_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "cluster_tag": {
                                                            "type": "string"
                                                        },
                                                        "connect_timeout_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "cors": {
                                                            "properties": {
                                                                "credentials": {
                                                                    "type": "boolean"
                                                                },
                                                                "exposed_headers": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "headers": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "max_age": {
                                                                    "type": "string"
                                                                },
                                                                "methods": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "origins": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "v2CommaSeparatedOrigins": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "dns_type": {
                                                            "type": "string"
                                                        },
                                                        "docs": {
                                                            "description": "DocsInfo provides some extra information about the docs for the Mapping. Docs is used by both the agent and the DevPortal.",
                                                            "properties": {
                                                                "display_name": {
                                                                    "type": "string"
                                                                },
                                                                "ignored": {
                                                                    "type": "boolean"
                                                                },
                                                                "path": {
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "enable_ipv4": {
                                                            "type": "boolean"
                                                        },
                                                        "enable_ipv6": {
                                                            "type": "boolean"
                                                        },
                                                        "envoy_override": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "error_response_overrides": {
                                                            "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                            "items": {
                                                                "description": "A response rewrite for an HTTP error response",
                                                                "properties": {
                                                                    "body": {
                                                                        "description": "The new response body",
                                                                        "properties": {
                                                                            "content_type": {
                                                                                "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                                "type": "string"
                                                                            },
                                                                            "json_format": {
                                                                                "additionalProperties": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                                "type": "object"
                                                                            },
                                                                            "text_format": {
                                                                                "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                                "type": "string"
                                                                            },
                                                                            "text_format_source": {
                                                                                "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                                "properties": {
                                                                                    "filename": {
                                                                                        "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "on_status_code": {
                                                                        "description": "The status code to match on -- not a pointer because it's required.",
                                                                        "maximum": 599,
                                                                        "minimum": 400,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "body",
                                                                    "on_status_code"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        "grpc": {
                                                            "type": "boolean"
                                                        },
                                                        "headers": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "host": {
                                                            "description": "Exact match for the hostname of a request if HostRegex is false; regex match for the hostname if HostRegex is true. \n Host specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Host will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used. \n DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                            "type": "string"
                                                        },
                                                        "host_redirect": {
                                                            "type": "boolean"
                                                        },
                                                        "host_regex": {
                                                            "description": "DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                            "type": "boolean"
                                                        },
                                                        "host_rewrite": {
                                                            "type": "string"
                                                        },
                                                        "hostname": {
                                                            "description": "Hostname is a DNS glob specifying the hosts to which this Mapping applies. \n Hostname specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Hostname will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used.",
                                                            "type": "string"
                                                        },
                                                        "idle_timeout_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "keepalive": {
                                                            "properties": {
                                                                "idle_time": {
                                                                    "type": "integer"
                                                                },
                                                                "interval": {
                                                                    "type": "integer"
                                                                },
                                                                "probes": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "labels": {
                                                            "additionalProperties": {
                                                                "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                                "items": {
                                                                    "additionalProperties": {
                                                                        "description": "A MappingLabelsArray is the value in the MappingLabelGroup: an array of label specifiers.",
                                                                        "items": {
                                                                            "description": "A MappingLabelSpecifier (finally!) defines a single label. \n This mimics envoy/config/route/v3/route_components.proto:RateLimit:Action:action_specifier.",
                                                                            "maxProperties": 1,
                                                                            "minProperties": 1,
                                                                            "properties": {
                                                                                "destination_cluster": {
                                                                                    "description": "Sets the label \"destination_cluster=«Envoy destination cluster name»\".",
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "enum": [
                                                                                                "destination_cluster"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "generic_key": {
                                                                                    "description": "Sets the label \"«key»=«value»\" (where by default «key» is \"generic_key\").",
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "description": "The default is \"generic_key\".",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "v2Shorthand": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "value"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "remote_address": {
                                                                                    "description": "Sets the label \"remote_address=«IP address of the client»\".",
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "enum": [
                                                                                                "remote_address"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "request_headers": {
                                                                                    "description": "If the «header_name» header is set, then set the label \"«key»=«Value of the «header_name» header»\"; otherwise skip applying this label group.",
                                                                                    "properties": {
                                                                                        "header_name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "key": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "omit_if_not_present": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "header_name",
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "source_cluster": {
                                                                                    "description": "Sets the label \"source_cluster=«Envoy source cluster name»\".",
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "enum": [
                                                                                                "source_cluster"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                    "maxProperties": 1,
                                                                    "minProperties": 1,
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                            "type": "object"
                                                        },
                                                        "load_balancer": {
                                                            "properties": {
                                                                "cookie": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "path": {
                                                                            "type": "string"
                                                                        },
                                                                        "ttl": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "header": {
                                                                    "type": "string"
                                                                },
                                                                "policy": {
                                                                    "enum": [
                                                                        "round_robin",
                                                                        "ring_hash",
                                                                        "maglev",
                                                                        "least_request"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "source_ip": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "required": [
                                                                "policy"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "method": {
                                                            "type": "string"
                                                        },
                                                        "method_regex": {
                                                            "type": "boolean"
                                                        },
                                                        "modules": {
                                                            "items": {
                                                                "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                                "type": "object",
                                                                "x-kubernetes-preserve-unknown-fields": true
                                                            },
                                                            "type": "array"
                                                        },
                                                        "outlier_detection": {
                                                            "type": "string"
                                                        },
                                                        "path_redirect": {
                                                            "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "type": "string"
                                                        },
                                                        "precedence": {
                                                            "type": "integer"
                                                        },
                                                        "prefix": {
                                                            "type": "string"
                                                        },
                                                        "prefix_exact": {
                                                            "type": "boolean"
                                                        },
                                                        "prefix_redirect": {
                                                            "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "type": "string"
                                                        },
                                                        "prefix_regex": {
                                                            "type": "boolean"
                                                        },
                                                        "priority": {
                                                            "type": "string"
                                                        },
                                                        "query_parameters": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "redirect_response_code": {
                                                            "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                            "enum": [
                                                                301,
                                                                302,
                                                                303,
                                                                307,
                                                                308
                                                            ],
                                                            "type": "integer"
                                                        },
                                                        "regex_headers": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_query_parameters": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_redirect": {
                                                            "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "properties": {
                                                                "pattern": {
                                                                    "type": "string"
                                                                },
                                                                "substitution": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_rewrite": {
                                                            "properties": {
                                                                "pattern": {
                                                                    "type": "string"
                                                                },
                                                                "substitution": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "remove_request_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "remove_response_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "resolver": {
                                                            "type": "string"
                                                        },
                                                        "respect_dns_ttl": {
                                                            "type": "boolean"
                                                        },
                                                        "retry_policy": {
                                                            "properties": {
                                                                "num_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "per_try_timeout": {
                                                                    "type": "string"
                                                                },
                                                                "retry_on": {
                                                                    "enum": [
                                                                        "5xx",
                                                                        "gateway-error",
                                                                        "connect-failure",
                                                                        "retriable-4xx",
                                                                        "refused-stream",
                                                                        "retriable-status-codes"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "rewrite": {
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "shadow": {
                                                            "type": "boolean"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        },
                                                        "timeout_ms": {
                                                            "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                            "type": "integer"
                                                        },
                                                        "tls": {
                                                            "type": "string"
                                                        },
                                                        "use_websocket": {
                                                            "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]` \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.DeprecatedUseWebsocket.",
                                                            "type": "boolean"
                                                        },
                                                        "v2BoolHeaders": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "v2BoolQueryParameters": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "v2ExplicitTLS": {
                                                            "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                            "properties": {
                                                                "serviceScheme": {
                                                                    "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                    "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                    "type": "string"
                                                                },
                                                                "tls": {
                                                                    "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                    "enum": [
                                                                        "",
                                                                        "null",
                                                                        "bool:true",
                                                                        "bool:false",
                                                                        "string"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "weight": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "prefix",
                                                        "service"
                                                    ],
                                                    "type": "object"
                                                },
                                                "status": {
                                                    "description": "MappingStatus defines the observed state of Mapping",
                                                    "properties": {
                                                        "reason": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "enum": [
                                                                "",
                                                                "Inactive",
                                                                "Running"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false,
                                    "subresources": {
                                        "status": {}
                                    }
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Mapping is the Schema for the mappings API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"mappings.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"Mapping\",\"listKind\":\"MappingList\",\"plural\":\"mappings\",\"singular\":\"mapping\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".spec.host\",\"name\":\"Source Host\",\"type\":\"string\"},{\"jsonPath\":\".spec.prefix\",\"name\":\"Source Prefix\",\"type\":\"string\"},{\"jsonPath\":\".spec.service\",\"name\":\"Dest Service\",\"type\":\"string\"},{\"jsonPath\":\".status.state\",\"name\":\"State\",\"type\":\"string\"},{\"jsonPath\":\".status.reason\",\"name\":\"Reason\",\"type\":\"string\"}],\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Mapping is the Schema for the mappings API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"MappingSpec defines the desired state of Mapping\",\"properties\":{\"add_linkerd_headers\":{\"type\":\"boolean\"},\"add_request_headers\":{\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"add_response_headers\":{\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"allow_upgrade\":{\"description\":\"A case-insensitive list of the non-HTTP protocols to allow \\\"upgrading\\\" to from HTTP via the \\\"Connection: upgrade\\\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \\n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \\n For example, if your upstream service supports WebSockets, you would write \\n    allow_upgrade:    - websocket \\n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \\n    allow_upgrade:    - spdy/3.1\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"auth_context_extensions\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"auto_host_rewrite\":{\"type\":\"boolean\"},\"bypass_auth\":{\"type\":\"boolean\"},\"bypass_error_response_overrides\":{\"description\":\"If true, bypasses any `error_response_overrides` set on the Ambassador module.\",\"type\":\"boolean\"},\"case_sensitive\":{\"type\":\"boolean\"},\"circuit_breakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"cluster_idle_timeout_ms\":{\"type\":\"integer\"},\"cluster_max_connection_lifetime_ms\":{\"type\":\"integer\"},\"cluster_tag\":{\"type\":\"string\"},\"connect_timeout_ms\":{\"type\":\"integer\"},\"cors\":{\"properties\":{\"credentials\":{\"type\":\"boolean\"},\"max_age\":{\"type\":\"string\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"dns_type\":{\"type\":\"string\"},\"docs\":{\"description\":\"DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)\",\"properties\":{\"display_name\":{\"type\":\"string\"},\"ignored\":{\"type\":\"boolean\"},\"path\":{\"type\":\"string\"},\"timeout_ms\":{\"type\":\"integer\"},\"url\":{\"type\":\"string\"}},\"type\":\"object\"},\"enable_ipv4\":{\"type\":\"boolean\"},\"enable_ipv6\":{\"type\":\"boolean\"},\"envoy_override\":{\"description\":\"UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"error_response_overrides\":{\"description\":\"Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.\",\"items\":{\"description\":\"A response rewrite for an HTTP error response\",\"properties\":{\"body\":{\"description\":\"The new response body\",\"properties\":{\"content_type\":{\"description\":\"The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.\",\"type\":\"string\"},\"json_format\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A JSON response with content-type: application/json. The values can contain format text like in text_format.\",\"type\":\"object\"},\"text_format\":{\"description\":\"A format string representing a text response body. Content-Type can be set using the `content_type` field below.\",\"type\":\"string\"},\"text_format_source\":{\"description\":\"A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.\",\"properties\":{\"filename\":{\"description\":\"The name of a file on the Ambassador pod that contains a format text string.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"on_status_code\":{\"description\":\"The status code to match on -- not a pointer because it's required.\",\"maximum\":599,\"minimum\":400,\"type\":\"integer\"}},\"required\":[\"body\",\"on_status_code\"],\"type\":\"object\"},\"minItems\":1,\"type\":\"array\"},\"grpc\":{\"type\":\"boolean\"},\"headers\":{\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"host\":{\"type\":\"string\"},\"host_redirect\":{\"type\":\"boolean\"},\"host_regex\":{\"type\":\"boolean\"},\"host_rewrite\":{\"type\":\"string\"},\"idle_timeout_ms\":{\"type\":\"integer\"},\"keepalive\":{\"properties\":{\"idle_time\":{\"type\":\"integer\"},\"interval\":{\"type\":\"integer\"},\"probes\":{\"type\":\"integer\"}},\"type\":\"object\"},\"labels\":{\"additionalProperties\":{\"description\":\"A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.\",\"items\":{\"description\":\"A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.\",\"maxProperties\":1,\"minProperties\":1,\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"type\":\"array\"},\"description\":\"A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.\",\"type\":\"object\"},\"load_balancer\":{\"properties\":{\"cookie\":{\"properties\":{\"name\":{\"type\":\"string\"},\"path\":{\"type\":\"string\"},\"ttl\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"header\":{\"type\":\"string\"},\"policy\":{\"enum\":[\"round_robin\",\"ring_hash\",\"maglev\",\"least_request\"],\"type\":\"string\"},\"source_ip\":{\"type\":\"boolean\"}},\"required\":[\"policy\"],\"type\":\"object\"},\"method\":{\"type\":\"string\"},\"method_regex\":{\"type\":\"boolean\"},\"modules\":{\"items\":{\"description\":\"UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"type\":\"array\"},\"outlier_detection\":{\"type\":\"string\"},\"path_redirect\":{\"description\":\"Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.\",\"type\":\"string\"},\"precedence\":{\"type\":\"integer\"},\"prefix\":{\"type\":\"string\"},\"prefix_exact\":{\"type\":\"boolean\"},\"prefix_redirect\":{\"description\":\"Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.\",\"type\":\"string\"},\"prefix_regex\":{\"type\":\"boolean\"},\"priority\":{\"type\":\"string\"},\"query_parameters\":{\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"redirect_response_code\":{\"description\":\"The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.\",\"enum\":[301,302,303,307,308],\"type\":\"integer\"},\"regex_headers\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"regex_query_parameters\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"regex_redirect\":{\"description\":\"Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.\",\"properties\":{\"pattern\":{\"type\":\"string\"},\"substitution\":{\"type\":\"string\"}},\"type\":\"object\"},\"regex_rewrite\":{\"properties\":{\"pattern\":{\"type\":\"string\"},\"substitution\":{\"type\":\"string\"}},\"type\":\"object\"},\"resolver\":{\"type\":\"string\"},\"respect_dns_ttl\":{\"type\":\"boolean\"},\"retry_policy\":{\"properties\":{\"num_retries\":{\"type\":\"integer\"},\"per_try_timeout\":{\"type\":\"string\"},\"retry_on\":{\"enum\":[\"5xx\",\"gateway-error\",\"connect-failure\",\"retriable-4xx\",\"refused-stream\",\"retriable-status-codes\"],\"type\":\"string\"}},\"type\":\"object\"},\"rewrite\":{\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"shadow\":{\"type\":\"boolean\"},\"timeout_ms\":{\"description\":\"The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.\",\"type\":\"integer\"},\"use_websocket\":{\"description\":\"use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\\\"websocket\\\"]`\",\"type\":\"boolean\"},\"v3StatsName\":{\"type\":\"string\"},\"weight\":{\"type\":\"integer\"}},\"required\":[\"prefix\",\"service\"],\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"status\":{\"description\":\"MappingStatus defines the observed state of Mapping\",\"properties\":{\"reason\":{\"type\":\"string\"},\"state\":{\"enum\":[\"\",\"Inactive\",\"Running\"],\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}},{\"additionalPrinterColumns\":[{\"jsonPath\":\".spec.host\",\"name\":\"Source Host\",\"type\":\"string\"},{\"jsonPath\":\".spec.prefix\",\"name\":\"Source Prefix\",\"type\":\"string\"},{\"jsonPath\":\".spec.service\",\"name\":\"Dest Service\",\"type\":\"string\"},{\"jsonPath\":\".status.state\",\"name\":\"State\",\"type\":\"string\"},{\"jsonPath\":\".status.reason\",\"name\":\"Reason\",\"type\":\"string\"}],\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Mapping is the Schema for the mappings API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"MappingSpec defines the desired state of Mapping\",\"properties\":{\"add_linkerd_headers\":{\"type\":\"boolean\"},\"add_request_headers\":{\"additionalProperties\":{\"properties\":{\"append\":{\"type\":\"boolean\"},\"v2Representation\":{\"enum\":[\"\",\"string\",\"null\"],\"type\":\"string\"},\"value\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"object\"},\"add_response_headers\":{\"additionalProperties\":{\"properties\":{\"append\":{\"type\":\"boolean\"},\"v2Representation\":{\"enum\":[\"\",\"string\",\"null\"],\"type\":\"string\"},\"value\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"object\"},\"allow_upgrade\":{\"description\":\"A case-insensitive list of the non-HTTP protocols to allow \\\"upgrading\\\" to from HTTP via the \\\"Connection: upgrade\\\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \\n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \\n For example, if your upstream service supports WebSockets, you would write \\n    allow_upgrade:    - websocket \\n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \\n    allow_upgrade:    - spdy/3.1\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"auth_context_extensions\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"auto_host_rewrite\":{\"type\":\"boolean\"},\"bypass_auth\":{\"type\":\"boolean\"},\"bypass_error_response_overrides\":{\"description\":\"If true, bypasses any `error_response_overrides` set on the Ambassador module.\",\"type\":\"boolean\"},\"case_sensitive\":{\"type\":\"boolean\"},\"circuit_breakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"cluster_idle_timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"cluster_max_connection_lifetime_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"cluster_tag\":{\"type\":\"string\"},\"connect_timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"cors\":{\"properties\":{\"credentials\":{\"type\":\"boolean\"},\"exposed_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"max_age\":{\"type\":\"string\"},\"methods\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"origins\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"v2CommaSeparatedOrigins\":{\"type\":\"boolean\"}},\"type\":\"object\"},\"dns_type\":{\"type\":\"string\"},\"docs\":{\"description\":\"DocsInfo provides some extra information about the docs for the Mapping. Docs is used by both the agent and the DevPortal.\",\"properties\":{\"display_name\":{\"type\":\"string\"},\"ignored\":{\"type\":\"boolean\"},\"path\":{\"type\":\"string\"},\"timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"url\":{\"type\":\"string\"}},\"type\":\"object\"},\"enable_ipv4\":{\"type\":\"boolean\"},\"enable_ipv6\":{\"type\":\"boolean\"},\"envoy_override\":{\"description\":\"UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"error_response_overrides\":{\"description\":\"Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.\",\"items\":{\"description\":\"A response rewrite for an HTTP error response\",\"properties\":{\"body\":{\"description\":\"The new response body\",\"properties\":{\"content_type\":{\"description\":\"The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.\",\"type\":\"string\"},\"json_format\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A JSON response with content-type: application/json. The values can contain format text like in text_format.\",\"type\":\"object\"},\"text_format\":{\"description\":\"A format string representing a text response body. Content-Type can be set using the `content_type` field below.\",\"type\":\"string\"},\"text_format_source\":{\"description\":\"A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.\",\"properties\":{\"filename\":{\"description\":\"The name of a file on the Ambassador pod that contains a format text string.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"on_status_code\":{\"description\":\"The status code to match on -- not a pointer because it's required.\",\"maximum\":599,\"minimum\":400,\"type\":\"integer\"}},\"required\":[\"body\",\"on_status_code\"],\"type\":\"object\"},\"minItems\":1,\"type\":\"array\"},\"grpc\":{\"type\":\"boolean\"},\"headers\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"host\":{\"description\":\"Exact match for the hostname of a request if HostRegex is false; regex match for the hostname if HostRegex is true. \\n Host specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Host will not associate with a Host that doesn't have a matching Hostname. \\n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used. \\n DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \\n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.\",\"type\":\"string\"},\"host_redirect\":{\"type\":\"boolean\"},\"host_regex\":{\"description\":\"DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \\n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.\",\"type\":\"boolean\"},\"host_rewrite\":{\"type\":\"string\"},\"hostname\":{\"description\":\"Hostname is a DNS glob specifying the hosts to which this Mapping applies. \\n Hostname specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Hostname will not associate with a Host that doesn't have a matching Hostname. \\n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used.\",\"type\":\"string\"},\"idle_timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"keepalive\":{\"properties\":{\"idle_time\":{\"type\":\"integer\"},\"interval\":{\"type\":\"integer\"},\"probes\":{\"type\":\"integer\"}},\"type\":\"object\"},\"labels\":{\"additionalProperties\":{\"description\":\"A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.\",\"items\":{\"additionalProperties\":{\"description\":\"A MappingLabelsArray is the value in the MappingLabelGroup: an array of label specifiers.\",\"items\":{\"description\":\"A MappingLabelSpecifier (finally!) defines a single label. \\n This mimics envoy/config/route/v3/route_components.proto:RateLimit:Action:action_specifier.\",\"maxProperties\":1,\"minProperties\":1,\"properties\":{\"destination_cluster\":{\"description\":\"Sets the label \\\"destination_cluster=«Envoy destination cluster name»\\\".\",\"properties\":{\"key\":{\"enum\":[\"destination_cluster\"],\"type\":\"string\"}},\"required\":[\"key\"],\"type\":\"object\"},\"generic_key\":{\"description\":\"Sets the label \\\"«key»=«value»\\\" (where by default «key» is \\\"generic_key\\\").\",\"properties\":{\"key\":{\"description\":\"The default is \\\"generic_key\\\".\",\"type\":\"string\"},\"v2Shorthand\":{\"type\":\"boolean\"},\"value\":{\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"remote_address\":{\"description\":\"Sets the label \\\"remote_address=«IP address of the client»\\\".\",\"properties\":{\"key\":{\"enum\":[\"remote_address\"],\"type\":\"string\"}},\"required\":[\"key\"],\"type\":\"object\"},\"request_headers\":{\"description\":\"If the «header_name» header is set, then set the label \\\"«key»=«Value of the «header_name» header»\\\"; otherwise skip applying this label group.\",\"properties\":{\"header_name\":{\"type\":\"string\"},\"key\":{\"type\":\"string\"},\"omit_if_not_present\":{\"type\":\"boolean\"}},\"required\":[\"header_name\",\"key\"],\"type\":\"object\"},\"source_cluster\":{\"description\":\"Sets the label \\\"source_cluster=«Envoy source cluster name»\\\".\",\"properties\":{\"key\":{\"enum\":[\"source_cluster\"],\"type\":\"string\"}},\"required\":[\"key\"],\"type\":\"object\"}},\"type\":\"object\"},\"type\":\"array\"},\"description\":\"A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.\",\"maxProperties\":1,\"minProperties\":1,\"type\":\"object\"},\"type\":\"array\"},\"description\":\"A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.\",\"type\":\"object\"},\"load_balancer\":{\"properties\":{\"cookie\":{\"properties\":{\"name\":{\"type\":\"string\"},\"path\":{\"type\":\"string\"},\"ttl\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"header\":{\"type\":\"string\"},\"policy\":{\"enum\":[\"round_robin\",\"ring_hash\",\"maglev\",\"least_request\"],\"type\":\"string\"},\"source_ip\":{\"type\":\"boolean\"}},\"required\":[\"policy\"],\"type\":\"object\"},\"method\":{\"type\":\"string\"},\"method_regex\":{\"type\":\"boolean\"},\"modules\":{\"items\":{\"description\":\"UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"type\":\"array\"},\"outlier_detection\":{\"type\":\"string\"},\"path_redirect\":{\"description\":\"Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.\",\"type\":\"string\"},\"precedence\":{\"type\":\"integer\"},\"prefix\":{\"type\":\"string\"},\"prefix_exact\":{\"type\":\"boolean\"},\"prefix_redirect\":{\"description\":\"Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.\",\"type\":\"string\"},\"prefix_regex\":{\"type\":\"boolean\"},\"priority\":{\"type\":\"string\"},\"query_parameters\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"redirect_response_code\":{\"description\":\"The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.\",\"enum\":[301,302,303,307,308],\"type\":\"integer\"},\"regex_headers\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"regex_query_parameters\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"regex_redirect\":{\"description\":\"Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.\",\"properties\":{\"pattern\":{\"type\":\"string\"},\"substitution\":{\"type\":\"string\"}},\"type\":\"object\"},\"regex_rewrite\":{\"properties\":{\"pattern\":{\"type\":\"string\"},\"substitution\":{\"type\":\"string\"}},\"type\":\"object\"},\"remove_request_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"remove_response_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"resolver\":{\"type\":\"string\"},\"respect_dns_ttl\":{\"type\":\"boolean\"},\"retry_policy\":{\"properties\":{\"num_retries\":{\"type\":\"integer\"},\"per_try_timeout\":{\"type\":\"string\"},\"retry_on\":{\"enum\":[\"5xx\",\"gateway-error\",\"connect-failure\",\"retriable-4xx\",\"refused-stream\",\"retriable-status-codes\"],\"type\":\"string\"}},\"type\":\"object\"},\"rewrite\":{\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"shadow\":{\"type\":\"boolean\"},\"stats_name\":{\"type\":\"string\"},\"timeout_ms\":{\"description\":\"The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.\",\"type\":\"integer\"},\"tls\":{\"type\":\"string\"},\"use_websocket\":{\"description\":\"use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\\\"websocket\\\"]` \\n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.DeprecatedUseWebsocket.\",\"type\":\"boolean\"},\"v2BoolHeaders\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"v2BoolQueryParameters\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"v2ExplicitTLS\":{\"description\":\"V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.\",\"properties\":{\"serviceScheme\":{\"description\":\"ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \\n Acceptable values are \\\"http://\\\" (case-insensitive), \\\"https://\\\" (case-insensitive), or \\\"\\\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.\",\"pattern\":\"^([hH][tT][tT][pP][sS]?://)?$\",\"type\":\"string\"},\"tls\":{\"description\":\"TLS controls whether and how to represent the \\\"tls\\\" field when its value could be implied by the \\\"service\\\" field.  In v2, there were a lot of different ways to spell an \\\"empty\\\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \\n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \\\"\\\"           | omit the field                        | defer to service (no TLSContext)   |  | \\\"null\\\"       | store an explicit \\\"null\\\" in the field | defer to service (no TLSContext)   |  | \\\"string\\\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \\\"bool:false\\\" | store a Boolean \\\"false\\\" in the field  | defer to service (no TLSContext)   |  | \\\"bool:true\\\"  | store a Boolean \\\"true\\\" in the field   | originate TLS (no TLSContext)      | \\n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \\\"bool:true\\\" if TLS is not to be originated), then this field is ignored.\",\"enum\":[\"\",\"null\",\"bool:true\",\"bool:false\",\"string\"],\"type\":\"string\"}},\"type\":\"object\"},\"weight\":{\"type\":\"integer\"}},\"required\":[\"prefix\",\"service\"],\"type\":\"object\"},\"status\":{\"description\":\"MappingStatus defines the observed state of Mapping\",\"properties\":{\"reason\":{\"type\":\"string\"},\"state\":{\"enum\":[\"\",\"Inactive\",\"Running\"],\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false,\"subresources\":{\"status\":{}}},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Mapping is the Schema for the mappings API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:31:41Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-06-20T23:31:41Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:31:41Z"
                            }
                        ],
                        "name": "mappings.getambassador.io",
                        "resourceVersion": "3449",
                        "uid": "1caa4354-e52b-4c60-9b3f-7278dca8d230"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Mapping",
                            "listKind": "MappingList",
                            "plural": "mappings",
                            "singular": "mapping"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.host",
                                        "name": "Source Host",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.prefix",
                                        "name": "Source Prefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.service",
                                        "name": "Dest Service",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.reason",
                                        "name": "Reason",
                                        "type": "string"
                                    }
                                ],
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "MappingSpec defines the desired state of Mapping",
                                                "properties": {
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "add_request_headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "add_response_headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "allow_upgrade": {
                                                        "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_context_extensions": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "auto_host_rewrite": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_auth": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_error_response_overrides": {
                                                        "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                        "type": "boolean"
                                                    },
                                                    "case_sensitive": {
                                                        "type": "boolean"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_idle_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cluster_max_connection_lifetime_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "connect_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cors": {
                                                        "properties": {
                                                            "credentials": {
                                                                "type": "boolean"
                                                            },
                                                            "max_age": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "dns_type": {
                                                        "type": "string"
                                                    },
                                                    "docs": {
                                                        "description": "DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)",
                                                        "properties": {
                                                            "display_name": {
                                                                "type": "string"
                                                            },
                                                            "ignored": {
                                                                "type": "boolean"
                                                            },
                                                            "path": {
                                                                "type": "string"
                                                            },
                                                            "timeout_ms": {
                                                                "type": "integer"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "envoy_override": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "error_response_overrides": {
                                                        "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                        "items": {
                                                            "description": "A response rewrite for an HTTP error response",
                                                            "properties": {
                                                                "body": {
                                                                    "description": "The new response body",
                                                                    "properties": {
                                                                        "content_type": {
                                                                            "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                            "type": "string"
                                                                        },
                                                                        "json_format": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                            "type": "object"
                                                                        },
                                                                        "text_format": {
                                                                            "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                            "type": "string"
                                                                        },
                                                                        "text_format_source": {
                                                                            "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                            "properties": {
                                                                                "filename": {
                                                                                    "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "on_status_code": {
                                                                    "description": "The status code to match on -- not a pointer because it's required.",
                                                                    "maximum": 599,
                                                                    "minimum": 400,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "body",
                                                                "on_status_code"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "host_redirect": {
                                                        "type": "boolean"
                                                    },
                                                    "host_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "host_rewrite": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "keepalive": {
                                                        "properties": {
                                                            "idle_time": {
                                                                "type": "integer"
                                                            },
                                                            "interval": {
                                                                "type": "integer"
                                                            },
                                                            "probes": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "additionalProperties": {
                                                            "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                            "items": {
                                                                "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                "maxProperties": 1,
                                                                "minProperties": 1,
                                                                "type": "object",
                                                                "x-kubernetes-preserve-unknown-fields": true
                                                            },
                                                            "type": "array"
                                                        },
                                                        "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                        "type": "object"
                                                    },
                                                    "load_balancer": {
                                                        "properties": {
                                                            "cookie": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "path": {
                                                                        "type": "string"
                                                                    },
                                                                    "ttl": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "header": {
                                                                "type": "string"
                                                            },
                                                            "policy": {
                                                                "enum": [
                                                                    "round_robin",
                                                                    "ring_hash",
                                                                    "maglev",
                                                                    "least_request"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "source_ip": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "policy"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "method": {
                                                        "type": "string"
                                                    },
                                                    "method_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "modules": {
                                                        "items": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "type": "array"
                                                    },
                                                    "outlier_detection": {
                                                        "type": "string"
                                                    },
                                                    "path_redirect": {
                                                        "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "precedence": {
                                                        "type": "integer"
                                                    },
                                                    "prefix": {
                                                        "type": "string"
                                                    },
                                                    "prefix_exact": {
                                                        "type": "boolean"
                                                    },
                                                    "prefix_redirect": {
                                                        "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "prefix_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "priority": {
                                                        "type": "string"
                                                    },
                                                    "query_parameters": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "redirect_response_code": {
                                                        "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                        "enum": [
                                                            301,
                                                            302,
                                                            303,
                                                            307,
                                                            308
                                                        ],
                                                        "type": "integer"
                                                    },
                                                    "regex_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_redirect": {
                                                        "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_rewrite": {
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "respect_dns_ttl": {
                                                        "type": "boolean"
                                                    },
                                                    "retry_policy": {
                                                        "properties": {
                                                            "num_retries": {
                                                                "type": "integer"
                                                            },
                                                            "per_try_timeout": {
                                                                "type": "string"
                                                            },
                                                            "retry_on": {
                                                                "enum": [
                                                                    "5xx",
                                                                    "gateway-error",
                                                                    "connect-failure",
                                                                    "retriable-4xx",
                                                                    "refused-stream",
                                                                    "retriable-status-codes"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "rewrite": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "shadow": {
                                                        "type": "boolean"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                        "type": "integer"
                                                    },
                                                    "use_websocket": {
                                                        "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]`",
                                                        "type": "boolean"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "prefix",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "status": {
                                                "description": "MappingStatus defines the observed state of Mapping",
                                                "properties": {
                                                    "reason": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "enum": [
                                                            "",
                                                            "Inactive",
                                                            "Running"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.host",
                                        "name": "Source Host",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.prefix",
                                        "name": "Source Prefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.service",
                                        "name": "Dest Service",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.reason",
                                        "name": "Reason",
                                        "type": "string"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "MappingSpec defines the desired state of Mapping",
                                                "properties": {
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "add_request_headers": {
                                                        "additionalProperties": {
                                                            "properties": {
                                                                "append": {
                                                                    "type": "boolean"
                                                                },
                                                                "v2Representation": {
                                                                    "enum": [
                                                                        "",
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_response_headers": {
                                                        "additionalProperties": {
                                                            "properties": {
                                                                "append": {
                                                                    "type": "boolean"
                                                                },
                                                                "v2Representation": {
                                                                    "enum": [
                                                                        "",
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "allow_upgrade": {
                                                        "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_context_extensions": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "auto_host_rewrite": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_auth": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_error_response_overrides": {
                                                        "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                        "type": "boolean"
                                                    },
                                                    "case_sensitive": {
                                                        "type": "boolean"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_idle_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cluster_max_connection_lifetime_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "connect_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cors": {
                                                        "properties": {
                                                            "credentials": {
                                                                "type": "boolean"
                                                            },
                                                            "exposed_headers": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "headers": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_age": {
                                                                "type": "string"
                                                            },
                                                            "methods": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "origins": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "v2CommaSeparatedOrigins": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "dns_type": {
                                                        "type": "string"
                                                    },
                                                    "docs": {
                                                        "description": "DocsInfo provides some extra information about the docs for the Mapping. Docs is used by both the agent and the DevPortal.",
                                                        "properties": {
                                                            "display_name": {
                                                                "type": "string"
                                                            },
                                                            "ignored": {
                                                                "type": "boolean"
                                                            },
                                                            "path": {
                                                                "type": "string"
                                                            },
                                                            "timeout_ms": {
                                                                "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                                "type": "integer"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "envoy_override": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "error_response_overrides": {
                                                        "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                        "items": {
                                                            "description": "A response rewrite for an HTTP error response",
                                                            "properties": {
                                                                "body": {
                                                                    "description": "The new response body",
                                                                    "properties": {
                                                                        "content_type": {
                                                                            "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                            "type": "string"
                                                                        },
                                                                        "json_format": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                            "type": "object"
                                                                        },
                                                                        "text_format": {
                                                                            "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                            "type": "string"
                                                                        },
                                                                        "text_format_source": {
                                                                            "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                            "properties": {
                                                                                "filename": {
                                                                                    "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "on_status_code": {
                                                                    "description": "The status code to match on -- not a pointer because it's required.",
                                                                    "maximum": 599,
                                                                    "minimum": 400,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "body",
                                                                "on_status_code"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "host": {
                                                        "description": "Exact match for the hostname of a request if HostRegex is false; regex match for the hostname if HostRegex is true. \n Host specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Host will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used. \n DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                        "type": "string"
                                                    },
                                                    "host_redirect": {
                                                        "type": "boolean"
                                                    },
                                                    "host_regex": {
                                                        "description": "DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                        "type": "boolean"
                                                    },
                                                    "host_rewrite": {
                                                        "type": "string"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname is a DNS glob specifying the hosts to which this Mapping applies. \n Hostname specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Hostname will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used.",
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "keepalive": {
                                                        "properties": {
                                                            "idle_time": {
                                                                "type": "integer"
                                                            },
                                                            "interval": {
                                                                "type": "integer"
                                                            },
                                                            "probes": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "additionalProperties": {
                                                            "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                            "items": {
                                                                "additionalProperties": {
                                                                    "description": "A MappingLabelsArray is the value in the MappingLabelGroup: an array of label specifiers.",
                                                                    "items": {
                                                                        "description": "A MappingLabelSpecifier (finally!) defines a single label. \n This mimics envoy/config/route/v3/route_components.proto:RateLimit:Action:action_specifier.",
                                                                        "maxProperties": 1,
                                                                        "minProperties": 1,
                                                                        "properties": {
                                                                            "destination_cluster": {
                                                                                "description": "Sets the label \"destination_cluster=«Envoy destination cluster name»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "destination_cluster"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "generic_key": {
                                                                                "description": "Sets the label \"«key»=«value»\" (where by default «key» is \"generic_key\").",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "The default is \"generic_key\".",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "v2Shorthand": {
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "value": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "value"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "remote_address": {
                                                                                "description": "Sets the label \"remote_address=«IP address of the client»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "remote_address"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "request_headers": {
                                                                                "description": "If the «header_name» header is set, then set the label \"«key»=«Value of the «header_name» header»\"; otherwise skip applying this label group.",
                                                                                "properties": {
                                                                                    "header_name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "omit_if_not_present": {
                                                                                        "type": "boolean"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "header_name",
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "source_cluster": {
                                                                                "description": "Sets the label \"source_cluster=«Envoy source cluster name»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "source_cluster"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                "maxProperties": 1,
                                                                "minProperties": 1,
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                        "type": "object"
                                                    },
                                                    "load_balancer": {
                                                        "properties": {
                                                            "cookie": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "path": {
                                                                        "type": "string"
                                                                    },
                                                                    "ttl": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "header": {
                                                                "type": "string"
                                                            },
                                                            "policy": {
                                                                "enum": [
                                                                    "round_robin",
                                                                    "ring_hash",
                                                                    "maglev",
                                                                    "least_request"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "source_ip": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "policy"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "method": {
                                                        "type": "string"
                                                    },
                                                    "method_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "modules": {
                                                        "items": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "type": "array"
                                                    },
                                                    "outlier_detection": {
                                                        "type": "string"
                                                    },
                                                    "path_redirect": {
                                                        "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "precedence": {
                                                        "type": "integer"
                                                    },
                                                    "prefix": {
                                                        "type": "string"
                                                    },
                                                    "prefix_exact": {
                                                        "type": "boolean"
                                                    },
                                                    "prefix_redirect": {
                                                        "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "prefix_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "priority": {
                                                        "type": "string"
                                                    },
                                                    "query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "redirect_response_code": {
                                                        "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                        "enum": [
                                                            301,
                                                            302,
                                                            303,
                                                            307,
                                                            308
                                                        ],
                                                        "type": "integer"
                                                    },
                                                    "regex_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_redirect": {
                                                        "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_rewrite": {
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "remove_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "remove_response_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "respect_dns_ttl": {
                                                        "type": "boolean"
                                                    },
                                                    "retry_policy": {
                                                        "properties": {
                                                            "num_retries": {
                                                                "type": "integer"
                                                            },
                                                            "per_try_timeout": {
                                                                "type": "string"
                                                            },
                                                            "retry_on": {
                                                                "enum": [
                                                                    "5xx",
                                                                    "gateway-error",
                                                                    "connect-failure",
                                                                    "retriable-4xx",
                                                                    "refused-stream",
                                                                    "retriable-status-codes"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "rewrite": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "shadow": {
                                                        "type": "boolean"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "use_websocket": {
                                                        "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]` \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.DeprecatedUseWebsocket.",
                                                        "type": "boolean"
                                                    },
                                                    "v2BoolHeaders": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v2BoolQueryParameters": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "prefix",
                                                    "service"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "MappingStatus defines the observed state of Mapping",
                                                "properties": {
                                                    "reason": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "enum": [
                                                            "",
                                                            "Inactive",
                                                            "Running"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Mapping",
                            "listKind": "MappingList",
                            "plural": "mappings",
                            "singular": "mapping"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-06-20T23:31:41Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-06-20T23:31:41Z",
                                "message": "the initial names have been accepted",
                                "reason": "Installing",
                                "status": "False",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-9-eks-cluster-provider::7c9538d7-38b6-4c3c-a32d-8a2bf8772da6",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::fluent-bit-role",
                "custom": true,
                "id": "fluent-bit-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "fluent-bit-role"
                    },
                    "rules": [
                        {
                            "nonResourceURLs": [
                                "/metrics"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "namespaces",
                                "pods",
                                "pods/logs"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "fluent-bit-role"
                        },
                        "rules": [
                            {
                                "nonResourceURLs": [
                                    "/metrics"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces",
                                    "pods",
                                    "pods/logs"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"fluent-bit-role\"},\"rules\":[{\"nonResourceURLs\":[\"/metrics\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"namespaces\",\"pods\",\"pods/logs\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:24:36Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:36Z"
                            }
                        ],
                        "name": "fluent-bit-role",
                        "resourceVersion": "1218",
                        "uid": "92e724d5-550f-4831-96a4-1e88a8f59a1d"
                    },
                    "rules": [
                        {
                            "nonResourceURLs": [
                                "/metrics"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "namespaces",
                                "pods",
                                "pods/logs"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:core/v1:ConfigMap::cluster-info-configmap"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::23764612-7965-42f4-9ad1-ff50b151cf26",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ServiceAccount::amazon-cloudwatch/fluent-bit",
                "custom": true,
                "id": "amazon-cloudwatch/fluent-bit",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "fluent-bit",
                        "namespace": "amazon-cloudwatch"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "fluent-bit",
                            "namespace": "amazon-cloudwatch"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"fluent-bit\",\"namespace\":\"amazon-cloudwatch\"}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:24:36Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"fluent-bit-token-bcltv\"}": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:36Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:36Z"
                            }
                        ],
                        "name": "fluent-bit",
                        "namespace": "amazon-cloudwatch",
                        "resourceVersion": "1213",
                        "uid": "50f15d17-8993-4c01-adac-485b07b0dcb1"
                    },
                    "secrets": [
                        {
                            "name": "fluent-bit-token-bcltv"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:core/v1:ConfigMap::cluster-info-configmap"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::23764612-7965-42f4-9ad1-ff50b151cf26",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ConfigMap::amazon-cloudwatch/fluent-bit-config",
                "custom": true,
                "id": "amazon-cloudwatch/fluent-bit-config",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "application-log.conf": "[INPUT]\n    Name                tail\n    Tag                 application.*\n    Exclude_Path        /var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*, /var/log/containers/milvus*, /var/log/containers/linkerd*, /var/log/containers/otel-collector*, /var/log/containers/emissary*,\n    Path                /var/log/containers/*.log\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_container.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 application.*\n    Path                /var/log/containers/cloudwatch-agent*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  cwagent_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_cwagent.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    name                  multiline\n    match                 *\n    multiline.key_content log\n    multiline.parser      go\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               application.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/application\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n    log_key             log\n    log_format          json\n",
                        "dataplane-log.conf": "[INPUT]\n    Name                systemd\n    Tag                 dataplane.systemd.*\n    Systemd_Filter      _SYSTEMD_UNIT=docker.service\n    Systemd_Filter      _SYSTEMD_UNIT=kubelet.service\n    DB                  /var/fluent-bit/state/systemd.db\n    Path                /var/log/journal\n    Read_From_Tail      ${READ_FROM_TAIL}\n\n[INPUT]\n    Name                tail\n    Tag                 dataplane.tail.*\n    Path                /var/log/containers/aws-node*, /var/log/containers/kube-proxy*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_dataplane_tail.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                modify\n    Match               dataplane.systemd.*\n    Rename              _HOSTNAME                   hostname\n    Rename              _SYSTEMD_UNIT               systemd_unit\n    Rename              MESSAGE                     message\n    Remove_regex        ^((?!hostname|systemd_unit|message).)*$\n\n[FILTER]\n    Name                aws\n    Match               dataplane.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               dataplane.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/dataplane\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                        "fluent-bit.conf": "[SERVICE]\n    Flush                     5\n    Log_Level                 info\n    Daemon                    off\n    Parsers_File              parsers.conf\n    HTTP_Server               ${HTTP_SERVER}\n    HTTP_Listen               0.0.0.0\n    HTTP_Port                 ${HTTP_PORT}\n    storage.path              /var/fluent-bit/state/flb-storage/\n    storage.sync              normal\n    storage.checksum          off\n    storage.backlog.mem_limit 5M\n    \n@INCLUDE application-log.conf\n@INCLUDE dataplane-log.conf\n@INCLUDE host-log.conf\n",
                        "host-log.conf": "[INPUT]\n    Name                tail\n    Tag                 host.dmesg\n    Path                /var/log/dmesg\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_dmesg.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.messages\n    Path                /var/log/messages\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_messages.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.secure\n    Path                /var/log/secure\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_secure.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                aws\n    Match               host.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               host.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/host\n    log_stream_prefix   ${HOST_NAME}.\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                        "parsers.conf": "[PARSER]\n    Name                docker\n    Format              json\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                syslog\n    Format              regex\n    Regex               ^(?\u003ctime\u003e[^ ]* {1,2}[^ ]* [^ ]*) (?\u003chost\u003e[^ ]*) (?\u003cident\u003e[a-zA-Z0-9_\\/\\.\\-]*)(?:\\[(?\u003cpid\u003e[0-9]+)\\])?(?:[^\\:]*\\:)? *(?\u003cmessage\u003e.*)$\n    Time_Key            time\n    Time_Format         %b %d %H:%M:%S\n\n[PARSER]\n    Name                container_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\S(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                cwagent_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\d{4}[\\/-]\\d{1,2}[\\/-]\\d{1,2}[ T]\\d{2}:\\d{2}:\\d{2}(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "k8s-app": "fluent-bit"
                        },
                        "name": "fluent-bit-config",
                        "namespace": "amazon-cloudwatch"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "application-log.conf": "[INPUT]\n    Name                tail\n    Tag                 application.*\n    Exclude_Path        /var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*, /var/log/containers/milvus*, /var/log/containers/linkerd*, /var/log/containers/otel-collector*, /var/log/containers/emissary*,\n    Path                /var/log/containers/*.log\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_container.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 application.*\n    Path                /var/log/containers/cloudwatch-agent*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  cwagent_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_cwagent.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    name                  multiline\n    match                 *\n    multiline.key_content log\n    multiline.parser      go\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               application.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/application\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n    log_key             log\n    log_format          json\n",
                            "dataplane-log.conf": "[INPUT]\n    Name                systemd\n    Tag                 dataplane.systemd.*\n    Systemd_Filter      _SYSTEMD_UNIT=docker.service\n    Systemd_Filter      _SYSTEMD_UNIT=kubelet.service\n    DB                  /var/fluent-bit/state/systemd.db\n    Path                /var/log/journal\n    Read_From_Tail      ${READ_FROM_TAIL}\n\n[INPUT]\n    Name                tail\n    Tag                 dataplane.tail.*\n    Path                /var/log/containers/aws-node*, /var/log/containers/kube-proxy*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_dataplane_tail.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                modify\n    Match               dataplane.systemd.*\n    Rename              _HOSTNAME                   hostname\n    Rename              _SYSTEMD_UNIT               systemd_unit\n    Rename              MESSAGE                     message\n    Remove_regex        ^((?!hostname|systemd_unit|message).)*$\n\n[FILTER]\n    Name                aws\n    Match               dataplane.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               dataplane.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/dataplane\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                            "fluent-bit.conf": "[SERVICE]\n    Flush                     5\n    Log_Level                 info\n    Daemon                    off\n    Parsers_File              parsers.conf\n    HTTP_Server               ${HTTP_SERVER}\n    HTTP_Listen               0.0.0.0\n    HTTP_Port                 ${HTTP_PORT}\n    storage.path              /var/fluent-bit/state/flb-storage/\n    storage.sync              normal\n    storage.checksum          off\n    storage.backlog.mem_limit 5M\n    \n@INCLUDE application-log.conf\n@INCLUDE dataplane-log.conf\n@INCLUDE host-log.conf\n",
                            "host-log.conf": "[INPUT]\n    Name                tail\n    Tag                 host.dmesg\n    Path                /var/log/dmesg\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_dmesg.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.messages\n    Path                /var/log/messages\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_messages.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.secure\n    Path                /var/log/secure\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_secure.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                aws\n    Match               host.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               host.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/host\n    log_stream_prefix   ${HOST_NAME}.\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                            "parsers.conf": "[PARSER]\n    Name                docker\n    Format              json\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                syslog\n    Format              regex\n    Regex               ^(?\u003ctime\u003e[^ ]* {1,2}[^ ]* [^ ]*) (?\u003chost\u003e[^ ]*) (?\u003cident\u003e[a-zA-Z0-9_\\/\\.\\-]*)(?:\\[(?\u003cpid\u003e[0-9]+)\\])?(?:[^\\:]*\\:)? *(?\u003cmessage\u003e.*)$\n    Time_Key            time\n    Time_Format         %b %d %H:%M:%S\n\n[PARSER]\n    Name                container_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\S(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                cwagent_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\d{4}[\\/-]\\d{1,2}[\\/-]\\d{1,2}[ T]\\d{2}:\\d{2}:\\d{2}(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "k8s-app": "fluent-bit"
                            },
                            "name": "fluent-bit-config",
                            "namespace": "amazon-cloudwatch"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "application-log.conf": "[INPUT]\n    Name                tail\n    Tag                 application.*\n    Exclude_Path        /var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*, /var/log/containers/milvus*, /var/log/containers/linkerd*, /var/log/containers/otel-collector*, /var/log/containers/emissary*,\n    Path                /var/log/containers/*.log\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_container.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 application.*\n    Path                /var/log/containers/cloudwatch-agent*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  cwagent_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_cwagent.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    name                  multiline\n    match                 *\n    multiline.key_content log\n    multiline.parser      go\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               application.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/application\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n    log_key             log\n    log_format          json\n",
                        "dataplane-log.conf": "[INPUT]\n    Name                systemd\n    Tag                 dataplane.systemd.*\n    Systemd_Filter      _SYSTEMD_UNIT=docker.service\n    Systemd_Filter      _SYSTEMD_UNIT=kubelet.service\n    DB                  /var/fluent-bit/state/systemd.db\n    Path                /var/log/journal\n    Read_From_Tail      ${READ_FROM_TAIL}\n\n[INPUT]\n    Name                tail\n    Tag                 dataplane.tail.*\n    Path                /var/log/containers/aws-node*, /var/log/containers/kube-proxy*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_dataplane_tail.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                modify\n    Match               dataplane.systemd.*\n    Rename              _HOSTNAME                   hostname\n    Rename              _SYSTEMD_UNIT               systemd_unit\n    Rename              MESSAGE                     message\n    Remove_regex        ^((?!hostname|systemd_unit|message).)*$\n\n[FILTER]\n    Name                aws\n    Match               dataplane.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               dataplane.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/dataplane\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                        "fluent-bit.conf": "[SERVICE]\n    Flush                     5\n    Log_Level                 info\n    Daemon                    off\n    Parsers_File              parsers.conf\n    HTTP_Server               ${HTTP_SERVER}\n    HTTP_Listen               0.0.0.0\n    HTTP_Port                 ${HTTP_PORT}\n    storage.path              /var/fluent-bit/state/flb-storage/\n    storage.sync              normal\n    storage.checksum          off\n    storage.backlog.mem_limit 5M\n    \n@INCLUDE application-log.conf\n@INCLUDE dataplane-log.conf\n@INCLUDE host-log.conf\n",
                        "host-log.conf": "[INPUT]\n    Name                tail\n    Tag                 host.dmesg\n    Path                /var/log/dmesg\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_dmesg.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.messages\n    Path                /var/log/messages\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_messages.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.secure\n    Path                /var/log/secure\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_secure.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                aws\n    Match               host.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               host.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/host\n    log_stream_prefix   ${HOST_NAME}.\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                        "parsers.conf": "[PARSER]\n    Name                docker\n    Format              json\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                syslog\n    Format              regex\n    Regex               ^(?\u003ctime\u003e[^ ]* {1,2}[^ ]* [^ ]*) (?\u003chost\u003e[^ ]*) (?\u003cident\u003e[a-zA-Z0-9_\\/\\.\\-]*)(?:\\[(?\u003cpid\u003e[0-9]+)\\])?(?:[^\\:]*\\:)? *(?\u003cmessage\u003e.*)$\n    Time_Key            time\n    Time_Format         %b %d %H:%M:%S\n\n[PARSER]\n    Name                container_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\S(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                cwagent_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\d{4}[\\/-]\\d{1,2}[\\/-]\\d{1,2}[ T]\\d{2}:\\d{2}:\\d{2}(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"application-log.conf\":\"[INPUT]\\n    Name                tail\\n    Tag                 application.*\\n    Exclude_Path        /var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*, /var/log/containers/milvus*, /var/log/containers/linkerd*, /var/log/containers/otel-collector*, /var/log/containers/emissary*,\\n    Path                /var/log/containers/*.log\\n    Docker_Mode         On\\n    Docker_Mode_Flush   5\\n    Docker_Mode_Parser  container_firstline\\n    Parser              docker\\n    DB                  /var/fluent-bit/state/flb_container.db\\n    Mem_Buf_Limit       50MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Rotate_Wait         30\\n    storage.type        filesystem\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[INPUT]\\n    Name                tail\\n    Tag                 application.*\\n    Path                /var/log/containers/cloudwatch-agent*\\n    Docker_Mode         On\\n    Docker_Mode_Flush   5\\n    Docker_Mode_Parser  cwagent_firstline\\n    Parser              docker\\n    DB                  /var/fluent-bit/state/flb_cwagent.db\\n    Mem_Buf_Limit       5MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[FILTER]\\n    name                  multiline\\n    match                 *\\n    multiline.key_content log\\n    multiline.parser      go\\n\\n[OUTPUT]\\n    Name                cloudwatch_logs\\n    Match               application.*\\n    region              ${AWS_REGION}\\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/application\\n    log_stream_prefix   from-fluent-bit-\\n    auto_create_group   true\\n    extra_user_agent    container-insights\\n    log_retention_days  5\\n    log_key             log\\n    log_format          json\\n\",\"dataplane-log.conf\":\"[INPUT]\\n    Name                systemd\\n    Tag                 dataplane.systemd.*\\n    Systemd_Filter      _SYSTEMD_UNIT=docker.service\\n    Systemd_Filter      _SYSTEMD_UNIT=kubelet.service\\n    DB                  /var/fluent-bit/state/systemd.db\\n    Path                /var/log/journal\\n    Read_From_Tail      ${READ_FROM_TAIL}\\n\\n[INPUT]\\n    Name                tail\\n    Tag                 dataplane.tail.*\\n    Path                /var/log/containers/aws-node*, /var/log/containers/kube-proxy*\\n    Docker_Mode         On\\n    Docker_Mode_Flush   5\\n    Docker_Mode_Parser  container_firstline\\n    Parser              docker\\n    DB                  /var/fluent-bit/state/flb_dataplane_tail.db\\n    Mem_Buf_Limit       50MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Rotate_Wait         30\\n    storage.type        filesystem\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[FILTER]\\n    Name                modify\\n    Match               dataplane.systemd.*\\n    Rename              _HOSTNAME                   hostname\\n    Rename              _SYSTEMD_UNIT               systemd_unit\\n    Rename              MESSAGE                     message\\n    Remove_regex        ^((?!hostname|systemd_unit|message).)*$\\n\\n[FILTER]\\n    Name                aws\\n    Match               dataplane.*\\n    imds_version        v1\\n\\n[OUTPUT]\\n    Name                cloudwatch_logs\\n    Match               dataplane.*\\n    region              ${AWS_REGION}\\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/dataplane\\n    log_stream_prefix   from-fluent-bit-\\n    auto_create_group   true\\n    extra_user_agent    container-insights\\n    log_retention_days  5\\n\",\"fluent-bit.conf\":\"[SERVICE]\\n    Flush                     5\\n    Log_Level                 info\\n    Daemon                    off\\n    Parsers_File              parsers.conf\\n    HTTP_Server               ${HTTP_SERVER}\\n    HTTP_Listen               0.0.0.0\\n    HTTP_Port                 ${HTTP_PORT}\\n    storage.path              /var/fluent-bit/state/flb-storage/\\n    storage.sync              normal\\n    storage.checksum          off\\n    storage.backlog.mem_limit 5M\\n    \\n@INCLUDE application-log.conf\\n@INCLUDE dataplane-log.conf\\n@INCLUDE host-log.conf\\n\",\"host-log.conf\":\"[INPUT]\\n    Name                tail\\n    Tag                 host.dmesg\\n    Path                /var/log/dmesg\\n    Parser              syslog\\n    DB                  /var/fluent-bit/state/flb_dmesg.db\\n    Mem_Buf_Limit       5MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[INPUT]\\n    Name                tail\\n    Tag                 host.messages\\n    Path                /var/log/messages\\n    Parser              syslog\\n    DB                  /var/fluent-bit/state/flb_messages.db\\n    Mem_Buf_Limit       5MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[INPUT]\\n    Name                tail\\n    Tag                 host.secure\\n    Path                /var/log/secure\\n    Parser              syslog\\n    DB                  /var/fluent-bit/state/flb_secure.db\\n    Mem_Buf_Limit       5MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[FILTER]\\n    Name                aws\\n    Match               host.*\\n    imds_version        v1\\n\\n[OUTPUT]\\n    Name                cloudwatch_logs\\n    Match               host.*\\n    region              ${AWS_REGION}\\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/host\\n    log_stream_prefix   ${HOST_NAME}.\\n    auto_create_group   true\\n    extra_user_agent    container-insights\\n    log_retention_days  5\\n\",\"parsers.conf\":\"[PARSER]\\n    Name                docker\\n    Format              json\\n    Time_Key            time\\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\\n\\n[PARSER]\\n    Name                syslog\\n    Format              regex\\n    Regex               ^(?\\u003ctime\\u003e[^ ]* {1,2}[^ ]* [^ ]*) (?\\u003chost\\u003e[^ ]*) (?\\u003cident\\u003e[a-zA-Z0-9_\\\\/\\\\.\\\\-]*)(?:\\\\[(?\\u003cpid\\u003e[0-9]+)\\\\])?(?:[^\\\\:]*\\\\:)? *(?\\u003cmessage\\u003e.*)$\\n    Time_Key            time\\n    Time_Format         %b %d %H:%M:%S\\n\\n[PARSER]\\n    Name                container_firstline\\n    Format              regex\\n    Regex               (?\\u003clog\\u003e(?\\u003c=\\\"log\\\":\\\")\\\\S(?!\\\\.).*?)(?\\u003c!\\\\\\\\)\\\".*(?\\u003cstream\\u003e(?\\u003c=\\\"stream\\\":\\\").*?)\\\".*(?\\u003ctime\\u003e\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\w*).*(?=})\\n    Time_Key            time\\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\\n\\n[PARSER]\\n    Name                cwagent_firstline\\n    Format              regex\\n    Regex               (?\\u003clog\\u003e(?\\u003c=\\\"log\\\":\\\")\\\\d{4}[\\\\/-]\\\\d{1,2}[\\\\/-]\\\\d{1,2}[ T]\\\\d{2}:\\\\d{2}:\\\\d{2}(?!\\\\.).*?)(?\\u003c!\\\\\\\\)\\\".*(?\\u003cstream\\u003e(?\\u003c=\\\"stream\\\":\\\").*?)\\\".*(?\\u003ctime\\u003e\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\w*).*(?=})\\n    Time_Key            time\\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"k8s-app\":\"fluent-bit\"},\"name\":\"fluent-bit-config\",\"namespace\":\"amazon-cloudwatch\"}}\n"
                        },
                        "creationTimestamp": "2022-07-14T00:20:04Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "k8s-app": "fluent-bit"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:application-log.conf": {},
                                        "f:dataplane-log.conf": {},
                                        "f:fluent-bit.conf": {},
                                        "f:host-log.conf": {},
                                        "f:parsers.conf": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:k8s-app": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-07-14T00:20:04Z"
                            }
                        ],
                        "name": "fluent-bit-config",
                        "namespace": "amazon-cloudwatch",
                        "resourceVersion": "8424272",
                        "uid": "cdbcb8e5-c980-4616-8527-bdc699268727"
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:core/v1:ConfigMap::cluster-info-configmap"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::23764612-7965-42f4-9ad1-ff50b151cf26",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::fluent-bit-role-binding",
                "custom": true,
                "id": "fluent-bit-role-binding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "fluent-bit-role-binding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "fluent-bit-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "fluent-bit",
                            "namespace": "amazon-cloudwatch"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "fluent-bit-role-binding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "fluent-bit-role"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "fluent-bit",
                                "namespace": "amazon-cloudwatch"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"fluent-bit-role-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"fluent-bit-role\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"fluent-bit\",\"namespace\":\"amazon-cloudwatch\"}]}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:24:36Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:36Z"
                            }
                        ],
                        "name": "fluent-bit-role-binding",
                        "resourceVersion": "1219",
                        "uid": "f2817ac0-3146-428a-b4b3-855769604bcc"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "fluent-bit-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "fluent-bit",
                            "namespace": "amazon-cloudwatch"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:core/v1:ConfigMap::cluster-info-configmap"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::23764612-7965-42f4-9ad1-ff50b151cf26",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apps/v1:DaemonSet::amazon-cloudwatch/fluent-bit",
                "custom": true,
                "id": "amazon-cloudwatch/fluent-bit",
                "type": "kubernetes:apps/v1:DaemonSet",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "DaemonSet",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "k8s-app": "fluent-bit",
                            "kubernetes.io/cluster-service": "true",
                            "version": "v1"
                        },
                        "name": "fluent-bit",
                        "namespace": "amazon-cloudwatch"
                    },
                    "spec": {
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "fluent-bit"
                            }
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "k8s-app": "fluent-bit",
                                    "kubernetes.io/cluster-service": "true",
                                    "version": "v1"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "AWS_REGION",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "logs.region",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "CLUSTER_NAME",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "cluster.name",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PLANE_ID",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "plane.id",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HTTP_SERVER",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "http.server",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HTTP_PORT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "http.port",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "READ_FROM_HEAD",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "read.head",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "READ_FROM_TAIL",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "read.tail",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "CI_VERSION",
                                                "value": "k8s/1.3.8"
                                            }
                                        ],
                                        "image": "amazon/aws-for-fluent-bit:2.22.0",
                                        "imagePullPolicy": "Always",
                                        "name": "fluent-bit",
                                        "resources": {
                                            "limits": {
                                                "memory": "200Mi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "100Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/fluent-bit/state",
                                                "name": "fluentbitstate"
                                            },
                                            {
                                                "mountPath": "/var/log",
                                                "name": "varlog",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/lib/docker/containers",
                                                "name": "varlibdockercontainers",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/fluent-bit/etc/",
                                                "name": "fluent-bit-config"
                                            },
                                            {
                                                "mountPath": "/run/log/journal",
                                                "name": "runlogjournal",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/log/dmesg",
                                                "name": "dmesg",
                                                "readOnly": true
                                            }
                                        ]
                                    }
                                ],
                                "serviceAccountName": "fluent-bit",
                                "terminationGracePeriodSeconds": 10,
                                "tolerations": [
                                    {
                                        "effect": "NoSchedule",
                                        "key": "node-role.kubernetes.io/master",
                                        "operator": "Exists"
                                    },
                                    {
                                        "effect": "NoExecute",
                                        "operator": "Exists"
                                    },
                                    {
                                        "effect": "NoSchedule",
                                        "operator": "Exists"
                                    }
                                ],
                                "volumes": [
                                    {
                                        "hostPath": {
                                            "path": "/var/fluent-bit/state"
                                        },
                                        "name": "fluentbitstate"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/log"
                                        },
                                        "name": "varlog"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/lib/docker/containers"
                                        },
                                        "name": "varlibdockercontainers"
                                    },
                                    {
                                        "configMap": {
                                            "name": "fluent-bit-config"
                                        },
                                        "name": "fluent-bit-config"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/run/log/journal"
                                        },
                                        "name": "runlogjournal"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/log/dmesg"
                                        },
                                        "name": "dmesg"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "k8s-app": "fluent-bit",
                                "kubernetes.io/cluster-service": "true",
                                "version": "v1"
                            },
                            "name": "fluent-bit",
                            "namespace": "amazon-cloudwatch"
                        },
                        "spec": {
                            "selector": {
                                "matchLabels": {
                                    "k8s-app": "fluent-bit"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "k8s-app": "fluent-bit",
                                        "kubernetes.io/cluster-service": "true",
                                        "version": "v1"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "env": [
                                                {
                                                    "name": "AWS_REGION",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "logs.region",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "CLUSTER_NAME",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "cluster.name",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "PLANE_ID",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "plane.id",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "HTTP_SERVER",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "http.server",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "HTTP_PORT",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "http.port",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "READ_FROM_HEAD",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "read.head",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "READ_FROM_TAIL",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "read.tail",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "HOST_NAME",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.nodeName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "CI_VERSION",
                                                    "value": "k8s/1.3.8"
                                                }
                                            ],
                                            "image": "amazon/aws-for-fluent-bit:2.22.0",
                                            "imagePullPolicy": "Always",
                                            "name": "fluent-bit",
                                            "resources": {
                                                "limits": {
                                                    "memory": "200Mi"
                                                },
                                                "requests": {
                                                    "cpu": "500m",
                                                    "memory": "100Mi"
                                                }
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/fluent-bit/state",
                                                    "name": "fluentbitstate"
                                                },
                                                {
                                                    "mountPath": "/var/log",
                                                    "name": "varlog",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/var/lib/docker/containers",
                                                    "name": "varlibdockercontainers",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/fluent-bit/etc/",
                                                    "name": "fluent-bit-config"
                                                },
                                                {
                                                    "mountPath": "/run/log/journal",
                                                    "name": "runlogjournal",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/var/log/dmesg",
                                                    "name": "dmesg",
                                                    "readOnly": true
                                                }
                                            ]
                                        }
                                    ],
                                    "serviceAccountName": "fluent-bit",
                                    "terminationGracePeriodSeconds": 10,
                                    "tolerations": [
                                        {
                                            "effect": "NoSchedule",
                                            "key": "node-role.kubernetes.io/master",
                                            "operator": "Exists"
                                        },
                                        {
                                            "effect": "NoExecute",
                                            "operator": "Exists"
                                        },
                                        {
                                            "effect": "NoSchedule",
                                            "operator": "Exists"
                                        }
                                    ],
                                    "volumes": [
                                        {
                                            "hostPath": {
                                                "path": "/var/fluent-bit/state"
                                            },
                                            "name": "fluentbitstate"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/log"
                                            },
                                            "name": "varlog"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/lib/docker/containers"
                                            },
                                            "name": "varlibdockercontainers"
                                        },
                                        {
                                            "configMap": {
                                                "name": "fluent-bit-config"
                                            },
                                            "name": "fluent-bit-config"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/run/log/journal"
                                            },
                                            "name": "runlogjournal"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/log/dmesg"
                                            },
                                            "name": "dmesg"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "DaemonSet",
                    "metadata": {
                        "annotations": {
                            "deprecated.daemonset.template.generation": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"k8s-app\":\"fluent-bit\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v1\"},\"name\":\"fluent-bit\",\"namespace\":\"amazon-cloudwatch\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"fluent-bit\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"fluent-bit\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v1\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"AWS_REGION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"logs.region\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"CLUSTER_NAME\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"cluster.name\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"PLANE_ID\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"plane.id\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"HTTP_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"http.server\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"HTTP_PORT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"http.port\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"READ_FROM_HEAD\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"read.head\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"READ_FROM_TAIL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"read.tail\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"HOST_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"CI_VERSION\",\"value\":\"k8s/1.3.8\"}],\"image\":\"amazon/aws-for-fluent-bit:2.22.0\",\"imagePullPolicy\":\"Always\",\"name\":\"fluent-bit\",\"resources\":{\"limits\":{\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/var/fluent-bit/state\",\"name\":\"fluentbitstate\"},{\"mountPath\":\"/var/log\",\"name\":\"varlog\",\"readOnly\":true},{\"mountPath\":\"/var/lib/docker/containers\",\"name\":\"varlibdockercontainers\",\"readOnly\":true},{\"mountPath\":\"/fluent-bit/etc/\",\"name\":\"fluent-bit-config\"},{\"mountPath\":\"/run/log/journal\",\"name\":\"runlogjournal\",\"readOnly\":true},{\"mountPath\":\"/var/log/dmesg\",\"name\":\"dmesg\",\"readOnly\":true}]}],\"serviceAccountName\":\"fluent-bit\",\"terminationGracePeriodSeconds\":10,\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/fluent-bit/state\"},\"name\":\"fluentbitstate\"},{\"hostPath\":{\"path\":\"/var/log\"},\"name\":\"varlog\"},{\"hostPath\":{\"path\":\"/var/lib/docker/containers\"},\"name\":\"varlibdockercontainers\"},{\"configMap\":{\"name\":\"fluent-bit-config\"},\"name\":\"fluent-bit-config\"},{\"hostPath\":{\"path\":\"/run/log/journal\"},\"name\":\"runlogjournal\"},{\"hostPath\":{\"path\":\"/var/log/dmesg\"},\"name\":\"dmesg\"}]}}}}\n"
                        },
                        "creationTimestamp": "2022-06-20T23:24:37Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "k8s-app": "fluent-bit",
                            "kubernetes.io/cluster-service": "true",
                            "version": "v1"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:observedGeneration": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-06-20T23:24:37Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:deprecated.daemonset.template.generation": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:k8s-app": {},
                                            "f:kubernetes.io/cluster-service": {},
                                            "f:version": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    ".": {},
                                                    "f:k8s-app": {},
                                                    "f:kubernetes.io/cluster-service": {},
                                                    "f:version": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"fluent-bit\"}": {
                                                        ".": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"AWS_REGION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"CI_VERSION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"CLUSTER_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"HOST_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"HTTP_PORT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"HTTP_SERVER\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"PLANE_ID\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"READ_FROM_HEAD\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"READ_FROM_TAIL\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/fluent-bit/etc/\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/run/log/journal\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/fluent-bit/state\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/lib/docker/containers\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/log\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/log/dmesg\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:tolerations": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"dmesg\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"fluent-bit-config\"}": {
                                                        ".": {},
                                                        "f:configMap": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:name": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"fluentbitstate\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"runlogjournal\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"varlibdockercontainers\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"varlog\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:updateStrategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-20T23:24:37Z"
                            }
                        ],
                        "name": "fluent-bit",
                        "namespace": "amazon-cloudwatch",
                        "resourceVersion": "1222",
                        "uid": "17832d94-bce6-4cc4-88bc-76037469d211"
                    },
                    "spec": {
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "fluent-bit"
                            }
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "k8s-app": "fluent-bit",
                                    "kubernetes.io/cluster-service": "true",
                                    "version": "v1"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "AWS_REGION",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "logs.region",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "CLUSTER_NAME",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "cluster.name",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PLANE_ID",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "plane.id",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HTTP_SERVER",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "http.server",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HTTP_PORT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "http.port",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "READ_FROM_HEAD",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "read.head",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "READ_FROM_TAIL",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "read.tail",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "CI_VERSION",
                                                "value": "k8s/1.3.8"
                                            }
                                        ],
                                        "image": "amazon/aws-for-fluent-bit:2.22.0",
                                        "imagePullPolicy": "Always",
                                        "name": "fluent-bit",
                                        "resources": {
                                            "limits": {
                                                "memory": "200Mi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "100Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/fluent-bit/state",
                                                "name": "fluentbitstate"
                                            },
                                            {
                                                "mountPath": "/var/log",
                                                "name": "varlog",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/lib/docker/containers",
                                                "name": "varlibdockercontainers",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/fluent-bit/etc/",
                                                "name": "fluent-bit-config"
                                            },
                                            {
                                                "mountPath": "/run/log/journal",
                                                "name": "runlogjournal",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/log/dmesg",
                                                "name": "dmesg",
                                                "readOnly": true
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "fluent-bit",
                                "serviceAccountName": "fluent-bit",
                                "terminationGracePeriodSeconds": 10,
                                "tolerations": [
                                    {
                                        "effect": "NoSchedule",
                                        "key": "node-role.kubernetes.io/master",
                                        "operator": "Exists"
                                    },
                                    {
                                        "effect": "NoExecute",
                                        "operator": "Exists"
                                    },
                                    {
                                        "effect": "NoSchedule",
                                        "operator": "Exists"
                                    }
                                ],
                                "volumes": [
                                    {
                                        "hostPath": {
                                            "path": "/var/fluent-bit/state",
                                            "type": ""
                                        },
                                        "name": "fluentbitstate"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/log",
                                            "type": ""
                                        },
                                        "name": "varlog"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/lib/docker/containers",
                                            "type": ""
                                        },
                                        "name": "varlibdockercontainers"
                                    },
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "name": "fluent-bit-config"
                                        },
                                        "name": "fluent-bit-config"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/run/log/journal",
                                            "type": ""
                                        },
                                        "name": "runlogjournal"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/log/dmesg",
                                            "type": ""
                                        },
                                        "name": "dmesg"
                                    }
                                ]
                            }
                        },
                        "updateStrategy": {
                            "rollingUpdate": {
                                "maxSurge": 0,
                                "maxUnavailable": 1
                            },
                            "type": "RollingUpdate"
                        }
                    },
                    "status": {
                        "currentNumberScheduled": 0,
                        "desiredNumberScheduled": 0,
                        "numberMisscheduled": 0,
                        "numberReady": 0,
                        "observedGeneration": 1
                    }
                },
                "parent": "urn:pulumi:plane-9::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "dependencies": [
                    "urn:pulumi:plane-9::launchpad::kubernetes:core/v1:ConfigMap::cluster-info-configmap"
                ],
                "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::23764612-7965-42f4-9ad1-ff50b151cf26",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            }
        ],
        "pending_operations": [
            {
                "resource": {
                    "urn": "urn:pulumi:plane-9::launchpad::aws:msk/cluster:Cluster::msk-cluster",
                    "custom": true,
                    "type": "aws:msk/cluster:Cluster",
                    "inputs": {
                        "__defaults": [],
                        "brokerNodeGroupInfo": {
                            "__defaults": [
                                "azDistribution"
                            ],
                            "azDistribution": "DEFAULT",
                            "clientSubnets": [
                                "subnet-009d063028d2fd06f",
                                "subnet-02dad9a9948396f14"
                            ],
                            "ebsVolumeSize": 64,
                            "instanceType": "kafka.t3.small",
                            "securityGroups": [
                                "sg-0071525aa9b12294d"
                            ]
                        },
                        "clientAuthentication": {
                            "__defaults": [],
                            "sasl": {
                                "__defaults": [],
                                "scram": true
                            }
                        },
                        "clusterName": "p-9-kafka-cluster",
                        "configurationInfo": {
                            "__defaults": [],
                            "arn": "arn:aws:kafka:us-west-2:447769723736:configuration/p-9-cluster-config-3/7da76de3-fbe8-4a51-a94a-8fe973d4478c-10",
                            "revision": 1
                        },
                        "enhancedMonitoring": "DEFAULT",
                        "kafkaVersion": "3.2.0",
                        "loggingInfo": {
                            "__defaults": [],
                            "brokerLogs": {
                                "__defaults": [],
                                "cloudwatchLogs": {
                                    "__defaults": [],
                                    "enabled": true,
                                    "logGroup": "/aws/msk/p-9-brokers"
                                }
                            }
                        },
                        "numberOfBrokerNodes": 2,
                        "openMonitoring": {
                            "__defaults": [],
                            "prometheus": {
                                "__defaults": [],
                                "jmxExporter": {
                                    "__defaults": [],
                                    "enabledInBroker": true
                                },
                                "nodeExporter": {
                                    "__defaults": [],
                                    "enabledInBroker": true
                                }
                            }
                        }
                    },
                    "parent": "urn:pulumi:plane-9::launchpad::pulumi:pulumi:Stack::launchpad-plane-9",
                    "dependencies": [
                        "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                        "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::msk-sg",
                        "urn:pulumi:plane-9::launchpad::aws:msk/configuration:Configuration::msk-cluster-config-3",
                        "urn:pulumi:plane-9::launchpad::aws:cloudwatch/logGroup:LogGroup::msk-log-group"
                    ],
                    "provider": "urn:pulumi:plane-9::launchpad::pulumi:providers:aws::msk-aws-provider::1d9a65d6-5edf-4963-8c93-de1207911f37",
                    "propertyDependencies": {
                        "brokerNodeGroupInfo": [
                            "urn:pulumi:plane-9::launchpad::aws:ec2/vpc:Vpc::p-9-vpc",
                            "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-public-subnet",
                            "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-public-subnet",
                            "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-primary-private-subnet",
                            "urn:pulumi:plane-9::launchpad::aws:ec2/subnet:Subnet::p-9-secondary-private-subnet",
                            "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-private-nacl",
                            "urn:pulumi:plane-9::launchpad::aws:ec2/networkAcl:NetworkAcl::p-9-public-nacl",
                            "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-private-rt",
                            "urn:pulumi:plane-9::launchpad::aws:ec2/routeTable:RouteTable::p-9-public-rt",
                            "urn:pulumi:plane-9::launchpad::aws:ec2/securityGroup:SecurityGroup::msk-sg"
                        ],
                        "clientAuthentication": null,
                        "clusterName": null,
                        "configurationInfo": [
                            "urn:pulumi:plane-9::launchpad::aws:msk/configuration:Configuration::msk-cluster-config-3"
                        ],
                        "enhancedMonitoring": null,
                        "kafkaVersion": null,
                        "loggingInfo": [
                            "urn:pulumi:plane-9::launchpad::aws:cloudwatch/logGroup:LogGroup::msk-log-group"
                        ],
                        "numberOfBrokerNodes": null,
                        "openMonitoring": null
                    }
                },
                "type": "creating"
            }
        ]
    }
}
