{
    "version": 3,
    "deployment": {
        "manifest": {
            "time": "2022-09-16T11:32:55.930672-07:00",
            "magic": "c57d2cc6e4ddc1ad908bcf42d81d39304d5e92a1de5a6e1d5a5c485a70ff807b",
            "version": "v3.39.1"
        },
        "secrets_providers": {
            "type": "service",
            "state": {
                "url": "https://api.pulumi.com",
                "owner": "fennel",
                "project": "launchpad",
                "stack": "tier-101"
            }
        },
        "resources": [
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "custom": false,
                "type": "pulumi:pulumi:Stack",
                "outputs": {
                    "ingress": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABALnOVzPgokvNiAupAX+JpHWtANuI3bLHNXvFTxgpfglAASiflMi9GCe3aBubD8RloXh5NRBfLkXCMSymk2rPxot4h8Oa388pQ2vCj5o3r3mY11Dgn+8wLVIYmUnmNquq4ovCs2msymTvL8cS96Z8KAnnukjGdOMBk1VvHYNScvh73vaGisiAhZed2I8pQym0Kwls97/sOn33nZz8K+lpT6XI2ph4gXdinRzlvgKBho8RVXmTMfcOMwiTzNohPV+K6Kzf7/LxLX33Sih5yvXSH3gcdbJpR0T6USVIk9jCPrRC/xU+XQxeOJ9kWaorReB9+VY7YKA97sg8QNhCWhLNjSqccuLPM6Oos1Hm2pJCkiCrpeAjU156NXGeYJdm/fa3NqxWGsRkadwmdKiSq5guBRPuYuUYQBFSfU7JYISBpCzZ/odxn/lLnt0XFNtv6nHjlqw+nEm06PQoMyd2WjnVaNxdePuNBBmWQgkArtIvBpByLPDBbkP5ADmPae4SJ9ojJeQZN2R7we4yy39hdSeh95+4FnFM5VPhbQ8Oqc111b6ffM53Fbln8r4tdOH8ZV+Tb3Il/7etDmZq4/bQQnwFDRnYwWwIsvvhDZ7b93tHuXyT68BZcFJkUjIGbzwk/+bhbmItAnF27ybGU+teFD0WjoEq9KJUL2MhZLTamVdMJaT3kpyyghvfT+MC/9iPRXPnzMzUxFtPKuUOWg2YF9wnAl9EZCvPrvcOPg0c7fjPq0RcnyGTl0ph/Lq4Yr3pCoNBgmGowOslAYugoWQHvqg9Nnlw4rk5VNcfaLXl1yEIDqHSE2WMtZx6V3aNXEom7Vx/F2ZL/avjFR9kheJYDmg3LPyOm0ZhSDDQi2aw6QQDcnB9N6BhCPaO16tPaRmCSHYwu3U02kqOGPGSlzNFPn/QPngTnwtPEITpVwBOiSl7QSbEexF9LE1f0AZvkFZaWHKeOrxcpuqZ63yxWd5elezKpbYYLSewC/Fa/BwXvgzIkAPs8PaVKZ5UZQkJ9aB2ib5wvBkHX1QYHhAOUkHa4rlBP2eIDr1C+Yu+xQnXvbBnRfXcEJdR+e9/hVFgm/ilG6+3Lc5uVMu8fs1NQ2ONph8SNtaER0BDtxsCiQQzQZ3fbdyKUIV1n4RL/0uLLDKJGrJq/7TOD9ui28NtNRyfY/CYPR7mAF5NiGlx0DZ68IF6cwY6VbY5mn4BrICZRTdb59WB98xNRpa5jf6dcZj9K1xi73/RR5x14lF2pz3PlxFohOqnrcRKnJ7ALWhaKyP6o5ZfU8s75MZfWhteB4eAyLN3ARnMGwTqbemBw8kjfHG4Vn+OERUSW9S8jCwT6A82r5sY7dpQsi3a0c+j7yAKXkg/r4wkpj0cckzd3GAXIiaZnfWqZHAFlqoJd9ug9sehmUdfWO3QOauQZQYKj+b9tr3/eDzpZP0hAngHj58Qxgfxd3Dq3wPneqSNvb4TQQMxS+ZT4m2es9mErhdbUbx3Xadlc8TOGTO3x3+w4DPVScjRrJfekbPTvHh8nAwjOQteXN3cFR3pFhzQV9/TBfkRD3zF1FfLnBnpQOks+8sH0vGgdLU1gpIJB+8m6s9iQRFTUm8c1ivfnKf8gteTLq9zogRLsGYbYqJza278kVC5uGUdFGmQc+iteL9snw9SpVbSa3uGX86igkK+G3MX/wMQ9XiaDuWz0MmD6jY1yqIQJ6VuV+IDhMsw5uURR/sqMfKn2PePV7yCUQj7OTpNv5rQuHTownYIVoV/o9vrNkTt5beiLv09VmBI4vML0NVjhW0cx41zkvk64n36gO4WrglbV6Amdxq/28lQWMiWIH03yGMX0Jux5R5R5sKaU3Md4OzbSzhWp7ewtEkUcKRifWeeTUXybC+SNuWSXoMISZF2pLjI5DVr+pvDxDvJiE8G2Sf1kVPgBaZzt6dLdj56pm6U4JQGpeThjsM/snk54fGjfgbyd98NZc/OejSZZLWWVFEu/Dahj/qNottSn1akwkPbxjgNxmDd46L0mQ1i2E9vj0Ehv3R+A5RK7pRIeAtVFSQxwGAyQnLirRluuJth9eNoh617cmnIIUhO0zS2is7vwyHRHMcPaDvoHx6+KRInzslwH6OcFCFUmgEgoGiQUiZGG50tXJMngoQw0B+krtZuKsxXFF16Xl5rb60HXdaaHR0BWj1TVQZ9E+hyjnqTHHtdpILtMqJOLEsLYqT7p2yTvxw3DwSfE3beBrRnNW5MaKx1h0FnLomuNoYIqtuFQEAtouI5SVSJ0cF7C6XNwzYgu9OnRcVmyBqJDYtF/Ro8TEfqRwBmhoJ/T+RDggWMJqyVr1jVrGqHDdn+uIn4uVL17DjKxyEmCvVEB9clEHk+rncd9mxe5h1C9r4bfXROYM1YfN7Y3LpRGNWeSqxAHAAajlrysF2JYbLZzct5n0rX0lBCvsnNXCNq07x5nq1s25lLlh6YMnD7eJ8AtOSKs5EFO/4N7pj4rKfF/9ITUDn+teNQe+RAGoPMmqLq76geI3RDLDSJB5OSZZpZHeE4vpEjD8MZWYDr5oyamAbgL4sC4W901/UcDImiAOClVEctoRr9wKl+pN66IBzyXgYV+LmzxqbPrpipimv4GXj0DIcl9k+oIjDMU2hmGHBSImX588Nxdj5mG5fBTJC7cxlOPGjr5f3ubv7wUhBNnOtDtyqm+85395GiwyUJiSlMask2X0Q5IMf9LDJ07xOkeRtLXaKjvb1ReDZNAHEOiS220DEuepN6CAjVEKJK4yNzOHqCqB/I1q33XjKkUVGK2gEQOrTnkAiUBcD/24kGCcqcJE2e47mhAi8ivohG8qY7MOKxrPv04gnpWA+3qXBRxb05/J9zARAzbjNpk4j1krnbbU/+OJ49dDPCZndJa6jOEhj8d8b0CiesKW6LOFDkoW4UUqb1cWHeLHYqwlO4TSWJUxXUU6CyucjKY6QtsTKqoAHiyWtcgDvlOjjYuQXnnve0Yh0/9Kmd7e0po2U/OMxBusnqGGj7pr5LVHOybN/CSlwOPFaxcIdMKepc2fb+8Tl82/Tsys8X2g/EsvtOQW2kIclS7dXEbstGuDqBd7SWQCOr5TjiE3mjkotfLkh9NQlBUg1XfOIdFmFwbSjWICbvySy/Qg5B/KNyA5Rmjlwt/m7O9jP/ift6gPvYRMPKi7De6kiqm2OKd8UiB4DfUPZwMrHwHuz4vFkqW+VMzu+L+8NWLVxAQlLogggR+xAlIHYiyktJiiLn/YFlcfH4jMrmiTiDGTQP5JrMTVTj2+UJc40GJ7eGyYUdRSiVY2gHJM2MMKOFYhR2pIPsk7bp3TF+ZIkW8Ylbfl/1NocPMUI871xtS5k9RC4wlOt6wdNKasBidPJ+69V70gUaDwHNYnejCfqmkstbmISUh5WYNqNW/DqfwR+GzJ9830+mXWMIVsvnAVGHPfMHL76923XCkc4T3UWBQ1LLflWZJk1miqnxx0IZg7qnGj4eK1vBR1JYN0eWoaDTQH1JRG/jomid7SguAJDHzSqVNmjpF7vxGWHL5vYJfRb7d9rkOZHQo88c0rAL28iwfOOhju0Y5sw00df05deQrEXtfak/X+C7QgF1ldRM1/w5cKc5+9ET8xM2V6h9MMBhrrE4zQvo3FmK4Yi+A+2PBQc103uCIm1duqk+EnIKkBCl+Sd9FUl7Agvg1aK9Izf9UZqg8WabkqlZiBTa+ustSLvD40E/DUsTmTqRjXCCx9uL+tj+1fTR2YeioAYKY83aI3a08sd+Cq8x4ThBeQ3JTARYxhlI3wMy3AjCtAp8iL6XOj3GPeEqImdHluFIexTOfRMD389Qz1qjQT20hIGtelhuv5lr8/yXsS84ojXPRvMB6HstetMpBZqG9voimLzTg9ejcZcNgR2vmx1i2aSItmfovi7N8J05422hsrcYr6sOaOtK5h7HDt2UPvWfqD4M3Mq2rc1InVf3aTK0veeu6XfvsUdSHvrwP2JZrgMI5t6d0mM9Efi335dvgpUnDX5PdRP0ty4aNRsJAj8/lvhURnqqHK4I+RBwI5/I6rI+oXSfYbtgWEEVT8cjBeUGywPNbOsCHVyRbbaT6OSlns5eszymySNBQSgy62cLZnMKoakO7pnZAtqavavM8QDVYqvfUzERNg/K+8NfAMak+C5wVVREBK3eQb+dKYcMsbHreDpeuE0Jdd9/pkk/mG3y1M1o67MdPxfOZj5v+5P5bHwioVjzw6n/GcnIopx9iE+6NRsvcE98W4/1NWPRvpdmUyiCaE9XyKUf3A0YGSf4bbKEwOgFl1LyDy5G9KfBpqIDcW+AeMzRWSmhszed59OVYwG8ajc/0fiHrvdpW7Id36bSvm+xfLmAzOAkU9Ur9bBcx8B8DLQkyxCh90VurmnHIbB+/bO27mnqG7Pzbisp2gTJgLRI/3f70qbNQ0zxVfB01rmSOtM9cGl8XRTfaO+unBoikQAJYj6OTCrsAL91nwlU/KfKNSJLAexwQdSmT0Gklii3RD0eKg90jWAAHA1iZd3FR4+YNdXNxq7KrBwXco2r3ojPZ5bn2IccRpVq7IOgIJLf+Ac/GBQi/SUyAMS/gmjnmlkqprUpeS1GRaDp638K6Eo7DeDJ+lPj38073FqtL/yDOZ3eki3SbvhWsABSLVTVuj2POlPRvII+gjVQ8PUpciO3zgwoftaCBM7EGtrdEDIHje7ouX/Sdgy/uAfCcQwoz4jzFv4WadhSVDkXw9EOGvKu3oh1S7SfIcEIR4KeO0h+gui01rVbt3qqwdlE5V2G1IxhDoT6EJUdoF6xkJkTkdhcxC2ZWxtGeh+SDawz9XCjkUG0A1X4XpDTaz76P8hHUjaYtqxINzVtv64hEDALMyX2KYMwqFSPJrcIjzGASD4U7KfIrIjOPCTfpjustnEJT1WmijAhO/JeinRGkCN46/jEE0LLrwNvahhiRL2XmM1YmPBXfK6JGnzdGpEsxFk7zJ/n3AxWO5rnBEHnFsBiNZWBQlLx4ptLLxzFfwQ6WzFOUPTd6EDdADZcWKdnGbuXzFMUluvWMwvZdjqqjoyW2WLT+qYDqRBjgzhQ4Ah+oEzWS4iHl1DRrp3J1v5NSCSLRVwGWUczN4IhS6Diyx5Hs5NEaxtzTh+kt1t+UAuRMV2rDdEHjcnddQpiIu7OxsCKvj//pCV+hCR23vYE0/3/jW+YtnAc3DHV++kQJNSiTVVwh8TyrSuLE5BUQ6DU+Sqn0Zor3fiA7TqSTjA8GKR0iW6MN+qjQKNPqtBoLcq7dIobuQ4EC/kLs44rvJvML79V1N/3f6Qk4QwMcBUQVo8l9IoolIdn1pDaJCqqhjNnk41YKvzauGbPKbVodCbt/+U+ZCPV5ndAm+Si5J0v9mKTaAKtAsS3Medijq5xUakn6Wak5FVCrxRAvxZTvkP731FAOX87kf4R1fagTrw+HndU8ipPU5+ITL07Z1Iq5o0kj1G1uBW5Xet38r5yBhLqhVRabg7gerWGbA3KQdOagkiT5kN+WoUTB1QRGo2N8d0oIXIt3aybO8wZx9ex+uA9Sq/o/29hleb4kKw+Gt/Kl27nKeAeLr09xP0hz3BMzV2rD/Evkl6dZ1O+srTN3eLhVSREgk+mhge+a1ObkoXV0UaAwHkKhuRV9E4GG0YGFnb1/o6mM421t6wQ7/t7sR1/xqPn2HCxGAnA1ifpNeRW1vLiQNf+QlxLCoawnlXy9NfRefIFBWtlc3F/MiSMkdufE5p8NHmeXhqQf/upO4xrJCW4om6QrUadn432zQWlOrCaczWx1DA0ktmvoTq5HefP4LHK4d3wVXUEeIP8XbxcOIKFkJbksLXzcywh/Nc7dZc5o463PVEl3bW50Qlb6HULk/6eQ9R6Qkq0UowdglxI5jcj5vydpCSnLLZQdkfNFmOkEUiz7oEZfSmBJlV9walmfWjtc3bZqlpjY0OpJcAklobd5sbAjN2Lw33HdcH4MtMWBFK5pOl4zwgXQNoAVCCw5buc5iax3gMTqhNRcjHhqg3cRtBeDks7oyHMAn1vA8LZpr3XKJ4k5gr/Li7V3jchf1NEF/iUbkyZzfhjJMY6QRy2w0C9+byMywUlS0246qwV3CqCL4K5BWMrzlrU+ZbWg+ga6B/npNvCQrqnG3ENP7+fxaoqu0I51VNo+mjVoNKOBxiUDAOi5wGnmw6WMKzuClhilH9M6Suf1dpt5wYUkBTgM9CjDjkTBnpOLDpfSO3EL0t6Wx4OiQroTaXpUyofvaDICZQJOsjfcHUFwN7NiGbobQL23Fgcyfy4uQoTqQmwLNFfU0FR69lXUIds5WKAlfmrwaW1BFCu5h+E7pg53eyVKeJCu3M0MzsQQQmH+lkJijS4dGCn6r339iDlQvX5/9d0rBEtwNonTC9zDRNeUySBKRFRgv5OFRk2td0fsZjSU4QdV2SXfwlASiJ8pIew8wswOsRU7ccp81LoIFWnQ5YzPCQtkOShDWZ80wm5xE3eiRQKbJ3ScMTW+bNWeCpgSMkXvMw/8B7wXr5RwXD2KKHGtJYKHtBPFIF8d8LrKJvFHXQZNpa4qXKPRasq2n1bjnqXD0Mo+F/8l6VlmekarlVzkeODZYiFlm0W5RXH5lpRKkqD+pSt45bcfkmZPPhKVv4VXkr4OMU/AyP3nOXwAru98hqV3MMt+TDyopHDquB58B7fZd7s4twLFW0l2rAbtPyd0TSDQyP1rl3LLBgCbDX6idQJtAOwFCH3dVJE9AWrQNW9gOthVjsSr+Pkq4aGDJijCRnXinrO6dP/3kw6I+11vh2dWaNaf2zsLO8lr3XN5zwhdUSqBqnN9x11KjYBWyPdiuZkFZGOWPCXWy7TyAH18Qv8eMJ5mMmVrUD+77Yo1gZPXEfn8Y39n/ZWrvPKrGnYXwwccHV77Pw7uG0EHvBUcbS7peqil2o/WKMhjlo3Cs25XvfGOTRM/hC+X6XczAO4T03IGX7R+W5MdYdnqYwsTqUFFFG2+OB1PIa0OuuIzC8Yz+CLVM+i0cPNLjTlSh1/Q2ViwSV1GpOi1A42Y+p9pKyYojVqwfN7lTq0Si1pBsEib0ICt3X0fblvR+AW9Sp+8+eie4h0Ml5/c4HkYZvzs+nHnxGu65HqdHC3jwaxQ9TK57c1KlAHejLmgsooVDxDgGtsNUWVwSU2By0syHqmsmfeqWQlDNBaWhmhx4KiXwoA6SoPJIoGhsMm20VoHgJE/NNwXkhVos3tDjG6TsjfoupHmyI7Q7E+iwNI5fJ8cA0sovaP6Z6p1mO6cTaTLe7Qc1qqA6lhBky6cFixB2W+YUkAX+bjbfQpWdiDwmnu9zaHO2poGilwNj2ZI3YSmEDeKWsZLFswaJsiAQnXQTJ2yq09bMakfRAV1iSZkqYLoZgghc4g+cE5OsIQLF8klsFHDCDqrnR3UbzDmfEg+883jetTmgIkp99vpzNqBbEstegIZY6UnHfDITHcfaEOCtyuuesIAhl0BHlRDDxJYSG+xO0fpqTKmYyKHiFCBHPSRRKmmo/sPoKwg0BVV6S2nuvncvFb+hqv6uzktBETI+V99v+9eaazFN9kuuXeUu+9Vr8cWN6A7dwHP6kksTgUYLaA0rf/xZEIsjRCRDhwq//5IKqs4bEMsGGvGEIvXjx1n6qN/HH24QJqdSRqSkSLnhVHmMN5yVJFh9mYcHFzk8s+PkIsaIvIh7i6zYOVi9nidrscXSBlddHADqCEHEpEjZdyCaLdzViFUwiNRFvjShWiUDIEpYnK0e5lBBuhA9b+ktFnkZKEx39yNzFbry6tPdzL1VCIkmO3tY4Tv9bP3RH4udVct9UnR4PqrlKe47zW34p8dGyx9OcljFzKbI0zP4ygF+wz0AeaeDM/OdATDdzMj6dM+qXoa98y7zhpjql9J1MvXRoM7H1cUGTBZeiiY+ZJLslT3+Uc0uvbn69eD6DbUSTNcxompLAugN05ztdGc5rBjmxjX0dgQmYQ7/tsxi3rd6s+SK0JO6Opx+jLZjeilxHMdtoPVe2eiFUp0Jh+WbNZUBLujC7+dFKCM48Y0kO5mxWRXUpuP5pfBKBkKnR7iEfNa5NjejWDC3hIfLQP7fG+ftnLWSNoS0ItEk7KDZNYSyigDl48dFpMqeNmg/GlNvvey1lQdphKJJtYYNs0beQoxoeyK1ZC9gi1Aiy3CdFBkFu6qRrecnAdtegJQdVDNQnLDaf//waLXTtHgCZPWm6PABOtlb2vy5X0Jd/0oRk0H7AxNPWRQP4rsmLU7u54cBkDWAFjpNA0/RZaoX7GxpaTT1N875XbDkhkvL95179Ca149xC9dZgS/3UPAW97LCyiTlkejbga7vXt+PjIFM6plcui3SJpcwFigwU2Eg/MHnuRcGXWtWTjr6/FVzGyfqIhM/3qe+mr2fCJZT74LzhUI99LXE7Lqq7d1jJBidM2Rf7IbNVILKPMJWojYeDvc1eaaL3X50IgiG7iOCI0QSj4kksBOTRmZBTKNnXeNa07YxOu90VKmLmfvhkRLD81mRBKQbPxhHhCmMB6tT+BqvBlMSL4ks6INaFEG+2OcaWJ1gsnwBaN+LPmClyetSg3p8TKxx2gMBQ1Z7Iz6hIYwcIwC7TW9xXPaE5JN2bgD57V+PC2YCmNy4bGMMRagBvx6pYZK2lJsfbGWK/mpdeqaoKqeIDD2cAeVJhxn8GVfIvzbaU0yRDPWlFrf8dPZa9yQDGvuVqX7A4HUCKYGBwTDjSWmIG5q2EOueMiGQ5C5cM1noyJEQWrRibQtBHSqf7Ve7qJAZXzLmbKU5nVf6bzIbZAcYoLdjuq5SB0yX/+2wMrPaHaLSrlecffWLIxiu5ax9jlnDTkOWRzU4hWOTkySS8BxdAU4m/JkYWpqZxuxHEeGzajWmVypJEbGXa3/aAO8aFYK2uC7nWkgW4m5zjSHIuzbEfsQamfm+FmMP/IAb4hgJzNB0VytPSNRY1h6Tz1ZALWe8fcy5nnJ5sWPrr6ZA9F2iomy/OERNNODTzdLyLR0+v+gz/Qt2igbcy3Sh53VvEjRKxs60FOMCc9RfkshnXP8W2yKgvLTeAI2OfQOjrCeQzw/dLjz4+U5hvD+04MshAyTDRgBhIH/A2hnWe59D9nyEpUdq4BHq6eZAcq/pum8bm7yR9iIvG2x8FmOArlGXyRztzuRtx4WGutOjZxzm0YlEtLc+og9zpt6+6I+83Cxgy0LoSB2QC9tB6z/1Ff/wjed1zkcq7OXIjQdA8vOJek1SUOmoOXyajdNCPMOkZOUVNXELi5dJ4MHr86T5tqCSIBsHouENfilNNFxn2fwdFkYJgVPA/dLUUp0pDjwVkxNsONTYMKSYtw4utetSqbv0EdI3T0mPLKE9YBgKagA1Kd2Wnr37KTChtVOKHVVIvE1UgguBiGPwLv3cCQhwMZPJ9k6JVgOWUkOKgQjL+oKjg1sMhIcmFM3I1QdnK3hKSKI8dMwPtH+e7alx7GK0opaKV+hkZxL8oWKDZtMqpCazhQjo4MmcojRi3/WO9YKCiLJZxykhp2mtqFxbFPzaebjoYdlUAffKZdNrNguHR/gD0d9Hi9+m2BZ9WmD7biZQrN1dYhjcA1ck6IrQ7c5KiNZxJrOKpQaYHvIlrInH0foEcKWr3iH4GKKhVWZKwm8UOHiJfWaF9WDoO0M+pZHvET/PzPmjDC9Im/BYRVZGeAMHMHssIqyl8iJYj/nyzfY7txkwrKcPkKNlJoRpT6tSe7vafpex1X8lX1wGabyfHyvi8o1Ea7s"
                    },
                    "modelStore": {
                        "modelStoreBucket": "t-101-model-store"
                    },
                    "planeId": 3
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::sagemaker-aws-provider",
                "custom": true,
                "id": "e1ab3915-d86f-4315-aaa5-15c5596547da",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "assumeRole": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::mirror-maker-aws-provider",
                "custom": true,
                "id": "3d11d571-64d3-4fd6-bed0-11813a11e40f",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "assumeRole": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:confluent::t-101-conn-conf-provider",
                "custom": true,
                "id": "33c6e436-c0d2-422f-9935-83fa192cee94",
                "type": "pulumi:providers:confluent",
                "inputs": {
                    "password": "Mohit@Fennel",
                    "username": "mohit@fennel.ai",
                    "version": "0.2.2"
                },
                "outputs": {
                    "password": "Mohit@Fennel",
                    "username": "mohit@fennel.ai",
                    "version": "0.2.2"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "password": null,
                    "username": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:confluent::t-101-offline-aggr-connector-provider",
                "custom": true,
                "id": "efc62ac5-2120-4415-b15d-9d8b8d4fbf2e",
                "type": "pulumi:providers:confluent",
                "inputs": {
                    "password": "Mohit@Fennel",
                    "username": "mohit@fennel.ai",
                    "version": "0.2.2"
                },
                "outputs": {
                    "password": "Mohit@Fennel",
                    "username": "mohit@fennel.ai",
                    "version": "0.2.2"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "password": null,
                    "username": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::ns-k8s-provider",
                "custom": true,
                "id": "fca3f107-1c68-4a4e-931b-d4aa1a5274f8",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"],\"command\":\"aws\",\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "version": "3.21.2"
                },
                "outputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"],\"command\":\"aws\",\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "version": "3.21.2"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "kubeconfig": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::mirror-maker-k8s-provider",
                "custom": true,
                "id": "f86d62ab-c812-4163-b1e6-ebb801a4063d",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"],\"command\":\"aws\",\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "namespace": "strimzi",
                    "version": "3.21.2"
                },
                "outputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"],\"command\":\"aws\",\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "namespace": "strimzi",
                    "version": "3.21.2"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "kubeconfig": null,
                    "namespace": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:kafka::msk-kafka-provider",
                "custom": true,
                "id": "e70af371-19d9-425b-8dbe-9cbdbffc170a",
                "type": "pulumi:providers:kafka",
                "inputs": {
                    "bootstrapServers": "[\"b-1.p3kafkacluster.97sfo3.c10.kafka.us-west-2.amazonaws.com:9096\",\"b-2.p3kafkacluster.97sfo3.c10.kafka.us-west-2.amazonaws.com:9096\"]",
                    "saslMechanism": "scram-sha512",
                    "saslPassword": "p-3-password",
                    "saslUsername": "p-3-username",
                    "skipTlsVerify": "false",
                    "tlsEnabled": "true",
                    "version": "3.1.2"
                },
                "outputs": {
                    "bootstrapServers": "[\"b-1.p3kafkacluster.97sfo3.c10.kafka.us-west-2.amazonaws.com:9096\",\"b-2.p3kafkacluster.97sfo3.c10.kafka.us-west-2.amazonaws.com:9096\"]",
                    "saslMechanism": "scram-sha512",
                    "saslPassword": "p-3-password",
                    "saslUsername": "p-3-username",
                    "skipTlsVerify": "false",
                    "tlsEnabled": "true",
                    "version": "3.1.2"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "bootstrapServers": null,
                    "saslMechanism": null,
                    "saslPassword": null,
                    "saslUsername": null,
                    "skipTlsVerify": null,
                    "tlsEnabled": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::offline-aggregate-output-provider",
                "custom": true,
                "id": "9cf7a2fd-5bcf-4336-8dff-155730dca392",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "assumeRole": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::offline-aggregate-storage-provider",
                "custom": true,
                "id": "58a326c1-9698-422f-a7d5-75ba7ef5c688",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "assumeRole": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::training-data-msk-connect-provider",
                "custom": true,
                "id": "110c51da-0f81-4aa7-abdc-f614fda241af",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "assumeRole": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::t-101-offline-aggr-glue-provider",
                "custom": true,
                "id": "f9060164-68be-4fc0-9d6e-465e1d56f31b",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "assumeRole": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::tier-model-store-dir-provider",
                "custom": true,
                "id": "618f4cb4-33c9-48ce-9805-c86d8935f06a",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "assumeRole": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:mysql::mysql-provider",
                "custom": true,
                "id": "3448215f-8172-41de-8848-5b7453eeba7c",
                "type": "pulumi:providers:mysql",
                "inputs": {
                    "endpoint": "p-3-db-20220322025721191200000002.cluster-c00d7gkxaysk.us-west-2.rds.amazonaws.com",
                    "password": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAKw9Sj6LPUv186Y6hG0GpP2NOo2hVwQDC0Q2k6fDj6bY/kuFEuyIyh8Ykw=="
                    },
                    "tls": "false",
                    "username": "admin",
                    "version": "3.1.0"
                },
                "outputs": {
                    "endpoint": "p-3-db-20220322025721191200000002.cluster-c00d7gkxaysk.us-west-2.rds.amazonaws.com",
                    "password": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAO4Yzs/xtOmu2tQaoTSbplhdrKtxbLT153EyoKRSRwgnFp1b8UvrrneCEA=="
                    },
                    "tls": "false",
                    "username": "admin",
                    "version": "3.1.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "endpoint": null,
                    "password": null,
                    "tls": null,
                    "username": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:kafka::kafka-provider",
                "custom": true,
                "id": "fce5bff4-1475-43e5-85d8-df7430cb774d",
                "type": "pulumi:providers:kafka",
                "inputs": {
                    "bootstrapServers": "[\"pkc-pgq85.us-west-2.aws.confluent.cloud:9092\"]",
                    "saslMechanism": "plain",
                    "saslPassword": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAGc9Su6W0OinssO36UEqFemkjFamzhKp3/JtP/9LVKWGlWAKuSV6L8MfrnlBzT0gWqAn3WQylniqQJcOn13Nj/GfzehOPAqWVUJJ98nxxhT/U/kIWMsZ+GvldLwsUKs="
                    },
                    "saslUsername": "SJLSMRYRKYALJ4Q4",
                    "skipTlsVerify": "false",
                    "tlsEnabled": "true",
                    "version": "3.1.2"
                },
                "outputs": {
                    "bootstrapServers": "[\"pkc-pgq85.us-west-2.aws.confluent.cloud:9092\"]",
                    "saslMechanism": "plain",
                    "saslPassword": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAGIF6+fAV2WlE+ThHzdkAWdUIGrhqBx2kfOeA1VL3wkqPJoU9tDQTTL8P0d49MeLKJ8iy8uQymS/8S7XhxbkNUu4L7jz5dtzNYLBtRoA1/yHJBe1GKCZWX1JV1LptV8="
                    },
                    "saslUsername": "SJLSMRYRKYALJ4Q4",
                    "skipTlsVerify": "false",
                    "tlsEnabled": "true",
                    "version": "3.1.2"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "bootstrapServers": null,
                    "saslMechanism": null,
                    "saslPassword": null,
                    "saslUsername": null,
                    "skipTlsVerify": null,
                    "tlsEnabled": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::confluent:index/connector:Connector::t-101-connector",
                "custom": true,
                "id": "t-101-connector",
                "type": "confluent:index/connector:Connector",
                "inputs": {
                    "__defaults": [],
                    "clusterId": "lkc-811rkq",
                    "config": {
                        "__defaults": [],
                        "aws.access.key.id": "AKIAQOLFGTNXJDEFE7LJ",
                        "aws.secret.access.key": "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",
                        "connector.class": "S3_SINK",
                        "flush.size": "1000000",
                        "input.data.format": "JSON",
                        "kafka.api.key": "SJLSMRYRKYALJ4Q4",
                        "kafka.api.secret": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAFNMqAt8Irkz1RmA4KYpQQYOdQjBGNm5U7DwLdJFbj/cXClMATvuKvWlPe1IAffKRt6acQz8NCR5k7ytbRmiu3pVKsgMPNhZwv/yJfgxAoIRb88FPnqSDmE+/inAndM="
                        },
                        "kafka.auth.mode": "KAFKA_API_KEY",
                        "name": "t-101-connector",
                        "output.data.format": "JSON",
                        "s3.bucket.name": "p-3-training-data",
                        "tasks.max": "1",
                        "time.interval": "HOURLY",
                        "topics": "t_101_actionlog_json,t_101_featurelog",
                        "topics.dir": "daily"
                    },
                    "environmentId": "env-ry1w0",
                    "name": "t-101-connector"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":1200000000000}}",
                    "clusterId": "lkc-811rkq",
                    "config": {
                        "aws.access.key.id": "AKIAQOLFGTNXJDEFE7LJ",
                        "aws.secret.access.key": "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",
                        "connector.class": "S3_SINK",
                        "flush.size": "1000000",
                        "input.data.format": "JSON",
                        "kafka.api.key": "SJLSMRYRKYALJ4Q4",
                        "kafka.api.secret": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAHuRn5E3c+1o9J4cdZk5bjg8xFCTZL5quTl3sqbb5ISYPPy7O79Z88T5DXhTndErJforJBquWP7Ht2z1/rJsVAFDGd0TqHmgQeBspBUSsutDCPzdXxwLlShRDvi3WDs="
                        },
                        "kafka.auth.mode": "KAFKA_API_KEY",
                        "name": "t-101-connector",
                        "output.data.format": "JSON",
                        "s3.bucket.name": "p-3-training-data",
                        "tasks.max": "1",
                        "time.interval": "HOURLY",
                        "topics": "t_101_actionlog_json,t_101_featurelog",
                        "topics.dir": "daily"
                    },
                    "environmentId": "env-ry1w0",
                    "id": "t-101-connector",
                    "name": "t-101-connector"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:confluent::t-101-conn-conf-provider::33c6e436-c0d2-422f-9935-83fa192cee94",
                "propertyDependencies": {
                    "clusterId": null,
                    "config": null,
                    "environmentId": null,
                    "name": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::glue-job-aws-provider",
                "custom": true,
                "id": "a55682fa-be50-4d32-8015-99c5170582c2",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "assumeRole": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::t-101-unleash-k8s-provider",
                "custom": true,
                "id": "492aae4a-68d1-4315-b578-c1f438b54d2e",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"],\"command\":\"aws\",\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "namespace": "t-101",
                    "version": "3.21.2"
                },
                "outputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"],\"command\":\"aws\",\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "namespace": "t-101",
                    "version": "3.21.2"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "kubeconfig": null,
                    "namespace": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::ingress-k8s-provider",
                "custom": true,
                "id": "ac212244-fd50-4350-9d41-d0e023911bc3",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"],\"command\":\"aws\",\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "namespace": "t-101",
                    "version": "3.21.2"
                },
                "outputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"],\"command\":\"aws\",\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "namespace": "t-101",
                    "version": "3.21.2"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "kubeconfig": null,
                    "namespace": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::t-101-unleash-db-provider",
                "custom": true,
                "id": "6867a345-507f-46dc-8f77-302895653895",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "assumeRole": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::tier-eks-instance-iam-policy-provider",
                "custom": true,
                "id": "c7326e6a-5bb1-4f5c-966f-f6215b33d25b",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "assumeRole": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::pprof-bucket-provider",
                "custom": true,
                "id": "5a0815f8-1a58-4265-a590-14a455715085",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "assumeRole": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:ec2/securityGroup:SecurityGroup::t-101-sagemaker-sg",
                "custom": true,
                "id": "sg-0438f8bd60aa86f49",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "name",
                        "revokeRulesOnDelete"
                    ],
                    "description": "Managed by Pulumi",
                    "name": "t-101-sagemaker-sg-f29d90b",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:security-group/sg-0438f8bd60aa86f49",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-0438f8bd60aa86f49",
                    "ingress": [],
                    "name": "t-101-sagemaker-sg-f29d90b",
                    "namePrefix": "",
                    "ownerId": "030813887342",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::sagemaker-aws-provider::e1ab3915-d86f-4315-aaa5-15c5596547da",
                "propertyDependencies": {
                    "description": null,
                    "tags": null,
                    "vpcId": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-sagemaker-role",
                "custom": true,
                "id": "t-101-sagemakerrole-20220824192436828800000001",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "path"
                    ],
                    "assumeRolePolicy": "{\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Effect\": \"Allow\",\n                    \"Principal\": {\n                        \"Service\": \"sagemaker.amazonaws.com\"\n                    },\n                    \"Action\": \"sts:AssumeRole\"\n                }\n            ]\n        }",
                    "description": "IAM role for AWS sagemaker for tier 101",
                    "forceDetachPolicies": false,
                    "maxSessionDuration": 3600,
                    "namePrefix": "t-101-sagemakerrole-",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:role/t-101-sagemakerrole-20220824192436828800000001",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"sagemaker.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2022-08-24T19:24:37Z",
                    "description": "IAM role for AWS sagemaker for tier 101",
                    "forceDetachPolicies": false,
                    "id": "t-101-sagemakerrole-20220824192436828800000001",
                    "inlinePolicies": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "t-101-sagemakerrole-20220824192436828800000001",
                    "namePrefix": "t-101-sagemakerrole-",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAQOLFGTNXJLOKMTWG2"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::sagemaker-aws-provider::e1ab3915-d86f-4315-aaa5-15c5596547da",
                "propertyDependencies": {
                    "assumeRolePolicy": null,
                    "description": null,
                    "namePrefix": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::ingress-aws-provider",
                "custom": true,
                "id": "9e58e45b-96d3-468d-a83c-83dad417aa24",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "assumeRole": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:Namespace::namespace-t-101",
                "custom": true,
                "id": "t-101",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/inject": "enabled"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "t-101"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/inject": "enabled"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "t-101"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"linkerd.io/inject\":\"enabled\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"t-101\"}}\n",
                            "linkerd.io/inject": "enabled"
                        },
                        "creationTimestamp": "2022-08-24T19:24:37Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "t-101"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {},
                                            "f:linkerd.io/inject": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:kubernetes.io/metadata.name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:37Z"
                            }
                        ],
                        "name": "t-101",
                        "resourceVersion": "57162614",
                        "uid": "460e2c11-dd9c-4b8c-a6e7-0c52dc134e9c"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::ns-k8s-provider::fca3f107-1c68-4a4e-931b-d4aa1a5274f8",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:Secret::mirror-maker-creds",
                "custom": true,
                "id": "strimzi/t-101-mirrormaker-passwords",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Secret",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "t-101-mirrormaker-passwords",
                        "namespace": "strimzi"
                    },
                    "stringData": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABADCySSrjaRriBXwp3SOzs+EofdRBeh5NXgGqUMfYu8vT3avcbwXJfolx0LySuovhIuBXZRw6lclES3P2vAoLNMYCVXpmJJiaiFlTHXe+lGxmmbwrGdwyB7FGVu6AqWmgkUEFqXtOkOjmdbISH/7K8tSBU9f5FnaynAJvXQsbHm5+3OZs2/rMghdgT2ZBg+V1WKM="
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Secret",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "t-101-mirrormaker-passwords",
                            "namespace": "strimzi"
                        },
                        "stringData": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABABpJCg1GbPyzfbbL7/Vu9qdWX6HqnOZNdWT3wphitcouBWD+xLhnORbl5sIWbB1EFDfE3bB6BNNFd52shDgTSpdcUDPtiW58sRITRXThzJAe40Lsz6f/JKH2T1oeTUHIuqbzKJysGQyqD28JUNYdfc6gKuXeULEowhyaxDL0+KWulNoQli1SZhbXgIxUuvgooA4="
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAF7uWYkZrzdLfW2SRUWspThsyRisfrLQUjHBaguUmcgXjMycZJKKB7alLNi02zTASKwv69Rarp2xxG+GE+fXZfU8iwFtniipy5n2UqkX08iDIONgXHbegiepNrmUS6ccj5ybq0gaEQw6K66PWEBYJmfzQm/Sv7aN6BNa7Bd0mAfBS5805cuCuoLWfyI8hYlslu/C07cTehp6neB0uZeaN9XFs/tuR1atAUgfvXFs"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "AAABAAiNueZeU1NmoZtV6j4IUOCA06STldEWlL5QzG+sSokgE0EbRu05ItCTMFjXdIXqpJJxH0/A8/JhRfwiweJzwF5RzTWbzS7L1krQTozikge7gfdD4hmRUU21pxvCn1HaaM8MbJuToAAN7ggqXWAntFHKKBwEdqL2pIaIUdWSOxjahzVBoOY0VNSVaoEdejALWdZocNQxetaymmOQrkeu2yvhWfyA19RBZRIb8JCTwZe4muFWsRtPnJhIGi95uPLqStMUKd279+wmOpoRboJ+vDf9Tx4FBrhb+vVUrdvqjMTBNrMfe57VuPKek/tN3j7OtBKNm1DJAJ2hW3WpmZKOFXV4FrlzKYSxJvppjiHExOG+KxsdwYKe30UREUeEFKW9n0s0VZC0SbUWqsqW01KBf0ZxdaWoasG6A5eb+K1hbVmpWujEXpQY42XT5SL27lU0+Czmfs4XPHlaQD7ApoDZb7j++Sg="
                            }
                        },
                        "creationTimestamp": "2022-09-02T21:53:11Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:confluentPassword": {},
                                        "f:mskPassword": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-02T21:53:11Z"
                            }
                        ],
                        "name": "t-101-mirrormaker-passwords",
                        "namespace": "strimzi",
                        "resourceVersion": "61394657",
                        "uid": "7312dfb8-2715-409f-a8a4-6bb1de79a18c"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::mirror-maker-k8s-provider::f86d62ab-c812-4163-b1e6-ebb801a4063d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "stringData": null
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kafka:index/topic:Topic::msk-topic-t_101_hourly_usage_log",
                "custom": true,
                "id": "t_101_hourly_usage_log",
                "type": "kafka:index/topic:Topic",
                "inputs": {
                    "__defaults": [],
                    "config": {
                        "__defaults": [],
                        "retention.ms": 432000000
                    },
                    "name": "t_101_hourly_usage_log",
                    "partitions": 1,
                    "replicationFactor": 2
                },
                "outputs": {
                    "config": {
                        "retention.ms": "432000000"
                    },
                    "id": "t_101_hourly_usage_log",
                    "name": "t_101_hourly_usage_log",
                    "partitions": 1,
                    "replicationFactor": 2
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kafka::msk-kafka-provider::e70af371-19d9-425b-8dbe-9cbdbffc170a",
                "propertyDependencies": {
                    "config": null,
                    "name": null,
                    "partitions": null,
                    "replicationFactor": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kafka:index/topic:Topic::msk-topic-t_101_featurelog",
                "custom": true,
                "id": "t_101_featurelog",
                "type": "kafka:index/topic:Topic",
                "inputs": {
                    "__defaults": [],
                    "config": {
                        "__defaults": [],
                        "retention.ms": 432000000
                    },
                    "name": "t_101_featurelog",
                    "partitions": 10,
                    "replicationFactor": 2
                },
                "outputs": {
                    "config": {
                        "retention.ms": "432000000"
                    },
                    "id": "t_101_featurelog",
                    "name": "t_101_featurelog",
                    "partitions": 10,
                    "replicationFactor": 2
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kafka::msk-kafka-provider::e70af371-19d9-425b-8dbe-9cbdbffc170a",
                "propertyDependencies": {
                    "config": null,
                    "name": null,
                    "partitions": null,
                    "replicationFactor": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kafka:index/topic:Topic::msk-topic-t_101_profilelog",
                "custom": true,
                "id": "t_101_profilelog",
                "type": "kafka:index/topic:Topic",
                "inputs": {
                    "__defaults": [],
                    "config": {
                        "__defaults": [],
                        "retention.ms": -1
                    },
                    "name": "t_101_profilelog",
                    "partitions": 1,
                    "replicationFactor": 2
                },
                "outputs": {
                    "config": {
                        "retention.ms": "-1"
                    },
                    "id": "t_101_profilelog",
                    "name": "t_101_profilelog",
                    "partitions": 1,
                    "replicationFactor": 2
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kafka::msk-kafka-provider::e70af371-19d9-425b-8dbe-9cbdbffc170a",
                "propertyDependencies": {
                    "config": null,
                    "name": null,
                    "partitions": null,
                    "replicationFactor": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kafka:index/topic:Topic::msk-topic-t_101_actionlog_json",
                "custom": true,
                "id": "t_101_actionlog_json",
                "type": "kafka:index/topic:Topic",
                "inputs": {
                    "__defaults": [],
                    "config": {
                        "__defaults": [],
                        "retention.ms": 432000000
                    },
                    "name": "t_101_actionlog_json",
                    "partitions": 1,
                    "replicationFactor": 2
                },
                "outputs": {
                    "config": {
                        "retention.ms": "432000000"
                    },
                    "id": "t_101_actionlog_json",
                    "name": "t_101_actionlog_json",
                    "partitions": 1,
                    "replicationFactor": 2
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kafka::msk-kafka-provider::e70af371-19d9-425b-8dbe-9cbdbffc170a",
                "propertyDependencies": {
                    "config": null,
                    "name": null,
                    "partitions": null,
                    "replicationFactor": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kafka:index/topic:Topic::msk-topic-t_101_aggr_offline_transform",
                "custom": true,
                "id": "t_101_aggr_offline_transform",
                "type": "kafka:index/topic:Topic",
                "inputs": {
                    "__defaults": [],
                    "config": {
                        "__defaults": []
                    },
                    "name": "t_101_aggr_offline_transform",
                    "partitions": 1,
                    "replicationFactor": 2
                },
                "outputs": {
                    "id": "t_101_aggr_offline_transform",
                    "name": "t_101_aggr_offline_transform",
                    "partitions": 1,
                    "replicationFactor": 2
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kafka::msk-kafka-provider::e70af371-19d9-425b-8dbe-9cbdbffc170a",
                "propertyDependencies": {
                    "config": null,
                    "name": null,
                    "partitions": null,
                    "replicationFactor": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kafka:index/topic:Topic::msk-topic-t_101_streamlog",
                "custom": true,
                "id": "t_101_streamlog",
                "type": "kafka:index/topic:Topic",
                "inputs": {
                    "__defaults": [],
                    "config": {
                        "__defaults": [],
                        "retention.ms": 432000000
                    },
                    "name": "t_101_streamlog",
                    "partitions": 10,
                    "replicationFactor": 2
                },
                "outputs": {
                    "config": {
                        "retention.ms": "432000000"
                    },
                    "id": "t_101_streamlog",
                    "name": "t_101_streamlog",
                    "partitions": 10,
                    "replicationFactor": 2
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kafka::msk-kafka-provider::e70af371-19d9-425b-8dbe-9cbdbffc170a",
                "propertyDependencies": {
                    "config": null,
                    "name": null,
                    "partitions": null,
                    "replicationFactor": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kafka:index/topic:Topic::msk-topic-t_101_actionlog",
                "custom": true,
                "id": "t_101_actionlog",
                "type": "kafka:index/topic:Topic",
                "inputs": {
                    "__defaults": [],
                    "config": {
                        "__defaults": [],
                        "retention.ms": 1209600000
                    },
                    "name": "t_101_actionlog",
                    "partitions": 1,
                    "replicationFactor": 2
                },
                "outputs": {
                    "config": {
                        "retention.ms": "1209600000"
                    },
                    "id": "t_101_actionlog",
                    "name": "t_101_actionlog",
                    "partitions": 1,
                    "replicationFactor": 2
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kafka::msk-kafka-provider::e70af371-19d9-425b-8dbe-9cbdbffc170a",
                "propertyDependencies": {
                    "config": null,
                    "name": null,
                    "partitions": null,
                    "replicationFactor": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:s3/bucket:Bucket::p-101-offline-aggregate-output",
                "custom": true,
                "id": "t-101-offline-aggregate-output",
                "type": "aws:s3/bucket:Bucket",
                "inputs": {
                    "__defaults": [],
                    "acl": "private",
                    "bucket": "t-101-offline-aggregate-output",
                    "forceDestroy": true
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::t-101-offline-aggregate-output",
                    "bucket": "t-101-offline-aggregate-output",
                    "bucketDomainName": "t-101-offline-aggregate-output.s3.amazonaws.com",
                    "bucketRegionalDomainName": "t-101-offline-aggregate-output.s3.us-west-2.amazonaws.com",
                    "corsRules": [],
                    "forceDestroy": true,
                    "grants": [],
                    "hostedZoneId": "Z3BJ6K6RIION7M",
                    "id": "t-101-offline-aggregate-output",
                    "lifecycleRules": [],
                    "loggings": [],
                    "objectLockConfiguration": null,
                    "region": "us-west-2",
                    "replicationConfiguration": null,
                    "requestPayer": "BucketOwner",
                    "serverSideEncryptionConfiguration": null,
                    "tags": {},
                    "tagsAll": {},
                    "versioning": {
                        "enabled": false,
                        "mfaDelete": false
                    },
                    "website": null
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::offline-aggregate-output-provider::9cf7a2fd-5bcf-4336-8dff-155730dca392",
                "propertyDependencies": {
                    "acl": null,
                    "bucket": null,
                    "forceDestroy": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:s3/bucket:Bucket::t-101-offline-aggregate-storage",
                "custom": true,
                "id": "t-101-offline-aggregate-storage",
                "type": "aws:s3/bucket:Bucket",
                "inputs": {
                    "__defaults": [],
                    "acl": "private",
                    "bucket": "t-101-offline-aggregate-storage",
                    "forceDestroy": true
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::t-101-offline-aggregate-storage",
                    "bucket": "t-101-offline-aggregate-storage",
                    "bucketDomainName": "t-101-offline-aggregate-storage.s3.amazonaws.com",
                    "bucketRegionalDomainName": "t-101-offline-aggregate-storage.s3.us-west-2.amazonaws.com",
                    "corsRules": [],
                    "forceDestroy": true,
                    "grants": [],
                    "hostedZoneId": "Z3BJ6K6RIION7M",
                    "id": "t-101-offline-aggregate-storage",
                    "lifecycleRules": [],
                    "loggings": [],
                    "objectLockConfiguration": null,
                    "region": "us-west-2",
                    "replicationConfiguration": null,
                    "requestPayer": "BucketOwner",
                    "serverSideEncryptionConfiguration": null,
                    "tags": {},
                    "tagsAll": {},
                    "versioning": {
                        "enabled": false,
                        "mfaDelete": false
                    },
                    "website": null
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::offline-aggregate-storage-provider::58a326c1-9698-422f-a7d5-75ba7ef5c688",
                "propertyDependencies": {
                    "acl": null,
                    "bucket": null,
                    "forceDestroy": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:cloudwatch/logGroup:LogGroup::training-data-connector-log-group",
                "custom": true,
                "id": "/aws/msk/t-101-training-data-connector",
                "type": "aws:cloudwatch/logGroup:LogGroup",
                "inputs": {
                    "__defaults": [],
                    "name": "/aws/msk/t-101-training-data-connector",
                    "retentionInDays": 5
                },
                "outputs": {
                    "arn": "arn:aws:logs:us-west-2:030813887342:log-group:/aws/msk/t-101-training-data-connector",
                    "id": "/aws/msk/t-101-training-data-connector",
                    "kmsKeyId": "",
                    "name": "/aws/msk/t-101-training-data-connector",
                    "retentionInDays": 5,
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::training-data-msk-connect-provider::110c51da-0f81-4aa7-abdc-f614fda241af",
                "propertyDependencies": {
                    "name": null,
                    "retentionInDays": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::training-data-connector-role",
                "custom": true,
                "id": "t-101-training-data-connector20220916011952474200000001",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "path"
                    ],
                    "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"kafkaconnect.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
                    "description": "IAM role for Training Data MSK Connector for tier - 101.",
                    "forceDetachPolicies": false,
                    "inlinePolicies": [
                        {
                            "__defaults": [],
                            "name": "t-101-training-data-connector-policy",
                            "policy": "{\n                \"Version\":\"2012-10-17\",\n                \"Statement\":[\n                    {\n                        \"Effect\":\"Allow\",\n                        \"Action\": [\n                            \"s3:ListAllMyBuckets\"\n                        ],\n                        \"Resource\":\"arn:aws:s3:::*\"\n                    },\n                    {\n                        \"Effect\":\"Allow\",\n                        \"Action\":[\n                            \"s3:ListBucket\",\n                            \"s3:GetBucketLocation\"\n                        ],\n                        \"Resource\": [\n                            \"arn:aws:s3:::p-3-training-data\",\n                            \"arn:aws:kafkaconnect:us-west-2:030813887342:custom-plugin/s3connect-plugin-8673e4f/9e0c4b38-411c-423b-b33d-ddeb979091f2-3\"\n                        ]\n                    },\n                    {\n                        \"Effect\":\"Allow\",\n                        \"Action\":[\n                            \"s3:PutObject\",\n                            \"s3:GetObject\",\n                            \"s3:AbortMultipartUpload\",\n                            \"s3:ListMultipartUploadParts\",\n                            \"s3:ListBucketMultipartUploads\"\n                        ],\n                        \"Resource\": [\n                            \"arn:aws:s3:::p-3-training-data/*\",\n                            \"arn:aws:kafkaconnect:us-west-2:030813887342:custom-plugin/s3connect-plugin-8673e4f/9e0c4b38-411c-423b-b33d-ddeb979091f2-3/*\"\n                        ]\n                    }\n                ]\n            }"
                        },
                        {
                            "__defaults": [],
                            "name": "t-101-training-data-connector-msk-access",
                            "policy": "{\n                \"Version\":\"2012-10-17\",\n                \"Statement\":[\n                    {\n                        \"Effect\": \"Allow\",\n                        \"Action\": [\n                            \"kafka-cluster:Connect\",\n                            \"kafka-cluster:DescribeCluster\"\n                        ],\n                        \"Resource\": \"arn:aws:kafka:us-west-2:030813887342:cluster/p-3-kafka-cluster/f8cd19c1-be95-4e74-bfc5-ba67b269a6c6-10\"\n                    },\n                    {\n                        \"Effect\": \"Allow\",\n                        \"Action\": [\n                            \"kafka-cluster:ReadData\",\n                            \"kafka-cluster:WriteData\",\n                            \"kafka-cluster:*Topic*\"\n                        ],\n                        \"Resource\": \"*\"\n                    },\n                    {\n                        \"Effect\": \"Allow\",\n                        \"Action\": [\n                            \"kafka-cluster:AlterGroup\",\n                            \"kafka-cluster:DescribeGroup\"\n                        ],\n                        \"Resource\": \"*\"\n                    }\n                ]\n            }"
                        }
                    ],
                    "maxSessionDuration": 3600,
                    "namePrefix": "t-101-training-data-connector",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:role/t-101-training-data-connector20220916011952474200000001",
                    "assumeRolePolicy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"kafkaconnect.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
                    "createDate": "2022-09-16T01:19:52Z",
                    "description": "IAM role for Training Data MSK Connector for tier - 101.",
                    "forceDetachPolicies": false,
                    "id": "t-101-training-data-connector20220916011952474200000001",
                    "inlinePolicies": [
                        {
                            "name": "t-101-training-data-connector-policy",
                            "policy": "{\n                \"Version\":\"2012-10-17\",\n                \"Statement\":[\n                    {\n                        \"Effect\":\"Allow\",\n                        \"Action\": [\n                            \"s3:ListAllMyBuckets\"\n                        ],\n                        \"Resource\":\"arn:aws:s3:::*\"\n                    },\n                    {\n                        \"Effect\":\"Allow\",\n                        \"Action\":[\n                            \"s3:ListBucket\",\n                            \"s3:GetBucketLocation\"\n                        ],\n                        \"Resource\": [\n                            \"arn:aws:s3:::p-3-training-data\",\n                            \"arn:aws:kafkaconnect:us-west-2:030813887342:custom-plugin/s3connect-plugin-8673e4f/9e0c4b38-411c-423b-b33d-ddeb979091f2-3\"\n                        ]\n                    },\n                    {\n                        \"Effect\":\"Allow\",\n                        \"Action\":[\n                            \"s3:PutObject\",\n                            \"s3:GetObject\",\n                            \"s3:AbortMultipartUpload\",\n                            \"s3:ListMultipartUploadParts\",\n                            \"s3:ListBucketMultipartUploads\"\n                        ],\n                        \"Resource\": [\n                            \"arn:aws:s3:::p-3-training-data/*\",\n                            \"arn:aws:kafkaconnect:us-west-2:030813887342:custom-plugin/s3connect-plugin-8673e4f/9e0c4b38-411c-423b-b33d-ddeb979091f2-3/*\"\n                        ]\n                    }\n                ]\n            }"
                        },
                        {
                            "name": "t-101-training-data-connector-msk-access",
                            "policy": "{\n                \"Version\":\"2012-10-17\",\n                \"Statement\":[\n                    {\n                        \"Effect\": \"Allow\",\n                        \"Action\": [\n                            \"kafka-cluster:Connect\",\n                            \"kafka-cluster:DescribeCluster\"\n                        ],\n                        \"Resource\": \"arn:aws:kafka:us-west-2:030813887342:cluster/p-3-kafka-cluster/f8cd19c1-be95-4e74-bfc5-ba67b269a6c6-10\"\n                    },\n                    {\n                        \"Effect\": \"Allow\",\n                        \"Action\": [\n                            \"kafka-cluster:ReadData\",\n                            \"kafka-cluster:WriteData\",\n                            \"kafka-cluster:*Topic*\"\n                        ],\n                        \"Resource\": \"*\"\n                    },\n                    {\n                        \"Effect\": \"Allow\",\n                        \"Action\": [\n                            \"kafka-cluster:AlterGroup\",\n                            \"kafka-cluster:DescribeGroup\"\n                        ],\n                        \"Resource\": \"*\"\n                    }\n                ]\n            }"
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "t-101-training-data-connector20220916011952474200000001",
                    "namePrefix": "t-101-training-data-connector",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAQOLFGTNXG473M4LL6"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::training-data-msk-connect-provider::110c51da-0f81-4aa7-abdc-f614fda241af",
                "propertyDependencies": {
                    "assumeRolePolicy": null,
                    "description": null,
                    "inlinePolicies": null,
                    "namePrefix": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-offline-aggr-glue-role",
                "custom": true,
                "id": "t-101-offline-aggr-gluerole-20220824192435422800000001",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "path"
                    ],
                    "assumeRolePolicy": "{\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Effect\": \"Allow\",\n                    \"Principal\": {\n                        \"Service\": \"glue.amazonaws.com\"\n                    },\n                    \"Action\": \"sts:AssumeRole\"\n                }\n            ]\n        }",
                    "description": "IAM role for AWS GLUE job for offline aggregate ETL",
                    "forceDetachPolicies": false,
                    "maxSessionDuration": 3600,
                    "namePrefix": "t-101-offline-aggr-gluerole-",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:role/t-101-offline-aggr-gluerole-20220824192435422800000001",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"glue.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2022-08-24T19:24:35Z",
                    "description": "IAM role for AWS GLUE job for offline aggregate ETL",
                    "forceDetachPolicies": false,
                    "id": "t-101-offline-aggr-gluerole-20220824192435422800000001",
                    "inlinePolicies": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "t-101-offline-aggr-gluerole-20220824192435422800000001",
                    "namePrefix": "t-101-offline-aggr-gluerole-",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAQOLFGTNXHPQ6O5FG3"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::t-101-offline-aggr-glue-provider::f9060164-68be-4fc0-9d6e-465e1d56f31b",
                "propertyDependencies": {
                    "assumeRolePolicy": null,
                    "description": null,
                    "namePrefix": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:s3/bucket:Bucket::tier-model-store-bucket",
                "custom": true,
                "id": "t-101-model-store",
                "type": "aws:s3/bucket:Bucket",
                "inputs": {
                    "__defaults": [],
                    "acl": "private",
                    "bucket": "t-101-model-store",
                    "forceDestroy": true
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::t-101-model-store",
                    "bucket": "t-101-model-store",
                    "bucketDomainName": "t-101-model-store.s3.amazonaws.com",
                    "bucketRegionalDomainName": "t-101-model-store.s3.us-west-2.amazonaws.com",
                    "corsRules": [],
                    "forceDestroy": true,
                    "grants": [],
                    "hostedZoneId": "Z3BJ6K6RIION7M",
                    "id": "t-101-model-store",
                    "lifecycleRules": [],
                    "loggings": [],
                    "objectLockConfiguration": null,
                    "region": "us-west-2",
                    "replicationConfiguration": null,
                    "requestPayer": "BucketOwner",
                    "serverSideEncryptionConfiguration": null,
                    "tags": {},
                    "tagsAll": {},
                    "versioning": {
                        "enabled": false,
                        "mfaDelete": false
                    },
                    "website": null
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::tier-model-store-dir-provider::618f4cb4-33c9-48ce-9805-c86d8935f06a",
                "propertyDependencies": {
                    "acl": null,
                    "bucket": null,
                    "forceDestroy": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::mysql:index/database:Database::mysql-database",
                "custom": true,
                "id": "t_101_db",
                "type": "mysql:index/database:Database",
                "inputs": {
                    "__defaults": [
                        "defaultCharacterSet",
                        "defaultCollation"
                    ],
                    "defaultCharacterSet": "utf8",
                    "defaultCollation": "utf8_general_ci",
                    "name": "t_101_db"
                },
                "outputs": {
                    "defaultCharacterSet": "utf8",
                    "defaultCollation": "utf8_general_ci",
                    "id": "t_101_db",
                    "name": "t_101_db"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:mysql::mysql-provider::3448215f-8172-41de-8848-5b7453eeba7c",
                "propertyDependencies": {
                    "name": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kafka:index/topic:Topic::topic-t_101_actionlog",
                "custom": true,
                "id": "t_101_actionlog",
                "type": "kafka:index/topic:Topic",
                "inputs": {
                    "__defaults": [],
                    "config": {
                        "__defaults": [],
                        "retention.ms": 1209600000
                    },
                    "name": "t_101_actionlog",
                    "partitions": 1,
                    "replicationFactor": 3
                },
                "outputs": {
                    "config": {
                        "retention.ms": "1209600000"
                    },
                    "id": "t_101_actionlog",
                    "name": "t_101_actionlog",
                    "partitions": 1,
                    "replicationFactor": 3
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kafka::kafka-provider::fce5bff4-1475-43e5-85d8-df7430cb774d",
                "propertyDependencies": {
                    "config": null,
                    "name": null,
                    "partitions": null,
                    "replicationFactor": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kafka:index/topic:Topic::topic-t_101_hourly_usage_log",
                "custom": true,
                "id": "t_101_hourly_usage_log",
                "type": "kafka:index/topic:Topic",
                "inputs": {
                    "__defaults": [],
                    "config": {
                        "__defaults": [],
                        "retention.ms": 432000000
                    },
                    "name": "t_101_hourly_usage_log",
                    "partitions": 1,
                    "replicationFactor": 3
                },
                "outputs": {
                    "config": {
                        "retention.ms": "432000000"
                    },
                    "id": "t_101_hourly_usage_log",
                    "name": "t_101_hourly_usage_log",
                    "partitions": 1,
                    "replicationFactor": 3
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kafka::kafka-provider::fce5bff4-1475-43e5-85d8-df7430cb774d",
                "propertyDependencies": {
                    "config": null,
                    "name": null,
                    "partitions": null,
                    "replicationFactor": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kafka:index/topic:Topic::topic-t_101_streamlog",
                "custom": true,
                "id": "t_101_streamlog",
                "type": "kafka:index/topic:Topic",
                "inputs": {
                    "__defaults": [],
                    "config": {
                        "__defaults": [],
                        "retention.ms": 432000000
                    },
                    "name": "t_101_streamlog",
                    "partitions": 10,
                    "replicationFactor": 3
                },
                "outputs": {
                    "config": {
                        "retention.ms": "432000000"
                    },
                    "id": "t_101_streamlog",
                    "name": "t_101_streamlog",
                    "partitions": 10,
                    "replicationFactor": 3
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kafka::kafka-provider::fce5bff4-1475-43e5-85d8-df7430cb774d",
                "propertyDependencies": {
                    "config": null,
                    "name": null,
                    "partitions": null,
                    "replicationFactor": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kafka:index/topic:Topic::topic-t_101_featurelog",
                "custom": true,
                "id": "t_101_featurelog",
                "type": "kafka:index/topic:Topic",
                "inputs": {
                    "__defaults": [],
                    "config": {
                        "__defaults": [],
                        "retention.ms": 432000000
                    },
                    "name": "t_101_featurelog",
                    "partitions": 10,
                    "replicationFactor": 3
                },
                "outputs": {
                    "config": {
                        "retention.ms": "432000000"
                    },
                    "id": "t_101_featurelog",
                    "name": "t_101_featurelog",
                    "partitions": 10,
                    "replicationFactor": 3
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kafka::kafka-provider::fce5bff4-1475-43e5-85d8-df7430cb774d",
                "propertyDependencies": {
                    "config": null,
                    "name": null,
                    "partitions": null,
                    "replicationFactor": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kafka:index/topic:Topic::topic-t_101_profilelog",
                "custom": true,
                "id": "t_101_profilelog",
                "type": "kafka:index/topic:Topic",
                "inputs": {
                    "__defaults": [],
                    "config": {
                        "__defaults": [],
                        "retention.ms": -1
                    },
                    "name": "t_101_profilelog",
                    "partitions": 1,
                    "replicationFactor": 3
                },
                "outputs": {
                    "config": {
                        "retention.ms": "-1"
                    },
                    "id": "t_101_profilelog",
                    "name": "t_101_profilelog",
                    "partitions": 1,
                    "replicationFactor": 3
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kafka::kafka-provider::fce5bff4-1475-43e5-85d8-df7430cb774d",
                "propertyDependencies": {
                    "config": null,
                    "name": null,
                    "partitions": null,
                    "replicationFactor": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kafka:index/topic:Topic::topic-t_101_aggr_offline_transform",
                "custom": true,
                "id": "t_101_aggr_offline_transform",
                "type": "kafka:index/topic:Topic",
                "inputs": {
                    "__defaults": [],
                    "config": {
                        "__defaults": []
                    },
                    "name": "t_101_aggr_offline_transform",
                    "partitions": 1,
                    "replicationFactor": 3
                },
                "outputs": {
                    "id": "t_101_aggr_offline_transform",
                    "name": "t_101_aggr_offline_transform",
                    "partitions": 1,
                    "replicationFactor": 3
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kafka::kafka-provider::fce5bff4-1475-43e5-85d8-df7430cb774d",
                "propertyDependencies": {
                    "config": null,
                    "name": null,
                    "partitions": null,
                    "replicationFactor": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kafka:index/topic:Topic::topic-t_101_actionlog_json",
                "custom": true,
                "id": "t_101_actionlog_json",
                "type": "kafka:index/topic:Topic",
                "inputs": {
                    "__defaults": [],
                    "config": {
                        "__defaults": [],
                        "retention.ms": 432000000
                    },
                    "name": "t_101_actionlog_json",
                    "partitions": 1,
                    "replicationFactor": 3
                },
                "outputs": {
                    "config": {
                        "retention.ms": "432000000"
                    },
                    "id": "t_101_actionlog_json",
                    "name": "t_101_actionlog_json",
                    "partitions": 1,
                    "replicationFactor": 3
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kafka::kafka-provider::fce5bff4-1475-43e5-85d8-df7430cb774d",
                "propertyDependencies": {
                    "config": null,
                    "name": null,
                    "partitions": null,
                    "replicationFactor": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-glue-role",
                "custom": true,
                "id": "t-101-gluerole-20220824192440895300000001",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "path"
                    ],
                    "assumeRolePolicy": "{\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Effect\": \"Allow\",\n                    \"Principal\": {\n                        \"Service\": \"glue.amazonaws.com\"\n                    },\n                    \"Action\": \"sts:AssumeRole\"\n                }\n            ]\n        }",
                    "description": "IAM role for AWS GLUE job",
                    "forceDetachPolicies": false,
                    "maxSessionDuration": 3600,
                    "namePrefix": "t-101-gluerole-",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:role/t-101-gluerole-20220824192440895300000001",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"glue.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2022-08-24T19:24:41Z",
                    "description": "IAM role for AWS GLUE job",
                    "forceDetachPolicies": false,
                    "id": "t-101-gluerole-20220824192440895300000001",
                    "inlinePolicies": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "t-101-gluerole-20220824192440895300000001",
                    "namePrefix": "t-101-gluerole-",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAQOLFGTNXPZRDMURWO"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::glue-job-aws-provider::a55682fa-be50-4d32-8015-99c5170582c2",
                "propertyDependencies": {
                    "assumeRolePolicy": null,
                    "description": null,
                    "namePrefix": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Release::t-101-unleash",
                "custom": true,
                "id": "t-101/t-101-unleash",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "unleash",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "t-101-unleash",
                    "namespace": "t-101",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://docs.getunleash.io/helm-charts",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ConfigMap/v1": [
                            "t-101-unleash"
                        ],
                        "Deployment.apps/apps/v1": [
                            "t-101-unleash"
                        ],
                        "Pod/v1": [
                            "t-101-unleash-test-connection"
                        ],
                        "Service/v1": [
                            "t-101-unleash"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "configMaps": {
                            "index.js": {
                                "content": "\n                        'use strict';\n                        const unleash = require('unleash-server');\n\n                        unleash.start({\n                            authentication: {\n                                enableApiToken: false,\n                                type: 'none',\n                            }\n                        });\n                    ",
                                "mountPath": "/unleash/index.js"
                            }
                        },
                        "containerPort": 4242,
                        "dbConfig": {
                            "database": "t_101_unleashdb",
                            "host": "p-3-postgres-db-20220714170049754900000002.cluster-c00d7gkxaysk.us-west-2.rds.amazonaws.com",
                            "pass": "password",
                            "port": 5432,
                            "user": "username"
                        },
                        "fullnameOverride": "t-101-unleash",
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND",
                            "kubernetes.io/arch": "amd64"
                        },
                        "postgresql": {
                            "enabled": false
                        }
                    },
                    "verify": false,
                    "version": "2.6.1",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABABC3e4ZoIL/sO02e9BQtNUQlEfgUfIRosUbl1+S9KuAgdRXz3K+VstqIbYsfzwn7y57ypWsxom8s61Q4Kg1AzBidYKhvbrgph3NmyotNypx1AWTEQRRrn7s16EGb/XJbFC/ISOjQOWrfokh+v/1IU6a1pAt8Pu39TZLb47jFOezUPMkS5VsvlHCVMtZKBTXUOy33coHbYkOJvpUjAiO/nOXw/j2vj/+i7pUYMjUsegYBrJS14F6HLR7kbqZNY0yB5ukUAYsQk+HdBQv6FVpqQJZENuAK+YOcc8YJAXbN3zPsUp3NqkTl6ZFK1cHU3C0zKm82YFdL2j6789Vl+F6l2NnTSnajLq3WpN96zQtE6AEZaKhNp/iAC3KTjgsiw9/aZcfM7HCbGPP01xv8p3pXLT8gtjQ+4AxZ8QbgGdDdq2P7KbOrkgE5pKYasICV7Vt8FgEBppVPbEi0qJv4BfKMleuVb46EbppgwdMRrSheHuiRa/JRXZ7a/nofAVCPklS9sSX4ZJgNcJzJGKrYEtxbS7KRjcajAFWxGCCgyj6HPii32npxs0U8pRD7ZQgODYEcCDpmwsKaIaOPecSXEX596Xf1hoyL9CDPUhHt8JEBcYuAW3wSqHQuvCFYu76DCxpmYVaN18C/E/Nfy8xyx8ZCNZGFnsEONLNugNz6GDC7ohlmnmS2RLK33PYznfYOgmIGjlFux+IhvHS/YKkwMYyKg0CdseTUmTUG0HM8ewv6JbxJxtXA/Hit/SvUuNMSTnZ0oRedSjSAemQ+HBJhkoFOOzfj3FcoHarDlruUuJX1VonKy4O+/ONxM7Yg72nL48wnWyQs2OytpLUCHs1I+Ez+cpF+D/38ZoBgQfdIUZk2UD1qBWbJKc7nT7574pZf+D7QbGLjdw3mqqXLRhBWMg/RICXzzwevCMCJOVnDwdT4ghnubO5ZtqRQq8NBK98xU3fQBpaBvGufei+MEQk8MVks3S+6RU9a/CLx4M27rOLW/WbTkLlTnrXXubsxUmakQ1nGdb/qqlltB6DWsPbzCB4vrwjuJJMlDsSH1XLbpkmTbPTCaYHQiVkVJmd3LQBHaCf0gFLbr1uOo7AWN7fh9hCLljWCX1D5SadvTTdUs5ks4rxxTj+pi6hqpry4W63X5rDeEwvQ/ICR08RyFuk4obuWREoTkRW5j705lb5rvILEQ064XxCdAV8Pyi+Ux/N4gpE6mM3/Tc8dJSvEGJDb8JXIOK/mlgzwn9qFF2Ce7nyYyh3YGP3phva+/fTzFE4JDMulnS480pz5eoROBZWTIcd/SDJP0/ZHp+uDAKiyKO+LBVvBJWBwEgzJP3gmu3OOqDs5YwPRrDDxfKl3NetOebUFS8y5IHjG9kXQlbDhCmySIcUY69PwrjQS4wv4hkyQHa2GdNcHKZ23pm2sOWLVFiOrBtr5D+qj8ygW72jyD1TwsVx5qQmV2T48cYYZXUudZ+vtC4oEGrptKUd7zFd5IZzHEPRHI3tk1Amc36Nkb2vwLlvK6QBgJ1lH8OO/rh/2VASVJmVXTDd6V2nb/adCXo1kuqwiegKz01MOH7lisQ+B4safudwWgeDWrqict4oeS7ZJ0aUrN9zXfe8/nBMwRJ2UqM0exnbxLSf+EQUsEyuPl3d+C8kQ4Twvphdc7CLuBHGD30kztHlD+NeJvXyr+j4A7oGBnpClr/1IeBXvgp+jB72crcdK43xSraAiXcal66IgiHMK/Yt9qpzHb1/TJamSkjO4YxRqrRo8/BNhPqbo3YVFu2+VUxs6fi8qOCwmLnXUPR4/wb1UMukldDgRIwrjx/RFW8ZVh0cgM0MKS7/xny3oT5H9qwwbumRokh2bcWFZa8IT0jyIAyD+K9N46VBcNe9Cx8h/9IooyvqB2Z00s9064FoTzcFqUGgttVX5Wos0spp2ZbcLq88phloKBKNwh7lONKBl8+cUR02jvmCIKTEc1BvBFEFkZzThcZ6pRF2LX3v1pCvKTzN31ixoMfYPLgTM+9oBulf2gvPkHEmFqvqh/FQnUMndXEsh/WgOQr1p2ePrnRdeqZ7GdaGRF1GfyvTu1IrjiEsuQpnSKeo0eUZ+n52CES97Eg7orMmnCTlD9hjFh32oeNgrrRYGxBVIr7SqgobZCrKsrY2ZNL2J41wUDYVxVkzbm+RJc6eYqgQ8LA7fkpH2r/qdl6AtoO7mchpFvYHjN/YpF7Ib0dAWUSak0CSRIfcQgWIGIYEc4ruUxeXr5LgJPot+Fq9JbzKluA=="
                    },
                    "atomic": false,
                    "chart": "unleash",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "t-101-unleash",
                    "namespace": "t-101",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://docs.getunleash.io/helm-charts",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ConfigMap/v1": [
                            "t-101-unleash"
                        ],
                        "Deployment.apps/apps/v1": [
                            "t-101-unleash"
                        ],
                        "Service/v1": [
                            "t-101-unleash"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "4.4.4",
                        "chart": "unleash",
                        "name": "t-101-unleash",
                        "namespace": "t-101",
                        "revision": 1,
                        "status": "deployed",
                        "version": "2.6.1"
                    },
                    "timeout": 300,
                    "values": {
                        "configMaps": {
                            "index.js": {
                                "content": "\n                        'use strict';\n                        const unleash = require('unleash-server');\n\n                        unleash.start({\n                            authentication: {\n                                enableApiToken: false,\n                                type: 'none',\n                            }\n                        });\n                    ",
                                "mountPath": "/unleash/index.js"
                            }
                        },
                        "containerPort": 4242,
                        "dbConfig": {
                            "database": "t_101_unleashdb",
                            "host": "p-3-postgres-db-20220714170049754900000002.cluster-c00d7gkxaysk.us-west-2.rds.amazonaws.com",
                            "pass": "password",
                            "port": 5432,
                            "user": "username"
                        },
                        "fullnameOverride": "t-101-unleash",
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND",
                            "kubernetes.io/arch": "amd64"
                        },
                        "postgresql": {
                            "enabled": false
                        }
                    },
                    "verify": false,
                    "version": "2.6.1",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::t-101-unleash-k8s-provider::492aae4a-68d1-4315-b578-c1f438b54d2e",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "name": null,
                    "repositoryOpts": null,
                    "values": null,
                    "version": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:getambassador.io/v3alpha1:Listener::https-listener",
                "custom": true,
                "id": "t-101/https-listener",
                "type": "kubernetes:getambassador.io/v3alpha1:Listener",
                "inputs": {
                    "apiVersion": "getambassador.io/v3alpha1",
                    "kind": "Listener",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "https-listener",
                        "namespace": "t-101"
                    },
                    "spec": {
                        "hostBinding": {
                            "namespace": {
                                "from": "SELF"
                            }
                        },
                        "port": 8443,
                        "protocol": "HTTPS",
                        "securityModel": "XFP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "getambassador.io/v3alpha1",
                    "__inputs": {
                        "apiVersion": "getambassador.io/v3alpha1",
                        "kind": "Listener",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "https-listener",
                            "namespace": "t-101"
                        },
                        "spec": {
                            "hostBinding": {
                                "namespace": {
                                    "from": "SELF"
                                }
                            },
                            "port": 8443,
                            "protocol": "HTTPS",
                            "securityModel": "XFP"
                        }
                    },
                    "apiVersion": "getambassador.io/v3alpha1",
                    "kind": "Listener",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"getambassador.io/v3alpha1\",\"kind\":\"Listener\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"https-listener\",\"namespace\":\"t-101\"},\"spec\":{\"hostBinding\":{\"namespace\":{\"from\":\"SELF\"}},\"port\":8443,\"protocol\":\"HTTPS\",\"securityModel\":\"XFP\"}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:40Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "getambassador.io/v3alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        ".": {},
                                        "f:hostBinding": {
                                            ".": {},
                                            "f:namespace": {
                                                ".": {},
                                                "f:from": {}
                                            }
                                        },
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:securityModel": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:40Z"
                            }
                        ],
                        "name": "https-listener",
                        "namespace": "t-101",
                        "resourceVersion": "57162644",
                        "uid": "d1421391-dc3c-4bf7-8195-a32c7aa29046"
                    },
                    "spec": {
                        "hostBinding": {
                            "namespace": {
                                "from": "SELF"
                            }
                        },
                        "port": 8443,
                        "protocol": "HTTPS",
                        "securityModel": "XFP"
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::ingress-k8s-provider::ac212244-fd50-4350-9d41-d0e023911bc3",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:getambassador.io/v3alpha1:Listener::http-listener",
                "custom": true,
                "id": "t-101/http-listener",
                "type": "kubernetes:getambassador.io/v3alpha1:Listener",
                "inputs": {
                    "apiVersion": "getambassador.io/v3alpha1",
                    "kind": "Listener",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "http-listener",
                        "namespace": "t-101"
                    },
                    "spec": {
                        "hostBinding": {
                            "namespace": {
                                "from": "SELF"
                            }
                        },
                        "port": 8080,
                        "protocol": "HTTPS",
                        "securityModel": "XFP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "getambassador.io/v3alpha1",
                    "__inputs": {
                        "apiVersion": "getambassador.io/v3alpha1",
                        "kind": "Listener",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "http-listener",
                            "namespace": "t-101"
                        },
                        "spec": {
                            "hostBinding": {
                                "namespace": {
                                    "from": "SELF"
                                }
                            },
                            "port": 8080,
                            "protocol": "HTTPS",
                            "securityModel": "XFP"
                        }
                    },
                    "apiVersion": "getambassador.io/v3alpha1",
                    "kind": "Listener",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"getambassador.io/v3alpha1\",\"kind\":\"Listener\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"http-listener\",\"namespace\":\"t-101\"},\"spec\":{\"hostBinding\":{\"namespace\":{\"from\":\"SELF\"}},\"port\":8080,\"protocol\":\"HTTPS\",\"securityModel\":\"XFP\"}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:40Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "getambassador.io/v3alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        ".": {},
                                        "f:hostBinding": {
                                            ".": {},
                                            "f:namespace": {
                                                ".": {},
                                                "f:from": {}
                                            }
                                        },
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:securityModel": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:40Z"
                            }
                        ],
                        "name": "http-listener",
                        "namespace": "t-101",
                        "resourceVersion": "57162643",
                        "uid": "bd93e5f4-2301-4cfd-a977-be6b006ce80a"
                    },
                    "spec": {
                        "hostBinding": {
                            "namespace": {
                                "from": "SELF"
                            }
                        },
                        "port": 8080,
                        "protocol": "HTTPS",
                        "securityModel": "XFP"
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::ingress-k8s-provider::ac212244-fd50-4350-9d41-d0e023911bc3",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:postgresql::postgresql-provider",
                "custom": true,
                "id": "1b2786a0-6580-4f0f-9209-07a35717ecb1",
                "type": "pulumi:providers:postgresql",
                "inputs": {
                    "connectTimeout": "180",
                    "databaseUsername": "username",
                    "host": "p-3-postgres-db-20220714170049754900000002.cluster-c00d7gkxaysk.us-west-2.rds.amazonaws.com",
                    "password": "password",
                    "port": "5432",
                    "superuser": "true",
                    "username": "username",
                    "version": "3.4.0"
                },
                "outputs": {
                    "connectTimeout": "180",
                    "databaseUsername": "username",
                    "host": "p-3-postgres-db-20220714170049754900000002.cluster-c00d7gkxaysk.us-west-2.rds.amazonaws.com",
                    "password": "password",
                    "port": "5432",
                    "superuser": "true",
                    "username": "username",
                    "version": "3.4.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "connectTimeout": null,
                    "databaseUsername": null,
                    "host": null,
                    "password": null,
                    "port": null,
                    "superuser": null,
                    "username": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:iam/policy:Policy::t-101-tier-eks-instance-policy",
                "custom": true,
                "id": "arn:aws:iam::030813887342:policy/t-101-tier-eks-instance-policy20220824192440205300000001",
                "type": "aws:iam/policy:Policy",
                "inputs": {
                    "__defaults": [
                        "path"
                    ],
                    "namePrefix": "t-101-tier-eks-instance-policy",
                    "path": "/",
                    "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":[\"s3:ListBucket\"],\"Resource\":[\"arn:aws:s3:::t-101-model-store\",\"arn:aws:s3:::t-101-pprof-store\",\"arn:aws:s3:::t-101-offline-aggregate-output\"]},{\"Effect\":\"Allow\",\"Action\":[\"s3:PutObject\",\"s3:GetObject\"],\"Resource\":[\"arn:aws:s3:::t-101-model-store/*\",\"arn:aws:s3:::t-101-pprof-store/*\",\"arn:aws:s3:::t-101-offline-aggregate-output/*\"]},{\"Effect\":\"Allow\",\"Action\":[\"s3:DeleteObject\"],\"Resource\":[\"arn:aws:s3:::t-101-model-store/*\",\"arn:aws:s3:::t-101-pprof-store/*\",\"arn:aws:s3:::t-101-offline-aggregate-output/*\"]},{\"Effect\":\"Allow\",\"Action\":[\"glue:CreateTrigger\",\"glue:ListTriggers\",\"glue:DeleteTrigger\"],\"Resource\":\"*\"}]}"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:policy/t-101-tier-eks-instance-policy20220824192440205300000001",
                    "description": "",
                    "id": "arn:aws:iam::030813887342:policy/t-101-tier-eks-instance-policy20220824192440205300000001",
                    "name": "t-101-tier-eks-instance-policy20220824192440205300000001",
                    "namePrefix": "t-101-tier-eks-instance-policy",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"s3:ListBucket\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:s3:::t-101-model-store\",\"arn:aws:s3:::t-101-pprof-store\",\"arn:aws:s3:::t-101-offline-aggregate-output\"]},{\"Action\":[\"s3:PutObject\",\"s3:GetObject\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:s3:::t-101-model-store/*\",\"arn:aws:s3:::t-101-pprof-store/*\",\"arn:aws:s3:::t-101-offline-aggregate-output/*\"]},{\"Action\":[\"s3:DeleteObject\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:s3:::t-101-model-store/*\",\"arn:aws:s3:::t-101-pprof-store/*\",\"arn:aws:s3:::t-101-offline-aggregate-output/*\"]},{\"Action\":[\"glue:CreateTrigger\",\"glue:ListTriggers\",\"glue:DeleteTrigger\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                    "policyId": "ANPAQOLFGTNXLFYKFJ7WD",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::tier-eks-instance-iam-policy-provider::c7326e6a-5bb1-4f5c-966f-f6215b33d25b",
                "propertyDependencies": {
                    "namePrefix": null,
                    "policy": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:s3/bucket:Bucket::tier-pprof-store-bucket",
                "custom": true,
                "id": "t-101-pprof-store",
                "type": "aws:s3/bucket:Bucket",
                "inputs": {
                    "__defaults": [],
                    "acl": "private",
                    "bucket": "t-101-pprof-store",
                    "forceDestroy": true
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::t-101-pprof-store",
                    "bucket": "t-101-pprof-store",
                    "bucketDomainName": "t-101-pprof-store.s3.amazonaws.com",
                    "bucketRegionalDomainName": "t-101-pprof-store.s3.us-west-2.amazonaws.com",
                    "corsRules": [],
                    "forceDestroy": true,
                    "grants": [],
                    "hostedZoneId": "Z3BJ6K6RIION7M",
                    "id": "t-101-pprof-store",
                    "lifecycleRules": [],
                    "loggings": [],
                    "objectLockConfiguration": null,
                    "region": "us-west-2",
                    "replicationConfiguration": null,
                    "requestPayer": "BucketOwner",
                    "serverSideEncryptionConfiguration": null,
                    "tags": {},
                    "tagsAll": {},
                    "versioning": {
                        "enabled": false,
                        "mfaDelete": false
                    },
                    "website": null
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::pprof-bucket-provider::5a0815f8-1a58-4265-a590-14a455715085",
                "propertyDependencies": {
                    "acl": null,
                    "bucket": null,
                    "forceDestroy": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::t-101-sagemaker-allow-eks",
                "custom": true,
                "id": "sgrule-2488659748",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-0438f8bd60aa86f49",
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "fromPort": 0,
                    "id": "sgrule-2488659748",
                    "protocol": "tcp",
                    "securityGroupId": "sg-0438f8bd60aa86f49",
                    "self": false,
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:ec2/securityGroup:SecurityGroup::t-101-sagemaker-sg"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::sagemaker-aws-provider::e1ab3915-d86f-4315-aaa5-15c5596547da",
                "propertyDependencies": {
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:tier-101::launchpad::aws:ec2/securityGroup:SecurityGroup::t-101-sagemaker-sg"
                    ],
                    "sourceSecurityGroupId": null,
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:iam/rolePolicy:RolePolicy::t-101-sagemaker-rolepolicy",
                "custom": true,
                "id": "t-101-sagemakerrole-20220824192436828800000001:t-101-sagemaker-rolepolicy",
                "type": "aws:iam/rolePolicy:RolePolicy",
                "inputs": {
                    "__defaults": [],
                    "name": "t-101-sagemaker-rolepolicy",
                    "policy": "{\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": \"s3:ListBucket\",\n                    \"Resource\": \"arn:aws:s3:::t-101-model-store\"\n                },\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": [\n                        \"s3:PutObject\",\n                        \"s3:GetObject\",\n                        \"s3:DeleteObject\"\n                    ],\n                    \"Resource\": \"arn:aws:s3:::t-101-model-store/*\"\n                }\n            ]\n        }",
                    "role": "t-101-sagemakerrole-20220824192436828800000001"
                },
                "outputs": {
                    "id": "t-101-sagemakerrole-20220824192436828800000001:t-101-sagemaker-rolepolicy",
                    "name": "t-101-sagemaker-rolepolicy",
                    "policy": "{\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": \"s3:ListBucket\",\n                    \"Resource\": \"arn:aws:s3:::t-101-model-store\"\n                },\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": [\n                        \"s3:PutObject\",\n                        \"s3:GetObject\",\n                        \"s3:DeleteObject\"\n                    ],\n                    \"Resource\": \"arn:aws:s3:::t-101-model-store/*\"\n                }\n            ]\n        }",
                    "role": "t-101-sagemakerrole-20220824192436828800000001"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-sagemaker-role"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::sagemaker-aws-provider::e1ab3915-d86f-4315-aaa5-15c5596547da",
                "propertyDependencies": {
                    "name": null,
                    "policy": null,
                    "role": [
                        "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-sagemaker-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::t-101-sagemaker-fullaccess-execrole",
                "custom": true,
                "id": "t-101-sagemakerrole-20220824192436828800000001-20220824192441710700000002",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
                    "role": "t-101-sagemakerrole-20220824192436828800000001"
                },
                "outputs": {
                    "id": "t-101-sagemakerrole-20220824192436828800000001-20220824192441710700000002",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
                    "role": "t-101-sagemakerrole-20220824192436828800000001"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-sagemaker-role"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::sagemaker-aws-provider::e1ab3915-d86f-4315-aaa5-15c5596547da",
                "propertyDependencies": {
                    "policyArn": null,
                    "role": [
                        "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-sagemaker-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:kafka.strimzi.io/v1beta2:KafkaMirrorMaker2::mirror-maker2-crd",
                "custom": true,
                "id": "strimzi/t-101-mirrormaker2",
                "type": "kubernetes:kafka.strimzi.io/v1beta2:KafkaMirrorMaker2",
                "inputs": {
                    "apiVersion": "kafka.strimzi.io/v1beta2",
                    "kind": "KafkaMirrorMaker2",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "t-101-mirrormaker2",
                        "namespace": "strimzi"
                    },
                    "spec": {
                        "clusters": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAO45KH7NXU3ImD8kDYVzyNSlFouZSzYqRLEr+tErGmhT6biWWqs+MmuL+fCDRVUliwEKBE3WgeT/6bB06iNXF+XcryYHROFuXgXchloM8y2snjhq6XEiaiISa7jlg86HgO68YDZ/nwaFZfE9tyPQwwEE3BA/Ti+Gxu5vxHN+fijay2aXQAj7i8cYfbxAQgfJXJUCXLOY6f5vaaZ49/tlOtr7z8zle0gBsV6ceZFL8czNIKQq0cK8W2rV3U0jBPZx5fV7tjI7yetxqgJ7GOpiEb9k0aelsHMe8sSa6xaml6fIcneAdDfPB6nxrePBoqqaKdDplCdnLgm63Atwbd2L8hDCf2CriRtg/33gfTeVCjBYmF9N/EGWBWc+bwLtb1d9oPUEZ/F094msp5srLxNzs5PnRJSaovHVhJW2g42tv54i+8kUUOs+9778EskPlwZUCZ/uDqOJX+Ze+/DmjkS49a/Us3GIWJWIQ6Xy59u2rgeC6NfMBGoibYj4sjqpdL83V4golr7pu/MWE+IejwBcBJP3dfdMfflILmaY1w1P3jnYx0IVt+7rvMHzx7g5f4UZl14ogqTWiRn9RNXYpOXV0+KfSjLOCaPeWQLm4HB0rAjK+GgiXqeTzB0rzyBT4Cje0a9M031IEBMQQz++OMZ/r1D2xq6KtGlkE2wY8iXCZF6UfKSa15Vr7pQKw90S9+Gg4yZyWP43bLJSZNfz2H5vb7bCS23tg00oFQKq4VdeoZ7CDV/MXomCg1twsj4gHr84FP4wotfc/42BNd4XPat+X/Hzgpccrh87bt14TwmNU067cReAwn+4kpzzeGgiVbbNpOyQRHjplhyJMkoRcXovmRVhy/5qmL0jGQluhJxIegRpavAjNSiM1bK5IqwPL8bO7aSv1ZDcPvi7S0/o5jKuzeUrhPZ1vuWutIFXOU1nMwhG1Udu3jWXKOmfaUKzWx2jIzdPbE+HLLjeU/d3HDGvdYaklQX87Bfet2yByMrspQWVdLJNbbzmlNC3RD25WZK/de4JkWOS7bAOoFS91F+ChKkPmXiDTPcQUFIj18a1LYqHbKIF"
                        },
                        "connectCluster": "target-cluster",
                        "metricsConfig": {
                            "type": "jmxPrometheusExporter",
                            "valueFrom": {
                                "configMapKeyRef": {
                                    "key": "metrics-config.yml",
                                    "name": "mirror-maker2-metrics"
                                }
                            }
                        },
                        "mirrors": [
                            {
                                "checkpointConnector": {
                                    "config": {
                                        "checkpoints.topic.replication.factor": 2,
                                        "emit.checkpoints.interval.seconds": 10,
                                        "offset-syncs.topic.location": "target",
                                        "replication.policy.class": "io.strimzi.kafka.connect.mirror.IdentityReplicationPolicy",
                                        "sync.group.offsets.enabled": true,
                                        "sync.group.offsets.interval.seconds": 10
                                    },
                                    "tasksMax": 10
                                },
                                "groupsPattern": ".*",
                                "heartbeatConnector": {
                                    "config": {
                                        "heartbeats.topic.replication.factor": 2
                                    }
                                },
                                "sourceCluster": "source-cluster",
                                "sourceConnector": {
                                    "config": {
                                        "offset-syncs.topic.location": "target",
                                        "offset-syncs.topic.replication.factor": 2,
                                        "replication.factor": 2,
                                        "replication.policy.class": "io.strimzi.kafka.connect.mirror.IdentityReplicationPolicy"
                                    },
                                    "tasksMax": 10
                                },
                                "targetCluster": "target-cluster",
                                "topicsPattern": "t_101_actionlog|t_101_featurelog|t_101_profilelog|t_101_actionlog_json|t_101_aggr_offline_transform|t_101_streamlog|t_101_hourly_usage_log"
                            }
                        ],
                        "replicas": 1,
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "4Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "1Gi"
                            }
                        },
                        "template": {
                            "pod": {
                                "affinity": {
                                    "nodeAffinity": {
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "kubernetes.io/arch",
                                                            "operator": "In",
                                                            "values": [
                                                                "amd64"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                },
                                "metadata": {
                                    "annotations": {
                                        "prometheus.io/port": 9404,
                                        "prometheus.io/scrape": true
                                    }
                                }
                            }
                        },
                        "version": "3.2.0"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-d40c95cc",
                    "__initialApiVersion": "kafka.strimzi.io/v1beta2",
                    "__inputs": {
                        "apiVersion": "kafka.strimzi.io/v1beta2",
                        "kind": "KafkaMirrorMaker2",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "t-101-mirrormaker2",
                            "namespace": "strimzi"
                        },
                        "spec": {
                            "clusters": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "AAABAPhfBB52/+evWUzrNodxP9NvOTQQai1cSui/SpnYxQXT84Wj53VsQ5BNrTD2fmYrZZNwaNGVbvJylIBS2G4PoixXptNpJ0/WM2RqQZTad9u0/igV8mXlFsKfLVhhsmATcK5AG7tBQtxYOGsSRX6TLsqwSuCIevSKAsWIw8ZV5BnD12cgknI9IKPTOwwdSsr4UUyo755S52v4TNiiwV+xVtpfRqUqI0hVo0c0zKIxl11UrZVy4PSGifpMU/qMugV5//OLB5KhYRXwWvrvepmoud9L+Ktj9/MewxV+dcT5aS4uBB0wJyFDSaoYvcuCQhPnnzTIEHK0nXyRsx5e84D10cLucyZlreCsoEanH4RodxVFwHo7aaCvvCeI2pbUFHnJ2w2jq4Xs02kNd4zBGcXfB9OVRqYddStUO83rX4U5YzFqs86rdRCT2OVxegpLm5Ktjensv/GH7nYX/EuluzjihHSa6r5Ws0qy5llm4OWyZr/kXU4J6Kva4lodPfwMRzO4MlpOp0LJVQWGXD6sWA3UD1sZ1Dd1P0upVH7jtrpgehwe4rELeSRX78+2L+ZK4ZdcQZEt9dJ23IO1LXNHs080QVWcSce69R70T1n0h/nnC+znoPnX2XfbYPNqXtYj3Vo/ltPibfAySfJfVH07/UCZboEb6t+HVPh/OPvsHuE+iJuiCLYrSAb1xAa4OCFswlsvkBEa5NLHIdCkFjijHshJQeBPbmNv+UiGJAf+Rqwg0qQKklT+0bokjwW9bPP64BPa3Z2jz9+VfL5TXoyYv3yWSec+UWgi9KszZGscux3/tr3ahqxGdjF6yohUtJFbfGDpX9k+ec85g8GF2GqZpa1muAmLsBb9437h7hMYNShGIpznlGYI5+mAOKRKhAl/6ZqVhpuvAQun0axEsq9aG++yQqV1VxCn66ajqCdsg3vIIy0yu2AhkeNmu8UfuoZo0FKsysBNGuInoxusrPKXdBM3r5db10awGrWNYYVrFFz26Z3ZNx4gcNW7NaLoQfwW0CvWIrNOybsNjlis6bAnlScJ1zV8kSYvdcXRUrS4iSIzRwPjsme2"
                            },
                            "connectCluster": "target-cluster",
                            "metricsConfig": {
                                "type": "jmxPrometheusExporter",
                                "valueFrom": {
                                    "configMapKeyRef": {
                                        "key": "metrics-config.yml",
                                        "name": "mirror-maker2-metrics"
                                    }
                                }
                            },
                            "mirrors": [
                                {
                                    "checkpointConnector": {
                                        "config": {
                                            "checkpoints.topic.replication.factor": 2,
                                            "emit.checkpoints.interval.seconds": 10,
                                            "offset-syncs.topic.location": "target",
                                            "replication.policy.class": "io.strimzi.kafka.connect.mirror.IdentityReplicationPolicy",
                                            "sync.group.offsets.enabled": true,
                                            "sync.group.offsets.interval.seconds": 10
                                        },
                                        "tasksMax": 10
                                    },
                                    "groupsPattern": ".*",
                                    "heartbeatConnector": {
                                        "config": {
                                            "heartbeats.topic.replication.factor": 2
                                        }
                                    },
                                    "sourceCluster": "source-cluster",
                                    "sourceConnector": {
                                        "config": {
                                            "offset-syncs.topic.location": "target",
                                            "offset-syncs.topic.replication.factor": 2,
                                            "replication.factor": 2,
                                            "replication.policy.class": "io.strimzi.kafka.connect.mirror.IdentityReplicationPolicy"
                                        },
                                        "tasksMax": 10
                                    },
                                    "targetCluster": "target-cluster",
                                    "topicsPattern": "t_101_actionlog|t_101_featurelog|t_101_profilelog|t_101_actionlog_json|t_101_aggr_offline_transform|t_101_streamlog|t_101_hourly_usage_log"
                                }
                            ],
                            "replicas": 1,
                            "resources": {
                                "limits": {
                                    "cpu": "2",
                                    "memory": "4Gi"
                                },
                                "requests": {
                                    "cpu": "1",
                                    "memory": "1Gi"
                                }
                            },
                            "template": {
                                "pod": {
                                    "affinity": {
                                        "nodeAffinity": {
                                            "requiredDuringSchedulingIgnoredDuringExecution": {
                                                "nodeSelectorTerms": [
                                                    {
                                                        "matchExpressions": [
                                                            {
                                                                "key": "kubernetes.io/arch",
                                                                "operator": "In",
                                                                "values": [
                                                                    "amd64"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "metadata": {
                                        "annotations": {
                                            "prometheus.io/port": 9404,
                                            "prometheus.io/scrape": true
                                        }
                                    }
                                }
                            },
                            "version": "3.2.0"
                        }
                    },
                    "apiVersion": "kafka.strimzi.io/v1beta2",
                    "kind": "KafkaMirrorMaker2",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "AAABAEj+m5xTleFMrz8ZDlK+gIUx+vpdLha/8xzXsn4JQndrTTlOMjZ99tBsRCkuymQF7kHrVo1BDcXUggdll0LCDVgGPUeRzO9pPexdckNzMc1lNc7+F5uhjuf0jXAH1P7uV5J1VOxWvRdb6SoQbKQzFw+8D4Bmq5um85HOIcyRUW7K4UTIX8BlS453fMp6DiPc5dyrGEI4Ztok694fv1u0vBWXa/kC/McUT+4USWW0ivDL/JEGuDdpbsO7Ou9MRLYcOylQTJV5YwU1hJ2TcaJNIbeYh8do6uo76YKPpbDfORFFTQnm/tyrU2CesAt8ja3p6JoNGNV7oI+OK5YsgqgJhh0BxlcxHjkD4iB17SJc1lzQCNSNMAI7GxRzMxGzV/3jBIqEg5nfsxsBUxOHhT4VGhW4jHPJDz82rdMjZp+vHNTt0eD46Ve9Lo94YkMExMCGCSRLNe8hktBhEpOo0EKkpTdR1swIansAjx3DVKAmXVNP5zV1W1WTkREeyWDHXizx3uuM6ldEMSNKx0aZtpPwb+cx18ECtIrCGCV3IBIoba9s0XByQD0mUfw2I8bahbZcBvQmZB56zLccpgyuy5vyfDK4U8HYyvkXI2MKy0BY2lJW8l+aNrzZlfWllseG282uH82urIGdshfzh1925pPaDJIA0IIX4fMdDpKmPfgvBSGFQukHmUGh5d2tYqss0cprqWWVDzQM0utkItCFta03ETIijCmSvi+eCbm64GiwtkvnKmZx+nUqQBlBjeSQykn0u+jtlmtqSIIIUyx6OYa5Gx+NTDAswu95Fx4VivO37e6a8WkSahQP9p9ZAwxxAjZ5Jb0hgTdPPHiWriP0riAx5o9KsLoaNjjUTP0M/iWM9KnA4xmBJRO+rEzy37thrqjTxmrHdwQjQr2Iw/bxNAf6gTon9hsLI8Yr0F6BoeBg7itSR8ctnmTYVF0C8hECFHmZkjYcWeiQKRMNmKMz1zYQsH9U47G/lglUZwc9EasYo4ObBv0dUAAYSPzunDaFeNJhwbdhxixNX5SSZeOfhbY4evRXAeMQNO3cWez+dQd318+kuPJV41Cqk7inNNl7+0d+57PlpQIGAVvPjBO3YvPi7qLHsIwU3364jTNMvWflJfs21DEh+J4wD1izu3ezv59PME91mU3DlHCaJHQC/dhPYomS3Mgviueoi0bYcqkxYKJe1XTq8wqUzRTAasxNgeUOkQNYqwW2XGCi4ltx6NpLaUFpvhLwKTSXg3dUBN6lzhJpXWlMBqp2685yAiWnKoUREJsmnIyOh4ex8HTyoZvKxbwD6bQmlQ9lm5MjvF3RG+jVnB55IugOdHnzEfIZ039J91397BQG76ABFKWlHTgGlFFD3pySwtxLVZC9idStPe7PywZZpkjujzM9EB9to7J0McpjoHdkcRx7zu2wVOP0Rnfs5taKcEKQ16MFJFytVn8UjHPlubjDtOB4rmhxDOOGtzK/V+34/Wkf7uK+LEBP5nOc6L/cRStDnWj52f74rvnjGZHVKbGK30URIpuan8oeu8T/qoT7nzS6Awc6sngAtin06WhnFY5JO7YqPC40JlC1VA2l9osUbJor+HqfS4PvEQvB5vGtwkoWkRstUy63QOkhVUQre9CL/Objwekijc255qrcgfZIjNJqI4/Q82GZirgtUb/mxpbD+Xj+FQhGj8hUa7Na0H/pie01+51rbjsQZMPO8v0DHVTdG1Tl+sV7qhCaRQsMKcsMQBlx04OyDeLaoHQPG8/QBogqeYP4MsdPUFYnCJbZa4FHSUwlLDyhznzrxYOP9rRCPHiUtv0wFGps0xjmMxYTbt4TEZ7eraDHnuHi6D3kOcptpaaQ1ydNUb1Tb+NtNWhVDQOUdx0tvImCYOhPIYCVzO5hK061j2V7M9hnBHhCdx4TnFo8qrdDS0eJzGhdKxzDGRcXU/cZ0dP/+PfBKwN/BI40Ng9B9xj+Bw4cEY3v09Ei2XU38XRRtAlCRGrLpDOLox+icUzSsPifAUULBF+OFAB6ytHzUIG/EARLgygqtYI4pFx5pSONp/PypAs9R+QFlCbtJxOvEMSd/IWI3ZGRsCV9CfESPktsWY5YEEHgYJQ0G+M7+B0RhSKkOtYL4eZhD0y/2y4OcygF2SpcolZLuGr2/9Ku4zD+duNqeMjmLgR58LDqb5MrO3n5rTxQcDfNzQkptLH0JRgqxZ9FuAg5T7YNydJHtsjKDSVIsYmfO9CIt948PPeM5xSjTn3Ukoy37Cz4o2CW0Ieqtz/S9id7S7GBL1PcEW+ytv18IPvJumfr9ExfCgkZWDen3MU3iPFp2nWv3lrKQAt7fMEbSMgx4hJceF1hTtUPqaOmZueMEvsCL0w3WcTRKSYdqgbMQPmB5ZL0Lk/e8DgCDJ6SqUT0UFfxn/Dh4UhFObNdXZs4hwfwSui2qjwxNKOl4i2BsvTxGNup8vfnNRqih0TWp++rWYtxtvqEBMSCDEYy8wV9SaYgdEpVfVK9k3F8VrOs2WqhIWJptr1VDAJJpkrW+KddevWu0TIAN4SKqRA1EUrsPtDBSURDUNO9mP4nT2kJkzcKRP0Vy3uKCYhvY77IPftrsxZti3cjq73XzY8BnwKwUn/RajMBxFfzEx1GS49wznU6xuttqso+J/e75tTZSSKPA1MNRxKXtGNZBEdIosOjMU2eZPUwbqvJwl5sJvxoRUbQd4VFdeSQ4gKZ9y7AL3J8ilMya9ehPX7ek7tKh621ArlApFeazK4rWT8P7A8L60e1yfS8YWWxpS7x5rvWuKna7CvgaIQrwL3gXzsILsy9koj/lBjG7ysmTNs4Y4hYIGFs9ifzKDFg5lFovTZzjea9cRIXf+WlV5tgkFuJuk2QO3CjNCQuXJA5PWgVcn3Rq5tas69vVgCs16zVrjQuclQAOnrP1xN+9154ajvUI2Gz9GdYPW1P9u13wxdeJXhAdGndmaI2TxU0g1av52HxO7ei6gW41B4kjyvUJAnRkOSkxkqb0V24rxa6guu5GFsFdGNF4bRtuWNAK7nkLtblu1f9COSRqDA38CA6nY0hiL63loe5KuE2MyTbkzali7rCiIPFfZDtQ94UTJu6o+yT+kkuP4hJ+DMvhHCDBRQNQdvit9Uo0REuZuos6vDESwAJDYsIIPYRUPjaxS7DgrYwrR4V7KxwM37PdaWbhNHOuX2+3yT1sDx+4x5uq9tLz00Lljm4D8xz2dnBXnWEzd4+KgWksUri0AyRblOP0jG6cIjvIdlOh+09SdnlvTe9RuxZsPa0TXakR7/om7VFcPBskdNn2JrIIzmtxmRCTvMgKxJkVeFHepEV8mWZTQxeDS7AtwPhZvLZq87TwIJv60pWMR8aKOBriHztpKaes9bai8Kjk2N4KJvhczR7RPyIpprGEVclgaxjfZEc4gHYbwcLzmGM7aU/Alx0SxuTr4TzpbUVnnuwLc7u1bTst0Uw+Y0n2HfYub2Bt95nql+SfVrl+FOyk+F9+9DHMTIqpL47GAsw6gZjUZeNXhLa8pytrgJOxPk7mQt8BIyzU1CrYPsfohcvpSCmXkVv0zUVIn6OJSkXMTlwnQWTan72ij2pKYXSCsJj72yNUZioATLNj/ztoLF+gZoIj+mfYjiAC5cDMeljCu+eHF021Nl4+vDUl57TXA6Q"
                            }
                        },
                        "creationTimestamp": "2022-09-02T21:57:08Z",
                        "generation": 4,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "kafka.strimzi.io/v1beta2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        ".": {},
                                        "f:clusters": {},
                                        "f:connectCluster": {},
                                        "f:metricsConfig": {
                                            ".": {},
                                            "f:type": {},
                                            "f:valueFrom": {
                                                ".": {},
                                                "f:configMapKeyRef": {
                                                    ".": {},
                                                    "f:key": {},
                                                    "f:name": {}
                                                }
                                            }
                                        },
                                        "f:mirrors": {},
                                        "f:replicas": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:limits": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            },
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:template": {
                                            ".": {},
                                            "f:pod": {
                                                ".": {},
                                                "f:affinity": {
                                                    ".": {},
                                                    "f:nodeAffinity": {
                                                        ".": {},
                                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {
                                                            ".": {},
                                                            "f:nodeSelectorTerms": {}
                                                        }
                                                    }
                                                },
                                                "f:metadata": {
                                                    ".": {},
                                                    "f:annotations": {
                                                        ".": {},
                                                        "f:prometheus.io/port": {},
                                                        "f:prometheus.io/scrape": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:version": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-03T01:22:45Z"
                            },
                            {
                                "apiVersion": "kafka.strimzi.io/v1beta2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        ".": {},
                                        "f:conditions": {},
                                        "f:observedGeneration": {},
                                        "f:replicas": {}
                                    }
                                },
                                "manager": "okhttp",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-09-09T15:19:15Z"
                            }
                        ],
                        "name": "t-101-mirrormaker2",
                        "namespace": "strimzi",
                        "resourceVersion": "64667186",
                        "uid": "e2c71093-c942-4c89-beb3-81d00b05b7ac"
                    },
                    "spec": {
                        "clusters": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAKMBKhyXK4QkO5fQjV3VpyiLYE+nZLFW9dA1JM96KE8+BpcrlJddYr+JmXsxQWu7+w2cXvNDnqQNMwcD82ofSVM71La29Ayqv4iJeW2v4+je0WSPPowWBKOyllnrLYigOApKt2KPOmuXcMHKsuO/hiR+eZEFoXieCVljmhSu3EbR6suMaslN5tTbFoL8LUImQaVDS5G7ncvITXnZrBzCwY6mhcnDZqtKpRE87l9ejvL5egLfrmX0bhxEEnX201UXur/Ryns0RvXsN6crGz3OKG6O84zps6HOQGB5K+u3Y6pK5ALiwyN2c+cfjYO9JnINr+wJ1JD52AazjupjskSXs4jDy6Qhv17mAZQgkpykjAqXKY+nW7yO3oSqQx/PuKabrzG0rniG7gT/XbxeJmg3LBrDf5lpWvX9dHq+/O9OO7oNnEhsIpLnAUjD+muJbvNshixuNF03NLSXf3/SCH79BLvAzDafyO97CQvn58QVGeSusToL83IJdMmZiE+icCJkLnFssKLvATZNkmX6cw+e0pR/Gw3UR8cXWQ0Q5z0KxhgT8icTvn1noul6pBMXzxDkrUSmnGUj2k+AIknu9EXOOiGlLKiMVZDj1e8IiAQ4sxh+92upZdIuDoJPaJET0gl7batuXgHy0RbTRgpzXdU3dQ+dGNoKl9469bbicgaZ0xqsElmtXRJK5eB621LVcaQoMc6uG0xPV/oNZ8GsHySWo/r/qh0FTnRSBzdecloW/V4VXUgsR04RvpPyGMSijgFbkOW8VMXMWtqOGWk5g9OVgsAnBDskRIWnf7awMMshO+wA4fZRfwMuFuQvnSJa9mesXGUftbLJ6DsXU/lmWHe61KAGmcES9VyGrP0aQQ4WXJT4DQ50hhLkr/+vrx6xDMGNXGViH2mL6qSRFvcdcihgxJQ7DCEv78iJeBqnAQ03myfGniNakHik4s69ag98y6vd0iw6lW3Rbc7K9ZPbxuyHgfo6X3tNRLScgsQx3zlP7YjEWp2G8BXGLqbwiKcBhhXHJ6MUlBAOfQEyEVV0Z/xAZ3DMMSvsegPUAXzaDgi1gPHmw8co"
                        },
                        "connectCluster": "target-cluster",
                        "metricsConfig": {
                            "type": "jmxPrometheusExporter",
                            "valueFrom": {
                                "configMapKeyRef": {
                                    "key": "metrics-config.yml",
                                    "name": "mirror-maker2-metrics"
                                }
                            }
                        },
                        "mirrors": [
                            {
                                "checkpointConnector": {
                                    "config": {
                                        "checkpoints.topic.replication.factor": 2,
                                        "emit.checkpoints.interval.seconds": 10,
                                        "offset-syncs.topic.location": "target",
                                        "replication.policy.class": "io.strimzi.kafka.connect.mirror.IdentityReplicationPolicy",
                                        "sync.group.offsets.enabled": true,
                                        "sync.group.offsets.interval.seconds": 10
                                    },
                                    "tasksMax": 10
                                },
                                "groupsPattern": ".*",
                                "heartbeatConnector": {
                                    "config": {
                                        "heartbeats.topic.replication.factor": 2
                                    }
                                },
                                "sourceCluster": "source-cluster",
                                "sourceConnector": {
                                    "config": {
                                        "offset-syncs.topic.location": "target",
                                        "offset-syncs.topic.replication.factor": 2,
                                        "replication.factor": 2,
                                        "replication.policy.class": "io.strimzi.kafka.connect.mirror.IdentityReplicationPolicy"
                                    },
                                    "tasksMax": 10
                                },
                                "targetCluster": "target-cluster",
                                "topicsPattern": "t_101_actionlog|t_101_featurelog|t_101_profilelog|t_101_actionlog_json|t_101_aggr_offline_transform|t_101_streamlog|t_101_hourly_usage_log"
                            }
                        ],
                        "replicas": 1,
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "4Gi"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "1Gi"
                            }
                        },
                        "template": {
                            "pod": {
                                "affinity": {
                                    "nodeAffinity": {
                                        "requiredDuringSchedulingIgnoredDuringExecution": {
                                            "nodeSelectorTerms": [
                                                {
                                                    "matchExpressions": [
                                                        {
                                                            "key": "kubernetes.io/arch",
                                                            "operator": "In",
                                                            "values": [
                                                                "amd64"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                },
                                "metadata": {
                                    "annotations": {
                                        "prometheus.io/port": 9404,
                                        "prometheus.io/scrape": true
                                    }
                                }
                            }
                        },
                        "version": "3.2.0"
                    },
                    "status": {
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-09-09T15:19:14.782932Z",
                                "message": "Kafka version 2.7.0 is not supported. Supported versions are: 3.0.0, 3.0.1, 3.1.0, 3.1.1, 3.2.0.",
                                "reason": "InvalidResourceException",
                                "status": "True",
                                "type": "NotReady"
                            }
                        ],
                        "observedGeneration": 3,
                        "replicas": 0
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:Secret::mirror-maker-creds"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::mirror-maker-k8s-provider::f86d62ab-c812-4163-b1e6-ebb801a4063d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": [
                        "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:Secret::mirror-maker-creds"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:iam/user:User::t-101-offline-aggr-user",
                "custom": true,
                "id": "t-101-offline-aggr-user",
                "type": "aws:iam/user:User",
                "inputs": {
                    "__defaults": [
                        "forceDestroy"
                    ],
                    "forceDestroy": false,
                    "name": "t-101-offline-aggr-user",
                    "path": "/conf_conn_user/",
                    "tags": {
                        "__defaults": [],
                        "managed_by": "fennel.ai",
                        "plane": "t-101",
                        "sink": "t-101-offline-aggregate-storage"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:user/conf_conn_user/t-101-offline-aggr-user",
                    "forceDestroy": false,
                    "id": "t-101-offline-aggr-user",
                    "name": "t-101-offline-aggr-user",
                    "path": "/conf_conn_user/",
                    "tags": {
                        "managed_by": "fennel.ai",
                        "plane": "t-101",
                        "sink": "t-101-offline-aggregate-storage"
                    },
                    "tagsAll": {
                        "managed_by": "fennel.ai",
                        "plane": "t-101",
                        "sink": "t-101-offline-aggregate-storage"
                    },
                    "uniqueId": "AIDAQOLFGTNXO6V2TIWU4"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:s3/bucket:Bucket::t-101-offline-aggregate-storage"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::offline-aggregate-storage-provider::58a326c1-9698-422f-a7d5-75ba7ef5c688",
                "propertyDependencies": {
                    "name": null,
                    "path": null,
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:glue/job:Job::t-101-gluejob",
                "custom": true,
                "id": "t-101-training-data-gen",
                "type": "aws:glue/job:Job",
                "inputs": {
                    "__defaults": [],
                    "command": {
                        "__defaults": [
                            "name"
                        ],
                        "name": "glueetl",
                        "pythonVersion": "3",
                        "scriptLocation": "s3://p-3-gluejob-source/aws_glue_parquet_transforms.py"
                    },
                    "defaultArguments": {
                        "--PLANE_ID": "3",
                        "--TIER_ID": "101",
                        "--continuous-log-logStreamPrefix": "t-101-training-data-gen",
                        "--enable-continuous-cloudwatch-log": "true",
                        "--enable-continuous-log-filter": "false",
                        "--enable-metrics": "true",
                        "__defaults": []
                    },
                    "description": "GLUE job to transform multiple features and labels files in JSON format to a single Parquet file",
                    "glueVersion": "3.0",
                    "maxRetries": 5,
                    "name": "t-101-training-data-gen",
                    "numberOfWorkers": 5,
                    "roleArn": "arn:aws:iam::030813887342:role/t-101-gluerole-20220824192440895300000001",
                    "timeout": 180,
                    "workerType": "G.2X"
                },
                "outputs": {
                    "arn": "arn:aws:glue:us-west-2:030813887342:job/t-101-training-data-gen",
                    "command": {
                        "name": "glueetl",
                        "pythonVersion": "3",
                        "scriptLocation": "s3://p-3-gluejob-source/aws_glue_parquet_transforms.py"
                    },
                    "connections": [],
                    "defaultArguments": {
                        "--PLANE_ID": "3",
                        "--TIER_ID": "101",
                        "--continuous-log-logStreamPrefix": "t-101-training-data-gen",
                        "--enable-continuous-cloudwatch-log": "true",
                        "--enable-continuous-log-filter": "false",
                        "--enable-metrics": "true"
                    },
                    "description": "GLUE job to transform multiple features and labels files in JSON format to a single Parquet file",
                    "executionProperty": {
                        "maxConcurrentRuns": 1
                    },
                    "glueVersion": "3.0",
                    "id": "t-101-training-data-gen",
                    "maxCapacity": 10,
                    "maxRetries": 5,
                    "name": "t-101-training-data-gen",
                    "nonOverridableArguments": {},
                    "notificationProperty": null,
                    "numberOfWorkers": 5,
                    "roleArn": "arn:aws:iam::030813887342:role/t-101-gluerole-20220824192440895300000001",
                    "securityConfiguration": "",
                    "tags": {},
                    "tagsAll": {},
                    "timeout": 180,
                    "workerType": "G.2X"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-glue-role"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::glue-job-aws-provider::a55682fa-be50-4d32-8015-99c5170582c2",
                "propertyDependencies": {
                    "command": null,
                    "defaultArguments": null,
                    "description": null,
                    "glueVersion": null,
                    "maxRetries": null,
                    "name": null,
                    "numberOfWorkers": null,
                    "roleArn": [
                        "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-glue-role"
                    ],
                    "timeout": null,
                    "workerType": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart::aes-t-101",
                "custom": false,
                "type": "kubernetes:helm.sh/v3:Chart",
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::kubernetes:getambassador.io/v3alpha1:Listener::http-listener",
                    "urn:pulumi:tier-101::launchpad::kubernetes:getambassador.io/v3alpha1:Listener::https-listener"
                ]
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:iam/rolePolicy:RolePolicy::t-101-glue-rolepolicy",
                "custom": true,
                "id": "t-101-gluerole-20220824192440895300000001:t-101-glue-rolepolicy",
                "type": "aws:iam/rolePolicy:RolePolicy",
                "inputs": {
                    "__defaults": [],
                    "name": "t-101-glue-rolepolicy",
                    "policy": "{\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": [\n                        \"s3:ListAllMyBuckets\"\n                    ],\n                    \"Resource\":\"arn:aws:s3:::*\"\n                },\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": [\n                        \"s3:ListBucket\",\n                        \"s3:GetBucketLocation\"\n                    ],\n                    \"Resource\": [\n                        \"arn:aws:s3:::p-3-training-data\",\n                        \"arn:aws:s3:::p-3-gluejob-source\"\n                    ]\n                },\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\":[\n                        \"s3:GetObject\"\n                    ],\n                    \"Resource\": [\n                        \"arn:aws:s3:::p-3-gluejob-source/*\"\n                    ]\n                },\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\":[\n                        \"s3:PutObject\",\n                        \"s3:GetObject\",\n                        \"s3:AbortMultipartUpload\",\n                        \"s3:ListMultipartUploadParts\",\n                        \"s3:ListBucketMultipartUploads\"\n                    ],\n                    \"Resource\": [\n                        \"arn:aws:s3:::p-3-training-data/*\"\n                    ]\n                },\n                {\n                    \"Effect\": \"Allow\",\n                    \"Action\": \"cloudwatch:PutMetricData\",\n                    \"Resource\": [\n                        \"*\"\n                    ]\n                },\n                {\n                    \"Effect\": \"Allow\",\n                    \"Action\": [\n                        \"logs:CreateLogStream\",\n                        \"logs:PutLogEvents\"\n                    ],\n                    \"Resource\": [\n                        \"arn:aws:logs:*:*:/aws-glue/*\"\n                    ]\n                }\n            ]\n        }",
                    "role": "t-101-gluerole-20220824192440895300000001"
                },
                "outputs": {
                    "id": "t-101-gluerole-20220824192440895300000001:t-101-glue-rolepolicy",
                    "name": "t-101-glue-rolepolicy",
                    "policy": "{\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": [\n                        \"s3:ListAllMyBuckets\"\n                    ],\n                    \"Resource\":\"arn:aws:s3:::*\"\n                },\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": [\n                        \"s3:ListBucket\",\n                        \"s3:GetBucketLocation\"\n                    ],\n                    \"Resource\": [\n                        \"arn:aws:s3:::p-3-training-data\",\n                        \"arn:aws:s3:::p-3-gluejob-source\"\n                    ]\n                },\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\":[\n                        \"s3:GetObject\"\n                    ],\n                    \"Resource\": [\n                        \"arn:aws:s3:::p-3-gluejob-source/*\"\n                    ]\n                },\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\":[\n                        \"s3:PutObject\",\n                        \"s3:GetObject\",\n                        \"s3:AbortMultipartUpload\",\n                        \"s3:ListMultipartUploadParts\",\n                        \"s3:ListBucketMultipartUploads\"\n                    ],\n                    \"Resource\": [\n                        \"arn:aws:s3:::p-3-training-data/*\"\n                    ]\n                },\n                {\n                    \"Effect\": \"Allow\",\n                    \"Action\": \"cloudwatch:PutMetricData\",\n                    \"Resource\": [\n                        \"*\"\n                    ]\n                },\n                {\n                    \"Effect\": \"Allow\",\n                    \"Action\": [\n                        \"logs:CreateLogStream\",\n                        \"logs:PutLogEvents\"\n                    ],\n                    \"Resource\": [\n                        \"arn:aws:logs:*:*:/aws-glue/*\"\n                    ]\n                }\n            ]\n        }",
                    "role": "t-101-gluerole-20220824192440895300000001"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-glue-role"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::glue-job-aws-provider::a55682fa-be50-4d32-8015-99c5170582c2",
                "propertyDependencies": {
                    "name": null,
                    "policy": null,
                    "role": [
                        "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-glue-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::postgresql:index/database:Database::t_101_unleashdb",
                "custom": true,
                "id": "t_101_unleashdb",
                "type": "postgresql:index/database:Database",
                "inputs": {
                    "__defaults": [
                        "allowConnections",
                        "connectionLimit"
                    ],
                    "allowConnections": true,
                    "connectionLimit": -1,
                    "name": "t_101_unleashdb"
                },
                "outputs": {
                    "allowConnections": true,
                    "connectionLimit": -1,
                    "encoding": "UTF8",
                    "id": "t_101_unleashdb",
                    "isTemplate": false,
                    "lcCollate": "en_US.UTF-8",
                    "lcCtype": "en_US.UTF-8",
                    "name": "t_101_unleashdb",
                    "owner": "username",
                    "tablespaceName": "pg_default",
                    "template": "template0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::pulumi:providers:postgresql::postgresql-provider"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:postgresql::postgresql-provider::1b2786a0-6580-4f0f-9209-07a35717ecb1",
                "propertyDependencies": {
                    "name": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::t-101-tier-eks-instance-policy-attach",
                "custom": true,
                "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220824192443082600000002",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::030813887342:policy/t-101-tier-eks-instance-policy20220824192440205300000001",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "outputs": {
                    "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220824192443082600000002",
                    "policyArn": "arn:aws:iam::030813887342:policy/t-101-tier-eks-instance-policy20220824192440205300000001",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:iam/policy:Policy::t-101-tier-eks-instance-policy"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::tier-eks-instance-iam-policy-provider::c7326e6a-5bb1-4f5c-966f-f6215b33d25b",
                "propertyDependencies": {
                    "policyArn": [
                        "urn:pulumi:tier-101::launchpad::aws:iam/policy:Policy::t-101-tier-eks-instance-policy"
                    ],
                    "role": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:iam/accessKey:AccessKey::t-101-offline-aggr-access-key",
                "custom": true,
                "id": "AKIAQOLFGTNXNJCRSL6H",
                "type": "aws:iam/accessKey:AccessKey",
                "inputs": {
                    "__defaults": [
                        "status"
                    ],
                    "status": "Active",
                    "user": "t-101-offline-aggr-user"
                },
                "outputs": {
                    "createDate": "2022-08-24T19:24:45Z",
                    "id": "AKIAQOLFGTNXNJCRSL6H",
                    "secret": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAMztCQknXMXwaGQ77xeLjAJSZTSEhn+dY11BzdQB8zzetAvhLUCJyWlzbLPB+8/W5P0++afWR9wRlKGEYchE1jgSRzObHsY="
                    },
                    "sesSmtpPasswordV4": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAF6YST7s0/J8gVLznip138adYqc9g6gdda+q3NvodJo+Z/MONh/Rj52ymmFmnozKVyZ8B6Y1SpVRl/t5dxNHJefMOgkL8Sk7+F8J"
                    },
                    "status": "Active",
                    "user": "t-101-offline-aggr-user"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:iam/user:User::t-101-offline-aggr-user"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::offline-aggregate-storage-provider::58a326c1-9698-422f-a7d5-75ba7ef5c688",
                "propertyDependencies": {
                    "user": [
                        "urn:pulumi:tier-101::launchpad::aws:iam/user:User::t-101-offline-aggr-user"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:iam/userPolicy:UserPolicy::t-101-offline-aggr-user-policy",
                "custom": true,
                "id": "t-101-offline-aggr-user:t-101-offline-aggr-user-policy-33836a0",
                "type": "aws:iam/userPolicy:UserPolicy",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "name": "t-101-offline-aggr-user-policy-33836a0",
                    "policy": "{\n        \"Version\":\"2012-10-17\",\n        \"Statement\":[\n            {\n                \"Effect\":\"Allow\",\n                \"Action\": [\n                    \"s3:ListAllMyBuckets\"\n                ],\n                \"Resource\":\"arn:aws:s3:::*\"\n            },\n            {\n                \"Effect\":\"Allow\",\n                \"Action\":[\n                    \"s3:ListBucket\",\n                    \"s3:GetBucketLocation\"\n                ],\n                \"Resource\":\"arn:aws:s3:::t-101-offline-aggregate-storage\"\n            },\n            {\n                \"Effect\":\"Allow\",\n                \"Action\":[\n                    \"s3:PutObject\",\n                    \"s3:GetObject\",\n                    \"s3:AbortMultipartUpload\",\n                    \"s3:ListMultipartUploadParts\",\n                    \"s3:ListBucketMultipartUploads\"\n                ],\n                \"Resource\":\"arn:aws:s3:::t-101-offline-aggregate-storage/*\"\n            }\n        ]\n    }",
                    "user": "t-101-offline-aggr-user"
                },
                "outputs": {
                    "id": "t-101-offline-aggr-user:t-101-offline-aggr-user-policy-33836a0",
                    "name": "t-101-offline-aggr-user-policy-33836a0",
                    "policy": "{\n        \"Version\":\"2012-10-17\",\n        \"Statement\":[\n            {\n                \"Effect\":\"Allow\",\n                \"Action\": [\n                    \"s3:ListAllMyBuckets\"\n                ],\n                \"Resource\":\"arn:aws:s3:::*\"\n            },\n            {\n                \"Effect\":\"Allow\",\n                \"Action\":[\n                    \"s3:ListBucket\",\n                    \"s3:GetBucketLocation\"\n                ],\n                \"Resource\":\"arn:aws:s3:::t-101-offline-aggregate-storage\"\n            },\n            {\n                \"Effect\":\"Allow\",\n                \"Action\":[\n                    \"s3:PutObject\",\n                    \"s3:GetObject\",\n                    \"s3:AbortMultipartUpload\",\n                    \"s3:ListMultipartUploadParts\",\n                    \"s3:ListBucketMultipartUploads\"\n                ],\n                \"Resource\":\"arn:aws:s3:::t-101-offline-aggregate-storage/*\"\n            }\n        ]\n    }",
                    "user": "t-101-offline-aggr-user"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:iam/user:User::t-101-offline-aggr-user"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::offline-aggregate-storage-provider::58a326c1-9698-422f-a7d5-75ba7ef5c688",
                "propertyDependencies": {
                    "policy": null,
                    "user": [
                        "urn:pulumi:tier-101::launchpad::aws:iam/user:User::t-101-offline-aggr-user"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::t-101/aes-t-101-emissary-ingress",
                "custom": true,
                "id": "t-101/aes-t-101-emissary-ingress",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes"
                        },
                        "name": "aes-t-101-emissary-ingress",
                        "namespace": "t-101"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "aes-t-101",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-ingress",
                                "app.kubernetes.io/part-of": "aes-t-101",
                                "helm.sh/chart": "emissary-ingress-8.0.0",
                                "product": "aes"
                            },
                            "name": "aes-t-101-emissary-ingress",
                            "namespace": "t-101"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"aes-t-101\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-ingress\",\"app.kubernetes.io/part-of\":\"aes-t-101\",\"helm.sh/chart\":\"emissary-ingress-8.0.0\",\"product\":\"aes\"},\"name\":\"aes-t-101-emissary-ingress\",\"namespace\":\"t-101\"}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:44Z",
                        "labels": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"aes-t-101-emissary-ingress-token-bwnff\"}": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:44Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {},
                                            "f:helm.sh/chart": {},
                                            "f:product": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:44Z"
                            }
                        ],
                        "name": "aes-t-101-emissary-ingress",
                        "namespace": "t-101",
                        "resourceVersion": "57162699",
                        "uid": "d62e4f64-dbae-4b84-a7cf-b19b55ed84bf"
                    },
                    "secrets": [
                        {
                            "name": "aes-t-101-emissary-ingress-token-bwnff"
                        }
                    ]
                },
                "parent": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart::aes-t-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::ingress-k8s-provider::ac212244-fd50-4350-9d41-d0e023911bc3",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::t-101/aes-t-101-emissary-ingress",
                "custom": true,
                "id": "t-101/aes-t-101-emissary-ingress",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:RoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes"
                        },
                        "name": "aes-t-101-emissary-ingress",
                        "namespace": "t-101"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "aes-t-101-emissary-ingress"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "aes-t-101-emissary-ingress",
                            "namespace": "t-101"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "aes-t-101",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-ingress",
                                "app.kubernetes.io/part-of": "aes-t-101",
                                "helm.sh/chart": "emissary-ingress-8.0.0",
                                "product": "aes"
                            },
                            "name": "aes-t-101-emissary-ingress",
                            "namespace": "t-101"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "aes-t-101-emissary-ingress"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "aes-t-101-emissary-ingress",
                                "namespace": "t-101"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"aes-t-101\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-ingress\",\"app.kubernetes.io/part-of\":\"aes-t-101\",\"helm.sh/chart\":\"emissary-ingress-8.0.0\",\"product\":\"aes\"},\"name\":\"aes-t-101-emissary-ingress\",\"namespace\":\"t-101\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"aes-t-101-emissary-ingress\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"aes-t-101-emissary-ingress\",\"namespace\":\"t-101\"}]}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:45Z",
                        "labels": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {},
                                            "f:helm.sh/chart": {},
                                            "f:product": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:45Z"
                            }
                        ],
                        "name": "aes-t-101-emissary-ingress",
                        "namespace": "t-101",
                        "resourceVersion": "57162716",
                        "uid": "a8c832b6-9dc1-4df1-8ab8-3d6101237909"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "aes-t-101-emissary-ingress"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "aes-t-101-emissary-ingress",
                            "namespace": "t-101"
                        }
                    ]
                },
                "parent": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart::aes-t-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::ingress-k8s-provider::ac212244-fd50-4350-9d41-d0e023911bc3",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::aes-t-101-emissary-ingress-crd",
                "custom": true,
                "id": "aes-t-101-emissary-ingress-crd",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes",
                            "rbac.getambassador.io/role-group": "aes-t-101-emissary-ingress"
                        },
                        "name": "aes-t-101-emissary-ingress-crd"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "apiextensions.k8s.io"
                            ],
                            "resources": [
                                "customresourcedefinitions"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "delete"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "aes-t-101",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-ingress",
                                "app.kubernetes.io/part-of": "aes-t-101",
                                "helm.sh/chart": "emissary-ingress-8.0.0",
                                "product": "aes",
                                "rbac.getambassador.io/role-group": "aes-t-101-emissary-ingress"
                            },
                            "name": "aes-t-101-emissary-ingress-crd"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "apiextensions.k8s.io"
                                ],
                                "resources": [
                                    "customresourcedefinitions"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "delete"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"aes-t-101\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-ingress\",\"app.kubernetes.io/part-of\":\"aes-t-101\",\"helm.sh/chart\":\"emissary-ingress-8.0.0\",\"product\":\"aes\",\"rbac.getambassador.io/role-group\":\"aes-t-101-emissary-ingress\"},\"name\":\"aes-t-101-emissary-ingress-crd\"},\"rules\":[{\"apiGroups\":[\"apiextensions.k8s.io\"],\"resources\":[\"customresourcedefinitions\"],\"verbs\":[\"get\",\"list\",\"watch\",\"delete\"]}]}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:43Z",
                        "labels": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes",
                            "rbac.getambassador.io/role-group": "aes-t-101-emissary-ingress"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {},
                                            "f:helm.sh/chart": {},
                                            "f:product": {},
                                            "f:rbac.getambassador.io/role-group": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:43Z"
                            }
                        ],
                        "name": "aes-t-101-emissary-ingress-crd",
                        "resourceVersion": "57162657",
                        "uid": "752a53c8-6005-4982-a243-5cd18a9a6088"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "apiextensions.k8s.io"
                            ],
                            "resources": [
                                "customresourcedefinitions"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "delete"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart::aes-t-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::ingress-k8s-provider::ac212244-fd50-4350-9d41-d0e023911bc3",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::t-101/aes-t-101-emissary-ingress",
                "custom": true,
                "id": "t-101/aes-t-101-emissary-ingress",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:Role",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes",
                            "rbac.getambassador.io/role-group": "aes-t-101-emissary-ingress"
                        },
                        "name": "aes-t-101-emissary-ingress",
                        "namespace": "t-101"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "namespaces",
                                "services",
                                "secrets",
                                "configmaps",
                                "endpoints"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "getambassador.io"
                            ],
                            "resources": [
                                "*"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "update",
                                "patch",
                                "create",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                "getambassador.io"
                            ],
                            "resources": [
                                "mappings/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "networking.internal.knative.dev"
                            ],
                            "resources": [
                                "clusteringresses",
                                "ingresses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "networking.x-k8s.io"
                            ],
                            "resources": [
                                "*"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "networking.internal.knative.dev"
                            ],
                            "resources": [
                                "ingresses/status",
                                "clusteringresses/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions",
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "ingresses",
                                "ingressclasses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions",
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "ingresses/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "aes-t-101",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-ingress",
                                "app.kubernetes.io/part-of": "aes-t-101",
                                "helm.sh/chart": "emissary-ingress-8.0.0",
                                "product": "aes",
                                "rbac.getambassador.io/role-group": "aes-t-101-emissary-ingress"
                            },
                            "name": "aes-t-101-emissary-ingress",
                            "namespace": "t-101"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces",
                                    "services",
                                    "secrets",
                                    "configmaps",
                                    "endpoints"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "getambassador.io"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "update",
                                    "patch",
                                    "create",
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "getambassador.io"
                                ],
                                "resources": [
                                    "mappings/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "networking.internal.knative.dev"
                                ],
                                "resources": [
                                    "clusteringresses",
                                    "ingresses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "networking.x-k8s.io"
                                ],
                                "resources": [
                                    "*"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "networking.internal.knative.dev"
                                ],
                                "resources": [
                                    "ingresses/status",
                                    "clusteringresses/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions",
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "ingresses",
                                    "ingressclasses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions",
                                    "networking.k8s.io"
                                ],
                                "resources": [
                                    "ingresses/status"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"aes-t-101\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-ingress\",\"app.kubernetes.io/part-of\":\"aes-t-101\",\"helm.sh/chart\":\"emissary-ingress-8.0.0\",\"product\":\"aes\",\"rbac.getambassador.io/role-group\":\"aes-t-101-emissary-ingress\"},\"name\":\"aes-t-101-emissary-ingress\",\"namespace\":\"t-101\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"namespaces\",\"services\",\"secrets\",\"configmaps\",\"endpoints\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"getambassador.io\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\",\"update\",\"patch\",\"create\",\"delete\"]},{\"apiGroups\":[\"getambassador.io\"],\"resources\":[\"mappings/status\"],\"verbs\":[\"update\"]},{\"apiGroups\":[\"networking.internal.knative.dev\"],\"resources\":[\"clusteringresses\",\"ingresses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"networking.x-k8s.io\"],\"resources\":[\"*\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"networking.internal.knative.dev\"],\"resources\":[\"ingresses/status\",\"clusteringresses/status\"],\"verbs\":[\"update\"]},{\"apiGroups\":[\"extensions\",\"networking.k8s.io\"],\"resources\":[\"ingresses\",\"ingressclasses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"extensions\",\"networking.k8s.io\"],\"resources\":[\"ingresses/status\"],\"verbs\":[\"update\"]}]}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:44Z",
                        "labels": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes",
                            "rbac.getambassador.io/role-group": "aes-t-101-emissary-ingress"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {},
                                            "f:helm.sh/chart": {},
                                            "f:product": {},
                                            "f:rbac.getambassador.io/role-group": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:44Z"
                            }
                        ],
                        "name": "aes-t-101-emissary-ingress",
                        "namespace": "t-101",
                        "resourceVersion": "57162696",
                        "uid": "a8997d04-03f9-4896-a9e1-e8a1c0bf004d"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "namespaces",
                                "services",
                                "secrets",
                                "configmaps",
                                "endpoints"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "getambassador.io"
                            ],
                            "resources": [
                                "*"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "update",
                                "patch",
                                "create",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                "getambassador.io"
                            ],
                            "resources": [
                                "mappings/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "networking.internal.knative.dev"
                            ],
                            "resources": [
                                "clusteringresses",
                                "ingresses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "networking.x-k8s.io"
                            ],
                            "resources": [
                                "*"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "networking.internal.knative.dev"
                            ],
                            "resources": [
                                "ingresses/status",
                                "clusteringresses/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions",
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "ingresses",
                                "ingressclasses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions",
                                "networking.k8s.io"
                            ],
                            "resources": [
                                "ingresses/status"
                            ],
                            "verbs": [
                                "update"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart::aes-t-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::ingress-k8s-provider::ac212244-fd50-4350-9d41-d0e023911bc3",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::t-101/aes-t-101-emissary-ingress",
                "custom": true,
                "id": "t-101/aes-t-101-emissary-ingress",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes"
                        },
                        "name": "aes-t-101-emissary-ingress",
                        "namespace": "t-101"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "aes-t-101",
                                "app.kubernetes.io/name": "emissary-ingress"
                            }
                        },
                        "strategy": {
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "checksum/config": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b",
                                    "config.linkerd.io/skip-inbound-ports": "80,443",
                                    "linkerd.io/inject": "enabled"
                                },
                                "labels": {
                                    "app.kubernetes.io/instance": "aes-t-101",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "emissary-ingress",
                                    "app.kubernetes.io/part-of": "aes-t-101",
                                    "helm.sh/chart": "emissary-ingress-8.0.0",
                                    "product": "aes",
                                    "profile": "main"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "AMBASSADOR_GRPC_METRICS_SINK",
                                                "value": "aes-t-101-emissary-ingress-agent:80"
                                            },
                                            {
                                                "name": "HOST_IP",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "status.hostIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "AMBASSADOR_SINGLE_NAMESPACE",
                                                "value": "YES"
                                            },
                                            {
                                                "name": "AMBASSADOR_NAMESPACE",
                                                "value": "t-101"
                                            },
                                            {
                                                "name": "AGENT_CONFIG_RESOURCE_NAME",
                                                "value": "aes-t-101-emissary-ingress-agent-cloud-token"
                                            }
                                        ],
                                        "image": "docker.io/emissaryingress/emissary:3.0.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ambassador/v0/check_alive",
                                                "port": "admin"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 3
                                        },
                                        "name": "emissary-ingress",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "name": "http"
                                            },
                                            {
                                                "containerPort": 8443,
                                                "name": "https"
                                            },
                                            {
                                                "containerPort": 8877,
                                                "name": "admin"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ambassador/v0/check_ready",
                                                "port": "admin"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 3
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1000m",
                                                "memory": "600Mi"
                                            },
                                            "requests": {
                                                "cpu": "200m",
                                                "memory": "300Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/tmp/ambassador-pod-info",
                                                "name": "ambassador-pod-info",
                                                "readOnly": true
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "hostNetwork": false,
                                "imagePullSecrets": [],
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                },
                                "securityContext": {
                                    "runAsUser": 8888
                                },
                                "serviceAccountName": "aes-t-101-emissary-ingress",
                                "volumes": [
                                    {
                                        "downwardAPI": {
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.labels"
                                                    },
                                                    "path": "labels"
                                                }
                                            ]
                                        },
                                        "name": "ambassador-pod-info"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "aes-t-101",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-ingress",
                                "app.kubernetes.io/part-of": "aes-t-101",
                                "helm.sh/chart": "emissary-ingress-8.0.0",
                                "product": "aes"
                            },
                            "name": "aes-t-101-emissary-ingress",
                            "namespace": "t-101"
                        },
                        "spec": {
                            "progressDeadlineSeconds": 600,
                            "replicas": 2,
                            "selector": {
                                "matchLabels": {
                                    "app.kubernetes.io/instance": "aes-t-101",
                                    "app.kubernetes.io/name": "emissary-ingress"
                                }
                            },
                            "strategy": {
                                "type": "RollingUpdate"
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "checksum/config": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b",
                                        "config.linkerd.io/skip-inbound-ports": "80,443",
                                        "linkerd.io/inject": "enabled"
                                    },
                                    "labels": {
                                        "app.kubernetes.io/instance": "aes-t-101",
                                        "app.kubernetes.io/managed-by": "Helm",
                                        "app.kubernetes.io/name": "emissary-ingress",
                                        "app.kubernetes.io/part-of": "aes-t-101",
                                        "helm.sh/chart": "emissary-ingress-8.0.0",
                                        "product": "aes",
                                        "profile": "main"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "env": [
                                                {
                                                    "name": "AMBASSADOR_GRPC_METRICS_SINK",
                                                    "value": "aes-t-101-emissary-ingress-agent:80"
                                                },
                                                {
                                                    "name": "HOST_IP",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "status.hostIP"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "AMBASSADOR_SINGLE_NAMESPACE",
                                                    "value": "YES"
                                                },
                                                {
                                                    "name": "AMBASSADOR_NAMESPACE",
                                                    "value": "t-101"
                                                },
                                                {
                                                    "name": "AGENT_CONFIG_RESOURCE_NAME",
                                                    "value": "aes-t-101-emissary-ingress-agent-cloud-token"
                                                }
                                            ],
                                            "image": "docker.io/emissaryingress/emissary:3.0.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/ambassador/v0/check_alive",
                                                    "port": "admin"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 3
                                            },
                                            "name": "emissary-ingress",
                                            "ports": [
                                                {
                                                    "containerPort": 8080,
                                                    "name": "http"
                                                },
                                                {
                                                    "containerPort": 8443,
                                                    "name": "https"
                                                },
                                                {
                                                    "containerPort": 8877,
                                                    "name": "admin"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/ambassador/v0/check_ready",
                                                    "port": "admin"
                                                },
                                                "initialDelaySeconds": 30,
                                                "periodSeconds": 3
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "1000m",
                                                    "memory": "600Mi"
                                                },
                                                "requests": {
                                                    "cpu": "200m",
                                                    "memory": "300Mi"
                                                }
                                            },
                                            "securityContext": {
                                                "allowPrivilegeEscalation": false
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/tmp/ambassador-pod-info",
                                                    "name": "ambassador-pod-info",
                                                    "readOnly": true
                                                }
                                            ]
                                        }
                                    ],
                                    "dnsPolicy": "ClusterFirst",
                                    "hostNetwork": false,
                                    "imagePullSecrets": [],
                                    "nodeSelector": {
                                        "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                        "kubernetes.io/arch": "amd64"
                                    },
                                    "securityContext": {
                                        "runAsUser": 8888
                                    },
                                    "serviceAccountName": "aes-t-101-emissary-ingress",
                                    "volumes": [
                                        {
                                            "downwardAPI": {
                                                "items": [
                                                    {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.labels"
                                                        },
                                                        "path": "labels"
                                                    }
                                                ]
                                            },
                                            "name": "ambassador-pod-info"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"aes-t-101\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-ingress\",\"app.kubernetes.io/part-of\":\"aes-t-101\",\"helm.sh/chart\":\"emissary-ingress-8.0.0\",\"product\":\"aes\"},\"name\":\"aes-t-101-emissary-ingress\",\"namespace\":\"t-101\"},\"spec\":{\"progressDeadlineSeconds\":600,\"replicas\":2,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/instance\":\"aes-t-101\",\"app.kubernetes.io/name\":\"emissary-ingress\"}},\"strategy\":{\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"checksum/config\":\"01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b\",\"config.linkerd.io/skip-inbound-ports\":\"80,443\",\"linkerd.io/inject\":\"enabled\"},\"labels\":{\"app.kubernetes.io/instance\":\"aes-t-101\",\"app.kubernetes.io/managed-by\":\"Helm\",\"app.kubernetes.io/name\":\"emissary-ingress\",\"app.kubernetes.io/part-of\":\"aes-t-101\",\"helm.sh/chart\":\"emissary-ingress-8.0.0\",\"product\":\"aes\",\"profile\":\"main\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"AMBASSADOR_GRPC_METRICS_SINK\",\"value\":\"aes-t-101-emissary-ingress-agent:80\"},{\"name\":\"HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"AMBASSADOR_SINGLE_NAMESPACE\",\"value\":\"YES\"},{\"name\":\"AMBASSADOR_NAMESPACE\",\"value\":\"t-101\"},{\"name\":\"AGENT_CONFIG_RESOURCE_NAME\",\"value\":\"aes-t-101-emissary-ingress-agent-cloud-token\"}],\"image\":\"docker.io/emissaryingress/emissary:3.0.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/ambassador/v0/check_alive\",\"port\":\"admin\"},\"initialDelaySeconds\":30,\"periodSeconds\":3},\"name\":\"emissary-ingress\",\"ports\":[{\"containerPort\":8080,\"name\":\"http\"},{\"containerPort\":8443,\"name\":\"https\"},{\"containerPort\":8877,\"name\":\"admin\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/ambassador/v0/check_ready\",\"port\":\"admin\"},\"initialDelaySeconds\":30,\"periodSeconds\":3},\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"600Mi\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"300Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false},\"volumeMounts\":[{\"mountPath\":\"/tmp/ambassador-pod-info\",\"name\":\"ambassador-pod-info\",\"readOnly\":true}]}],\"dnsPolicy\":\"ClusterFirst\",\"hostNetwork\":false,\"imagePullSecrets\":[],\"nodeSelector\":{\"eks.amazonaws.com/capacityType\":\"ON_DEMAND\",\"kubernetes.io/arch\":\"amd64\"},\"securityContext\":{\"runAsUser\":8888},\"serviceAccountName\":\"aes-t-101-emissary-ingress\",\"volumes\":[{\"downwardAPI\":{\"items\":[{\"fieldRef\":{\"fieldPath\":\"metadata.labels\"},\"path\":\"labels\"}]},\"name\":\"ambassador-pod-info\"}]}}}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:45Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {},
                                            "f:helm.sh/chart": {},
                                            "f:product": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:progressDeadlineSeconds": {},
                                        "f:replicas": {},
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:strategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        },
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:checksum/config": {},
                                                    "f:config.linkerd.io/skip-inbound-ports": {},
                                                    "f:linkerd.io/inject": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {},
                                                    "f:helm.sh/chart": {},
                                                    "f:product": {},
                                                    "f:profile": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"emissary-ingress\"}": {
                                                        ".": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"AGENT_CONFIG_RESOURCE_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AMBASSADOR_GRPC_METRICS_SINK\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AMBASSADOR_NAMESPACE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"AMBASSADOR_SINGLE_NAMESPACE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"HOST_IP\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            },
                                                            "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            },
                                                            "k:{\"containerPort\":8877,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:allowPrivilegeEscalation": {}
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/tmp/ambassador-pod-info\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:nodeSelector": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:runAsUser": {}
                                                },
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"ambassador-pod-info\"}": {
                                                        ".": {},
                                                        "f:downwardAPI": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:items": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:45Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-24T19:25:18Z"
                            }
                        ],
                        "name": "aes-t-101-emissary-ingress",
                        "namespace": "t-101",
                        "resourceVersion": "57163007",
                        "uid": "6688078a-97fa-4cd5-81d5-43c2a970c1cb"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 2,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "aes-t-101",
                                "app.kubernetes.io/name": "emissary-ingress"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "checksum/config": "01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b",
                                    "config.linkerd.io/skip-inbound-ports": "80,443",
                                    "linkerd.io/inject": "enabled"
                                },
                                "labels": {
                                    "app.kubernetes.io/instance": "aes-t-101",
                                    "app.kubernetes.io/managed-by": "Helm",
                                    "app.kubernetes.io/name": "emissary-ingress",
                                    "app.kubernetes.io/part-of": "aes-t-101",
                                    "helm.sh/chart": "emissary-ingress-8.0.0",
                                    "product": "aes",
                                    "profile": "main"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "AMBASSADOR_GRPC_METRICS_SINK",
                                                "value": "aes-t-101-emissary-ingress-agent:80"
                                            },
                                            {
                                                "name": "HOST_IP",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.hostIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "AMBASSADOR_SINGLE_NAMESPACE",
                                                "value": "YES"
                                            },
                                            {
                                                "name": "AMBASSADOR_NAMESPACE",
                                                "value": "t-101"
                                            },
                                            {
                                                "name": "AGENT_CONFIG_RESOURCE_NAME",
                                                "value": "aes-t-101-emissary-ingress-agent-cloud-token"
                                            }
                                        ],
                                        "image": "docker.io/emissaryingress/emissary:3.0.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ambassador/v0/check_alive",
                                                "port": "admin",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 3,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "emissary-ingress",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "name": "http",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 8443,
                                                "name": "https",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 8877,
                                                "name": "admin",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ambassador/v0/check_ready",
                                                "port": "admin",
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 30,
                                            "periodSeconds": 3,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "600Mi"
                                            },
                                            "requests": {
                                                "cpu": "200m",
                                                "memory": "300Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "allowPrivilegeEscalation": false
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/tmp/ambassador-pod-info",
                                                "name": "ambassador-pod-info",
                                                "readOnly": true
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {
                                    "runAsUser": 8888
                                },
                                "serviceAccount": "aes-t-101-emissary-ingress",
                                "serviceAccountName": "aes-t-101-emissary-ingress",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "downwardAPI": {
                                            "defaultMode": 420,
                                            "items": [
                                                {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.labels"
                                                    },
                                                    "path": "labels"
                                                }
                                            ]
                                        },
                                        "name": "ambassador-pod-info"
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 2,
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-24T19:25:18Z",
                                "lastUpdateTime": "2022-08-24T19:25:18Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2022-08-24T19:24:45Z",
                                "lastUpdateTime": "2022-08-24T19:25:18Z",
                                "message": "ReplicaSet \"aes-t-101-emissary-ingress-685dd85784\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 2,
                        "replicas": 2,
                        "updatedReplicas": 2
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart::aes-t-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::ingress-k8s-provider::ac212244-fd50-4350-9d41-d0e023911bc3",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::aes-t-101-emissary-ingress",
                "custom": true,
                "id": "aes-t-101-emissary-ingress",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "aggregationRule": {
                        "clusterRoleSelectors": [
                            {
                                "matchLabels": {
                                    "rbac.getambassador.io/role-group": "aes-t-101-emissary-ingress"
                                }
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes"
                        },
                        "name": "aes-t-101-emissary-ingress"
                    },
                    "rules": []
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "aggregationRule": {
                            "clusterRoleSelectors": [
                                {
                                    "matchLabels": {
                                        "rbac.getambassador.io/role-group": "aes-t-101-emissary-ingress"
                                    }
                                }
                            ]
                        },
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "aes-t-101",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-ingress",
                                "app.kubernetes.io/part-of": "aes-t-101",
                                "helm.sh/chart": "emissary-ingress-8.0.0",
                                "product": "aes"
                            },
                            "name": "aes-t-101-emissary-ingress"
                        },
                        "rules": []
                    },
                    "aggregationRule": {
                        "clusterRoleSelectors": [
                            {
                                "matchLabels": {
                                    "rbac.getambassador.io/role-group": "aes-t-101-emissary-ingress"
                                }
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"aggregationRule\":{\"clusterRoleSelectors\":[{\"matchLabels\":{\"rbac.getambassador.io/role-group\":\"aes-t-101-emissary-ingress\"}}]},\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"aes-t-101\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-ingress\",\"app.kubernetes.io/part-of\":\"aes-t-101\",\"helm.sh/chart\":\"emissary-ingress-8.0.0\",\"product\":\"aes\"},\"name\":\"aes-t-101-emissary-ingress\"},\"rules\":[]}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:43Z",
                        "labels": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:aggregationRule": {
                                        ".": {},
                                        "f:clusterRoleSelectors": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {},
                                            "f:helm.sh/chart": {},
                                            "f:product": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:43Z"
                            }
                        ],
                        "name": "aes-t-101-emissary-ingress",
                        "resourceVersion": "57162688",
                        "uid": "791a6ad4-3259-4c4e-9c46-5159e1353f19"
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart::aes-t-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::ingress-k8s-provider::ac212244-fd50-4350-9d41-d0e023911bc3",
                "propertyDependencies": {
                    "aggregationRule": null,
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::t-101/aes-t-101-emissary-ingress-admin",
                "custom": true,
                "id": "t-101/aes-t-101-emissary-ingress-admin",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "a8r.io/bugs": "https://github.com/datawire/ambassador/issues",
                            "a8r.io/chat": "http://a8r.io/Slack",
                            "a8r.io/dependencies": "None",
                            "a8r.io/description": "The Ambassador Edge Stack admin service for internal use and health checks.",
                            "a8r.io/documentation": "https://www.getambassador.io/docs/edge-stack/latest/",
                            "a8r.io/owner": "Ambassador Labs",
                            "a8r.io/repository": "github.com/datawire/ambassador",
                            "a8r.io/support": "https://www.getambassador.io/about-us/support/",
                            "prometheus.io/port": "8877",
                            "prometheus.io/scrape": "true"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes",
                            "service": "ambassador-admin"
                        },
                        "name": "aes-t-101-emissary-ingress-admin",
                        "namespace": "t-101"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "ambassador-admin",
                                "port": 8877,
                                "protocol": "TCP",
                                "targetPort": "admin"
                            },
                            {
                                "name": "ambassador-snapshot",
                                "port": 8005,
                                "protocol": "TCP",
                                "targetPort": 8005
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/name": "emissary-ingress"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "a8r.io/bugs": "https://github.com/datawire/ambassador/issues",
                                "a8r.io/chat": "http://a8r.io/Slack",
                                "a8r.io/dependencies": "None",
                                "a8r.io/description": "The Ambassador Edge Stack admin service for internal use and health checks.",
                                "a8r.io/documentation": "https://www.getambassador.io/docs/edge-stack/latest/",
                                "a8r.io/owner": "Ambassador Labs",
                                "a8r.io/repository": "github.com/datawire/ambassador",
                                "a8r.io/support": "https://www.getambassador.io/about-us/support/",
                                "prometheus.io/port": "8877",
                                "prometheus.io/scrape": "true"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "aes-t-101",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-ingress",
                                "app.kubernetes.io/part-of": "aes-t-101",
                                "helm.sh/chart": "emissary-ingress-8.0.0",
                                "product": "aes",
                                "service": "ambassador-admin"
                            },
                            "name": "aes-t-101-emissary-ingress-admin",
                            "namespace": "t-101"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "ambassador-admin",
                                    "port": 8877,
                                    "protocol": "TCP",
                                    "targetPort": "admin"
                                },
                                {
                                    "name": "ambassador-snapshot",
                                    "port": 8005,
                                    "protocol": "TCP",
                                    "targetPort": 8005
                                }
                            ],
                            "selector": {
                                "app.kubernetes.io/instance": "aes-t-101",
                                "app.kubernetes.io/name": "emissary-ingress"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "a8r.io/bugs": "https://github.com/datawire/ambassador/issues",
                            "a8r.io/chat": "http://a8r.io/Slack",
                            "a8r.io/dependencies": "None",
                            "a8r.io/description": "The Ambassador Edge Stack admin service for internal use and health checks.",
                            "a8r.io/documentation": "https://www.getambassador.io/docs/edge-stack/latest/",
                            "a8r.io/owner": "Ambassador Labs",
                            "a8r.io/repository": "github.com/datawire/ambassador",
                            "a8r.io/support": "https://www.getambassador.io/about-us/support/",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"a8r.io/bugs\":\"https://github.com/datawire/ambassador/issues\",\"a8r.io/chat\":\"http://a8r.io/Slack\",\"a8r.io/dependencies\":\"None\",\"a8r.io/description\":\"The Ambassador Edge Stack admin service for internal use and health checks.\",\"a8r.io/documentation\":\"https://www.getambassador.io/docs/edge-stack/latest/\",\"a8r.io/owner\":\"Ambassador Labs\",\"a8r.io/repository\":\"github.com/datawire/ambassador\",\"a8r.io/support\":\"https://www.getambassador.io/about-us/support/\",\"prometheus.io/port\":\"8877\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app.kubernetes.io/instance\":\"aes-t-101\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-ingress\",\"app.kubernetes.io/part-of\":\"aes-t-101\",\"helm.sh/chart\":\"emissary-ingress-8.0.0\",\"product\":\"aes\",\"service\":\"ambassador-admin\"},\"name\":\"aes-t-101-emissary-ingress-admin\",\"namespace\":\"t-101\"},\"spec\":{\"ports\":[{\"name\":\"ambassador-admin\",\"port\":8877,\"protocol\":\"TCP\",\"targetPort\":\"admin\"},{\"name\":\"ambassador-snapshot\",\"port\":8005,\"protocol\":\"TCP\",\"targetPort\":8005}],\"selector\":{\"app.kubernetes.io/instance\":\"aes-t-101\",\"app.kubernetes.io/name\":\"emissary-ingress\"},\"type\":\"ClusterIP\"}}\n",
                            "prometheus.io/port": "8877",
                            "prometheus.io/scrape": "true"
                        },
                        "creationTimestamp": "2022-08-24T19:24:44Z",
                        "labels": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes",
                            "service": "ambassador-admin"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:a8r.io/bugs": {},
                                            "f:a8r.io/chat": {},
                                            "f:a8r.io/dependencies": {},
                                            "f:a8r.io/description": {},
                                            "f:a8r.io/documentation": {},
                                            "f:a8r.io/owner": {},
                                            "f:a8r.io/repository": {},
                                            "f:a8r.io/support": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {},
                                            "f:prometheus.io/port": {},
                                            "f:prometheus.io/scrape": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {},
                                            "f:helm.sh/chart": {},
                                            "f:product": {},
                                            "f:service": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:internalTrafficPolicy": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"port\":8005,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            },
                                            "k:{\"port\":8877,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:sessionAffinity": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:44Z"
                            }
                        ],
                        "name": "aes-t-101-emissary-ingress-admin",
                        "namespace": "t-101",
                        "resourceVersion": "57162701",
                        "uid": "4616c25e-49d1-4a9a-908b-b1f492683038"
                    },
                    "spec": {
                        "clusterIP": "172.20.183.244",
                        "clusterIPs": [
                            "172.20.183.244"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "ambassador-admin",
                                "port": 8877,
                                "protocol": "TCP",
                                "targetPort": "admin"
                            },
                            {
                                "name": "ambassador-snapshot",
                                "port": 8005,
                                "protocol": "TCP",
                                "targetPort": 8005
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/name": "emissary-ingress"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart::aes-t-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::ingress-k8s-provider::ac212244-fd50-4350-9d41-d0e023911bc3",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::t-101/aes-t-101-emissary-ingress",
                "custom": true,
                "id": "t-101/aes-t-101-emissary-ingress",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "a8r.io/bugs": "https://github.com/datawire/ambassador/issues",
                            "a8r.io/chat": "http://a8r.io/Slack",
                            "a8r.io/dependencies": "aes-t-101-emissary-ingress-redis.t-101",
                            "a8r.io/description": "The Ambassador Edge Stack goes beyond traditional API Gateways and Ingress Controllers with the advanced edge features needed to support developer self-service and full-cycle development.",
                            "a8r.io/documentation": "https://www.getambassador.io/docs/edge-stack/latest/",
                            "a8r.io/owner": "Ambassador Labs",
                            "a8r.io/repository": "github.com/datawire/ambassador",
                            "a8r.io/support": "https://www.getambassador.io/about-us/support/",
                            "service.beta.kubernetes.io/aws-load-balancer-nlb-target-type": "instance",
                            "service.beta.kubernetes.io/aws-load-balancer-scheme": "internal",
                            "service.beta.kubernetes.io/aws-load-balancer-subnets": "subnet-0e17b2c51bb9d79f4,subnet-0615a2647b66a222c",
                            "service.beta.kubernetes.io/aws-load-balancer-type": "external"
                        },
                        "labels": {
                            "app.kubernetes.io/component": "ambassador-service",
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes"
                        },
                        "name": "aes-t-101-emissary-ingress",
                        "namespace": "t-101"
                    },
                    "spec": {
                        "loadBalancerSourceRanges": [
                            "0.0.0.0/0"
                        ],
                        "ports": [
                            {
                                "name": "http",
                                "port": 80,
                                "targetPort": 8080
                            },
                            {
                                "name": "https",
                                "port": 443,
                                "targetPort": 8443
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "profile": "main"
                        },
                        "type": "LoadBalancer"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "annotations": {
                                "a8r.io/bugs": "https://github.com/datawire/ambassador/issues",
                                "a8r.io/chat": "http://a8r.io/Slack",
                                "a8r.io/dependencies": "aes-t-101-emissary-ingress-redis.t-101",
                                "a8r.io/description": "The Ambassador Edge Stack goes beyond traditional API Gateways and Ingress Controllers with the advanced edge features needed to support developer self-service and full-cycle development.",
                                "a8r.io/documentation": "https://www.getambassador.io/docs/edge-stack/latest/",
                                "a8r.io/owner": "Ambassador Labs",
                                "a8r.io/repository": "github.com/datawire/ambassador",
                                "a8r.io/support": "https://www.getambassador.io/about-us/support/",
                                "service.beta.kubernetes.io/aws-load-balancer-nlb-target-type": "instance",
                                "service.beta.kubernetes.io/aws-load-balancer-scheme": "internal",
                                "service.beta.kubernetes.io/aws-load-balancer-subnets": "subnet-0e17b2c51bb9d79f4,subnet-0615a2647b66a222c",
                                "service.beta.kubernetes.io/aws-load-balancer-type": "external"
                            },
                            "labels": {
                                "app.kubernetes.io/component": "ambassador-service",
                                "app.kubernetes.io/instance": "aes-t-101",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-ingress",
                                "app.kubernetes.io/part-of": "aes-t-101",
                                "helm.sh/chart": "emissary-ingress-8.0.0",
                                "product": "aes"
                            },
                            "name": "aes-t-101-emissary-ingress",
                            "namespace": "t-101"
                        },
                        "spec": {
                            "loadBalancerSourceRanges": [
                                "0.0.0.0/0"
                            ],
                            "ports": [
                                {
                                    "name": "http",
                                    "port": 80,
                                    "targetPort": 8080
                                },
                                {
                                    "name": "https",
                                    "port": 443,
                                    "targetPort": 8443
                                }
                            ],
                            "selector": {
                                "app.kubernetes.io/instance": "aes-t-101",
                                "app.kubernetes.io/name": "emissary-ingress",
                                "profile": "main"
                            },
                            "type": "LoadBalancer"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "a8r.io/bugs": "https://github.com/datawire/ambassador/issues",
                            "a8r.io/chat": "http://a8r.io/Slack",
                            "a8r.io/dependencies": "aes-t-101-emissary-ingress-redis.t-101",
                            "a8r.io/description": "The Ambassador Edge Stack goes beyond traditional API Gateways and Ingress Controllers with the advanced edge features needed to support developer self-service and full-cycle development.",
                            "a8r.io/documentation": "https://www.getambassador.io/docs/edge-stack/latest/",
                            "a8r.io/owner": "Ambassador Labs",
                            "a8r.io/repository": "github.com/datawire/ambassador",
                            "a8r.io/support": "https://www.getambassador.io/about-us/support/",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{\"a8r.io/bugs\":\"https://github.com/datawire/ambassador/issues\",\"a8r.io/chat\":\"http://a8r.io/Slack\",\"a8r.io/dependencies\":\"aes-t-101-emissary-ingress-redis.t-101\",\"a8r.io/description\":\"The Ambassador Edge Stack goes beyond traditional API Gateways and Ingress Controllers with the advanced edge features needed to support developer self-service and full-cycle development.\",\"a8r.io/documentation\":\"https://www.getambassador.io/docs/edge-stack/latest/\",\"a8r.io/owner\":\"Ambassador Labs\",\"a8r.io/repository\":\"github.com/datawire/ambassador\",\"a8r.io/support\":\"https://www.getambassador.io/about-us/support/\",\"service.beta.kubernetes.io/aws-load-balancer-nlb-target-type\":\"instance\",\"service.beta.kubernetes.io/aws-load-balancer-scheme\":\"internal\",\"service.beta.kubernetes.io/aws-load-balancer-subnets\":\"subnet-0e17b2c51bb9d79f4,subnet-0615a2647b66a222c\",\"service.beta.kubernetes.io/aws-load-balancer-type\":\"external\"},\"labels\":{\"app.kubernetes.io/component\":\"ambassador-service\",\"app.kubernetes.io/instance\":\"aes-t-101\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-ingress\",\"app.kubernetes.io/part-of\":\"aes-t-101\",\"helm.sh/chart\":\"emissary-ingress-8.0.0\",\"product\":\"aes\"},\"name\":\"aes-t-101-emissary-ingress\",\"namespace\":\"t-101\"},\"spec\":{\"loadBalancerSourceRanges\":[\"0.0.0.0/0\"],\"ports\":[{\"name\":\"http\",\"port\":80,\"targetPort\":8080},{\"name\":\"https\",\"port\":443,\"targetPort\":8443}],\"selector\":{\"app.kubernetes.io/instance\":\"aes-t-101\",\"app.kubernetes.io/name\":\"emissary-ingress\",\"profile\":\"main\"},\"type\":\"LoadBalancer\"}}\n",
                            "service.beta.kubernetes.io/aws-load-balancer-nlb-target-type": "instance",
                            "service.beta.kubernetes.io/aws-load-balancer-scheme": "internal",
                            "service.beta.kubernetes.io/aws-load-balancer-subnets": "subnet-0e17b2c51bb9d79f4,subnet-0615a2647b66a222c",
                            "service.beta.kubernetes.io/aws-load-balancer-type": "external"
                        },
                        "creationTimestamp": "2022-08-24T19:24:43Z",
                        "finalizers": [
                            "service.kubernetes.io/load-balancer-cleanup",
                            "service.k8s.aws/resources"
                        ],
                        "labels": {
                            "app.kubernetes.io/component": "ambassador-service",
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:finalizers": {
                                            ".": {},
                                            "v:\"service.kubernetes.io/load-balancer-cleanup\"": {}
                                        }
                                    }
                                },
                                "manager": "aws-cloud-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-24T19:24:43Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:a8r.io/bugs": {},
                                            "f:a8r.io/chat": {},
                                            "f:a8r.io/dependencies": {},
                                            "f:a8r.io/description": {},
                                            "f:a8r.io/documentation": {},
                                            "f:a8r.io/owner": {},
                                            "f:a8r.io/repository": {},
                                            "f:a8r.io/support": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {},
                                            "f:service.beta.kubernetes.io/aws-load-balancer-nlb-target-type": {},
                                            "f:service.beta.kubernetes.io/aws-load-balancer-scheme": {},
                                            "f:service.beta.kubernetes.io/aws-load-balancer-subnets": {},
                                            "f:service.beta.kubernetes.io/aws-load-balancer-type": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {},
                                            "f:helm.sh/chart": {},
                                            "f:product": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:allocateLoadBalancerNodePorts": {},
                                        "f:externalTrafficPolicy": {},
                                        "f:internalTrafficPolicy": {},
                                        "f:loadBalancerSourceRanges": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"port\":443,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            },
                                            "k:{\"port\":80,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:sessionAffinity": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:43Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:finalizers": {
                                            "v:\"service.k8s.aws/resources\"": {}
                                        }
                                    }
                                },
                                "manager": "controller",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:44Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:loadBalancer": {
                                            "f:ingress": {}
                                        }
                                    }
                                },
                                "manager": "controller",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-24T19:24:46Z"
                            }
                        ],
                        "name": "aes-t-101-emissary-ingress",
                        "namespace": "t-101",
                        "resourceVersion": "57162760",
                        "uid": "3d231c46-53d8-4ea6-9a5b-e90f31b3c9e7"
                    },
                    "spec": {
                        "allocateLoadBalancerNodePorts": true,
                        "clusterIP": "172.20.157.213",
                        "clusterIPs": [
                            "172.20.157.213"
                        ],
                        "externalTrafficPolicy": "Cluster",
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "loadBalancerSourceRanges": [
                            "0.0.0.0/0"
                        ],
                        "ports": [
                            {
                                "name": "http",
                                "nodePort": 31294,
                                "port": 80,
                                "protocol": "TCP",
                                "targetPort": 8080
                            },
                            {
                                "name": "https",
                                "nodePort": 30223,
                                "port": 443,
                                "protocol": "TCP",
                                "targetPort": 8443
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "profile": "main"
                        },
                        "sessionAffinity": "None",
                        "type": "LoadBalancer"
                    },
                    "status": {
                        "loadBalancer": {
                            "ingress": [
                                {
                                    "hostname": "k8s-t101-aest101e-415ddfb646-95cc6040208e284b.elb.us-west-2.amazonaws.com"
                                }
                            ]
                        }
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart::aes-t-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::ingress-k8s-provider::ac212244-fd50-4350-9d41-d0e023911bc3",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::aes-t-101-emissary-ingress",
                "custom": true,
                "id": "aes-t-101-emissary-ingress",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes"
                        },
                        "name": "aes-t-101-emissary-ingress"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "aes-t-101-emissary-ingress"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "aes-t-101-emissary-ingress",
                            "namespace": "t-101"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "aes-t-101",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-ingress",
                                "app.kubernetes.io/part-of": "aes-t-101",
                                "helm.sh/chart": "emissary-ingress-8.0.0",
                                "product": "aes"
                            },
                            "name": "aes-t-101-emissary-ingress"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "aes-t-101-emissary-ingress"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "aes-t-101-emissary-ingress",
                                "namespace": "t-101"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"aes-t-101\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-ingress\",\"app.kubernetes.io/part-of\":\"aes-t-101\",\"helm.sh/chart\":\"emissary-ingress-8.0.0\",\"product\":\"aes\"},\"name\":\"aes-t-101-emissary-ingress\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"aes-t-101-emissary-ingress\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"aes-t-101-emissary-ingress\",\"namespace\":\"t-101\"}]}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:44Z",
                        "labels": {
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {},
                                            "f:helm.sh/chart": {},
                                            "f:product": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:44Z"
                            }
                        ],
                        "name": "aes-t-101-emissary-ingress",
                        "resourceVersion": "57162694",
                        "uid": "20052f41-ca5a-4a8d-9bb6-9edd992c722e"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "aes-t-101-emissary-ingress"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "aes-t-101-emissary-ingress",
                            "namespace": "t-101"
                        }
                    ]
                },
                "parent": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart::aes-t-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::ingress-k8s-provider::ac212244-fd50-4350-9d41-d0e023911bc3",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:getambassador.io/v2:Module::t-101/ambassador",
                "custom": true,
                "id": "t-101/ambassador",
                "type": "kubernetes:getambassador.io/v2:Module",
                "inputs": {
                    "apiVersion": "getambassador.io/v2",
                    "kind": "Module",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/component": "emissary-ingress-ratelimit",
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes"
                        },
                        "name": "ambassador",
                        "namespace": "t-101"
                    },
                    "spec": {
                        "config": {
                            "diagnostics": {
                                "enabled": false
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "getambassador.io/v2",
                    "__inputs": {
                        "apiVersion": "getambassador.io/v2",
                        "kind": "Module",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/component": "emissary-ingress-ratelimit",
                                "app.kubernetes.io/instance": "aes-t-101",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-ingress",
                                "app.kubernetes.io/part-of": "aes-t-101",
                                "helm.sh/chart": "emissary-ingress-8.0.0",
                                "product": "aes"
                            },
                            "name": "ambassador",
                            "namespace": "t-101"
                        },
                        "spec": {
                            "config": {
                                "diagnostics": {
                                    "enabled": false
                                }
                            }
                        }
                    },
                    "apiVersion": "getambassador.io/v2",
                    "kind": "Module",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"getambassador.io/v2\",\"kind\":\"Module\",\"metadata\":{\"labels\":{\"app.kubernetes.io/component\":\"emissary-ingress-ratelimit\",\"app.kubernetes.io/instance\":\"aes-t-101\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-ingress\",\"app.kubernetes.io/part-of\":\"aes-t-101\",\"helm.sh/chart\":\"emissary-ingress-8.0.0\",\"product\":\"aes\"},\"name\":\"ambassador\",\"namespace\":\"t-101\"},\"spec\":{\"config\":{\"diagnostics\":{\"enabled\":false}}}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:42Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/component": "emissary-ingress-ratelimit",
                            "app.kubernetes.io/instance": "aes-t-101",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-ingress",
                            "app.kubernetes.io/part-of": "aes-t-101",
                            "helm.sh/chart": "emissary-ingress-8.0.0",
                            "product": "aes"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "getambassador.io/v2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/component": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {},
                                            "f:helm.sh/chart": {},
                                            "f:product": {}
                                        }
                                    },
                                    "f:spec": {
                                        ".": {},
                                        "f:config": {
                                            ".": {},
                                            "f:diagnostics": {
                                                ".": {},
                                                "f:enabled": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:42Z"
                            }
                        ],
                        "name": "ambassador",
                        "namespace": "t-101",
                        "resourceVersion": "57162656",
                        "uid": "c5e1175d-6dda-4288-b08d-a3a857ad83f0"
                    },
                    "spec": {
                        "config": {
                            "diagnostics": {
                                "enabled": false
                            }
                        }
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart::aes-t-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::ingress-k8s-provider::ac212244-fd50-4350-9d41-d0e023911bc3",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::confluent:index/connector:Connector::t-101-offline-aggregate-connector",
                "custom": true,
                "id": "t-101-offline-aggregate",
                "type": "confluent:index/connector:Connector",
                "inputs": {
                    "__defaults": [],
                    "clusterId": "lkc-811rkq",
                    "config": {
                        "__defaults": [],
                        "aws.access.key.id": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABADYJ7bWRdgznBxNS2FXNnn7oVTaxS2WiSxrlw/4ftdP7Fu9oBGqinoAg+OXzq06xRaWv"
                        },
                        "aws.secret.access.key": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABANpVdHO9O45SmowJh3POyR1EYL93GwUFD9I3kG8G+cpgMB3UKILwsQnzn+lhkBSD1S3jJQDltSm8LzcmsHGw6kqA3mvUvxw="
                        },
                        "connector.class": "S3_SINK",
                        "flush.size": "1000000",
                        "input.data.format": "JSON",
                        "kafka.api.key": "SJLSMRYRKYALJ4Q4",
                        "kafka.api.secret": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAEYu+so1glefPE/Uu1/WN+nY2clXGrJYaqFDUi81YE+EB1IpzmRd1dUOu3adMMznwSS1WWdQ6U1H0fQkvSB6Oi2H5311jfTX6Y5cwktsu5+Ecni8AwK7TfzXWaSANEs="
                        },
                        "kafka.auth.mode": "KAFKA_API_KEY",
                        "name": "t-101-offline-aggregate",
                        "output.data.format": "JSON",
                        "s3.bucket.name": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABANDOOBoUN1cl6qen/ppVod0fHmuxkXOrPwP+XXHqe+1k0xN08XxGV/0KDgwpHEMY30Q0jcID1nPM+QdIo4k="
                        },
                        "tasks.max": "1",
                        "time.interval": "HOURLY",
                        "topics": "t_101_aggr_offline_transform",
                        "topics.dir": "daily"
                    },
                    "environmentId": "env-ry1w0",
                    "name": "t-101-offline-aggregate"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":1200000000000}}",
                    "clusterId": "lkc-811rkq",
                    "config": {
                        "aws.access.key.id": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAKJSmkBQCYFIGfFexw73AIwgujBnZDOSnaDDlBxJPLqs7IbgXbvz8AjNQUGXu3OTB589"
                        },
                        "aws.secret.access.key": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAC73u0CONxSffMd21Sq1BgkBZFsFwD+C0oepzMuhwdtTBa0E7UK3qO3N23Uy24TkVtCh9W74gY6yVbgtNgudXCWa5aa8cbU="
                        },
                        "connector.class": "S3_SINK",
                        "flush.size": "1000000",
                        "input.data.format": "JSON",
                        "kafka.api.key": "SJLSMRYRKYALJ4Q4",
                        "kafka.api.secret": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAC1AV2pJ9pkjx6zhCzsp2//sg5rWLYfaqGlFe1WPL0Bzamaj3BW7RlzCpHt7ZQUmc2gXeVclhUHbpFl8MrGubnPOiakWRpOSqGN8siRCuWg8KKJ/I6nKDbZ8zuaJ8l4="
                        },
                        "kafka.auth.mode": "KAFKA_API_KEY",
                        "name": "t-101-offline-aggregate",
                        "output.data.format": "JSON",
                        "s3.bucket.name": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAPvSVLg3/yGKRC+9XgGP3RLwhdd7fsMD8F6WyqScdLmMtUqxF98j9D29RIHSEE2MApCjXouqgNpLTfzhAW8="
                        },
                        "tasks.max": "1",
                        "time.interval": "HOURLY",
                        "topics": "t_101_aggr_offline_transform",
                        "topics.dir": "daily"
                    },
                    "environmentId": "env-ry1w0",
                    "id": "t-101-offline-aggregate",
                    "name": "t-101-offline-aggregate"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:iam/accessKey:AccessKey::t-101-offline-aggr-access-key"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:confluent::t-101-offline-aggr-connector-provider::efc62ac5-2120-4415-b15d-9d8b8d4fbf2e",
                "propertyDependencies": {
                    "clusterId": null,
                    "config": [
                        "urn:pulumi:tier-101::launchpad::aws:iam/accessKey:AccessKey::t-101-offline-aggr-access-key"
                    ],
                    "environmentId": null,
                    "name": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:glue/job:Job::t-101-topk-gluejob",
                "custom": true,
                "id": "t-101-topk",
                "type": "aws:glue/job:Job",
                "inputs": {
                    "__defaults": [],
                    "command": {
                        "__defaults": [
                            "name"
                        ],
                        "name": "glueetl",
                        "pythonVersion": "3",
                        "scriptLocation": "s3://p-3-offline-aggregate-source/topk.py"
                    },
                    "defaultArguments": {
                        "--INPUT_BUCKET": "t-101-offline-aggregate-storage",
                        "--OUTPUT_BUCKET": "t-101-offline-aggregate-output",
                        "--TIER_ID": "101",
                        "--continuous-log-logStreamPrefix": "t-101-topk",
                        "--enable-continuous-cloudwatch-log": "true",
                        "--enable-continuous-log-filter": "false",
                        "--enable-metrics": "true",
                        "__defaults": []
                    },
                    "description": "GLUE job for TopK offline Aggregate",
                    "executionProperty": {
                        "__defaults": [],
                        "maxConcurrentRuns": 50
                    },
                    "glueVersion": "3.0",
                    "maxRetries": 5,
                    "name": "t-101-topk",
                    "numberOfWorkers": 3,
                    "roleArn": "arn:aws:iam::030813887342:role/t-101-offline-aggr-gluerole-20220824192435422800000001",
                    "timeout": 120,
                    "workerType": "G.2X"
                },
                "outputs": {
                    "arn": "arn:aws:glue:us-west-2:030813887342:job/t-101-topk",
                    "command": {
                        "name": "glueetl",
                        "pythonVersion": "3",
                        "scriptLocation": "s3://p-3-offline-aggregate-source/topk.py"
                    },
                    "connections": [],
                    "defaultArguments": {
                        "--INPUT_BUCKET": "t-101-offline-aggregate-storage",
                        "--OUTPUT_BUCKET": "t-101-offline-aggregate-output",
                        "--TIER_ID": "101",
                        "--continuous-log-logStreamPrefix": "t-101-topk",
                        "--enable-continuous-cloudwatch-log": "true",
                        "--enable-continuous-log-filter": "false",
                        "--enable-metrics": "true"
                    },
                    "description": "GLUE job for TopK offline Aggregate",
                    "executionProperty": {
                        "maxConcurrentRuns": 50
                    },
                    "glueVersion": "3.0",
                    "id": "t-101-topk",
                    "maxCapacity": 6,
                    "maxRetries": 5,
                    "name": "t-101-topk",
                    "nonOverridableArguments": {},
                    "notificationProperty": null,
                    "numberOfWorkers": 3,
                    "roleArn": "arn:aws:iam::030813887342:role/t-101-offline-aggr-gluerole-20220824192435422800000001",
                    "securityConfiguration": "",
                    "tags": {},
                    "tagsAll": {},
                    "timeout": 120,
                    "workerType": "G.2X"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-offline-aggr-glue-role"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::t-101-offline-aggr-glue-provider::f9060164-68be-4fc0-9d6e-465e1d56f31b",
                "propertyDependencies": {
                    "command": null,
                    "defaultArguments": null,
                    "description": null,
                    "executionProperty": null,
                    "glueVersion": null,
                    "maxRetries": null,
                    "name": null,
                    "numberOfWorkers": null,
                    "roleArn": [
                        "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-offline-aggr-glue-role"
                    ],
                    "timeout": null,
                    "workerType": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:glue/trigger:Trigger::t-101-scheduled-trigger",
                "custom": true,
                "id": "t-101-scheduled-trigger-ecf3c47",
                "type": "aws:glue/trigger:Trigger",
                "inputs": {
                    "__defaults": [
                        "enabled",
                        "name"
                    ],
                    "actions": [
                        {
                            "__defaults": [],
                            "jobName": "t-101-training-data-gen"
                        }
                    ],
                    "description": "Triggers GLUE job to transform features and labels from in JSON format to Parquet",
                    "enabled": true,
                    "name": "t-101-scheduled-trigger-ecf3c47",
                    "schedule": "cron(15 0 * * ? *)",
                    "type": "SCHEDULED"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000}}",
                    "actions": [
                        {
                            "arguments": {},
                            "crawlerName": "",
                            "jobName": "t-101-training-data-gen",
                            "notificationProperty": null,
                            "securityConfiguration": "",
                            "timeout": 0
                        }
                    ],
                    "arn": "arn:aws:glue:us-west-2:030813887342:trigger/t-101-scheduled-trigger-ecf3c47",
                    "description": "Triggers GLUE job to transform features and labels from in JSON format to Parquet",
                    "enabled": true,
                    "id": "t-101-scheduled-trigger-ecf3c47",
                    "name": "t-101-scheduled-trigger-ecf3c47",
                    "predicate": null,
                    "schedule": "cron(15 0 * * ? *)",
                    "state": "ACTIVATED",
                    "tags": {},
                    "tagsAll": {},
                    "type": "SCHEDULED",
                    "workflowName": ""
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:glue/job:Job::t-101-gluejob"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::glue-job-aws-provider::a55682fa-be50-4d32-8015-99c5170582c2",
                "propertyDependencies": {
                    "actions": [
                        "urn:pulumi:tier-101::launchpad::aws:glue/job:Job::t-101-gluejob"
                    ],
                    "description": null,
                    "schedule": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:glue/job:Job::t-101-cf-gluejob",
                "custom": true,
                "id": "t-101-cf",
                "type": "aws:glue/job:Job",
                "inputs": {
                    "__defaults": [],
                    "command": {
                        "__defaults": [
                            "name"
                        ],
                        "name": "glueetl",
                        "pythonVersion": "3",
                        "scriptLocation": "s3://p-3-offline-aggregate-source/cf.py"
                    },
                    "defaultArguments": {
                        "--INPUT_BUCKET": "t-101-offline-aggregate-storage",
                        "--OUTPUT_BUCKET": "t-101-offline-aggregate-output",
                        "--TIER_ID": "101",
                        "--continuous-log-logStreamPrefix": "t-101-cf",
                        "--enable-continuous-cloudwatch-log": "true",
                        "--enable-continuous-log-filter": "false",
                        "__defaults": []
                    },
                    "description": "GLUE job for Collaborative Filtering offline Aggregate",
                    "executionProperty": {
                        "__defaults": [],
                        "maxConcurrentRuns": 20
                    },
                    "glueVersion": "3.0",
                    "maxRetries": 5,
                    "name": "t-101-cf",
                    "numberOfWorkers": 8,
                    "roleArn": "arn:aws:iam::030813887342:role/t-101-offline-aggr-gluerole-20220824192435422800000001",
                    "timeout": 600,
                    "workerType": "G.2X"
                },
                "outputs": {
                    "arn": "arn:aws:glue:us-west-2:030813887342:job/t-101-cf",
                    "command": {
                        "name": "glueetl",
                        "pythonVersion": "3",
                        "scriptLocation": "s3://p-3-offline-aggregate-source/cf.py"
                    },
                    "connections": [],
                    "defaultArguments": {
                        "--INPUT_BUCKET": "t-101-offline-aggregate-storage",
                        "--OUTPUT_BUCKET": "t-101-offline-aggregate-output",
                        "--TIER_ID": "101",
                        "--continuous-log-logStreamPrefix": "t-101-cf",
                        "--enable-continuous-cloudwatch-log": "true",
                        "--enable-continuous-log-filter": "false"
                    },
                    "description": "GLUE job for Collaborative Filtering offline Aggregate",
                    "executionProperty": {
                        "maxConcurrentRuns": 20
                    },
                    "glueVersion": "3.0",
                    "id": "t-101-cf",
                    "maxCapacity": 16,
                    "maxRetries": 5,
                    "name": "t-101-cf",
                    "nonOverridableArguments": {},
                    "notificationProperty": null,
                    "numberOfWorkers": 8,
                    "roleArn": "arn:aws:iam::030813887342:role/t-101-offline-aggr-gluerole-20220824192435422800000001",
                    "securityConfiguration": "",
                    "tags": {},
                    "tagsAll": {},
                    "timeout": 600,
                    "workerType": "G.2X"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-offline-aggr-glue-role"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::t-101-offline-aggr-glue-provider::f9060164-68be-4fc0-9d6e-465e1d56f31b",
                "propertyDependencies": {
                    "command": null,
                    "defaultArguments": null,
                    "description": null,
                    "executionProperty": null,
                    "glueVersion": null,
                    "maxRetries": null,
                    "name": null,
                    "numberOfWorkers": null,
                    "roleArn": [
                        "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-offline-aggr-glue-role"
                    ],
                    "timeout": null,
                    "workerType": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:iam/rolePolicy:RolePolicy::t-101-offline-aggr-glue-rolepolicy",
                "custom": true,
                "id": "t-101-offline-aggr-gluerole-20220824192435422800000001:t-101-offline-aggr-glue-rolepolicy",
                "type": "aws:iam/rolePolicy:RolePolicy",
                "inputs": {
                    "__defaults": [],
                    "name": "t-101-offline-aggr-glue-rolepolicy",
                    "policy": "{\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": [\n                        \"s3:ListAllMyBuckets\"\n                    ],\n                    \"Resource\":\"arn:aws:s3:::*\"\n                },\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": [\n                        \"s3:ListBucket\",\n                        \"s3:GetBucketLocation\"\n                    ],\n                    \"Resource\": [\n                        \"arn:aws:s3:::t-101-offline-aggregate-storage\",\n                        \"arn:aws:s3:::p-3-offline-aggregate-source\",\n                        \"arn:aws:s3:::t-101-offline-aggregate-output\"\n                    ]\n                },\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\":[\n                        \"s3:GetObject\"\n                    ],\n                    \"Resource\": [\n                        \"arn:aws:s3:::p-3-offline-aggregate-source/*\",\n                        \"arn:aws:s3:::t-101-offline-aggregate-storage/*\"\n                    ]\n                },\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\":[\n                        \"s3:PutObject\",\n                        \"s3:GetObject\",\n                        \"s3:AbortMultipartUpload\",\n                        \"s3:ListMultipartUploadParts\",\n                        \"s3:ListBucketMultipartUploads\"\n                    ],\n                    \"Resource\": [\n                        \"arn:aws:s3:::t-101-offline-aggregate-output/*\"\n                    ]\n                },\n                {\n                    \"Effect\": \"Allow\",\n                    \"Action\": \"cloudwatch:PutMetricData\",\n                    \"Resource\": [\n                        \"*\"\n                    ]\n                },\n                {\n                    \"Effect\": \"Allow\",\n                    \"Action\": [\n                        \"logs:CreateLogStream\",\n                        \"logs:PutLogEvents\"\n                    ],\n                    \"Resource\": [\n                        \"arn:aws:logs:*:*:/aws-glue/*\"\n                    ]\n                }\n            ]\n        }",
                    "role": "t-101-offline-aggr-gluerole-20220824192435422800000001"
                },
                "outputs": {
                    "id": "t-101-offline-aggr-gluerole-20220824192435422800000001:t-101-offline-aggr-glue-rolepolicy",
                    "name": "t-101-offline-aggr-glue-rolepolicy",
                    "policy": "{\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": [\n                        \"s3:ListAllMyBuckets\"\n                    ],\n                    \"Resource\":\"arn:aws:s3:::*\"\n                },\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": [\n                        \"s3:ListBucket\",\n                        \"s3:GetBucketLocation\"\n                    ],\n                    \"Resource\": [\n                        \"arn:aws:s3:::t-101-offline-aggregate-storage\",\n                        \"arn:aws:s3:::p-3-offline-aggregate-source\",\n                        \"arn:aws:s3:::t-101-offline-aggregate-output\"\n                    ]\n                },\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\":[\n                        \"s3:GetObject\"\n                    ],\n                    \"Resource\": [\n                        \"arn:aws:s3:::p-3-offline-aggregate-source/*\",\n                        \"arn:aws:s3:::t-101-offline-aggregate-storage/*\"\n                    ]\n                },\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\":[\n                        \"s3:PutObject\",\n                        \"s3:GetObject\",\n                        \"s3:AbortMultipartUpload\",\n                        \"s3:ListMultipartUploadParts\",\n                        \"s3:ListBucketMultipartUploads\"\n                    ],\n                    \"Resource\": [\n                        \"arn:aws:s3:::t-101-offline-aggregate-output/*\"\n                    ]\n                },\n                {\n                    \"Effect\": \"Allow\",\n                    \"Action\": \"cloudwatch:PutMetricData\",\n                    \"Resource\": [\n                        \"*\"\n                    ]\n                },\n                {\n                    \"Effect\": \"Allow\",\n                    \"Action\": [\n                        \"logs:CreateLogStream\",\n                        \"logs:PutLogEvents\"\n                    ],\n                    \"Resource\": [\n                        \"arn:aws:logs:*:*:/aws-glue/*\"\n                    ]\n                }\n            ]\n        }",
                    "role": "t-101-offline-aggr-gluerole-20220824192435422800000001"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-offline-aggr-glue-role"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::t-101-offline-aggr-glue-provider::f9060164-68be-4fc0-9d6e-465e1d56f31b",
                "propertyDependencies": {
                    "name": null,
                    "policy": null,
                    "role": [
                        "urn:pulumi:tier-101::launchpad::aws:iam/role:Role::t-101-offline-aggr-glue-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:command::default_0_0_3",
                "custom": true,
                "id": "70d8c1d9-f1bd-46e4-a93b-547984cff5ee",
                "type": "pulumi:providers:command",
                "inputs": {
                    "version": "0.0.3"
                },
                "outputs": {
                    "version": "0.0.3"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101"
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::http-aws-provider",
                "custom": true,
                "id": "3dfa5a8d-5f00-4983-bb35-69b221f37ee0",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "assumeRole": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::httpserver-k8s-provider",
                "custom": true,
                "id": "eb665557-4191-432d-bfb3-764ba0d27d43",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"],\"command\":\"aws\",\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "namespace": "t-101",
                    "version": "3.21.2"
                },
                "outputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"],\"command\":\"aws\",\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "namespace": "t-101",
                    "version": "3.21.2"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "kubeconfig": null,
                    "namespace": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::counters-cleanup-k8s-provider",
                "custom": true,
                "id": "76ddf7b3-a399-45ca-b2c2-2fa648234f4a",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"],\"command\":\"aws\",\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "namespace": "t-101",
                    "version": "3.21.2"
                },
                "outputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"],\"command\":\"aws\",\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "namespace": "t-101",
                    "version": "3.21.2"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "kubeconfig": null,
                    "namespace": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::docker:image:Image::http-server-img",
                "custom": false,
                "type": "docker:image:Image",
                "outputs": {
                    "baseImageName": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-http-server-repo-26e427f:e01e8465",
                    "digest": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-http-server-repo-26e427f:e01e8465-38483bd0744f37f6e6f69c3396cdbae7830ba168d7db29f41febdf9795ac85f6",
                    "id": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-http-server-repo-26e427f:e01e8465-38483bd0744f37f6e6f69c3396cdbae7830ba168d7db29f41febdf9795ac85f6",
                    "imageName": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-http-server-repo-26e427f:e01e8465-38483bd0744f37f6e6f69c3396cdbae7830ba168d7db29f41febdf9795ac85f6",
                    "registryServer": "https://030813887342.dkr.ecr.us-west-2.amazonaws.com"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101"
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::docker:image:Image::counters-cleanup-img",
                "custom": false,
                "type": "docker:image:Image",
                "outputs": {
                    "baseImageName": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-counter-cleanup-repo-95153aa:e01e8465",
                    "digest": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-counter-cleanup-repo-95153aa:e01e8465-c1c3ea9113de7a5cb83791f792823dc213476671a24e111819f92e65f66cd56d",
                    "id": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-counter-cleanup-repo-95153aa:e01e8465-c1c3ea9113de7a5cb83791f792823dc213476671a24e111819f92e65f66cd56d",
                    "imageName": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-counter-cleanup-repo-95153aa:e01e8465-c1c3ea9113de7a5cb83791f792823dc213476671a24e111819f92e65f66cd56d",
                    "registryServer": "https://030813887342.dkr.ecr.us-west-2.amazonaws.com"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101"
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::docker:image:Image::countaggr-img",
                "custom": false,
                "type": "docker:image:Image",
                "outputs": {
                    "baseImageName": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-countaggr-repo-94041ac:e01e8465",
                    "digest": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-countaggr-repo-94041ac:e01e8465-8a1ae8952c6284839db81286ed4e84afc13a23ede748cfca748c291fdbe2817b",
                    "id": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-countaggr-repo-94041ac:e01e8465-8a1ae8952c6284839db81286ed4e84afc13a23ede748cfca748c291fdbe2817b",
                    "imageName": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-countaggr-repo-94041ac:e01e8465-8a1ae8952c6284839db81286ed4e84afc13a23ede748cfca748c291fdbe2817b",
                    "registryServer": "https://030813887342.dkr.ecr.us-west-2.amazonaws.com"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101"
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::aggr-k8s-provider",
                "custom": true,
                "id": "a5068db4-3d5f-4f5f-8be8-090078256883",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"],\"command\":\"aws\",\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "namespace": "t-101",
                    "version": "3.21.2"
                },
                "outputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"],\"command\":\"aws\",\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "namespace": "t-101",
                    "version": "3.21.2"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "kubeconfig": null,
                    "namespace": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::configs-k8s-provider",
                "custom": true,
                "id": "62ac0010-c84e-4395-9e4d-5b6fd3d5f62d",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"],\"command\":\"aws\",\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "namespace": "t-101",
                    "version": "3.21.2"
                },
                "outputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1beta1\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"],\"command\":\"aws\",\"env\":[{\"name\":\"KUBERNETES_EXEC_INFO\",\"value\":\"{\\\"apiVersion\\\": \\\"client.authentication.k8s.io/v1beta1\\\"}\"}]}}}]}",
                    "namespace": "t-101",
                    "version": "3.21.2"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "kubeconfig": null,
                    "namespace": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::counter-cleanup-aws-provider",
                "custom": true,
                "id": "825ad821-ed10-444e-9a35-ce0f4efb03e3",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "assumeRole": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::aggr-aws-provider",
                "custom": true,
                "id": "203a3b45-b772-4210-98e0-92c45d2294c9",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "false",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "5.13.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "propertyDependencies": {
                    "assumeRole": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:ecr/repository:Repository::t-101-http-server-repo",
                "custom": true,
                "id": "t-101-http-server-repo-26e427f",
                "type": "aws:ecr/repository:Repository",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "imageScanningConfiguration": {
                        "__defaults": [],
                        "scanOnPush": true
                    },
                    "imageTagMutability": "MUTABLE",
                    "name": "t-101-http-server-repo-26e427f"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"delete\":1200000000000}}",
                    "arn": "arn:aws:ecr:us-west-2:030813887342:repository/t-101-http-server-repo-26e427f",
                    "encryptionConfigurations": [
                        {
                            "encryptionType": "AES256",
                            "kmsKey": ""
                        }
                    ],
                    "id": "t-101-http-server-repo-26e427f",
                    "imageScanningConfiguration": {
                        "scanOnPush": true
                    },
                    "imageTagMutability": "MUTABLE",
                    "name": "t-101-http-server-repo-26e427f",
                    "registryId": "030813887342",
                    "repositoryUrl": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-http-server-repo-26e427f",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::http-aws-provider::3dfa5a8d-5f00-4983-bb35-69b221f37ee0",
                "propertyDependencies": {
                    "imageScanningConfiguration": null,
                    "imageTagMutability": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:autoscaling/v2beta2:HorizontalPodAutoscaler::http-server-hpa",
                "custom": true,
                "id": "t-101/http-server-hpa",
                "type": "kubernetes:autoscaling/v2beta2:HorizontalPodAutoscaler",
                "inputs": {
                    "apiVersion": "autoscaling/v2beta2",
                    "kind": "HorizontalPodAutoscaler",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "http-server-hpa",
                        "namespace": "t-101"
                    },
                    "spec": {
                        "behavior": {
                            "scaleDown": {
                                "policies": [
                                    {
                                        "periodSeconds": 120,
                                        "type": "Pods",
                                        "value": 1
                                    }
                                ],
                                "selectPolicy": "Min",
                                "stabilizationWindowSeconds": 600
                            }
                        },
                        "maxReplicas": 3,
                        "metrics": [
                            {
                                "resource": {
                                    "name": "cpu",
                                    "target": {
                                        "averageUtilization": 80,
                                        "type": "Utilization"
                                    }
                                },
                                "type": "Resource"
                            },
                            {
                                "resource": {
                                    "name": "memory",
                                    "target": {
                                        "averageUtilization": 80,
                                        "type": "Utilization"
                                    }
                                },
                                "type": "Resource"
                            }
                        ],
                        "minReplicas": 1,
                        "scaleTargetRef": {
                            "apiVersion": "apps/v1",
                            "kind": "Deployment",
                            "name": "http-server"
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "autoscaling/v2beta2",
                    "__inputs": {
                        "apiVersion": "autoscaling/v2beta2",
                        "kind": "HorizontalPodAutoscaler",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "http-server-hpa",
                            "namespace": "t-101"
                        },
                        "spec": {
                            "behavior": {
                                "scaleDown": {
                                    "policies": [
                                        {
                                            "periodSeconds": 120,
                                            "type": "Pods",
                                            "value": 1
                                        }
                                    ],
                                    "selectPolicy": "Min",
                                    "stabilizationWindowSeconds": 600
                                }
                            },
                            "maxReplicas": 3,
                            "metrics": [
                                {
                                    "resource": {
                                        "name": "cpu",
                                        "target": {
                                            "averageUtilization": 80,
                                            "type": "Utilization"
                                        }
                                    },
                                    "type": "Resource"
                                },
                                {
                                    "resource": {
                                        "name": "memory",
                                        "target": {
                                            "averageUtilization": 80,
                                            "type": "Utilization"
                                        }
                                    },
                                    "type": "Resource"
                                }
                            ],
                            "minReplicas": 1,
                            "scaleTargetRef": {
                                "apiVersion": "apps/v1",
                                "kind": "Deployment",
                                "name": "http-server"
                            }
                        }
                    },
                    "apiVersion": "autoscaling/v2beta2",
                    "kind": "HorizontalPodAutoscaler",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"autoscaling/v2beta2\",\"kind\":\"HorizontalPodAutoscaler\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"http-server-hpa\",\"namespace\":\"t-101\"},\"spec\":{\"behavior\":{\"scaleDown\":{\"policies\":[{\"periodSeconds\":120,\"type\":\"Pods\",\"value\":1}],\"selectPolicy\":\"Min\",\"stabilizationWindowSeconds\":600}},\"maxReplicas\":3,\"metrics\":[{\"resource\":{\"name\":\"cpu\",\"target\":{\"averageUtilization\":80,\"type\":\"Utilization\"}},\"type\":\"Resource\"},{\"resource\":{\"name\":\"memory\",\"target\":{\"averageUtilization\":80,\"type\":\"Utilization\"}},\"type\":\"Resource\"}],\"minReplicas\":1,\"scaleTargetRef\":{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"name\":\"http-server\"}}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:53Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "autoscaling/v2beta2",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:behavior": {
                                            ".": {},
                                            "f:scaleDown": {
                                                ".": {},
                                                "f:policies": {},
                                                "f:selectPolicy": {},
                                                "f:stabilizationWindowSeconds": {}
                                            },
                                            "f:scaleUp": {
                                                ".": {},
                                                "f:policies": {},
                                                "f:selectPolicy": {},
                                                "f:stabilizationWindowSeconds": {}
                                            }
                                        },
                                        "f:maxReplicas": {},
                                        "f:metrics": {},
                                        "f:minReplicas": {},
                                        "f:scaleTargetRef": {
                                            "f:apiVersion": {},
                                            "f:kind": {},
                                            "f:name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:53Z"
                            }
                        ],
                        "name": "http-server-hpa",
                        "namespace": "t-101",
                        "resourceVersion": "57162844",
                        "uid": "f3f38fa3-83ec-4803-ab83-c42d27c0e109"
                    },
                    "spec": {
                        "behavior": {
                            "scaleDown": {
                                "policies": [
                                    {
                                        "periodSeconds": 120,
                                        "type": "Pods",
                                        "value": 1
                                    }
                                ],
                                "selectPolicy": "Min",
                                "stabilizationWindowSeconds": 600
                            },
                            "scaleUp": {
                                "policies": [
                                    {
                                        "periodSeconds": 15,
                                        "type": "Pods",
                                        "value": 4
                                    },
                                    {
                                        "periodSeconds": 15,
                                        "type": "Percent",
                                        "value": 100
                                    }
                                ],
                                "selectPolicy": "Max",
                                "stabilizationWindowSeconds": 0
                            }
                        },
                        "maxReplicas": 3,
                        "metrics": [
                            {
                                "resource": {
                                    "name": "memory",
                                    "target": {
                                        "averageUtilization": 80,
                                        "type": "Utilization"
                                    }
                                },
                                "type": "Resource"
                            },
                            {
                                "resource": {
                                    "name": "cpu",
                                    "target": {
                                        "averageUtilization": 80,
                                        "type": "Utilization"
                                    }
                                },
                                "type": "Resource"
                            }
                        ],
                        "minReplicas": 1,
                        "scaleTargetRef": {
                            "apiVersion": "apps/v1",
                            "kind": "Deployment",
                            "name": "http-server"
                        }
                    },
                    "status": {
                        "currentReplicas": 0,
                        "desiredReplicas": 0
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::httpserver-k8s-provider::eb665557-4191-432d-bfb3-764ba0d27d43",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:getambassador.io/v3alpha1:Mapping::api-server-mapping",
                "custom": true,
                "id": "t-101/data-server-mapping",
                "type": "kubernetes:getambassador.io/v3alpha1:Mapping",
                "inputs": {
                    "apiVersion": "getambassador.io/v3alpha1",
                    "kind": "Mapping",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "svc": "go-http"
                        },
                        "name": "data-server-mapping",
                        "namespace": "t-101"
                    },
                    "spec": {
                        "hostname": "*",
                        "prefix": "/data/",
                        "service": "http-server:2425",
                        "timeout_ms": 60000
                    }
                },
                "outputs": {
                    "__initialApiVersion": "getambassador.io/v3alpha1",
                    "__inputs": {
                        "apiVersion": "getambassador.io/v3alpha1",
                        "kind": "Mapping",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "svc": "go-http"
                            },
                            "name": "data-server-mapping",
                            "namespace": "t-101"
                        },
                        "spec": {
                            "hostname": "*",
                            "prefix": "/data/",
                            "service": "http-server:2425",
                            "timeout_ms": 60000
                        }
                    },
                    "apiVersion": "getambassador.io/v3alpha1",
                    "kind": "Mapping",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"getambassador.io/v3alpha1\",\"kind\":\"Mapping\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"svc\":\"go-http\"},\"name\":\"data-server-mapping\",\"namespace\":\"t-101\"},\"spec\":{\"hostname\":\"*\",\"prefix\":\"/data/\",\"service\":\"http-server:2425\",\"timeout_ms\":60000}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:53Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "svc": "go-http"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "getambassador.io/v3alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:svc": {}
                                        }
                                    },
                                    "f:spec": {
                                        ".": {},
                                        "f:hostname": {},
                                        "f:prefix": {},
                                        "f:service": {},
                                        "f:timeout_ms": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:53Z"
                            }
                        ],
                        "name": "data-server-mapping",
                        "namespace": "t-101",
                        "resourceVersion": "57162847",
                        "uid": "ffef74c7-87e2-4af2-ab05-aa72b8eade3e"
                    },
                    "spec": {
                        "ambassador_id": [
                            "default"
                        ],
                        "hostname": "*",
                        "prefix": "/data/",
                        "service": "http-server:2425",
                        "timeout_ms": 60000
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::httpserver-k8s-provider::eb665557-4191-432d-bfb3-764ba0d27d43",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:getambassador.io/v3alpha1:Host::api-server-host",
                "custom": true,
                "id": "t-101/api-server-host",
                "type": "kubernetes:getambassador.io/v3alpha1:Host",
                "inputs": {
                    "apiVersion": "getambassador.io/v3alpha1",
                    "kind": "Host",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "svc": "go-http"
                        },
                        "name": "api-server-host",
                        "namespace": "t-101"
                    },
                    "spec": {
                        "acmeProvider": {
                            "authority": "none"
                        },
                        "hostname": "*",
                        "mappingSelector": {
                            "matchLabels": {
                                "svc": "go-http"
                            }
                        },
                        "requestPolicy": {
                            "insecure": {
                                "action": "Route"
                            }
                        },
                        "tls": {
                            "alpn_protocols": "h2",
                            "min_tls_version": "v1.2"
                        },
                        "tlsSecret": {
                            "name": "tls-cert"
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "getambassador.io/v3alpha1",
                    "__inputs": {
                        "apiVersion": "getambassador.io/v3alpha1",
                        "kind": "Host",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "svc": "go-http"
                            },
                            "name": "api-server-host",
                            "namespace": "t-101"
                        },
                        "spec": {
                            "acmeProvider": {
                                "authority": "none"
                            },
                            "hostname": "*",
                            "mappingSelector": {
                                "matchLabels": {
                                    "svc": "go-http"
                                }
                            },
                            "requestPolicy": {
                                "insecure": {
                                    "action": "Route"
                                }
                            },
                            "tls": {
                                "alpn_protocols": "h2",
                                "min_tls_version": "v1.2"
                            },
                            "tlsSecret": {
                                "name": "tls-cert"
                            }
                        }
                    },
                    "apiVersion": "getambassador.io/v3alpha1",
                    "kind": "Host",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"getambassador.io/v3alpha1\",\"kind\":\"Host\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"svc\":\"go-http\"},\"name\":\"api-server-host\",\"namespace\":\"t-101\"},\"spec\":{\"acmeProvider\":{\"authority\":\"none\"},\"hostname\":\"*\",\"mappingSelector\":{\"matchLabels\":{\"svc\":\"go-http\"}},\"requestPolicy\":{\"insecure\":{\"action\":\"Route\"}},\"tls\":{\"alpn_protocols\":\"h2\",\"min_tls_version\":\"v1.2\"},\"tlsSecret\":{\"name\":\"tls-cert\"}}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:53Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "svc": "go-http"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "getambassador.io/v3alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:svc": {}
                                        }
                                    },
                                    "f:spec": {
                                        ".": {},
                                        "f:acmeProvider": {
                                            ".": {},
                                            "f:authority": {}
                                        },
                                        "f:hostname": {},
                                        "f:mappingSelector": {
                                            ".": {},
                                            "f:matchLabels": {
                                                ".": {},
                                                "f:svc": {}
                                            }
                                        },
                                        "f:requestPolicy": {
                                            ".": {},
                                            "f:insecure": {
                                                ".": {},
                                                "f:action": {}
                                            }
                                        },
                                        "f:tls": {
                                            ".": {},
                                            "f:alpn_protocols": {},
                                            "f:min_tls_version": {}
                                        },
                                        "f:tlsSecret": {
                                            ".": {},
                                            "f:name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:53Z"
                            }
                        ],
                        "name": "api-server-host",
                        "namespace": "t-101",
                        "resourceVersion": "57162848",
                        "uid": "601e237f-ff70-4f86-a1ec-0a1e75b1cd5f"
                    },
                    "spec": {
                        "acmeProvider": {
                            "authority": "none"
                        },
                        "ambassador_id": [
                            "default"
                        ],
                        "hostname": "*",
                        "mappingSelector": {
                            "matchLabels": {
                                "svc": "go-http"
                            }
                        },
                        "requestPolicy": {
                            "insecure": {
                                "action": "Route"
                            }
                        },
                        "tls": {
                            "alpn_protocols": "h2",
                            "min_tls_version": "v1.2"
                        },
                        "tlsSecret": {
                            "name": "tls-cert"
                        }
                    },
                    "status": {}
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::httpserver-k8s-provider::eb665557-4191-432d-bfb3-764ba0d27d43",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:ConfigMap::milvus-conf",
                "custom": true,
                "id": "t-101/milvus-conf",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "endpoint": "milvus.milvus:19530"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "milvus-conf",
                        "namespace": "t-101"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "endpoint": "milvus.milvus:19530"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "milvus-conf",
                            "namespace": "t-101"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "endpoint": "milvus.milvus:19530"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"endpoint\":\"milvus.milvus:19530\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"milvus-conf\",\"namespace\":\"t-101\"}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:55Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:endpoint": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:55Z"
                            }
                        ],
                        "name": "milvus-conf",
                        "namespace": "t-101",
                        "resourceVersion": "57162866",
                        "uid": "b704afc9-cd66-46d3-b9b0-91d7ef62bf3a"
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::configs-k8s-provider::62ac0010-c84e-4395-9e4d-5b6fd3d5f62d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:ConfigMap::tier-conf",
                "custom": true,
                "id": "t-101/tier-conf",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "plane_id": "3",
                        "request_limit": "-1",
                        "tier_id": "101"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "tier-conf",
                        "namespace": "t-101"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-ef0c519b",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "plane_id": "3",
                            "request_limit": "-1",
                            "tier_id": "101"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "tier-conf",
                            "namespace": "t-101"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "plane_id": "3",
                        "request_limit": "-1",
                        "tier_id": "101"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"plane_id\":\"3\",\"request_limit\":\"-1\",\"tier_id\":\"101\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"tier-conf\",\"namespace\":\"t-101\"}}\n"
                        },
                        "creationTimestamp": "2022-09-15T18:20:08Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:plane_id": {},
                                        "f:request_limit": {},
                                        "f:tier_id": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-15T18:20:08Z"
                            }
                        ],
                        "name": "tier-conf",
                        "namespace": "t-101",
                        "resourceVersion": "67454078",
                        "uid": "15df01e9-c2ac-4f54-921c-316077f698dd"
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::configs-k8s-provider::62ac0010-c84e-4395-9e4d-5b6fd3d5f62d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:Secret::glue-config",
                "custom": true,
                "id": "t-101/glue-conf",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Secret",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "glue-conf",
                        "namespace": "t-101"
                    },
                    "stringData": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAI2PyP7SFpflmPF3OkJWhbKn0czZ6yQABP70GnJT2sTr19cpryNgtkMSimvqdJx8MB446zq9wUxoLEJA2YiYaametwGMcA20S24jxXvbL5bLNIAHMz/RRYTbSBme5XjQ"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Secret",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "glue-conf",
                            "namespace": "t-101"
                        },
                        "stringData": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAGb6aQTdztSsSUm9bGNfFUZgH9RgkNUxaJbdP0/OHOeA9Siq9VNROKQnjEN55W+cVePabkqzaeqlJrRi8WerxZ4qwZDPBS4uaJKN1OLqKHm4p+iVB5wkNhPHC6uI8NNF"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAEiNwrjT8pepdzhOJcIjD0eBj5PP8bPHdWPzB/R7IkP8UKaGo/2Ejdw++ccTUMsABtF2sGsaU8UI3R2M0jKaRpN630a9/WjD2DsHcYI5y/3bzpEt+aY7cbdnNHogD4ICHXi7WW56RlnFOeRw"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "AAABAFQ4IzrWffMTlKikgBZ+xkJF4sfLvX9gARvggOSdxyECcR+oFM4pV2b/wKlz4VEAS0FW6uN7IUvMO0PSaKc4BcgmvIxVZXriiZR5r91tpU2uRmLgbUyTuP9ICT8R129lwahUL+FL07SSI7uAKrXgxhordXRjtz0YAwjnWvhOCMfoEs8SXsZaXHCCOehR63zIpcjC7boVIwKiAz57CrfvxkdMyO/ae+0IZN1kZ7IWoJII70Ow9tHb+XzfW/mBF2ldBZyIUWAS6a8vN2P+d6ZBQKZuPs78Wep8eRKOjsr2n6oFx63j/JX1YNO3A9HNUkHSB+poE6MjNn2HMkxolSF2T62m7f7fmXSsOE9hDUgRIaRWwr8S1IzcaCBo6v1hiQ=="
                            }
                        },
                        "creationTimestamp": "2022-08-24T19:24:54Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:jobNameByAgg": {},
                                        "f:region": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:54Z"
                            }
                        ],
                        "name": "glue-conf",
                        "namespace": "t-101",
                        "resourceVersion": "57162855",
                        "uid": "5384ecfc-c8f8-4b80-a020-bd0a9986c709"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::configs-k8s-provider::62ac0010-c84e-4395-9e4d-5b6fd3d5f62d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "stringData": null
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:Secret::redis-config",
                "custom": true,
                "id": "t-101/redis-conf",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Secret",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "redis-conf",
                        "namespace": "t-101"
                    },
                    "stringData": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABANEib+aTMg8NBXHXILnCzNkM0EWgaApXYdih2SIlD7mo1MW6B54rQQl3jNkukK3q5Rj5Z/gzW2sNr0jx254HrCw8fAkcM8R2Q9GS6hmOnKg3Sw565WbORDrWr2cBroS9fOeMIFszOmx38MNtgbBdDFMaYQM="
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Secret",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "redis-conf",
                            "namespace": "t-101"
                        },
                        "stringData": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABACWLl85fw0M5HRuu313A3Q5zfdteckWPTI42Qe5oCsp+RfN1YTEXPCDi+pNGOCGB+3PeiyAO3DZva6eb6EfUt5Z3/Z60pxIPDTsxWRDbqoSWMOSVZVIGeHBqaI+HwixReJ8Cit3LbeGRPW9b9U6iU3ooGzM="
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABABWqHyPU17Xrc/BhfelCI4hTK/ksWP2lgZJJK9NhJY+WB2DidbtTRHonV+LwQci4cAD3Km3CzCPW04o1wwC/N5G+WF8gzW63VbSGDeo5Z84XNM9oXsNWepPG2TKQQts/T551ky7HBRXREW3WPlJEpreB8USzXBnR74mQnHSzkmnEgIDMq2l4TpwpV68F3yuk"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "AAABAK97RlYTYmKZU55SW9rVREbpF2PZyPI1E5VpkaP1dkFnBaM0v/K5A9+1HHzHSgY0mIT1mX8TqmzFcsys/eevYWezoWt0WGCc/G0ZSZSaWdu8CYJ7yEWvB9JIaZAQVopllfA/zWtLr/B2ISqb5V3mCZ5DtpN9uwXhAvetFrFavp2QOGsMMt7GI5a1ijhn7OlxloIRfaZY6fjwYeN8fGHthjPRqcUC02Pjg1lM2XdjzU08z2rec/L3lD0gxFiVEHt2K3is5fbfxC32R3BI/O2v8WaWp0DIESVQLmvq8alHhMZR/HfoGZquLXw4GaD+ECkEe6mWS6R1ksracafC8WNnWk1TA+gtSliyaHCAUFARr20ZJ7/xHh//rrpPSkcqk4f0ctHlUFA9yuF2ARPTkVvi"
                            }
                        },
                        "creationTimestamp": "2022-08-24T19:24:55Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:addr": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:55Z"
                            }
                        ],
                        "name": "redis-conf",
                        "namespace": "t-101",
                        "resourceVersion": "57162869",
                        "uid": "f22e48ee-7924-4317-bb7f-17485399d047"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::configs-k8s-provider::62ac0010-c84e-4395-9e4d-5b6fd3d5f62d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "stringData": null
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:ConfigMap::offline-aggr-output-conf",
                "custom": true,
                "id": "t-101/offline-aggregate-output-conf",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "bucket": "t-101-offline-aggregate-output"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "offline-aggregate-output-conf",
                        "namespace": "t-101"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "bucket": "t-101-offline-aggregate-output"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "offline-aggregate-output-conf",
                            "namespace": "t-101"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "bucket": "t-101-offline-aggregate-output"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"bucket\":\"t-101-offline-aggregate-output\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"offline-aggregate-output-conf\",\"namespace\":\"t-101\"}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:55Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:bucket": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:55Z"
                            }
                        ],
                        "name": "offline-aggregate-output-conf",
                        "namespace": "t-101",
                        "resourceVersion": "57162865",
                        "uid": "53cdc140-222e-4b5e-bedf-9f7fe569e65e"
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::configs-k8s-provider::62ac0010-c84e-4395-9e4d-5b6fd3d5f62d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:Secret::msk-kafka-config",
                "custom": true,
                "id": "t-101/msk-kafka-conf",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Secret",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "msk-kafka-conf",
                        "namespace": "t-101"
                    },
                    "stringData": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAIgBBydPsnZpqMFL4ykBoWDSrckVBgkCwKCTMU8CIrYcoejSY7KWHw2/n6iI1+LrNfJB5eCyJBaUQiVTSRf9zbZd46IdV+DwP0/p1D8mn5goSwHqrteDYueoc0JBV+tfijsJ7C46R9FCNvxPVTOiRRfrvKfRWbisk6ibvWcHh/iML1WKe1E+y5PLUnsn7AlSHWH4sKWFJ0ptR0OJKZBC8UI8jfD8udIx7F7kL/BWHAfAgfw8f4Aax0Dt385O5YmsQdnZKdJ8+wIDJIjVyXFeN7UQRWyZ6Ab0sF2EIE2NDqcTqpT9Kkrfigk="
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-bd81221f",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Secret",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "msk-kafka-conf",
                            "namespace": "t-101"
                        },
                        "stringData": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAE41ctm1asxYFyYwzCeMQR5Yx2q9kk5B9igAZaAXHrZGY0WdewEVBB+FmL44e9lG5gSMbTcqw+yyp4G8V4qF1fmwfZuxzAspvb/0GA1lYy1O0G+EnFuD15QTbsQU+802HQEEiMP8a15S2oNJh4qSIYQRPb1gGequOKZ2LD9iQfPZUEXMCtcgP38+dadV6jgXswzhTxyd2QT3puRM5G6fGPzf8qn3VjdKakVkOejHdCEFouN8ImvgIlGOeNuVJvEiIPf0pYGKPgPzq9tKw0G5+GKds2sRHZqRbHLQklT/wZDUzi1EvW2HFwo="
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABACd7ei0uDR9RVwDL/2NSDYVf+nQWUzurN+NgfkzMXhfg6Q4VYQcymMh3vHfXBVWQqXM9KrfzBP45omEUllPgzCldvhGPEfXFi99KPf3A+hbxHpNOwG+MZ7u+CBZG2MGk+tZK4Ml6wo0kGOn4ZpCnQYSqTyHN0kXAu/an5mJ1DVavAAIu1wngJGVrzW7C/OzaoV+ceJdzvsagY7LRGRAMxq2FRN4A8RDXaz9F2X3sIix3lFdQsN2aPz9X2oJ6PohGW4CegNxnSw4uyz04A1fVhFnGRrLxWRvpYRmmQvBJe4KgqwnwN2rNHhix5EoFLp+bFqO3WpoLjNion/LlKvOPWph3BRKsnhEdNHDL9+f6PdxT0RUxYgy5qXzEQIM="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "AAABAIcZ1tShWhzBwQRWvmP3MXPdeHJpYegDmQj/KmspnU2JfWl/7iQPL5k2ezN28yI6vI295FTCVOxxlNXFeqRLIhZj0fUSKStENP3s5TW3tRRFTVyF+0zHhg31U7XIZ4onOq6Lz8b3p4OnGpghp2sYoO3oCJj6MbFK1SrGprkCjuQ7ulQSxP1M7K1jDgoKw5bQHYKyFixSJ/QEy8N8ATLKv+ob3hj2JLzDeCupbP5BTZA2io7WUyDvcT2kHiVEdpZLTFOL/jk/1oyjE0Fp4FV0h1f7FaV5uxrFtMeyEDf924ta0COEQsHAPWHHJUpqppQAciNx4V0il/uMcQFe7HjvwtqUDN6rhIcDcVeJkBBROczZSDO2eleLbUuQSmymUj9pieSLwKWYTF+2m9H/X4EG5NXgcLl+OEo38lx1DIgoXcNem9p++cdq/cg3HSFmTuPKPU5cgQBonEXEGZkHGsdbanoEvICkUTyen3TWdqvUCb1NbBWnLFWqCHitm5VdzUmwPBUFog+8Qo6DzmvYkTKcPi94g5kXbHEZj7otXqlWZ0aTPMgQP0wFxZXBFrS3szxe"
                            }
                        },
                        "creationTimestamp": "2022-09-09T20:35:31Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:mskPassword": {},
                                        "f:mskServers": {},
                                        "f:mskUsername": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-09T20:35:31Z"
                            }
                        ],
                        "name": "msk-kafka-conf",
                        "namespace": "t-101",
                        "resourceVersion": "64667234",
                        "uid": "85b95cbe-a664-46d3-94e9-3b5a85c32024"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::configs-k8s-provider::62ac0010-c84e-4395-9e4d-5b6fd3d5f62d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "stringData": null
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:ConfigMap::otel-collector-conf",
                "custom": true,
                "id": "t-101/otel-collector-conf",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "endpoint": "otel-collector.otel-eks:4317",
                        "httpEndpoint": "otel-collector.otel-eks:4318"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "otel-collector-conf",
                        "namespace": "t-101"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "endpoint": "otel-collector.otel-eks:4317",
                            "httpEndpoint": "otel-collector.otel-eks:4318"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "otel-collector-conf",
                            "namespace": "t-101"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "endpoint": "otel-collector.otel-eks:4317",
                        "httpEndpoint": "otel-collector.otel-eks:4318"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"endpoint\":\"otel-collector.otel-eks:4317\",\"httpEndpoint\":\"otel-collector.otel-eks:4318\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"otel-collector-conf\",\"namespace\":\"t-101\"}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:55Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:endpoint": {},
                                        "f:httpEndpoint": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:55Z"
                            }
                        ],
                        "name": "otel-collector-conf",
                        "namespace": "t-101",
                        "resourceVersion": "57162871",
                        "uid": "bfca6619-2374-44b9-9ef2-a28dd2642a6e"
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::configs-k8s-provider::62ac0010-c84e-4395-9e4d-5b6fd3d5f62d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:ConfigMap::airbyte-conf",
                "custom": true,
                "id": "t-101/airbyte-conf",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "endpoint": ""
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "airbyte-conf",
                        "namespace": "t-101"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "endpoint": ""
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "airbyte-conf",
                            "namespace": "t-101"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "endpoint": ""
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"endpoint\":\"\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"airbyte-conf\",\"namespace\":\"t-101\"}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:54Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:endpoint": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:54Z"
                            }
                        ],
                        "name": "airbyte-conf",
                        "namespace": "t-101",
                        "resourceVersion": "57162862",
                        "uid": "79d763b6-1707-4da5-87f8-4c12aeed209f"
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::configs-k8s-provider::62ac0010-c84e-4395-9e4d-5b6fd3d5f62d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:Secret::model-serving-config",
                "custom": true,
                "id": "t-101/model-serving-conf",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Secret",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "model-serving-conf",
                        "namespace": "t-101"
                    },
                    "stringData": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAJABAGJVR1AkyBH5iZ+RRrL//5Fn1UdLFDSNxj3OhAIf91VS/MufUuVnYmT2cW968dEEZ+KRoEQMWBqWg8PVpjboAy9yJ9djzYeATH8GOzGzHWDHngLinMlQl2QM32aG3YyqT1yxDJz6wbtghxRC9Z07ebXHWv//3A1GazU5ix7ECfA8qR+MJ/8FvagCHVN4QLoJervZjU1W4SEki1Iw26l+vT+fmikOj2Hu8CXG/ZiXGXLpHVlUCTkRf9hMYxi8GgQbVDg1TNEqXcN2sSlHoTpP5FDAY9MFPS9jrL7nwsROqXmRA2+Tef+Yd2w+ddHdUSWxIo2vDLDIXBNCXDRVg0qQDKcVEzPbs7kGWp+h5MQSX1+Bdd2gkwcMKJe8+R+TggbJ4fsOVbJbfs6Tf3GClvMgrMeDKKefyiZxDrLMOEE1ztP4GJSFT/w4HPgrtpKgZik9KFheY8j1mDWzo2h9ndw6nBvKhJFrtMYL+SPupTKug0P41pvYUlvB"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Secret",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "model-serving-conf",
                            "namespace": "t-101"
                        },
                        "stringData": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAAYbqBtueDVg3WwWtuoRmj9/qkStnbXdNlUSZnw6zv+iOAT+leO7NU40R2IemYfVP/o3cauTwz13uYQArJ5JR+E7ZUHS3KOSlfVZ/iMw7vx4cu10qhQ5BCm78Roa24O5MvtvdQgBGzdMHky0BzhK/VWMdB4gS/vY0EjRAjaPWSUhi4PzfCUKxazMaWsSV1H2cZbXaDRzkqGQpOShSngSj+gvkPduOcWIpvYO3tDLsH5c8Jeiu/x4/TDDgIW7fZlJhnRgMEndsGnuX/X6ir8j4gyobrTGnAEsPTU+fxxnJOd9HegKopC4XkWOnBYxm+NRUotjfu/pGO4zlu1BzemCnQnSOCZGMhQ9G7tJL1J4Hj8poO/3KQpLyhoqdH964jWTxfFL7EGdhQ6lm9lzerQHRX05rggYVjWci9YvK6pRcvalIm/E/+A8JuOtCG9XdINojFU9eoQsxqtCJjHFb3KrpXymeknRAqQ6Ks3qRmMVB6dU7bSjtvLcsVXM"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAPUKBdvC4hS2KpxGlq3R7QSGd0YrjqBbwzWbwO9I8NJzBpp7VuP2SAkGZA3eGIpw0W7P1uLmHvk6h24/oQMBuxT9vuEMJjmTvyduM9MoyyX3RcM8CPe1rZ+0rJkZiAQC9JTfbjQDZktkd6vOi+tFYQf8IgE6ARmVdG2ewR1iXacm0E4winH4HS3DlJGmTJTNCmI5RCEObrvnic/gfbC0XXcFmiYTkgobbuUrwvqNX/OxkR6OFm6V8uLIfwTC0Ie4UrjqYFjVw6iju1oOwteWP0xaigJ93GaVrAup0cKSuyrZvo68IKYWR8AZPtbvDTyIgsxVGmE4CSlWFkf/0rToterSwZW4OcGBIvwK/pHumLGrqWhmoh/GqNahdzKFZUvz5GQlYQlZQOCKm5130z+y82QKXjO9cacwMeSXJvS79qQylikmPxcYqXvsjptS5dmqmkKHm3igL+T4WxkXAtqBNLLX2VGR98tn5OeV0FDpfXLsSyE55vFDlTP7ekNnzq13OQUkGudkp5wJEBao8DQZtpjqWQUz+ry+zO1eN9lita7XZgUFGf42QDjWaHLaUln/k1GchClpALsQ/dCyfWTXkJxgfXuCUlM="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "AAABAN3ttz2KvoqD0rVU4+1SfvvvJhxXoBjFNhys1V6hTQXKsAbPZhk0enOE4qCBpO0HntbElou2qpRRl0VWp9cJXmvKZtdd3lzAPZLVbFm9RAk7UTKfOhG8Qkj9FG0/uje6qBeJ5ibZg/NxvdOgQDiQ8D0CNWZlu6VzlzmLyub/DyiEVHkvhUsTJq0Ca9JmMMrYnT50gDRcD88Ym7MCDiGhZKbwTcN0UgLNyZ3jV/pVKBa8S2KsIVHac1OD4QxmMuzEk/eWjgtTn1Vs9lghNPl8FH+9vWdyyVpaqgaUMngp5H6eMitEgEEz0g+wrt+9bzywRJIFHRKgv9Dh2zs+aHTOIVXIGYft8Hc9plW0AdWFl2sFmfwaV5GGwCUulU2H1xuUd/cSZAuYv4cKq890GNix+XepdMkZZS1STGG+VHnkMyaJBjn68zAQSong67IerxKMsj7GWPNd359N3er1qy0dsJ5U8Of2TrK7C3yTs3LWFdfVNcPZx26vtsI/mFdOKxLPgYa6HWjT2m1dkbyoGWlS/GMETn9C8auKw5rK3BD5E4lKnvxV5ec3aW/2SQhcninaGWqgpSNe0q5tzTHJaQZp3Erx1Xxy3DuhuKM4M9mMnQFWAV+b0lBjZ6i1lWB2gKTOPXsPGnyxqoscFCoHSciwEO2HakidOSAnkX8h6Decz3YgIN428hKMWGNN1MQCCZH1GrjojWk8T57yhvR/GjdhqcP3Zo8jMG9c2o5FU3sRtiY2eMeL7a8XiEPPnMgI8ZCiGfxCc9cpUnvus5mJWFwv6qOb71ObsQDTNA=="
                            }
                        },
                        "creationTimestamp": "2022-08-24T19:24:56Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:executionRole": {},
                                        "f:instanceCount": {},
                                        "f:instanceType": {},
                                        "f:modelStoreBucket": {},
                                        "f:modelStoreEndpoint": {},
                                        "f:privateSubnets": {},
                                        "f:region": {},
                                        "f:securityGroup": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:56Z"
                            }
                        ],
                        "name": "model-serving-conf",
                        "namespace": "t-101",
                        "resourceVersion": "57162873",
                        "uid": "91e49527-21b7-4629-adfa-25110ed527d3"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::configs-k8s-provider::62ac0010-c84e-4395-9e4d-5b6fd3d5f62d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "stringData": null
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:ConfigMap::pprof-conf",
                "custom": true,
                "id": "t-101/pprof-conf",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "bucket": "t-101-pprof-store"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "pprof-conf",
                        "namespace": "t-101"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "bucket": "t-101-pprof-store"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "pprof-conf",
                            "namespace": "t-101"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "bucket": "t-101-pprof-store"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"bucket\":\"t-101-pprof-store\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"pprof-conf\",\"namespace\":\"t-101\"}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:55Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:bucket": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:55Z"
                            }
                        ],
                        "name": "pprof-conf",
                        "namespace": "t-101",
                        "resourceVersion": "57162864",
                        "uid": "621fdc55-c68d-4e67-ac19-d0c3eb33f6b6"
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::configs-k8s-provider::62ac0010-c84e-4395-9e4d-5b6fd3d5f62d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:Secret::kafka-config",
                "custom": true,
                "id": "t-101/kafka-conf",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Secret",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "kafka-conf",
                        "namespace": "t-101"
                    },
                    "stringData": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAI9oZerrZkWTU/dMlpLC6hQtYk47DdKBBkv+BBiUZ2q1jGOOGc+TNcfFUlgcJreVIVDgHScEW8dRBzqHW+rMJkKBkA8X0Ghb1GrprCLkiqyRBGAQZpQr08iAgllAaZmGlkEtn1QqkGynfMqeELNte7RmsukBifjogmG8SikIf9Zyz9Wl28VGf88ymoZDpu0uOCLi+s6TJYm1brSAg7uWs16MDx4PiArqJoE1fAFz6jTl/wi5EnIGKdoxpb59/JBMGfwclmd1oeNMzRgm0hESybt3tGQkVKAwnXMR5nyEUhRlJ5VG"
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-9695a501",
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Secret",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "kafka-conf",
                            "namespace": "t-101"
                        },
                        "stringData": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABANoC8FCicQjTGES3V5IgB4UdzISBGrxijWLM2TY9Jyl1IErByiJHb91jpl6x2mAm+mfETlNH/mpU2H0GV2pHLpqBu/4eWzxleNu37yJJWTklIezVs1Z3VhSrjI8amyU3UVMLOl/p642Mca+ag9GTBbdw7hqRU4QgYqWW6ObGMbzj4SyyYziKakDCkT/HXJvj8RK2JUj7FATcFnL9Ft06gMMy+2z0LzK7biQiTXZrNHgq6hPYRCRcR+o9GgV5fGmZVmjwwhQIK1SQ2N0ZoDiPfS1IFt3Hzmv8NsTZ70ic2dUoZIl6"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABABeTcb4ppBYxePUp0RkX6mZui0MkoUTH6Djox6DDjYocqklcO+8fLjeQ8bQEoJmOXBfLsQ76JRuFyvvfxlhaVDyVt8bc+jj8wee2TKo4dJXuKFdRrt6+Dm+B/p5PGKaYFZCaC3V7YIR4gAJTaxBB69LpdALSwAvdmzXLOF/uDVVuEJIhtC4g/kNUW2CP4IDkzXW+SvWOAZqGejkyt48dYuBl0X7I4HxN8bHPvqS1fo8Qt9k5zCK55KddwCVuQ31X2eQg2nopLixR0EL3ouYk8Vel+ntcKaRUEt98+xDOn983+IZ8nA2KfD18vlsnpJ1hOXCVmuScH3rmwxniJW7cxPnn3b3xOtdAl+7FrvXGFS05RhlgJpwbLg=="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "AAABAFmJ39j4LqcPPHXSF/OAyy7tpH2IAfuzwpm/x0qeiGukDtxgAgF/eoBuro1AfNQLBwK2p/R48bDiyzP0zbKXZ5eZ6gkrkTJUL9VD0RTWj9JjsJ1osZsVJT+IXgiAatEw7Qa0JYEF0rS5ZW9lujt0xDACJJ5B7tDZ3as/wxJDAxcX+KEcmbQuA3oE4PPY3m7u3zbd/Ukkw4LcgtCd++ERU5cwIUh3bpKvOcoM4SK/fvq3uLIVKk7f5Yq+krdLzZEMgnTUF5ojS4OSK9U1KGxfy/mpJc3Mg4uWtYrSGAVAHpeelmgyJnw8numknyuhNdyfPzkxwPn4jIOx+O43suOjMAFSZipGQK7O35LeqVZizs8Dg1hOz1b2YnzvjFRLtQl72eALC8t8gRLyOXjsWnOFgsoENCMstDuNKKUwqWG2KC1CdYw5IrMYMvNo1+SAAazARFnLf/UFcVmOG7Yx4VOMW04dVhGNYYlrk2+yRp/GXvqVioGmKw1+cgR97tGKFS1QJm5YstFgnFCcU5Crzt5Ex0v7YYLnihCxpKkc9U3Oo79BJt1Aem9RYsnmxw=="
                            }
                        },
                        "creationTimestamp": "2022-09-15T05:35:50Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:password": {},
                                        "f:server": {},
                                        "f:topicProducesToConfluent": {},
                                        "f:username": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-15T05:35:50Z"
                            }
                        ],
                        "name": "kafka-conf",
                        "namespace": "t-101",
                        "resourceVersion": "67200652",
                        "uid": "dafd5e58-93cb-44c1-ba5f-9e0949e88238"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::configs-k8s-provider::62ac0010-c84e-4395-9e4d-5b6fd3d5f62d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "stringData": null
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:ConfigMap::nitrous-conf",
                "custom": true,
                "id": "t-101/nitrous-conf",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "addr": "nitrous.fennel:3333"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "nitrous-conf",
                        "namespace": "t-101"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "addr": "nitrous.fennel:3333"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "nitrous-conf",
                            "namespace": "t-101"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "addr": "nitrous.fennel:3333"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"addr\":\"nitrous.fennel:3333\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"nitrous-conf\",\"namespace\":\"t-101\"}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:53Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:addr": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:53Z"
                            }
                        ],
                        "name": "nitrous-conf",
                        "namespace": "t-101",
                        "resourceVersion": "57162852",
                        "uid": "8f627533-0d91-4114-b597-05473dbf944c"
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::configs-k8s-provider::62ac0010-c84e-4395-9e4d-5b6fd3d5f62d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:Secret::cache-config",
                "custom": true,
                "id": "t-101/cache-conf",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Secret",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "cache-conf",
                        "namespace": "t-101"
                    },
                    "stringData": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAOjshMS8YIdto6FOPCUhzw4dvGUWXuCeBkxXsBoSxol9b7DiZMSxMy6os0TLfXojSm6Es5UtoutrI2SAMQjrCEa73z+knmoYU2lASRXXnqBYVqdvg1tPD7b2yj8+tofsN/KhzC42apmctWsTA+/Uu36NDOE="
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Secret",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "cache-conf",
                            "namespace": "t-101"
                        },
                        "stringData": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAAfZauvaBpJhGXRazKQvakv7vEL189A1hqA8DAmEqjiULx0cMEvr6ciNXnPKlPFHnOGG0pn9BeWyzrI6ZDiHi0dpFVyJ8BvyH4jidFuN4Ii01pCpI6gNg11mL8n2NjUspFhccC1Rn+ALEqpXXDI+0ijQGlE="
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABADn8OcRZ225DROfUV2NuMqmoopbcFiu5Vu8LbdIFU6m3az1I9FVvPTZ7B3qmuGY018WitSZFT5lOQyYZ5xdrfHxOzEE+3t7QMcjO9PRWVD4RWr6FBmy4M+O2eYFVSLCfnhizsaiOoKLPOlFyMqzjS0V7Fw2Ys/Pscy5rlpD/rK8W+I1zH4PhT2z1Ixw375k="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "AAABAEqMc3CjejY4FIeouwkC15/oMTxxxJHgpg7dPx8of1RCqhfvjETsBGlYccKkyuFZXGrGQ2xvuk/D42rFkjrM4Tigf+50A+/zCBuoW4BsyuK8GCFmp/Ihzyf6NZH5p7yH7kfsZ2BCHs71ywP5qqDIkpmTZnI/BnCnwFYBgzCBJJp5XBAT/1GNXQr1ZRhxA5qMOk+VwBSPybKtuCXJQ2B7ldKm/OqD2MX5IOKY5i0LGQj1HT2ny4QF7d9oVoekojIh30dR8/v/rhxvgQzO0k1RdeR32TG7GwkI4X2CneXdKAlJN7ONzTAuxIXEbXjLM0fOxUvhbmWwaczWLGOE/d/KnxK0YQeBk8NKrzssmeD+vStMDPw6hmHdyp5j7sXv27upVa3b/liWvvq3pPP/QVdz"
                            }
                        },
                        "creationTimestamp": "2022-08-24T19:24:53Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:primary": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:53Z"
                            }
                        ],
                        "name": "cache-conf",
                        "namespace": "t-101",
                        "resourceVersion": "57162851",
                        "uid": "c788bbf6-7adb-4b4e-be50-e0e0cefe638d"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::configs-k8s-provider::62ac0010-c84e-4395-9e4d-5b6fd3d5f62d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "stringData": null
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:ConfigMap::unleash-conf",
                "custom": true,
                "id": "t-101/unleash-conf",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "endpoint": "http://t-101-unleash.t-101:4242/api/"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "unleash-conf",
                        "namespace": "t-101"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "endpoint": "http://t-101-unleash.t-101:4242/api/"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "unleash-conf",
                            "namespace": "t-101"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "endpoint": "http://t-101-unleash.t-101:4242/api/"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"endpoint\":\"http://t-101-unleash.t-101:4242/api/\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"unleash-conf\",\"namespace\":\"t-101\"}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:24:56Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:endpoint": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:56Z"
                            }
                        ],
                        "name": "unleash-conf",
                        "namespace": "t-101",
                        "resourceVersion": "57162878",
                        "uid": "2faa2161-5a62-45c3-b951-1f9390561f02"
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::configs-k8s-provider::62ac0010-c84e-4395-9e4d-5b6fd3d5f62d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:Secret::db-config",
                "custom": true,
                "id": "t-101/mysql-conf",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Secret",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "mysql-conf",
                        "namespace": "t-101"
                    },
                    "stringData": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABADZ/FWJtvFx1Sltx6K/+ChsKQiPLqOABNFHGnf2oQe+FbYNY/U1YVYZxYPtKZ5M6bxs6k9DgYY5popfY9zfnUaAQUgFhoDweWsVP8vICZiSPIALzdEZ9tjDpCjjRdlVpBc7xl1YOWDwOe3OrZQsaUXTd2tDV6etkWT8A00W/FY0Au2NnAIm30FlfBXdeYDLOv2Oym5MJXyLOFN74YfIiqNRtIClWu+/PFMnCPsTJxz9S"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Secret",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "mysql-conf",
                            "namespace": "t-101"
                        },
                        "stringData": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAM4JrFvspGbmjYmJssimWCOvciNbCbIZvbJDOe+ey+CpFA09LAnq/AR4kgNXZ225vROfTBz07OuKisCHcK1GhHgJPE1C0uKVeSBxhyVfe+b3uuf0XarzWlFwMj/MdgjqcrC+cLYzRw1v71+lZHuFDKOfo4PS6XpxcQABWP42rRmjMLaAn+CVffpYU2yiZXshZr76Bc0pJOnu79yAbFVal6FeNxwem7GSxFf95H7G+kgw"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAGmpJI31IkhUz9eTcoM2EwnNKPhygyFheEpDxVdB61Q2pAASdaw2oLjSJLWFRZbH9XWLyXCOBBgLBg87LW1DWT1bPbwMz95tayw+hF6y+7UZfONth+b0pKU5vO1PE+Mr+pJZI3tQl87eOMPdE+H24Ba/7/PkEFUEE/FmJbmsnuP9gjqf3mXRYlC37Nv0cZCIzuKr9beUWJF/LgPehzouWsSAzqR2rxGb/hCGAVEnfzb12GknQKgBFqXzPsQKDYUVOEXP22yS7AcYf2Zgc5N9891RL5TQmoMv"
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "AAABACl6qLIXCI6fKdk/hgzjt3Ih5L4E7WY50na6/4dWGm783BIs6fLy0/KnaViC3G1PUuj+JRDoGAlaFVXhC2vG0AJBEKdBpG1w9vFTN2nL9OmTm01OmdLAVANUkDBTWxlnxYDvByIKVF84yuFztPNcoeqEStvP3blkL/kXErdJhhq7NcKUxLRpQeoIXbw/Ux8AzIBbWu3B7lfMzS0FjuZ2mu0f/RnwSpYh3Rv+1nKWTxXz2mpOBY5Nn9CGv/1BujdZTFhwALcp/xaf24bbMhAqg/rcww3Udl6kyi6tMkOkiA4Izkgsptii+pbzDP/FZobg9P7NXn4OtWSVob+l2Ys1frWhD8vdSLaPxskZGF4y9ekcIkDYGjwQR77Tx9e4bvw+9YYU0OSwinzqUaWNn/Z+ABdBQoxuyqNvN2R6IZww8HiSZBvdwCyexFr7alWByG0qcDxaW/qv3OKB5XaNxKHZ49qKqUKCgZ/sN7nWgGDFc9Nw2rCSjQFYjg=="
                            }
                        },
                        "creationTimestamp": "2022-08-24T19:24:56Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:db": {},
                                        "f:host": {},
                                        "f:password": {},
                                        "f:username": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:24:56Z"
                            }
                        ],
                        "name": "mysql-conf",
                        "namespace": "t-101",
                        "resourceVersion": "57162872",
                        "uid": "38cb6b36-14f5-49c9-a192-f0a68bc68a06"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::configs-k8s-provider::62ac0010-c84e-4395-9e4d-5b6fd3d5f62d",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "stringData": null
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:ecr/repository:Repository::t-101-counter-cleanup-repo",
                "custom": true,
                "id": "t-101-counter-cleanup-repo-95153aa",
                "type": "aws:ecr/repository:Repository",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "imageScanningConfiguration": {
                        "__defaults": [],
                        "scanOnPush": true
                    },
                    "imageTagMutability": "MUTABLE",
                    "name": "t-101-counter-cleanup-repo-95153aa"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"delete\":1200000000000}}",
                    "arn": "arn:aws:ecr:us-west-2:030813887342:repository/t-101-counter-cleanup-repo-95153aa",
                    "encryptionConfigurations": [
                        {
                            "encryptionType": "AES256",
                            "kmsKey": ""
                        }
                    ],
                    "id": "t-101-counter-cleanup-repo-95153aa",
                    "imageScanningConfiguration": {
                        "scanOnPush": true
                    },
                    "imageTagMutability": "MUTABLE",
                    "name": "t-101-counter-cleanup-repo-95153aa",
                    "registryId": "030813887342",
                    "repositoryUrl": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-counter-cleanup-repo-95153aa",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::counter-cleanup-aws-provider::825ad821-ed10-444e-9a35-ce0f4efb03e3",
                "propertyDependencies": {
                    "imageScanningConfiguration": null,
                    "imageTagMutability": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:ecr/repository:Repository::t-101-countaggr-repo",
                "custom": true,
                "id": "t-101-countaggr-repo-94041ac",
                "type": "aws:ecr/repository:Repository",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "imageScanningConfiguration": {
                        "__defaults": [],
                        "scanOnPush": true
                    },
                    "imageTagMutability": "MUTABLE",
                    "name": "t-101-countaggr-repo-94041ac"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"delete\":1200000000000}}",
                    "arn": "arn:aws:ecr:us-west-2:030813887342:repository/t-101-countaggr-repo-94041ac",
                    "encryptionConfigurations": [
                        {
                            "encryptionType": "AES256",
                            "kmsKey": ""
                        }
                    ],
                    "id": "t-101-countaggr-repo-94041ac",
                    "imageScanningConfiguration": {
                        "scanOnPush": true
                    },
                    "imageTagMutability": "MUTABLE",
                    "name": "t-101-countaggr-repo-94041ac",
                    "registryId": "030813887342",
                    "repositoryUrl": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-countaggr-repo-94041ac",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::aggr-aws-provider::203a3b45-b772-4210-98e0-92c45d2294c9",
                "propertyDependencies": {
                    "imageScanningConfiguration": null,
                    "imageTagMutability": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:ecr/lifecyclePolicy:LifecyclePolicy::t-101-http-server-repo-policy",
                "custom": true,
                "id": "t-101-http-server-repo-26e427f",
                "type": "aws:ecr/lifecyclePolicy:LifecyclePolicy",
                "inputs": {
                    "__defaults": [],
                    "policy": "{\"rules\":[{\"action\":{\"type\":\"expire\"},\"description\":\"Policy to expire images after 120 days\",\"rulePriority\":1,\"selection\":{\"countNumber\":120,\"countType\":\"sinceImagePushed\",\"countUnit\":\"days\",\"tagStatus\":\"any\"}}]}",
                    "repository": "t-101-http-server-repo-26e427f"
                },
                "outputs": {
                    "id": "t-101-http-server-repo-26e427f",
                    "policy": "{\"rules\":[{\"action\":{\"type\":\"expire\"},\"description\":\"Policy to expire images after 120 days\",\"rulePriority\":1,\"selection\":{\"countNumber\":120,\"countType\":\"sinceImagePushed\",\"countUnit\":\"days\",\"tagStatus\":\"any\"}}]}",
                    "registryId": "030813887342",
                    "repository": "t-101-http-server-repo-26e427f"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:ecr/repository:Repository::t-101-http-server-repo"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::http-aws-provider::3dfa5a8d-5f00-4983-bb35-69b221f37ee0",
                "propertyDependencies": {
                    "policy": null,
                    "repository": [
                        "urn:pulumi:tier-101::launchpad::aws:ecr/repository:Repository::t-101-http-server-repo"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:ecr/lifecyclePolicy:LifecyclePolicy::t-101-counter-cleanup-repo-policy",
                "custom": true,
                "id": "t-101-counter-cleanup-repo-95153aa",
                "type": "aws:ecr/lifecyclePolicy:LifecyclePolicy",
                "inputs": {
                    "__defaults": [],
                    "policy": "{\"rules\":[{\"action\":{\"type\":\"expire\"},\"description\":\"Policy to expire images after 120 days\",\"rulePriority\":1,\"selection\":{\"countNumber\":120,\"countType\":\"sinceImagePushed\",\"countUnit\":\"days\",\"tagStatus\":\"any\"}}]}",
                    "repository": "t-101-counter-cleanup-repo-95153aa"
                },
                "outputs": {
                    "id": "t-101-counter-cleanup-repo-95153aa",
                    "policy": "{\"rules\":[{\"action\":{\"type\":\"expire\"},\"description\":\"Policy to expire images after 120 days\",\"rulePriority\":1,\"selection\":{\"countNumber\":120,\"countType\":\"sinceImagePushed\",\"countUnit\":\"days\",\"tagStatus\":\"any\"}}]}",
                    "registryId": "030813887342",
                    "repository": "t-101-counter-cleanup-repo-95153aa"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:ecr/repository:Repository::t-101-counter-cleanup-repo"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::counter-cleanup-aws-provider::825ad821-ed10-444e-9a35-ce0f4efb03e3",
                "propertyDependencies": {
                    "policy": null,
                    "repository": [
                        "urn:pulumi:tier-101::launchpad::aws:ecr/repository:Repository::t-101-counter-cleanup-repo"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:ecr/lifecyclePolicy:LifecyclePolicy::t-101-countaggr-repo-policy",
                "custom": true,
                "id": "t-101-countaggr-repo-94041ac",
                "type": "aws:ecr/lifecyclePolicy:LifecyclePolicy",
                "inputs": {
                    "__defaults": [],
                    "policy": "{\"rules\":[{\"action\":{\"type\":\"expire\"},\"description\":\"Policy to expire images after 120 days\",\"rulePriority\":1,\"selection\":{\"countNumber\":120,\"countType\":\"sinceImagePushed\",\"countUnit\":\"days\",\"tagStatus\":\"any\"}}]}",
                    "repository": "t-101-countaggr-repo-94041ac"
                },
                "outputs": {
                    "id": "t-101-countaggr-repo-94041ac",
                    "policy": "{\"rules\":[{\"action\":{\"type\":\"expire\"},\"description\":\"Policy to expire images after 120 days\",\"rulePriority\":1,\"selection\":{\"countNumber\":120,\"countType\":\"sinceImagePushed\",\"countUnit\":\"days\",\"tagStatus\":\"any\"}}]}",
                    "registryId": "030813887342",
                    "repository": "t-101-countaggr-repo-94041ac"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:ecr/repository:Repository::t-101-countaggr-repo"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::aggr-aws-provider::203a3b45-b772-4210-98e0-92c45d2294c9",
                "propertyDependencies": {
                    "policy": null,
                    "repository": [
                        "urn:pulumi:tier-101::launchpad::aws:ecr/repository:Repository::t-101-countaggr-repo"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::command:local:Command::t-101-root-ca",
                "custom": true,
                "id": "8359ea8abd42",
                "type": "command:local:Command",
                "inputs": {
                    "create": "step certificate create fennel cert.pem key.pem --profile=self-signed --subtle --san=k8s-t101-aest101e-415ddfb646-95cc6040208e284b.elb.us-west-2.amazonaws.com --no-password --insecure -kty=RSA --size 4096",
                    "delete": "rm -f cert.pem key.pem"
                },
                "outputs": {
                    "create": "step certificate create fennel cert.pem key.pem --profile=self-signed --subtle --san=k8s-t101-aest101e-415ddfb646-95cc6040208e284b.elb.us-west-2.amazonaws.com --no-password --insecure -kty=RSA --size 4096",
                    "delete": "rm -f cert.pem key.pem",
                    "stderr": "Your certificate has been saved in cert.pem.\nYour private key has been saved in key.pem.",
                    "stdout": ""
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::t-101/aes-t-101-emissary-ingress"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:command::default_0_0_3::70d8c1d9-f1bd-46e4-a93b-547984cff5ee",
                "propertyDependencies": {
                    "create": [
                        "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::t-101/aes-t-101-emissary-ingress"
                    ],
                    "delete": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::command:local:Command::key",
                "custom": true,
                "id": "30021abd38523",
                "type": "command:local:Command",
                "inputs": {
                    "create": "cat key.pem | base64"
                },
                "outputs": {
                    "create": "cat key.pem | base64",
                    "stderr": "",
                    "stdout": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS2dJQkFBS0NBZ0VBNWROM1FlYUxK\ncmY1a256OWJUWitwbjZlL01HbFlmNno0S0RhL1pZSmp4MUVtZ3MrCjVRVlllTk03V215ZFRBOVhW\nTk9jU0s4NlNtR1VRQXpyaUxTQmxuZWpzSFI5WFN5WVNvV1VMeXNZWXZXV1pXclkKejJ4Q0xVbmV1\nWlRrK1dZUjJBRlNab0tiYlk1QmlsbFl4dXRwQWhPb05vR0Z5WG5tOVE5UkQ5R1lPbjFHOGN2Qgpp\nZUtTait2bC9seE1wRncyMmkyWEpSMXNvUEVKWlBnZFpZMXpqU255a0pNaHpieFBuL0xPL25LMzBs\nWXMzMXNICmYyMUo1OWlwN0s2c2NadlF3ZTFucXRqNXZiM3haNjVPTS9aWnVTU1dGUmtkS1BsOVdB\nM0djaFZWVjRobldBTlIKdzAwQjljSUhYeHdZREJnOFd1a1ZWY0JMdDZzaVp5VTRVWGFZeTUydmlZ\nSVlEVURuZmZ2djBaNFZoK0svRHZsLwp1aWdpby9jT0FYSTFvcGh3QzM2TjRiUEpnRjgyVGd3eklu\nTlRnN1dvMm5mdHNBY0N6NjJJNFNLYlp1amtCeDNjCnNvdHVxY2VkcmFRNUY1WkYrWFgvRmsxRmpB\nbGpKQ2RrYVdXajRsbHVLdFpSYkMxckNLbVdRbjJCd2ZiWDNVSlcKUzZLWmhTa25NY2JzeEgxTHhW\nZ2NPc2ZFK2Q2YzMySndWbEZHcWhhTDJMWHRLM05zMWV6RTM4N3pSNFlsVlpPcwp1WDNNRnBQaDVk\nOVdFTVJDa3pKaGxJaXZLUjM1THBQV2FSbG5KQS9MaUo2UitJL0JTVy9zbmM1OWo4QW9uZG9KClJ5\ncDZUNElrSW9MOEJvU1RDS0ZESzlZemVmSFpaU1h0WjlEYTJyYUg3RXZOZ2JIVUh1TzkzbmZrY1pj\nQ0F3RUEKQVFLQ0FnRUFvaEJhZW1nZUcvR0QxaDY1ZnJmODIxOVNzWjNFQjdSYUY3NldibGZNNmRT\nVHVhVFFkeU1yM2hmbQpOTDkrdEZIbEhYWVRNTllQM3Irc2tQWUxhVjBRUEpDbEp4c2VCQVFjYUFD\nR0hEVGhmM2I2MVExaFVmTmZQeHhtCktLdXNRNG9NYnl1UGRhWUlBRnRlTURjTStVaXJ4Y0Vpenp6\nS29PYUxUS2UrVzg5Szc0UEQ4V0hqV2w0aFI4ZnIKYVZDZzR3Mzd5Q0o2QUx3ZEMraXMzVHh4VGxs\nTzhHNXlGQzBNbTAxOVFLY3gvQS9kUEQ5MGFSU0Ixd08wSi8rSwo0OUhRM0ZRcUEzWnJzZmhMTTll\nclVaZUNvZlhJRTF5UFVOVmkwTEFPQ1hlOVJsbHcwc2JuU1JNZUp3QTRyNXBoCkpGcGxRckljYldj\nTG1tcDlla2o5ZTRxdGloUjliVkdtZGdoUy9YL2JuNVV3SCt0L1Q1S2RBcXNCVDhZc05OaC8KS3ZR\nb3JCZXBiSHM3ejJDckw5czR6M1JIb2tsMHBYd1VIK1ZET0U2SWhjMGRTNmVNZTBEUFRzS2YrSi81\nbjRRWQpQUHRZMjM2aU8vWFR1aUhtYU41REs2V3JwRElYRkRtZEdIZ1dENm1YUklIT0U4bWdUSEFE\nb3lBY0RveHhvZUNICmJRQThRVVVwd2pKK20vdDZmWTZwb1dzS2Y5OUdOaG1NaEFSQUNIY0xldjdF\nQk9HdjVCcmVURzUxUUFhaGI1YXIKTjZMbFhXMWFtcXpkTjNiZFhPanR3WTJDam43d056M0ZmMjVk\nVmtYT01FU25zUTFwQ1JlaVg3QXMrNENUdWplMApsdnV5M2hrWGg3TmI4ZnJNWWZIUHY0N0hpUXRF\nYStZSjRld2lVWlQ2V0luV2JybE5zU0VDZ2dFQkFPamljc2R5CmZpOEZhVjdPakpmMWp6U3VFdkc5\nMnJ5MU0vZ2RHOVBSL0dURFdFSko2Z2FTTjg2VW9zTUlBR2M4RFFEeEhSMUwKSis3NDZTcXRORHJp\nLzYrc3lNaDNXdmpaTXE0eGFWYWlLWDVvbjVoTEVWQ2NFMHF4TEVoVnJiMFBUeGQxQXNCYQo3cm8v\nY082eERYN2N6bW0xOGxIdjhyUnhxTDJFU1VUUmNrMUY1a2pXQXlTbnFWSEt3ZGxFSEZ4eUNhekkr\naDRDCitld1ZjbGlsS255NlRzSTBEQmxuL29tbkRBVDJZMG15QlZZNUZFNjZYaW8zOG9lQkRTQUpt\nZ21mYXFqdmJvWEkKM28yaUo0UjRRdzNUbDZIZERnbXR1K2pDUE4wZHQzV0VPVDdMenBhVFgvTnJO\nZUxoUUJRWUxqWTlhS0FQQmxaSQoyMFA2ckorTGZuRTNHK2tDZ2dFQkFQeWpUUXRuKzd6dlhnSElp\nRm82b2VOb2NmeTVETE94K2huNU1yV2FBeEF6CjRrNVZaQ1c5ZDlZYWc0L2JYS0JhOWxIWFBMTEFE\neXRNM3RpNWUwKzB3UHBBVjNYOFpWZ05mRmRZSHBJWFhPM20KT05FOXZjNmdUaDdrbkVGYWV1MFFJ\ndW4waVVZOTRrSTM5TWx0ZC9VSjJMU1Znak5hcFBrWnhGS3Q4Z2JoVytneApXVFA4T3RhbW9iMnNE\neFhSM0tQZGxQS2pOVnZzSGdORktmcGpNKzZ5VWV5VDRuNi9BVjh1VFU3YmVpek9oOGxUCnRvZkpu\neUZ0Ym91dmtSa3lQRzl1Y0R5aVRzbnV6SzZ2RklWTDF6SVpxZkVqK3dzZ25mdUVMNXVsMmNqWW5E\nK3EKTEdqblVRRjRCRzVxYW4rSHNpWWliaVFpUFVobDVZeXBBeG1Kby9QR01YOENnZ0VCQUpsQVEx\nWDZndzBBVzZuVwo5SEFmV1FES3VJNjZhQklja0Rsck5sKzY1SU9PaFNzQ0p1M3lGS1Z0N0htNWIw\nS0FJdktHdUtrSlJ4c2NVNXdRCjVMa0hua2lGeEk4ZTlBK2tKcFM0MFdBQVVKdnR6M0JSbmZCVTlP\nRUhIR1B4ZGVaZkI2WWhDeEY0Qlhjc3ZtMWsKdDhQUEhFbzJRR01wS3FjUjBILythSlRQMjQ3OE82\nR2NxKzdZSWpVLzN6YlJlblJmV3Z5SU9RZTgzNmc3S01jcQowWDNJd0lGTjdOUmZPZ0p0bWh3OTQz\nS2dvcUJ0Nlc0eGVEd0NHeWlPaFF1YkpmSEZKVlJNVTRmWWVwUHJyR09oCkhFY2lBYnV6azBSTlBz\nWFo1R0dCNTdOK3Nva2ZaekJ4aFFmVGVsOTE2VXdQNllFcUFncXFPSHBaY1drWHNiYy8KL1pJVk9O\na0NnZ0VCQUxPdklkaisrQmtFMW9QR01OU2I1eEJxOU1lZWhkNDRzMzFOdERkZGR0aExUcVlRTGM1\nNQoxNFc4RGQ1L1VuM3F0RTY1R3o2M1F4SzA5YnFIRWFFN0doWGpOVkdCVmtNdU5FV2JNd01OQXRk\naGF2L0hQZng4Ckg1UHhYUUZPYlNlMjFsNDN3bnJuQU1uQUtxWW82YXlxZUNyWU8yWnpEZXJ0M0to\nQmQyWlZXcHptbkY5UkFqZ3gKQTlCM1U3TmRNK1NJY0t1eVVQMDBEcFNjMktKeGREcE5NZDlsdnk0\nT2c5ZENnMUdXNEdxRjZpWFRHSHV6ZHk2NwpPbWkzVWlmdGh2WnFRZ0dlSHhPWWVKTzFpbzdUeGhh\nb0VpcWtRS1ZGYVplK0NHNVhvM0lxUGRjNkhhUHZBYnBkCnRpa2lIdVRkaW1OOUVZRTVxUVNaRkk3\nYWxvM1BTNERTY2RrQ2dnRUFJUVVUaEI0SmtpU005czBvNC9XQW91NGoKQ0k5cnBCYnkwemVmZHpq\nbVpNNDAyM3A3Ymk2dWZUNjFUbEJiU2YxcTlVOG5hMVlrZVlZa2xlRlQ5MGo0TVdrVgpERG9YZDZD\nNEN2b2FvMlA0d204RGlhT3JnQVJTMnptVkcrdTJ1aWJXdjM3OFVSQjljZDUyYmJGQmRnOVNUQW1W\nCmNLcC9KQ2RVeVVIc0N1bm5mcDdPTjJORS91ZjNvS2hWZkpFbXpucWlEMFZYcVNqeXJ3VlVJVzdX\naWNoRDJlUFAKVjdnY0RWSzdqdEU4aWNISzFVQlVuL2x4Q1M3WFpJOFJ0ZzJFbWRmYUdCVnZNRkx4\nN05QVEVqRGpEbmY3M0RkVwpMSXlCWURSS2dTSEI2SkF2MTNNRHYzOFVISmJ0VTF6ekxhK1VYc2Q4\ncGlGdE5kYmJhRUc5UmpiTW81V2pjUT09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::command:local:Command::t-101-root-ca"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:command::default_0_0_3::70d8c1d9-f1bd-46e4-a93b-547984cff5ee",
                "propertyDependencies": {
                    "create": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::command:local:Command::cert",
                "custom": true,
                "id": "300188b7680b3",
                "type": "command:local:Command",
                "inputs": {
                    "create": "cat cert.pem | base64"
                },
                "outputs": {
                    "create": "cat cert.pem | base64",
                    "stderr": "",
                    "stdout": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZWRENDQXp5Z0F3SUJBZ0lRTE9ZQmdHMyts\nNE13aW1IZFlER084REFOQmdrcWhraUc5dzBCQVFzRkFEQVIKTVE4d0RRWURWUVFERXdabVpXNXVa\nV3d3SGhjTk1qSXdPREkwTVRreU5UQTBXaGNOTWpJd09ESTFNVGt5TlRBMApXakFSTVE4d0RRWURW\nUVFERXdabVpXNXVaV3d3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQ0R3QXdnZ0lLCkFvSUNB\nUURsMDNkQjVvc210L21TZlAxdE5uNm1mcDc4d2FWaC9yUGdvTnI5bGdtUEhVU2FDejdsQlZoNDB6\ndGEKYkoxTUQxZFUwNXhJcnpwS1laUkFET3VJdElHV2Q2T3dkSDFkTEpoS2haUXZLeGhpOVpabGF0\nalBiRUl0U2Q2NQpsT1Q1WmhIWUFWSm1ncHR0amtHS1dWakc2MmtDRTZnMmdZWEplZWIxRDFFUDBa\nZzZmVWJ4eThHSjRwS1A2K1grClhFeWtYRGJhTFpjbEhXeWc4UWxrK0IxbGpYT05LZktRa3lITnZF\nK2Y4czcrY3JmU1ZpemZXd2QvYlVubjJLbnMKcnF4eG05REI3V2VxMlBtOXZmRm5yazR6OWxtNUpK\nWVZHUjBvK1gxWURjWnlGVlZYaUdkWUExSERUUUgxd2dkZgpIQmdNR0R4YTZSVlZ3RXUzcXlKbkpU\naFJkcGpMbmErSmdoZ05RT2Q5KysvUm5oV0g0cjhPK1grNktDS2o5dzRCCmNqV2ltSEFMZm8zaHM4\nbUFYelpPRERNaWMxT0R0YWphZCsyd0J3TFByWWpoSXB0bTZPUUhIZHl5aTI2cHg1MnQKcERrWGxr\nWDVkZjhXVFVXTUNXTWtKMlJwWmFQaVdXNHExbEZzTFdzSXFaWkNmWUhCOXRmZFFsWkxvcG1GS1Nj\neAp4dXpFZlV2RldCdzZ4OFQ1M3B6ZlluQldVVWFxRm92WXRlMHJjMnpWN01UZnp2TkhoaVZWazZ5\nNWZjd1drK0hsCjMxWVF4RUtUTW1HVWlLOHBIZmt1azlacEdXY2tEOHVJbnBINGo4RkpiK3lkem4y\nUHdDaWQyZ2xIS25wUGdpUWkKZ3Z3R2hKTUlvVU1yMWpONThkbGxKZTFuME5yYXRvZnNTODJCc2RR\nZTQ3M2VkK1J4bHdJREFRQUJvNEduTUlHawpNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNV\nRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3CkhRWURWUjBPQkJZRUZKQU5oOVR5VVR0\nVTZRblU3c0h1QmZzcHFYSElNRlFHQTFVZEVRUk5NRXVDU1dzNGN5MTAKTVRBeExXRmxjM1F4TURG\nbExUUXhOV1JrWm1JMk5EWXRPVFZqWXpZd05EQXlNRGhsTWpnMFlpNWxiR0l1ZFhNdApkMlZ6ZEMw\neUxtRnRZWHB2Ym1GM2N5NWpiMjB3RFFZSktvWklodmNOQVFFTEJRQURnZ0lCQUdZTHprR3A1RFhM\nCkErZ0lsL3NiYTNMcWtwa2VOWW9kYStpZGN2QjE2RnU0V3pVRFFmaUZTVlAwRFFQa0NoRStMcFN5\nUjRoUzhJMHIKZnRXd3lrcHduczVyOFZHSU93UzJZaGlLNjJnUWpKK2NYUjhBc0syamVQUU5oSjBo\ncDJaTDVUbyt4UGkyT0FpNgpJTG40QXBGbW5NcHg4NzB1dDBIcC9udXl2aUlCSE16M3lzdjI4NTZH\neGJ1QXdzN2xTWDc0cGNnNXBhdW9XQkNzCmg0d01CY3R4S0gxbTRWdlVGZ0Z5aWdKZXc2NURxS0Nm\ncXBKVmF3b2pKcldWYi9ZNFRta3B5VjZlSSsyeWFrTVIKdXR5aTVVZHdqUllMSUNHUVc0Mkd0NHZE\nNTdQNFg1bkd6R0pPckN5bEJ2bkcrRVEvblRwbm9UL05OclJWQ092QwoxZGZXWno3VzBQWWpXTWFL\nMll0TDlKUUt2cDZOVlJNS1pVWFJnOHlRLzVGa0dhZmdhWTlMYzZOVDFyMjMra3RTCndoV0pPNDI5\nSXFmckMvZG9tcGtpazI1RDl1bVliSldTQk1NcUxFMkNCd21uWmFYWmZ4UnhGbUg4TTJwTVd0b0gK\na3hhR1ZJWHQ4Tjg2RWl2Vk9wUmtjN3Nsb3Z1djZVYjU1UEU0b3BtbTBwc2ZkZnltL3k4NGxrR09V\nRzFwMkEyawp3MGRra21SOWlVN0pSZFhPOG5GTHVXaEVORjlaVUJ0N3BNbHprZysySE1iRkI4UHFE\nVDkyM0paOE9MQXJnUFJhCk5WaGNobVlmWjNIbTdHSm1zVGFPRXQ5SGw2bmpGNjVVZWc3akJIL2Jk\nUlZITy9rOFNDc2h0cHh1amhROE9MNHkKYVdQS2FiVFh4T2FpUWtqd3A1YlVTcHRudlk3aWVodEEK\nLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::command:local:Command::t-101-root-ca"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:command::default_0_0_3::70d8c1d9-f1bd-46e4-a93b-547984cff5ee",
                "propertyDependencies": {
                    "create": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:Secret::tls",
                "custom": true,
                "id": "t-101/tls-cert",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": ""
                    },
                    "kind": "Secret",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "tls-cert",
                        "namespace": "t-101"
                    },
                    "type": "kubernetes.io/tls"
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": ""
                        },
                        "kind": "Secret",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "tls-cert",
                            "namespace": "t-101"
                        },
                        "type": "kubernetes.io/tls"
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": ""
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": ""
                            }
                        },
                        "creationTimestamp": "2022-08-24T19:25:06Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:tls.crt": {},
                                        "f:tls.key": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:25:06Z"
                            }
                        ],
                        "name": "tls-cert",
                        "namespace": "t-101",
                        "resourceVersion": "57162925",
                        "uid": "0f82aca5-47b2-4ed4-8e5b-6d9c808dd3b8"
                    },
                    "type": "kubernetes.io/tls"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::command:local:Command::cert",
                    "urn:pulumi:tier-101::launchpad::command:local:Command::key"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::ingress-k8s-provider::ac212244-fd50-4350-9d41-d0e023911bc3",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": [
                        "urn:pulumi:tier-101::launchpad::command:local:Command::cert",
                        "urn:pulumi:tier-101::launchpad::command:local:Command::key"
                    ],
                    "kind": null,
                    "metadata": null,
                    "type": null
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::command:local:Command::t-101-cleanup",
                "custom": true,
                "id": "83745606d131",
                "type": "command:local:Command",
                "inputs": {
                    "create": "rm -f cert.pem key.pem"
                },
                "outputs": {
                    "create": "rm -f cert.pem key.pem",
                    "stderr": "",
                    "stdout": ""
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:Secret::tls"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:command::default_0_0_3::70d8c1d9-f1bd-46e4-a93b-547984cff5ee",
                "propertyDependencies": {
                    "create": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:ec2/vpcEndpointService:VpcEndpointService::t-101-ingress-vpc-endpoint-service",
                "custom": true,
                "id": "vpce-svc-0e93089f054590dd8",
                "type": "aws:ec2/vpcEndpointService:VpcEndpointService",
                "inputs": {
                    "__defaults": [],
                    "acceptanceRequired": true,
                    "allowedPrincipals": [
                        "*"
                    ],
                    "networkLoadBalancerArns": [
                        "arn:aws:elasticloadbalancing:us-west-2:030813887342:loadbalancer/net/k8s-t101-aest101e-415ddfb646/95cc6040208e284b"
                    ],
                    "tags": {
                        "Name": "t-101-endpoint-service",
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "acceptanceRequired": true,
                    "allowedPrincipals": [
                        "*"
                    ],
                    "arn": "arn:aws:ec2:us-west-2:030813887342:vpc-endpoint-service/vpce-svc-0e93089f054590dd8",
                    "availabilityZones": [
                        "us-west-2b",
                        "us-west-2a"
                    ],
                    "baseEndpointDnsNames": [
                        "vpce-svc-0e93089f054590dd8.us-west-2.vpce.amazonaws.com"
                    ],
                    "gatewayLoadBalancerArns": [],
                    "id": "vpce-svc-0e93089f054590dd8",
                    "managesVpcEndpoints": false,
                    "networkLoadBalancerArns": [
                        "arn:aws:elasticloadbalancing:us-west-2:030813887342:loadbalancer/net/k8s-t101-aest101e-415ddfb646/95cc6040208e284b"
                    ],
                    "privateDnsName": "",
                    "privateDnsNameConfigurations": [],
                    "serviceName": "com.amazonaws.vpce.us-west-2.vpce-svc-0e93089f054590dd8",
                    "serviceType": "Interface",
                    "state": "Available",
                    "tags": {
                        "Name": "t-101-endpoint-service",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "t-101-endpoint-service",
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:apps/v1:Deployment::t-101/aes-t-101-emissary-ingress",
                    "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::t-101/aes-t-101-emissary-ingress",
                    "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::t-101/aes-t-101-emissary-ingress-admin",
                    "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:ServiceAccount::t-101/aes-t-101-emissary-ingress",
                    "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:getambassador.io/v2:Module::t-101/ambassador",
                    "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::aes-t-101-emissary-ingress",
                    "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::aes-t-101-emissary-ingress-crd",
                    "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::aes-t-101-emissary-ingress",
                    "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:Role::t-101/aes-t-101-emissary-ingress",
                    "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::t-101/aes-t-101-emissary-ingress"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::ingress-aws-provider::9e58e45b-96d3-468d-a83c-83dad417aa24",
                "propertyDependencies": {
                    "acceptanceRequired": null,
                    "allowedPrincipals": null,
                    "networkLoadBalancerArns": [
                        "urn:pulumi:tier-101::launchpad::kubernetes:helm.sh/v3:Chart$kubernetes:core/v1:Service::t-101/aes-t-101-emissary-ingress"
                    ],
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:core/v1:Service::http-svc",
                "custom": true,
                "id": "t-101/http-server",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "labels": {
                            "app": "http-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "http-server",
                        "namespace": "t-101"
                    },
                    "spec": {
                        "ports": [
                            {
                                "port": 2425,
                                "protocol": "TCP",
                                "targetPort": 2425
                            }
                        ],
                        "selector": {
                            "app": "http-server"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app": "http-server",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "http-server",
                            "namespace": "t-101"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "port": 2425,
                                    "protocol": "TCP",
                                    "targetPort": 2425
                                }
                            ],
                            "selector": {
                                "app": "http-server"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "config.linkerd.io/opaque-ports": "2425",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"labels\":{\"app\":\"http-server\",\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"http-server\",\"namespace\":\"t-101\"},\"spec\":{\"ports\":[{\"port\":2425,\"protocol\":\"TCP\",\"targetPort\":2425}],\"selector\":{\"app\":\"http-server\"},\"type\":\"ClusterIP\"}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:36:41Z",
                        "labels": {
                            "app": "http-server",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:internalTrafficPolicy": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"port\":2425,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:sessionAffinity": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:36:41Z"
                            }
                        ],
                        "name": "http-server",
                        "namespace": "t-101",
                        "resourceVersion": "57166716",
                        "uid": "291f518c-66c1-4b2e-9010-3f8553cfb436"
                    },
                    "spec": {
                        "clusterIP": "172.20.96.145",
                        "clusterIPs": [
                            "172.20.96.145"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "port": 2425,
                                "protocol": "TCP",
                                "targetPort": 2425
                            }
                        ],
                        "selector": {
                            "app": "http-server"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::httpserver-k8s-provider::eb665557-4191-432d-bfb3-764ba0d27d43",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:apps/v1:Deployment::http-server-deployment",
                "custom": true,
                "id": "t-101/http-server",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "http-server",
                        "namespace": "t-101"
                    },
                    "spec": {
                        "selector": {
                            "matchLabels": {
                                "app": "http-server"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": 1,
                                "maxUnavailable": 1
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "config.alpha.linkerd.io/proxy-wait-before-exit-seconds": "1",
                                    "config.linkerd.io/proxy-cpu-limit": "1",
                                    "config.linkerd.io/proxy-cpu-request": "0.25",
                                    "config.linkerd.io/proxy-memory-limit": "1G",
                                    "config.linkerd.io/proxy-memory-request": "128M",
                                    "config.linkerd.io/skip-outbound-ports": "3306,6379",
                                    "prometheus.io/port": "2112",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "http-server"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "/root/server",
                                            "--metrics-port",
                                            "2112",
                                            "--health-port",
                                            "8082",
                                            "--dev=false"
                                        ],
                                        "env": [
                                            {
                                                "name": "NITROUS_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "addr",
                                                        "name": "nitrous-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "KAFKA_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "server",
                                                        "name": "kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "KAFKA_USERNAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "username",
                                                        "name": "kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "KAFKA_PASSWORD",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "password",
                                                        "name": "kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PRODUCE_TO_CONFLUENT",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "topicProducesToConfluent",
                                                        "name": "kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MSK_KAFKA_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "mskServers",
                                                        "name": "msk-kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MSK_KAFKA_USERNAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "mskUsername",
                                                        "name": "msk-kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MSK_KAFKA_PASSWORD",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "mskPassword",
                                                        "name": "msk-kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "REDIS_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "addr",
                                                        "name": "redis-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MYSQL_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "host",
                                                        "name": "mysql-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MYSQL_DATABASE_NAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "db",
                                                        "name": "mysql-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MYSQL_USERNAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "username",
                                                        "name": "mysql-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MYSQL_PASSWORD",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "password",
                                                        "name": "mysql-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "TIER_ID",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "tier_id",
                                                        "name": "tier-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PLANE_ID",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "plane_id",
                                                        "name": "tier-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "CACHE_PRIMARY",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "primary",
                                                        "name": "cache-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "REQUEST_LIMIT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "request_limit",
                                                        "name": "tier-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "AWS_REGION",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "region",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SAGEMAKER_EXECUTION_ROLE",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "executionRole",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PRIVATE_SUBNETS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "privateSubnets",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SAGEMAKER_SECURITY_GROUP",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "securityGroup",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SAGEMAKER_INSTANCE_TYPE",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "instanceType",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SAGEMAKER_INSTANCE_COUNT",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "instanceCount",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MODEL_STORE_S3_BUCKET",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "modelStoreBucket",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MODEL_STORE_ENDPOINT",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "modelStoreEndpoint",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "JOB_NAME_BY_AGG",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "jobNameByAgg",
                                                        "name": "glue-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "UNLEASH_ENDPOINT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "endpoint",
                                                        "name": "unleash-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "OTLP_ENDPOINT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "endpoint",
                                                        "name": "otel-collector-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "OTLP_HTTP_ENDPOINT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "httpEndpoint",
                                                        "name": "otel-collector-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "OFFLINE_AGG_BUCKET",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "bucket",
                                                        "name": "offline-aggregate-output-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MILVUS_URL",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "endpoint",
                                                        "name": "milvus-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PROCESS_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PPROF_BUCKET",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "bucket",
                                                        "name": "pprof-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "AIRBYTE_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "endpoint",
                                                        "name": "airbyte-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "INSTANCE_METADATA_SERVICE_ADDR",
                                                "value": "http://169.254.169.254/latest"
                                            }
                                        ],
                                        "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-http-server-repo-26e427f:e01e8465-38483bd0744f37f6e6f69c3396cdbae7830ba168d7db29f41febdf9795ac85f6",
                                        "imagePullPolicy": "Always",
                                        "name": "http-server",
                                        "ports": [
                                            {
                                                "containerPort": 2425,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 2112,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 8082,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 8082
                                            },
                                            "initialDelaySeconds": 2,
                                            "periodSeconds": 2,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1500m",
                                                "memory": "3G"
                                            },
                                            "requests": {
                                                "cpu": "1250m",
                                                "memory": "2G"
                                            }
                                        }
                                    }
                                ],
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "arm64"
                                },
                                "terminationGracePeriodSeconds": 61
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-694330a7",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "http-server",
                            "namespace": "t-101"
                        },
                        "spec": {
                            "selector": {
                                "matchLabels": {
                                    "app": "http-server"
                                }
                            },
                            "strategy": {
                                "rollingUpdate": {
                                    "maxSurge": 1,
                                    "maxUnavailable": 1
                                },
                                "type": "RollingUpdate"
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "config.alpha.linkerd.io/proxy-wait-before-exit-seconds": "1",
                                        "config.linkerd.io/proxy-cpu-limit": "1",
                                        "config.linkerd.io/proxy-cpu-request": "0.25",
                                        "config.linkerd.io/proxy-memory-limit": "1G",
                                        "config.linkerd.io/proxy-memory-request": "128M",
                                        "config.linkerd.io/skip-outbound-ports": "3306,6379",
                                        "prometheus.io/port": "2112",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "http-server"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "command": [
                                                "/root/server",
                                                "--metrics-port",
                                                "2112",
                                                "--health-port",
                                                "8082",
                                                "--dev=false"
                                            ],
                                            "env": [
                                                {
                                                    "name": "NITROUS_SERVER_ADDRESS",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "addr",
                                                            "name": "nitrous-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "KAFKA_SERVER_ADDRESS",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "server",
                                                            "name": "kafka-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "KAFKA_USERNAME",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "username",
                                                            "name": "kafka-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "KAFKA_PASSWORD",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "password",
                                                            "name": "kafka-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "PRODUCE_TO_CONFLUENT",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "topicProducesToConfluent",
                                                            "name": "kafka-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MSK_KAFKA_SERVER_ADDRESS",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "mskServers",
                                                            "name": "msk-kafka-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MSK_KAFKA_USERNAME",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "mskUsername",
                                                            "name": "msk-kafka-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MSK_KAFKA_PASSWORD",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "mskPassword",
                                                            "name": "msk-kafka-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "REDIS_SERVER_ADDRESS",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "addr",
                                                            "name": "redis-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MYSQL_SERVER_ADDRESS",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "host",
                                                            "name": "mysql-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MYSQL_DATABASE_NAME",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "db",
                                                            "name": "mysql-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MYSQL_USERNAME",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "username",
                                                            "name": "mysql-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MYSQL_PASSWORD",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "password",
                                                            "name": "mysql-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "TIER_ID",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "tier_id",
                                                            "name": "tier-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "PLANE_ID",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "plane_id",
                                                            "name": "tier-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "CACHE_PRIMARY",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "primary",
                                                            "name": "cache-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "REQUEST_LIMIT",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "request_limit",
                                                            "name": "tier-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "AWS_REGION",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "region",
                                                            "name": "model-serving-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "SAGEMAKER_EXECUTION_ROLE",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "executionRole",
                                                            "name": "model-serving-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "PRIVATE_SUBNETS",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "privateSubnets",
                                                            "name": "model-serving-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "SAGEMAKER_SECURITY_GROUP",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "securityGroup",
                                                            "name": "model-serving-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "SAGEMAKER_INSTANCE_TYPE",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "instanceType",
                                                            "name": "model-serving-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "SAGEMAKER_INSTANCE_COUNT",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "instanceCount",
                                                            "name": "model-serving-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MODEL_STORE_S3_BUCKET",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "modelStoreBucket",
                                                            "name": "model-serving-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MODEL_STORE_ENDPOINT",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "modelStoreEndpoint",
                                                            "name": "model-serving-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "JOB_NAME_BY_AGG",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "jobNameByAgg",
                                                            "name": "glue-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "UNLEASH_ENDPOINT",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "endpoint",
                                                            "name": "unleash-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "OTLP_ENDPOINT",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "endpoint",
                                                            "name": "otel-collector-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "OTLP_HTTP_ENDPOINT",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "httpEndpoint",
                                                            "name": "otel-collector-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "OFFLINE_AGG_BUCKET",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "bucket",
                                                            "name": "offline-aggregate-output-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MILVUS_URL",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "endpoint",
                                                            "name": "milvus-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "PROCESS_ID",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.name"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "PPROF_BUCKET",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "bucket",
                                                            "name": "pprof-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "AIRBYTE_SERVER_ADDRESS",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "endpoint",
                                                            "name": "airbyte-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "INSTANCE_METADATA_SERVICE_ADDR",
                                                    "value": "http://169.254.169.254/latest"
                                                }
                                            ],
                                            "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-http-server-repo-26e427f:e01e8465-38483bd0744f37f6e6f69c3396cdbae7830ba168d7db29f41febdf9795ac85f6",
                                            "imagePullPolicy": "Always",
                                            "name": "http-server",
                                            "ports": [
                                                {
                                                    "containerPort": 2425,
                                                    "protocol": "TCP"
                                                },
                                                {
                                                    "containerPort": 2112,
                                                    "protocol": "TCP"
                                                },
                                                {
                                                    "containerPort": 8082,
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 8082
                                                },
                                                "initialDelaySeconds": 2,
                                                "periodSeconds": 2,
                                                "successThreshold": 1,
                                                "timeoutSeconds": 1
                                            },
                                            "resources": {
                                                "limits": {
                                                    "cpu": "1500m",
                                                    "memory": "3G"
                                                },
                                                "requests": {
                                                    "cpu": "1250m",
                                                    "memory": "2G"
                                                }
                                            }
                                        }
                                    ],
                                    "nodeSelector": {
                                        "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                        "kubernetes.io/arch": "arm64"
                                    },
                                    "terminationGracePeriodSeconds": 61
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "36",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"http-server\",\"namespace\":\"t-101\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"http-server\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"config.alpha.linkerd.io/proxy-wait-before-exit-seconds\":\"1\",\"config.linkerd.io/proxy-cpu-limit\":\"1\",\"config.linkerd.io/proxy-cpu-request\":\"0.25\",\"config.linkerd.io/proxy-memory-limit\":\"1G\",\"config.linkerd.io/proxy-memory-request\":\"128M\",\"config.linkerd.io/skip-outbound-ports\":\"3306,6379\",\"prometheus.io/port\":\"2112\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"http-server\"}},\"spec\":{\"containers\":[{\"command\":[\"/root/server\",\"--metrics-port\",\"2112\",\"--health-port\",\"8082\",\"--dev=false\"],\"env\":[{\"name\":\"NITROUS_SERVER_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"addr\",\"name\":\"nitrous-conf\"}}},{\"name\":\"KAFKA_SERVER_ADDRESS\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"server\",\"name\":\"kafka-conf\"}}},{\"name\":\"KAFKA_USERNAME\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"username\",\"name\":\"kafka-conf\"}}},{\"name\":\"KAFKA_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"password\",\"name\":\"kafka-conf\"}}},{\"name\":\"PRODUCE_TO_CONFLUENT\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"topicProducesToConfluent\",\"name\":\"kafka-conf\"}}},{\"name\":\"MSK_KAFKA_SERVER_ADDRESS\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"mskServers\",\"name\":\"msk-kafka-conf\"}}},{\"name\":\"MSK_KAFKA_USERNAME\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"mskUsername\",\"name\":\"msk-kafka-conf\"}}},{\"name\":\"MSK_KAFKA_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"mskPassword\",\"name\":\"msk-kafka-conf\"}}},{\"name\":\"REDIS_SERVER_ADDRESS\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"addr\",\"name\":\"redis-conf\"}}},{\"name\":\"MYSQL_SERVER_ADDRESS\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"host\",\"name\":\"mysql-conf\"}}},{\"name\":\"MYSQL_DATABASE_NAME\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"db\",\"name\":\"mysql-conf\"}}},{\"name\":\"MYSQL_USERNAME\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"username\",\"name\":\"mysql-conf\"}}},{\"name\":\"MYSQL_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"password\",\"name\":\"mysql-conf\"}}},{\"name\":\"TIER_ID\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"tier_id\",\"name\":\"tier-conf\"}}},{\"name\":\"PLANE_ID\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"plane_id\",\"name\":\"tier-conf\"}}},{\"name\":\"CACHE_PRIMARY\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"primary\",\"name\":\"cache-conf\"}}},{\"name\":\"REQUEST_LIMIT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"request_limit\",\"name\":\"tier-conf\"}}},{\"name\":\"AWS_REGION\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"region\",\"name\":\"model-serving-conf\"}}},{\"name\":\"SAGEMAKER_EXECUTION_ROLE\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"executionRole\",\"name\":\"model-serving-conf\"}}},{\"name\":\"PRIVATE_SUBNETS\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"privateSubnets\",\"name\":\"model-serving-conf\"}}},{\"name\":\"SAGEMAKER_SECURITY_GROUP\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"securityGroup\",\"name\":\"model-serving-conf\"}}},{\"name\":\"SAGEMAKER_INSTANCE_TYPE\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"instanceType\",\"name\":\"model-serving-conf\"}}},{\"name\":\"SAGEMAKER_INSTANCE_COUNT\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"instanceCount\",\"name\":\"model-serving-conf\"}}},{\"name\":\"MODEL_STORE_S3_BUCKET\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"modelStoreBucket\",\"name\":\"model-serving-conf\"}}},{\"name\":\"MODEL_STORE_ENDPOINT\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"modelStoreEndpoint\",\"name\":\"model-serving-conf\"}}},{\"name\":\"JOB_NAME_BY_AGG\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"jobNameByAgg\",\"name\":\"glue-conf\"}}},{\"name\":\"UNLEASH_ENDPOINT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"endpoint\",\"name\":\"unleash-conf\"}}},{\"name\":\"OTLP_ENDPOINT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"endpoint\",\"name\":\"otel-collector-conf\"}}},{\"name\":\"OTLP_HTTP_ENDPOINT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"httpEndpoint\",\"name\":\"otel-collector-conf\"}}},{\"name\":\"OFFLINE_AGG_BUCKET\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"bucket\",\"name\":\"offline-aggregate-output-conf\"}}},{\"name\":\"MILVUS_URL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"endpoint\",\"name\":\"milvus-conf\"}}},{\"name\":\"PROCESS_ID\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"PPROF_BUCKET\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"bucket\",\"name\":\"pprof-conf\"}}},{\"name\":\"AIRBYTE_SERVER_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"endpoint\",\"name\":\"airbyte-conf\"}}},{\"name\":\"INSTANCE_METADATA_SERVICE_ADDR\",\"value\":\"http://169.254.169.254/latest\"}],\"image\":\"030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-http-server-repo-26e427f:e01e8465-38483bd0744f37f6e6f69c3396cdbae7830ba168d7db29f41febdf9795ac85f6\",\"imagePullPolicy\":\"Always\",\"name\":\"http-server\",\"ports\":[{\"containerPort\":2425,\"protocol\":\"TCP\"},{\"containerPort\":2112,\"protocol\":\"TCP\"},{\"containerPort\":8082,\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8082},\"initialDelaySeconds\":2,\"periodSeconds\":2,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"1500m\",\"memory\":\"3G\"},\"requests\":{\"cpu\":\"1250m\",\"memory\":\"2G\"}}}],\"nodeSelector\":{\"eks.amazonaws.com/capacityType\":\"ON_DEMAND\",\"kubernetes.io/arch\":\"arm64\"},\"terminationGracePeriodSeconds\":61}}}}\n"
                        },
                        "creationTimestamp": "2022-08-24T20:08:12Z",
                        "generation": 36,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:progressDeadlineSeconds": {},
                                        "f:replicas": {},
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:strategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        },
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:config.alpha.linkerd.io/proxy-wait-before-exit-seconds": {},
                                                    "f:config.linkerd.io/proxy-cpu-limit": {},
                                                    "f:config.linkerd.io/proxy-cpu-request": {},
                                                    "f:config.linkerd.io/proxy-memory-limit": {},
                                                    "f:config.linkerd.io/proxy-memory-request": {},
                                                    "f:config.linkerd.io/skip-outbound-ports": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"http-server\"}": {
                                                        ".": {},
                                                        "f:command": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"AIRBYTE_SERVER_ADDRESS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"AWS_REGION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"CACHE_PRIMARY\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"INSTANCE_METADATA_SERVICE_ADDR\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"JOB_NAME_BY_AGG\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"KAFKA_PASSWORD\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"KAFKA_SERVER_ADDRESS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"KAFKA_USERNAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MILVUS_URL\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MODEL_STORE_ENDPOINT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MODEL_STORE_S3_BUCKET\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MSK_KAFKA_PASSWORD\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MSK_KAFKA_SERVER_ADDRESS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MSK_KAFKA_USERNAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MYSQL_DATABASE_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MYSQL_PASSWORD\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MYSQL_SERVER_ADDRESS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MYSQL_USERNAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"NITROUS_SERVER_ADDRESS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"OFFLINE_AGG_BUCKET\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"OTLP_ENDPOINT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"OTLP_HTTP_ENDPOINT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"PLANE_ID\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"PPROF_BUCKET\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"PRIVATE_SUBNETS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"PROCESS_ID\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"PRODUCE_TO_CONFLUENT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"REDIS_SERVER_ADDRESS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"REQUEST_LIMIT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"SAGEMAKER_EXECUTION_ROLE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"SAGEMAKER_INSTANCE_COUNT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"SAGEMAKER_INSTANCE_TYPE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"SAGEMAKER_SECURITY_GROUP\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"TIER_ID\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"UNLEASH_ENDPOINT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":2112,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:protocol": {}
                                                            },
                                                            "k:{\"containerPort\":2425,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:protocol": {}
                                                            },
                                                            "k:{\"containerPort\":8082,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {}
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:nodeSelector": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:terminationGracePeriodSeconds": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-15T18:27:49Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-09-16T17:58:13Z"
                            }
                        ],
                        "name": "http-server",
                        "namespace": "t-101",
                        "resourceVersion": "67923643",
                        "uid": "28ca9481-e9e3-45d9-8163-e5de9eb8fe1a"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "http-server"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": 1,
                                "maxUnavailable": 1
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "config.alpha.linkerd.io/proxy-wait-before-exit-seconds": "1",
                                    "config.linkerd.io/proxy-cpu-limit": "1",
                                    "config.linkerd.io/proxy-cpu-request": "0.25",
                                    "config.linkerd.io/proxy-memory-limit": "1G",
                                    "config.linkerd.io/proxy-memory-request": "128M",
                                    "config.linkerd.io/skip-outbound-ports": "3306,6379",
                                    "prometheus.io/port": "2112",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "http-server"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "/root/server",
                                            "--metrics-port",
                                            "2112",
                                            "--health-port",
                                            "8082",
                                            "--dev=false"
                                        ],
                                        "env": [
                                            {
                                                "name": "NITROUS_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "addr",
                                                        "name": "nitrous-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "KAFKA_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "server",
                                                        "name": "kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "KAFKA_USERNAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "username",
                                                        "name": "kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "KAFKA_PASSWORD",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "password",
                                                        "name": "kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PRODUCE_TO_CONFLUENT",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "topicProducesToConfluent",
                                                        "name": "kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MSK_KAFKA_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "mskServers",
                                                        "name": "msk-kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MSK_KAFKA_USERNAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "mskUsername",
                                                        "name": "msk-kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MSK_KAFKA_PASSWORD",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "mskPassword",
                                                        "name": "msk-kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "REDIS_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "addr",
                                                        "name": "redis-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MYSQL_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "host",
                                                        "name": "mysql-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MYSQL_DATABASE_NAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "db",
                                                        "name": "mysql-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MYSQL_USERNAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "username",
                                                        "name": "mysql-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MYSQL_PASSWORD",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "password",
                                                        "name": "mysql-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "TIER_ID",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "tier_id",
                                                        "name": "tier-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PLANE_ID",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "plane_id",
                                                        "name": "tier-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "CACHE_PRIMARY",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "primary",
                                                        "name": "cache-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "REQUEST_LIMIT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "request_limit",
                                                        "name": "tier-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "AWS_REGION",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "region",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SAGEMAKER_EXECUTION_ROLE",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "executionRole",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PRIVATE_SUBNETS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "privateSubnets",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SAGEMAKER_SECURITY_GROUP",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "securityGroup",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SAGEMAKER_INSTANCE_TYPE",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "instanceType",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SAGEMAKER_INSTANCE_COUNT",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "instanceCount",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MODEL_STORE_S3_BUCKET",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "modelStoreBucket",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MODEL_STORE_ENDPOINT",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "modelStoreEndpoint",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "JOB_NAME_BY_AGG",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "jobNameByAgg",
                                                        "name": "glue-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "UNLEASH_ENDPOINT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "endpoint",
                                                        "name": "unleash-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "OTLP_ENDPOINT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "endpoint",
                                                        "name": "otel-collector-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "OTLP_HTTP_ENDPOINT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "httpEndpoint",
                                                        "name": "otel-collector-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "OFFLINE_AGG_BUCKET",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "bucket",
                                                        "name": "offline-aggregate-output-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MILVUS_URL",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "endpoint",
                                                        "name": "milvus-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PROCESS_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PPROF_BUCKET",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "bucket",
                                                        "name": "pprof-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "AIRBYTE_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "endpoint",
                                                        "name": "airbyte-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "INSTANCE_METADATA_SERVICE_ADDR",
                                                "value": "http://169.254.169.254/latest"
                                            }
                                        ],
                                        "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-http-server-repo-26e427f:e01e8465-38483bd0744f37f6e6f69c3396cdbae7830ba168d7db29f41febdf9795ac85f6",
                                        "imagePullPolicy": "Always",
                                        "name": "http-server",
                                        "ports": [
                                            {
                                                "containerPort": 2425,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 2112,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 8082,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 8082,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 2,
                                            "periodSeconds": 2,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {
                                            "limits": {
                                                "cpu": "1500m",
                                                "memory": "3G"
                                            },
                                            "requests": {
                                                "cpu": "1250m",
                                                "memory": "2G"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "arm64"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 61
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-24T20:08:12Z",
                                "lastUpdateTime": "2022-08-24T20:08:12Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2022-08-24T20:08:12Z",
                                "lastUpdateTime": "2022-09-15T21:47:03Z",
                                "message": "ReplicaSet \"http-server-889cc6f78\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 36,
                        "readyReplicas": 1,
                        "replicas": 1
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:ecr/repository:Repository::t-101-http-server-repo"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::httpserver-k8s-provider::eb665557-4191-432d-bfb3-764ba0d27d43",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": [
                        "urn:pulumi:tier-101::launchpad::aws:ecr/repository:Repository::t-101-http-server-repo"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:batch/v1:CronJob::counters-cleanup-cronjob",
                "custom": true,
                "id": "t-101/counters-cleanup",
                "type": "kubernetes:batch/v1:CronJob",
                "inputs": {
                    "apiVersion": "batch/v1",
                    "kind": "CronJob",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "counters-cleanup",
                        "namespace": "t-101"
                    },
                    "spec": {
                        "concurrencyPolicy": "Allow",
                        "failedJobsHistoryLimit": 1,
                        "jobTemplate": {
                            "metadata": {
                                "labels": {
                                    "app": "counters-cleanup"
                                }
                            },
                            "spec": {
                                "template": {
                                    "metadata": {
                                        "annotations": {
                                            "linkerd.io/inject": "disabled"
                                        },
                                        "labels": {
                                            "app": "counters-cleanup"
                                        }
                                    },
                                    "spec": {
                                        "containers": [
                                            {
                                                "command": [
                                                    "/root/cleanup",
                                                    "--dev=false"
                                                ],
                                                "env": [
                                                    {
                                                        "name": "NITROUS_SERVER_ADDRESS",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "addr",
                                                                "name": "nitrous-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "KAFKA_SERVER_ADDRESS",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "server",
                                                                "name": "kafka-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "KAFKA_USERNAME",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "username",
                                                                "name": "kafka-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "KAFKA_PASSWORD",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "password",
                                                                "name": "kafka-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "PRODUCE_TO_CONFLUENT",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "topicProducesToConfluent",
                                                                "name": "kafka-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MSK_KAFKA_SERVER_ADDRESS",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "mskServers",
                                                                "name": "msk-kafka-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MSK_KAFKA_USERNAME",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "mskUsername",
                                                                "name": "msk-kafka-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MSK_KAFKA_PASSWORD",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "mskPassword",
                                                                "name": "msk-kafka-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "REDIS_SERVER_ADDRESS",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "addr",
                                                                "name": "redis-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MYSQL_SERVER_ADDRESS",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "host",
                                                                "name": "mysql-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MYSQL_DATABASE_NAME",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "db",
                                                                "name": "mysql-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MYSQL_USERNAME",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "username",
                                                                "name": "mysql-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MYSQL_PASSWORD",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "password",
                                                                "name": "mysql-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "TIER_ID",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "tier_id",
                                                                "name": "tier-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "PLANE_ID",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "plane_id",
                                                                "name": "tier-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "CACHE_PRIMARY",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "primary",
                                                                "name": "cache-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "REQUEST_LIMIT",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "request_limit",
                                                                "name": "tier-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "AWS_REGION",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "region",
                                                                "name": "model-serving-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "SAGEMAKER_EXECUTION_ROLE",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "executionRole",
                                                                "name": "model-serving-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "PRIVATE_SUBNETS",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "privateSubnets",
                                                                "name": "model-serving-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "SAGEMAKER_SECURITY_GROUP",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "securityGroup",
                                                                "name": "model-serving-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "SAGEMAKER_INSTANCE_TYPE",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "instanceType",
                                                                "name": "model-serving-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "SAGEMAKER_INSTANCE_COUNT",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "instanceCount",
                                                                "name": "model-serving-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MODEL_STORE_S3_BUCKET",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "modelStoreBucket",
                                                                "name": "model-serving-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MODEL_STORE_ENDPOINT",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "modelStoreEndpoint",
                                                                "name": "model-serving-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "JOB_NAME_BY_AGG",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "jobNameByAgg",
                                                                "name": "glue-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "UNLEASH_ENDPOINT",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "endpoint",
                                                                "name": "unleash-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "OTLP_ENDPOINT",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "endpoint",
                                                                "name": "otel-collector-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "OTLP_HTTP_ENDPOINT",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "httpEndpoint",
                                                                "name": "otel-collector-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "OFFLINE_AGG_BUCKET",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "bucket",
                                                                "name": "offline-aggregate-output-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MILVUS_URL",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "endpoint",
                                                                "name": "milvus-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "PROCESS_ID",
                                                        "valueFrom": {
                                                            "fieldRef": {
                                                                "fieldPath": "metadata.name"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "PPROF_BUCKET",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "bucket",
                                                                "name": "pprof-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "AIRBYTE_SERVER_ADDRESS",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "endpoint",
                                                                "name": "airbyte-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "INSTANCE_METADATA_SERVICE_ADDR",
                                                        "value": "http://169.254.169.254/latest"
                                                    }
                                                ],
                                                "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-counter-cleanup-repo-95153aa:e01e8465-c1c3ea9113de7a5cb83791f792823dc213476671a24e111819f92e65f66cd56d",
                                                "name": "counters-cleanup"
                                            }
                                        ],
                                        "nodeSelector": {
                                            "kubernetes.io/arch": "arm64"
                                        },
                                        "restartPolicy": "OnFailure"
                                    }
                                }
                            }
                        },
                        "schedule": "0 */2 * * *",
                        "successfulJobsHistoryLimit": 1
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-2d992b85",
                    "__initialApiVersion": "batch/v1",
                    "__inputs": {
                        "apiVersion": "batch/v1",
                        "kind": "CronJob",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "counters-cleanup",
                            "namespace": "t-101"
                        },
                        "spec": {
                            "concurrencyPolicy": "Allow",
                            "failedJobsHistoryLimit": 1,
                            "jobTemplate": {
                                "metadata": {
                                    "labels": {
                                        "app": "counters-cleanup"
                                    }
                                },
                                "spec": {
                                    "template": {
                                        "metadata": {
                                            "annotations": {
                                                "linkerd.io/inject": "disabled"
                                            },
                                            "labels": {
                                                "app": "counters-cleanup"
                                            }
                                        },
                                        "spec": {
                                            "containers": [
                                                {
                                                    "command": [
                                                        "/root/cleanup",
                                                        "--dev=false"
                                                    ],
                                                    "env": [
                                                        {
                                                            "name": "NITROUS_SERVER_ADDRESS",
                                                            "valueFrom": {
                                                                "configMapKeyRef": {
                                                                    "key": "addr",
                                                                    "name": "nitrous-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "KAFKA_SERVER_ADDRESS",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "server",
                                                                    "name": "kafka-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "KAFKA_USERNAME",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "username",
                                                                    "name": "kafka-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "KAFKA_PASSWORD",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "password",
                                                                    "name": "kafka-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "PRODUCE_TO_CONFLUENT",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "topicProducesToConfluent",
                                                                    "name": "kafka-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "MSK_KAFKA_SERVER_ADDRESS",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "mskServers",
                                                                    "name": "msk-kafka-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "MSK_KAFKA_USERNAME",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "mskUsername",
                                                                    "name": "msk-kafka-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "MSK_KAFKA_PASSWORD",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "mskPassword",
                                                                    "name": "msk-kafka-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "REDIS_SERVER_ADDRESS",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "addr",
                                                                    "name": "redis-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "MYSQL_SERVER_ADDRESS",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "host",
                                                                    "name": "mysql-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "MYSQL_DATABASE_NAME",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "db",
                                                                    "name": "mysql-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "MYSQL_USERNAME",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "username",
                                                                    "name": "mysql-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "MYSQL_PASSWORD",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "password",
                                                                    "name": "mysql-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "TIER_ID",
                                                            "valueFrom": {
                                                                "configMapKeyRef": {
                                                                    "key": "tier_id",
                                                                    "name": "tier-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "PLANE_ID",
                                                            "valueFrom": {
                                                                "configMapKeyRef": {
                                                                    "key": "plane_id",
                                                                    "name": "tier-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "CACHE_PRIMARY",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "primary",
                                                                    "name": "cache-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "REQUEST_LIMIT",
                                                            "valueFrom": {
                                                                "configMapKeyRef": {
                                                                    "key": "request_limit",
                                                                    "name": "tier-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "AWS_REGION",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "region",
                                                                    "name": "model-serving-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "SAGEMAKER_EXECUTION_ROLE",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "executionRole",
                                                                    "name": "model-serving-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "PRIVATE_SUBNETS",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "privateSubnets",
                                                                    "name": "model-serving-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "SAGEMAKER_SECURITY_GROUP",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "securityGroup",
                                                                    "name": "model-serving-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "SAGEMAKER_INSTANCE_TYPE",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "instanceType",
                                                                    "name": "model-serving-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "SAGEMAKER_INSTANCE_COUNT",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "instanceCount",
                                                                    "name": "model-serving-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "MODEL_STORE_S3_BUCKET",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "modelStoreBucket",
                                                                    "name": "model-serving-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "MODEL_STORE_ENDPOINT",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "modelStoreEndpoint",
                                                                    "name": "model-serving-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "JOB_NAME_BY_AGG",
                                                            "valueFrom": {
                                                                "secretKeyRef": {
                                                                    "key": "jobNameByAgg",
                                                                    "name": "glue-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "UNLEASH_ENDPOINT",
                                                            "valueFrom": {
                                                                "configMapKeyRef": {
                                                                    "key": "endpoint",
                                                                    "name": "unleash-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "OTLP_ENDPOINT",
                                                            "valueFrom": {
                                                                "configMapKeyRef": {
                                                                    "key": "endpoint",
                                                                    "name": "otel-collector-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "OTLP_HTTP_ENDPOINT",
                                                            "valueFrom": {
                                                                "configMapKeyRef": {
                                                                    "key": "httpEndpoint",
                                                                    "name": "otel-collector-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "OFFLINE_AGG_BUCKET",
                                                            "valueFrom": {
                                                                "configMapKeyRef": {
                                                                    "key": "bucket",
                                                                    "name": "offline-aggregate-output-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "MILVUS_URL",
                                                            "valueFrom": {
                                                                "configMapKeyRef": {
                                                                    "key": "endpoint",
                                                                    "name": "milvus-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "PROCESS_ID",
                                                            "valueFrom": {
                                                                "fieldRef": {
                                                                    "fieldPath": "metadata.name"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "PPROF_BUCKET",
                                                            "valueFrom": {
                                                                "configMapKeyRef": {
                                                                    "key": "bucket",
                                                                    "name": "pprof-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "AIRBYTE_SERVER_ADDRESS",
                                                            "valueFrom": {
                                                                "configMapKeyRef": {
                                                                    "key": "endpoint",
                                                                    "name": "airbyte-conf"
                                                                }
                                                            }
                                                        },
                                                        {
                                                            "name": "INSTANCE_METADATA_SERVICE_ADDR",
                                                            "value": "http://169.254.169.254/latest"
                                                        }
                                                    ],
                                                    "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-counter-cleanup-repo-95153aa:e01e8465-c1c3ea9113de7a5cb83791f792823dc213476671a24e111819f92e65f66cd56d",
                                                    "name": "counters-cleanup"
                                                }
                                            ],
                                            "nodeSelector": {
                                                "kubernetes.io/arch": "arm64"
                                            },
                                            "restartPolicy": "OnFailure"
                                        }
                                    }
                                }
                            },
                            "schedule": "0 */2 * * *",
                            "successfulJobsHistoryLimit": 1
                        }
                    },
                    "apiVersion": "batch/v1",
                    "kind": "CronJob",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"batch/v1\",\"kind\":\"CronJob\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"counters-cleanup\",\"namespace\":\"t-101\"},\"spec\":{\"concurrencyPolicy\":\"Allow\",\"failedJobsHistoryLimit\":1,\"jobTemplate\":{\"metadata\":{\"labels\":{\"app\":\"counters-cleanup\"}},\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"linkerd.io/inject\":\"disabled\"},\"labels\":{\"app\":\"counters-cleanup\"}},\"spec\":{\"containers\":[{\"command\":[\"/root/cleanup\",\"--dev=false\"],\"env\":[{\"name\":\"NITROUS_SERVER_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"addr\",\"name\":\"nitrous-conf\"}}},{\"name\":\"KAFKA_SERVER_ADDRESS\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"server\",\"name\":\"kafka-conf\"}}},{\"name\":\"KAFKA_USERNAME\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"username\",\"name\":\"kafka-conf\"}}},{\"name\":\"KAFKA_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"password\",\"name\":\"kafka-conf\"}}},{\"name\":\"PRODUCE_TO_CONFLUENT\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"topicProducesToConfluent\",\"name\":\"kafka-conf\"}}},{\"name\":\"MSK_KAFKA_SERVER_ADDRESS\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"mskServers\",\"name\":\"msk-kafka-conf\"}}},{\"name\":\"MSK_KAFKA_USERNAME\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"mskUsername\",\"name\":\"msk-kafka-conf\"}}},{\"name\":\"MSK_KAFKA_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"mskPassword\",\"name\":\"msk-kafka-conf\"}}},{\"name\":\"REDIS_SERVER_ADDRESS\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"addr\",\"name\":\"redis-conf\"}}},{\"name\":\"MYSQL_SERVER_ADDRESS\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"host\",\"name\":\"mysql-conf\"}}},{\"name\":\"MYSQL_DATABASE_NAME\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"db\",\"name\":\"mysql-conf\"}}},{\"name\":\"MYSQL_USERNAME\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"username\",\"name\":\"mysql-conf\"}}},{\"name\":\"MYSQL_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"password\",\"name\":\"mysql-conf\"}}},{\"name\":\"TIER_ID\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"tier_id\",\"name\":\"tier-conf\"}}},{\"name\":\"PLANE_ID\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"plane_id\",\"name\":\"tier-conf\"}}},{\"name\":\"CACHE_PRIMARY\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"primary\",\"name\":\"cache-conf\"}}},{\"name\":\"REQUEST_LIMIT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"request_limit\",\"name\":\"tier-conf\"}}},{\"name\":\"AWS_REGION\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"region\",\"name\":\"model-serving-conf\"}}},{\"name\":\"SAGEMAKER_EXECUTION_ROLE\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"executionRole\",\"name\":\"model-serving-conf\"}}},{\"name\":\"PRIVATE_SUBNETS\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"privateSubnets\",\"name\":\"model-serving-conf\"}}},{\"name\":\"SAGEMAKER_SECURITY_GROUP\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"securityGroup\",\"name\":\"model-serving-conf\"}}},{\"name\":\"SAGEMAKER_INSTANCE_TYPE\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"instanceType\",\"name\":\"model-serving-conf\"}}},{\"name\":\"SAGEMAKER_INSTANCE_COUNT\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"instanceCount\",\"name\":\"model-serving-conf\"}}},{\"name\":\"MODEL_STORE_S3_BUCKET\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"modelStoreBucket\",\"name\":\"model-serving-conf\"}}},{\"name\":\"MODEL_STORE_ENDPOINT\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"modelStoreEndpoint\",\"name\":\"model-serving-conf\"}}},{\"name\":\"JOB_NAME_BY_AGG\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"jobNameByAgg\",\"name\":\"glue-conf\"}}},{\"name\":\"UNLEASH_ENDPOINT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"endpoint\",\"name\":\"unleash-conf\"}}},{\"name\":\"OTLP_ENDPOINT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"endpoint\",\"name\":\"otel-collector-conf\"}}},{\"name\":\"OTLP_HTTP_ENDPOINT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"httpEndpoint\",\"name\":\"otel-collector-conf\"}}},{\"name\":\"OFFLINE_AGG_BUCKET\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"bucket\",\"name\":\"offline-aggregate-output-conf\"}}},{\"name\":\"MILVUS_URL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"endpoint\",\"name\":\"milvus-conf\"}}},{\"name\":\"PROCESS_ID\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"PPROF_BUCKET\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"bucket\",\"name\":\"pprof-conf\"}}},{\"name\":\"AIRBYTE_SERVER_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"endpoint\",\"name\":\"airbyte-conf\"}}},{\"name\":\"INSTANCE_METADATA_SERVICE_ADDR\",\"value\":\"http://169.254.169.254/latest\"}],\"image\":\"030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-counter-cleanup-repo-95153aa:e01e8465-c1c3ea9113de7a5cb83791f792823dc213476671a24e111819f92e65f66cd56d\",\"name\":\"counters-cleanup\"}],\"nodeSelector\":{\"kubernetes.io/arch\":\"arm64\"},\"restartPolicy\":\"OnFailure\"}}}},\"schedule\":\"0 */2 * * *\",\"successfulJobsHistoryLimit\":1}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:36:38Z",
                        "generation": 41,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "batch/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:concurrencyPolicy": {},
                                        "f:failedJobsHistoryLimit": {},
                                        "f:jobTemplate": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:template": {
                                                    "f:metadata": {
                                                        "f:annotations": {
                                                            ".": {},
                                                            "f:linkerd.io/inject": {}
                                                        },
                                                        "f:labels": {
                                                            ".": {},
                                                            "f:app": {}
                                                        }
                                                    },
                                                    "f:spec": {
                                                        "f:containers": {
                                                            "k:{\"name\":\"counters-cleanup\"}": {
                                                                ".": {},
                                                                "f:command": {},
                                                                "f:env": {
                                                                    ".": {},
                                                                    "k:{\"name\":\"AIRBYTE_SERVER_ADDRESS\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:configMapKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"AWS_REGION\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"CACHE_PRIMARY\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"INSTANCE_METADATA_SERVICE_ADDR\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:value": {}
                                                                    },
                                                                    "k:{\"name\":\"JOB_NAME_BY_AGG\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"KAFKA_PASSWORD\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"KAFKA_SERVER_ADDRESS\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"KAFKA_USERNAME\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"MILVUS_URL\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:configMapKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"MODEL_STORE_ENDPOINT\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"MODEL_STORE_S3_BUCKET\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"MSK_KAFKA_PASSWORD\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"MSK_KAFKA_SERVER_ADDRESS\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"MSK_KAFKA_USERNAME\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"MYSQL_DATABASE_NAME\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"MYSQL_PASSWORD\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"MYSQL_SERVER_ADDRESS\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"MYSQL_USERNAME\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"NITROUS_SERVER_ADDRESS\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:configMapKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"OFFLINE_AGG_BUCKET\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:configMapKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"OTLP_ENDPOINT\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:configMapKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"OTLP_HTTP_ENDPOINT\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:configMapKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"PLANE_ID\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:configMapKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"PPROF_BUCKET\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:configMapKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"PRIVATE_SUBNETS\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"PROCESS_ID\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:fieldRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"PRODUCE_TO_CONFLUENT\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"REDIS_SERVER_ADDRESS\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"REQUEST_LIMIT\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:configMapKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"SAGEMAKER_EXECUTION_ROLE\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"SAGEMAKER_INSTANCE_COUNT\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"SAGEMAKER_INSTANCE_TYPE\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"SAGEMAKER_SECURITY_GROUP\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:secretKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"TIER_ID\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:configMapKeyRef": {}
                                                                        }
                                                                    },
                                                                    "k:{\"name\":\"UNLEASH_ENDPOINT\"}": {
                                                                        ".": {},
                                                                        "f:name": {},
                                                                        "f:valueFrom": {
                                                                            ".": {},
                                                                            "f:configMapKeyRef": {}
                                                                        }
                                                                    }
                                                                },
                                                                "f:image": {},
                                                                "f:imagePullPolicy": {},
                                                                "f:name": {},
                                                                "f:resources": {},
                                                                "f:terminationMessagePath": {},
                                                                "f:terminationMessagePolicy": {}
                                                            }
                                                        },
                                                        "f:dnsPolicy": {},
                                                        "f:nodeSelector": {},
                                                        "f:restartPolicy": {},
                                                        "f:schedulerName": {},
                                                        "f:securityContext": {},
                                                        "f:terminationGracePeriodSeconds": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:schedule": {},
                                        "f:successfulJobsHistoryLimit": {},
                                        "f:suspend": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-15T18:27:29Z"
                            },
                            {
                                "apiVersion": "batch/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:lastScheduleTime": {},
                                        "f:lastSuccessfulTime": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-09-16T16:00:00Z"
                            }
                        ],
                        "name": "counters-cleanup",
                        "namespace": "t-101",
                        "resourceVersion": "67923659",
                        "uid": "a5433d9e-6eff-4041-a095-867beb77f6e6"
                    },
                    "spec": {
                        "concurrencyPolicy": "Allow",
                        "failedJobsHistoryLimit": 1,
                        "jobTemplate": {
                            "metadata": {
                                "labels": {
                                    "app": "counters-cleanup"
                                }
                            },
                            "spec": {
                                "template": {
                                    "metadata": {
                                        "annotations": {
                                            "linkerd.io/inject": "disabled"
                                        },
                                        "labels": {
                                            "app": "counters-cleanup"
                                        }
                                    },
                                    "spec": {
                                        "containers": [
                                            {
                                                "command": [
                                                    "/root/cleanup",
                                                    "--dev=false"
                                                ],
                                                "env": [
                                                    {
                                                        "name": "NITROUS_SERVER_ADDRESS",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "addr",
                                                                "name": "nitrous-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "KAFKA_SERVER_ADDRESS",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "server",
                                                                "name": "kafka-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "KAFKA_USERNAME",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "username",
                                                                "name": "kafka-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "KAFKA_PASSWORD",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "password",
                                                                "name": "kafka-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "PRODUCE_TO_CONFLUENT",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "topicProducesToConfluent",
                                                                "name": "kafka-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MSK_KAFKA_SERVER_ADDRESS",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "mskServers",
                                                                "name": "msk-kafka-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MSK_KAFKA_USERNAME",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "mskUsername",
                                                                "name": "msk-kafka-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MSK_KAFKA_PASSWORD",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "mskPassword",
                                                                "name": "msk-kafka-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "REDIS_SERVER_ADDRESS",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "addr",
                                                                "name": "redis-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MYSQL_SERVER_ADDRESS",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "host",
                                                                "name": "mysql-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MYSQL_DATABASE_NAME",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "db",
                                                                "name": "mysql-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MYSQL_USERNAME",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "username",
                                                                "name": "mysql-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MYSQL_PASSWORD",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "password",
                                                                "name": "mysql-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "TIER_ID",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "tier_id",
                                                                "name": "tier-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "PLANE_ID",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "plane_id",
                                                                "name": "tier-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "CACHE_PRIMARY",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "primary",
                                                                "name": "cache-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "REQUEST_LIMIT",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "request_limit",
                                                                "name": "tier-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "AWS_REGION",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "region",
                                                                "name": "model-serving-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "SAGEMAKER_EXECUTION_ROLE",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "executionRole",
                                                                "name": "model-serving-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "PRIVATE_SUBNETS",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "privateSubnets",
                                                                "name": "model-serving-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "SAGEMAKER_SECURITY_GROUP",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "securityGroup",
                                                                "name": "model-serving-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "SAGEMAKER_INSTANCE_TYPE",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "instanceType",
                                                                "name": "model-serving-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "SAGEMAKER_INSTANCE_COUNT",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "instanceCount",
                                                                "name": "model-serving-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MODEL_STORE_S3_BUCKET",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "modelStoreBucket",
                                                                "name": "model-serving-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MODEL_STORE_ENDPOINT",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "modelStoreEndpoint",
                                                                "name": "model-serving-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "JOB_NAME_BY_AGG",
                                                        "valueFrom": {
                                                            "secretKeyRef": {
                                                                "key": "jobNameByAgg",
                                                                "name": "glue-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "UNLEASH_ENDPOINT",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "endpoint",
                                                                "name": "unleash-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "OTLP_ENDPOINT",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "endpoint",
                                                                "name": "otel-collector-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "OTLP_HTTP_ENDPOINT",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "httpEndpoint",
                                                                "name": "otel-collector-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "OFFLINE_AGG_BUCKET",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "bucket",
                                                                "name": "offline-aggregate-output-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "MILVUS_URL",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "endpoint",
                                                                "name": "milvus-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "PROCESS_ID",
                                                        "valueFrom": {
                                                            "fieldRef": {
                                                                "apiVersion": "v1",
                                                                "fieldPath": "metadata.name"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "PPROF_BUCKET",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "bucket",
                                                                "name": "pprof-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "AIRBYTE_SERVER_ADDRESS",
                                                        "valueFrom": {
                                                            "configMapKeyRef": {
                                                                "key": "endpoint",
                                                                "name": "airbyte-conf"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "INSTANCE_METADATA_SERVICE_ADDR",
                                                        "value": "http://169.254.169.254/latest"
                                                    }
                                                ],
                                                "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-counter-cleanup-repo-95153aa:e01e8465-c1c3ea9113de7a5cb83791f792823dc213476671a24e111819f92e65f66cd56d",
                                                "imagePullPolicy": "IfNotPresent",
                                                "name": "counters-cleanup",
                                                "resources": {},
                                                "terminationMessagePath": "/dev/termination-log",
                                                "terminationMessagePolicy": "File"
                                            }
                                        ],
                                        "dnsPolicy": "ClusterFirst",
                                        "nodeSelector": {
                                            "kubernetes.io/arch": "arm64"
                                        },
                                        "restartPolicy": "OnFailure",
                                        "schedulerName": "default-scheduler",
                                        "securityContext": {},
                                        "terminationGracePeriodSeconds": 30
                                    }
                                }
                            }
                        },
                        "schedule": "0 */2 * * *",
                        "successfulJobsHistoryLimit": 1,
                        "suspend": false
                    },
                    "status": {
                        "lastScheduleTime": "2022-09-16T16:00:00Z",
                        "lastSuccessfulTime": "2022-09-16T16:01:06Z"
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:ecr/repository:Repository::t-101-counter-cleanup-repo"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::counters-cleanup-k8s-provider::76ddf7b3-a399-45ca-b2c2-2fa648234f4a",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": [
                        "urn:pulumi:tier-101::launchpad::aws:ecr/repository:Repository::t-101-counter-cleanup-repo"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::kubernetes:apps/v1:Deployment::countaggr-deployment",
                "custom": true,
                "id": "t-101/countaggr",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "countaggr",
                        "namespace": "t-101"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "app": "countaggr"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": 0,
                                "maxUnavailable": 1
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "config.linkerd.io/skip-outbound-ports": "3306,6379",
                                    "prometheus.io/port": "2113",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "countaggr"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "/root/countaggr",
                                            "--metrics-port",
                                            "2113",
                                            "--health-port",
                                            "8082",
                                            "--dev=false"
                                        ],
                                        "env": [
                                            {
                                                "name": "NITROUS_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "addr",
                                                        "name": "nitrous-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "KAFKA_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "server",
                                                        "name": "kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "KAFKA_USERNAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "username",
                                                        "name": "kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "KAFKA_PASSWORD",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "password",
                                                        "name": "kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PRODUCE_TO_CONFLUENT",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "topicProducesToConfluent",
                                                        "name": "kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MSK_KAFKA_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "mskServers",
                                                        "name": "msk-kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MSK_KAFKA_USERNAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "mskUsername",
                                                        "name": "msk-kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MSK_KAFKA_PASSWORD",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "mskPassword",
                                                        "name": "msk-kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "REDIS_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "addr",
                                                        "name": "redis-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MYSQL_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "host",
                                                        "name": "mysql-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MYSQL_DATABASE_NAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "db",
                                                        "name": "mysql-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MYSQL_USERNAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "username",
                                                        "name": "mysql-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MYSQL_PASSWORD",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "password",
                                                        "name": "mysql-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "TIER_ID",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "tier_id",
                                                        "name": "tier-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PLANE_ID",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "plane_id",
                                                        "name": "tier-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "CACHE_PRIMARY",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "primary",
                                                        "name": "cache-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "REQUEST_LIMIT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "request_limit",
                                                        "name": "tier-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "AWS_REGION",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "region",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SAGEMAKER_EXECUTION_ROLE",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "executionRole",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PRIVATE_SUBNETS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "privateSubnets",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SAGEMAKER_SECURITY_GROUP",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "securityGroup",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SAGEMAKER_INSTANCE_TYPE",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "instanceType",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SAGEMAKER_INSTANCE_COUNT",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "instanceCount",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MODEL_STORE_S3_BUCKET",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "modelStoreBucket",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MODEL_STORE_ENDPOINT",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "modelStoreEndpoint",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "JOB_NAME_BY_AGG",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "jobNameByAgg",
                                                        "name": "glue-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "UNLEASH_ENDPOINT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "endpoint",
                                                        "name": "unleash-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "OTLP_ENDPOINT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "endpoint",
                                                        "name": "otel-collector-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "OTLP_HTTP_ENDPOINT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "httpEndpoint",
                                                        "name": "otel-collector-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "OFFLINE_AGG_BUCKET",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "bucket",
                                                        "name": "offline-aggregate-output-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MILVUS_URL",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "endpoint",
                                                        "name": "milvus-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PROCESS_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PPROF_BUCKET",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "bucket",
                                                        "name": "pprof-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "AIRBYTE_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "endpoint",
                                                        "name": "airbyte-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "INSTANCE_METADATA_SERVICE_ADDR",
                                                "value": "http://169.254.169.254/latest"
                                            }
                                        ],
                                        "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-countaggr-repo-94041ac:e01e8465-8a1ae8952c6284839db81286ed4e84afc13a23ede748cfca748c291fdbe2817b",
                                        "imagePullPolicy": "Always",
                                        "name": "countaggr",
                                        "ports": [
                                            {
                                                "containerPort": 2113,
                                                "protocol": "TCP"
                                            }
                                        ]
                                    }
                                ],
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "arm64"
                                }
                            }
                        }
                    }
                },
                "outputs": {
                    "__fieldManager": "pulumi-kubernetes-6eb5cd33",
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "countaggr",
                            "namespace": "t-101"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "app": "countaggr"
                                }
                            },
                            "strategy": {
                                "rollingUpdate": {
                                    "maxSurge": 0,
                                    "maxUnavailable": 1
                                },
                                "type": "RollingUpdate"
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "config.linkerd.io/skip-outbound-ports": "3306,6379",
                                        "prometheus.io/port": "2113",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "countaggr"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "command": [
                                                "/root/countaggr",
                                                "--metrics-port",
                                                "2113",
                                                "--health-port",
                                                "8082",
                                                "--dev=false"
                                            ],
                                            "env": [
                                                {
                                                    "name": "NITROUS_SERVER_ADDRESS",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "addr",
                                                            "name": "nitrous-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "KAFKA_SERVER_ADDRESS",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "server",
                                                            "name": "kafka-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "KAFKA_USERNAME",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "username",
                                                            "name": "kafka-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "KAFKA_PASSWORD",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "password",
                                                            "name": "kafka-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "PRODUCE_TO_CONFLUENT",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "topicProducesToConfluent",
                                                            "name": "kafka-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MSK_KAFKA_SERVER_ADDRESS",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "mskServers",
                                                            "name": "msk-kafka-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MSK_KAFKA_USERNAME",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "mskUsername",
                                                            "name": "msk-kafka-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MSK_KAFKA_PASSWORD",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "mskPassword",
                                                            "name": "msk-kafka-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "REDIS_SERVER_ADDRESS",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "addr",
                                                            "name": "redis-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MYSQL_SERVER_ADDRESS",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "host",
                                                            "name": "mysql-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MYSQL_DATABASE_NAME",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "db",
                                                            "name": "mysql-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MYSQL_USERNAME",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "username",
                                                            "name": "mysql-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MYSQL_PASSWORD",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "password",
                                                            "name": "mysql-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "TIER_ID",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "tier_id",
                                                            "name": "tier-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "PLANE_ID",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "plane_id",
                                                            "name": "tier-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "CACHE_PRIMARY",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "primary",
                                                            "name": "cache-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "REQUEST_LIMIT",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "request_limit",
                                                            "name": "tier-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "AWS_REGION",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "region",
                                                            "name": "model-serving-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "SAGEMAKER_EXECUTION_ROLE",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "executionRole",
                                                            "name": "model-serving-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "PRIVATE_SUBNETS",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "privateSubnets",
                                                            "name": "model-serving-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "SAGEMAKER_SECURITY_GROUP",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "securityGroup",
                                                            "name": "model-serving-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "SAGEMAKER_INSTANCE_TYPE",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "instanceType",
                                                            "name": "model-serving-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "SAGEMAKER_INSTANCE_COUNT",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "instanceCount",
                                                            "name": "model-serving-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MODEL_STORE_S3_BUCKET",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "modelStoreBucket",
                                                            "name": "model-serving-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MODEL_STORE_ENDPOINT",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "modelStoreEndpoint",
                                                            "name": "model-serving-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "JOB_NAME_BY_AGG",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "jobNameByAgg",
                                                            "name": "glue-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "UNLEASH_ENDPOINT",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "endpoint",
                                                            "name": "unleash-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "OTLP_ENDPOINT",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "endpoint",
                                                            "name": "otel-collector-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "OTLP_HTTP_ENDPOINT",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "httpEndpoint",
                                                            "name": "otel-collector-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "OFFLINE_AGG_BUCKET",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "bucket",
                                                            "name": "offline-aggregate-output-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MILVUS_URL",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "endpoint",
                                                            "name": "milvus-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "PROCESS_ID",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.name"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "PPROF_BUCKET",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "bucket",
                                                            "name": "pprof-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "AIRBYTE_SERVER_ADDRESS",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "endpoint",
                                                            "name": "airbyte-conf"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "INSTANCE_METADATA_SERVICE_ADDR",
                                                    "value": "http://169.254.169.254/latest"
                                                }
                                            ],
                                            "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-countaggr-repo-94041ac:e01e8465-8a1ae8952c6284839db81286ed4e84afc13a23ede748cfca748c291fdbe2817b",
                                            "imagePullPolicy": "Always",
                                            "name": "countaggr",
                                            "ports": [
                                                {
                                                    "containerPort": 2113,
                                                    "protocol": "TCP"
                                                }
                                            ]
                                        }
                                    ],
                                    "nodeSelector": {
                                        "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                        "kubernetes.io/arch": "arm64"
                                    }
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "35",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"countaggr\",\"namespace\":\"t-101\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"countaggr\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":0,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"config.linkerd.io/skip-outbound-ports\":\"3306,6379\",\"prometheus.io/port\":\"2113\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"countaggr\"}},\"spec\":{\"containers\":[{\"command\":[\"/root/countaggr\",\"--metrics-port\",\"2113\",\"--health-port\",\"8082\",\"--dev=false\"],\"env\":[{\"name\":\"NITROUS_SERVER_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"addr\",\"name\":\"nitrous-conf\"}}},{\"name\":\"KAFKA_SERVER_ADDRESS\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"server\",\"name\":\"kafka-conf\"}}},{\"name\":\"KAFKA_USERNAME\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"username\",\"name\":\"kafka-conf\"}}},{\"name\":\"KAFKA_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"password\",\"name\":\"kafka-conf\"}}},{\"name\":\"PRODUCE_TO_CONFLUENT\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"topicProducesToConfluent\",\"name\":\"kafka-conf\"}}},{\"name\":\"MSK_KAFKA_SERVER_ADDRESS\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"mskServers\",\"name\":\"msk-kafka-conf\"}}},{\"name\":\"MSK_KAFKA_USERNAME\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"mskUsername\",\"name\":\"msk-kafka-conf\"}}},{\"name\":\"MSK_KAFKA_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"mskPassword\",\"name\":\"msk-kafka-conf\"}}},{\"name\":\"REDIS_SERVER_ADDRESS\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"addr\",\"name\":\"redis-conf\"}}},{\"name\":\"MYSQL_SERVER_ADDRESS\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"host\",\"name\":\"mysql-conf\"}}},{\"name\":\"MYSQL_DATABASE_NAME\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"db\",\"name\":\"mysql-conf\"}}},{\"name\":\"MYSQL_USERNAME\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"username\",\"name\":\"mysql-conf\"}}},{\"name\":\"MYSQL_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"password\",\"name\":\"mysql-conf\"}}},{\"name\":\"TIER_ID\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"tier_id\",\"name\":\"tier-conf\"}}},{\"name\":\"PLANE_ID\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"plane_id\",\"name\":\"tier-conf\"}}},{\"name\":\"CACHE_PRIMARY\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"primary\",\"name\":\"cache-conf\"}}},{\"name\":\"REQUEST_LIMIT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"request_limit\",\"name\":\"tier-conf\"}}},{\"name\":\"AWS_REGION\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"region\",\"name\":\"model-serving-conf\"}}},{\"name\":\"SAGEMAKER_EXECUTION_ROLE\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"executionRole\",\"name\":\"model-serving-conf\"}}},{\"name\":\"PRIVATE_SUBNETS\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"privateSubnets\",\"name\":\"model-serving-conf\"}}},{\"name\":\"SAGEMAKER_SECURITY_GROUP\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"securityGroup\",\"name\":\"model-serving-conf\"}}},{\"name\":\"SAGEMAKER_INSTANCE_TYPE\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"instanceType\",\"name\":\"model-serving-conf\"}}},{\"name\":\"SAGEMAKER_INSTANCE_COUNT\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"instanceCount\",\"name\":\"model-serving-conf\"}}},{\"name\":\"MODEL_STORE_S3_BUCKET\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"modelStoreBucket\",\"name\":\"model-serving-conf\"}}},{\"name\":\"MODEL_STORE_ENDPOINT\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"modelStoreEndpoint\",\"name\":\"model-serving-conf\"}}},{\"name\":\"JOB_NAME_BY_AGG\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"jobNameByAgg\",\"name\":\"glue-conf\"}}},{\"name\":\"UNLEASH_ENDPOINT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"endpoint\",\"name\":\"unleash-conf\"}}},{\"name\":\"OTLP_ENDPOINT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"endpoint\",\"name\":\"otel-collector-conf\"}}},{\"name\":\"OTLP_HTTP_ENDPOINT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"httpEndpoint\",\"name\":\"otel-collector-conf\"}}},{\"name\":\"OFFLINE_AGG_BUCKET\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"bucket\",\"name\":\"offline-aggregate-output-conf\"}}},{\"name\":\"MILVUS_URL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"endpoint\",\"name\":\"milvus-conf\"}}},{\"name\":\"PROCESS_ID\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"PPROF_BUCKET\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"bucket\",\"name\":\"pprof-conf\"}}},{\"name\":\"AIRBYTE_SERVER_ADDRESS\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"endpoint\",\"name\":\"airbyte-conf\"}}},{\"name\":\"INSTANCE_METADATA_SERVICE_ADDR\",\"value\":\"http://169.254.169.254/latest\"}],\"image\":\"030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-countaggr-repo-94041ac:e01e8465-8a1ae8952c6284839db81286ed4e84afc13a23ede748cfca748c291fdbe2817b\",\"imagePullPolicy\":\"Always\",\"name\":\"countaggr\",\"ports\":[{\"containerPort\":2113,\"protocol\":\"TCP\"}]}],\"nodeSelector\":{\"eks.amazonaws.com/capacityType\":\"ON_DEMAND\",\"kubernetes.io/arch\":\"arm64\"}}}}}\n"
                        },
                        "creationTimestamp": "2022-08-24T20:08:12Z",
                        "generation": 35,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:progressDeadlineSeconds": {},
                                        "f:replicas": {},
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:strategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        },
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:config.linkerd.io/skip-outbound-ports": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"countaggr\"}": {
                                                        ".": {},
                                                        "f:command": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"AIRBYTE_SERVER_ADDRESS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"AWS_REGION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"CACHE_PRIMARY\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"INSTANCE_METADATA_SERVICE_ADDR\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"JOB_NAME_BY_AGG\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"KAFKA_PASSWORD\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"KAFKA_SERVER_ADDRESS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"KAFKA_USERNAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MILVUS_URL\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MODEL_STORE_ENDPOINT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MODEL_STORE_S3_BUCKET\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MSK_KAFKA_PASSWORD\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MSK_KAFKA_SERVER_ADDRESS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MSK_KAFKA_USERNAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MYSQL_DATABASE_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MYSQL_PASSWORD\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MYSQL_SERVER_ADDRESS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MYSQL_USERNAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"NITROUS_SERVER_ADDRESS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"OFFLINE_AGG_BUCKET\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"OTLP_ENDPOINT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"OTLP_HTTP_ENDPOINT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"PLANE_ID\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"PPROF_BUCKET\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"PRIVATE_SUBNETS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"PROCESS_ID\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"PRODUCE_TO_CONFLUENT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"REDIS_SERVER_ADDRESS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"REQUEST_LIMIT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"SAGEMAKER_EXECUTION_ROLE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"SAGEMAKER_INSTANCE_COUNT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"SAGEMAKER_INSTANCE_TYPE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"SAGEMAKER_SECURITY_GROUP\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"TIER_ID\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"UNLEASH_ENDPOINT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":2113,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:resources": {},
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {}
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:nodeSelector": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:terminationGracePeriodSeconds": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-15T18:27:53Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-09-16T17:26:10Z"
                            }
                        ],
                        "name": "countaggr",
                        "namespace": "t-101",
                        "resourceVersion": "67912913",
                        "uid": "13574eb6-0f40-4b24-a202-b64636d56d75"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "countaggr"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": 0,
                                "maxUnavailable": 1
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "config.linkerd.io/skip-outbound-ports": "3306,6379",
                                    "prometheus.io/port": "2113",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "countaggr"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "/root/countaggr",
                                            "--metrics-port",
                                            "2113",
                                            "--health-port",
                                            "8082",
                                            "--dev=false"
                                        ],
                                        "env": [
                                            {
                                                "name": "NITROUS_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "addr",
                                                        "name": "nitrous-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "KAFKA_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "server",
                                                        "name": "kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "KAFKA_USERNAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "username",
                                                        "name": "kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "KAFKA_PASSWORD",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "password",
                                                        "name": "kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PRODUCE_TO_CONFLUENT",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "topicProducesToConfluent",
                                                        "name": "kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MSK_KAFKA_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "mskServers",
                                                        "name": "msk-kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MSK_KAFKA_USERNAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "mskUsername",
                                                        "name": "msk-kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MSK_KAFKA_PASSWORD",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "mskPassword",
                                                        "name": "msk-kafka-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "REDIS_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "addr",
                                                        "name": "redis-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MYSQL_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "host",
                                                        "name": "mysql-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MYSQL_DATABASE_NAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "db",
                                                        "name": "mysql-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MYSQL_USERNAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "username",
                                                        "name": "mysql-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MYSQL_PASSWORD",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "password",
                                                        "name": "mysql-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "TIER_ID",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "tier_id",
                                                        "name": "tier-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PLANE_ID",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "plane_id",
                                                        "name": "tier-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "CACHE_PRIMARY",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "primary",
                                                        "name": "cache-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "REQUEST_LIMIT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "request_limit",
                                                        "name": "tier-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "AWS_REGION",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "region",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SAGEMAKER_EXECUTION_ROLE",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "executionRole",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PRIVATE_SUBNETS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "privateSubnets",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SAGEMAKER_SECURITY_GROUP",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "securityGroup",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SAGEMAKER_INSTANCE_TYPE",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "instanceType",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "SAGEMAKER_INSTANCE_COUNT",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "instanceCount",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MODEL_STORE_S3_BUCKET",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "modelStoreBucket",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MODEL_STORE_ENDPOINT",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "modelStoreEndpoint",
                                                        "name": "model-serving-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "JOB_NAME_BY_AGG",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "jobNameByAgg",
                                                        "name": "glue-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "UNLEASH_ENDPOINT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "endpoint",
                                                        "name": "unleash-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "OTLP_ENDPOINT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "endpoint",
                                                        "name": "otel-collector-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "OTLP_HTTP_ENDPOINT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "httpEndpoint",
                                                        "name": "otel-collector-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "OFFLINE_AGG_BUCKET",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "bucket",
                                                        "name": "offline-aggregate-output-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MILVUS_URL",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "endpoint",
                                                        "name": "milvus-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PROCESS_ID",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.name"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PPROF_BUCKET",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "bucket",
                                                        "name": "pprof-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "AIRBYTE_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "endpoint",
                                                        "name": "airbyte-conf"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "INSTANCE_METADATA_SERVICE_ADDR",
                                                "value": "http://169.254.169.254/latest"
                                            }
                                        ],
                                        "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/t-101-countaggr-repo-94041ac:e01e8465-8a1ae8952c6284839db81286ed4e84afc13a23ede748cfca748c291fdbe2817b",
                                        "imagePullPolicy": "Always",
                                        "name": "countaggr",
                                        "ports": [
                                            {
                                                "containerPort": 2113,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {},
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "arm64"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-24T20:08:12Z",
                                "lastUpdateTime": "2022-08-24T20:08:12Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2022-08-24T20:08:12Z",
                                "lastUpdateTime": "2022-09-15T21:22:46Z",
                                "message": "ReplicaSet \"countaggr-64988885c8\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 35,
                        "readyReplicas": 1,
                        "replicas": 1
                    }
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "dependencies": [
                    "urn:pulumi:tier-101::launchpad::aws:ecr/repository:Repository::t-101-countaggr-repo"
                ],
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:kubernetes::aggr-k8s-provider::a5068db4-3d5f-4f5f-8be8-090078256883",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": [
                        "urn:pulumi:tier-101::launchpad::aws:ecr/repository:Repository::t-101-countaggr-repo"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::aws:mskconnect/workerConfiguration:WorkerConfiguration::training-data-worker-config",
                "custom": true,
                "id": "arn:aws:kafkaconnect:us-west-2:030813887342:worker-configuration/t-101-training-data-workerconf2/d5e15266-a4d9-4af8-87b2-9f86075018ad-3",
                "type": "aws:mskconnect/workerConfiguration:WorkerConfiguration",
                "inputs": {
                    "__defaults": [],
                    "name": "t-101-training-data-workerconf2",
                    "propertiesFileContent": "key.converter=org.apache.kafka.connect.storage.StringConverter\n        value.converter=org.apache.kafka.connect.storage.StringConverter\n        reconnect.backoff.max.ms=10000\n        reconnect.backoff.max.ms=10000\n        retry.backoff.ms=10000\n        "
                },
                "outputs": {
                    "arn": "arn:aws:kafkaconnect:us-west-2:030813887342:worker-configuration/t-101-training-data-workerconf2/d5e15266-a4d9-4af8-87b2-9f86075018ad-3",
                    "description": "",
                    "id": "arn:aws:kafkaconnect:us-west-2:030813887342:worker-configuration/t-101-training-data-workerconf2/d5e15266-a4d9-4af8-87b2-9f86075018ad-3",
                    "latestRevision": 1,
                    "name": "t-101-training-data-workerconf2",
                    "propertiesFileContent": "key.converter=org.apache.kafka.connect.storage.StringConverter\n        value.converter=org.apache.kafka.connect.storage.StringConverter\n        reconnect.backoff.max.ms=10000\n        reconnect.backoff.max.ms=10000\n        retry.backoff.ms=10000\n        "
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101",
                "provider": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::training-data-msk-connect-provider::110c51da-0f81-4aa7-abdc-f614fda241af",
                "propertyDependencies": {
                    "name": null,
                    "propertiesFileContent": null
                }
            },
            {
                "urn": "urn:pulumi:tier-101::launchpad::pulumi:providers:aws::default_5_13_0",
                "custom": true,
                "id": "aeedaf18-0c4e-47bb-a559-6c12715223d5",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "version": "5.13.0"
                },
                "outputs": {
                    "version": "5.13.0"
                },
                "parent": "urn:pulumi:tier-101::launchpad::pulumi:pulumi:Stack::launchpad-tier-101"
            }
        ]
    }
}
