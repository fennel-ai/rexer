{
    "version": 3,
    "deployment": {
        "manifest": {
            "time": "2022-09-02T07:53:59.683994-07:00",
            "magic": "f18625eb5592f6d57a3a8c5bfde984fc0808d71ce3f046fd68e1dc4a989f43a7",
            "version": "v3.30.0"
        },
        "secrets_providers": {
            "type": "service",
            "state": {
                "url": "https://api.pulumi.com",
                "owner": "fennel",
                "project": "launchpad",
                "stack": "plane-3"
            }
        },
        "resources": [
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "custom": false,
                "type": "pulumi:pulumi:Stack",
                "outputs": {
                    "confluent": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAE8q1TrMgtQPCH75FkjgvI6JdNY+AV6DEqNt7uhkbvCeCRkKJfkNSvvbad0msknId+G53sD3IqkiyBNSz/lxlCKDpGRi+/d81mQ29AtPt0sq5xYA/vnN1SPlj8dT8oJWFNqrp9iRolnuK2CScLCG1KBvRPS24EnSzSQV4QpunTcnYQlLwQrC+M/Ua1ELMy6xEZGXHV4YZQ5ymvx2sqTxqkd70miwAuc8Y9q0N1QWObD8HD5+8Aka8PRbr/qD5fxASXsTx8aecweE64MpzKSlIWp3NN6JZ7CU/xVuZsZ6nYgH/g0b7pB5M79X72z74KNVNvIhZVPXQh8smfyhnYxa"
                    },
                    "db": {
                        "host": "p-3-db-20220322025721191200000002.cluster-c00d7gkxaysk.us-west-2.rds.amazonaws.com"
                    },
                    "eks": {
                        "clusterName": "p-3-eks-cluster-eksCluster-fd821aa",
                        "clusterSg": "sg-02576e409d44907ef",
                        "instanceRole": "p-3-eks-cluster-instanceRole-role-dcb5bdb",
                        "instanceRoleArn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb",
                        "kubeconfig": {
                            "apiVersion": "v1",
                            "clusters": [
                                {
                                    "cluster": {
                                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                        "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                    },
                                    "name": "kubernetes"
                                }
                            ],
                            "contexts": [
                                {
                                    "context": {
                                        "cluster": "kubernetes",
                                        "user": "aws"
                                    },
                                    "name": "aws"
                                }
                            ],
                            "current-context": "aws",
                            "kind": "Config",
                            "users": [
                                {
                                    "name": "aws",
                                    "user": {
                                        "exec": {
                                            "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                            "args": [
                                                "eks",
                                                "get-token",
                                                "--cluster-name",
                                                "p-3-eks-cluster-eksCluster-fd821aa",
                                                "--role",
                                                "arn:aws:iam::030813887342:role/admin"
                                            ],
                                            "command": "aws"
                                        }
                                    }
                                }
                            ]
                        },
                        "oidcUrl": "oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195",
                        "storageclasses": {
                            "io1": "ebs-io1-50ops-n8o4xdjp",
                            "io2": "ebs-io2-200ops-811od6mc",
                            "local": "nvme-ssd"
                        }
                    },
                    "elasticache": {
                        "endpoint": "clustercfg.p-3-cache-cluster-b20c9a6.fbjfph.usw2.cache.amazonaws.com:6379"
                    },
                    "glue": {
                        "scriptPath": "aws_glue_parquet_transforms.py",
                        "scriptSourceBucket": "p-3-gluejob-source"
                    },
                    "milvus": {
                        "endpoint": "milvus.milvus:19530"
                    },
                    "msk": {
                        "bootstrapBrokers": "b-1.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:9096,b-2.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:9096",
                        "clusterArn": "arn:aws:kafka:us-west-2:030813887342:cluster/p-3-kafka-cluster/64e46a95-9c4a-40f1-803d-e703f04db07d-10",
                        "clusterName": "p-3-kafka-cluster",
                        "mskPassword": "p-3-password",
                        "mskUsername": "p-3-username",
                        "numBrokers": 2,
                        "zookeeperConnectString": "z-1.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:2181,z-2.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:2181,z-3.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:2181"
                    },
                    "offlineAggregateSourceFiles": {
                        "bucketName": "p-3-offline-aggregate-source",
                        "sources": {
                            "cf": "s3://p-3-offline-aggregate-source/cf.py",
                            "topk": "s3://p-3-offline-aggregate-source/topk.py"
                        }
                    },
                    "postgresDb": {
                        "host": "p-3-postgres-db-20220714170049754900000002.cluster-c00d7gkxaysk.us-west-2.rds.amazonaws.com",
                        "port": 5432
                    },
                    "redis": {
                        "clusterEndPoints": [
                            "clustercfg.p-3-redis-db-57b5586.fbjfph.memorydb.us-west-2.amazonaws.com:6379"
                        ],
                        "clusterId": "p-3-redis-db-57b5586",
                        "clusterSecurityGroupIds": [
                            "sg-09e571f0713759de2"
                        ]
                    },
                    "roleArn": "arn:aws:iam::030813887342:role/admin",
                    "telemetry": {
                        "otelCollectorEndpoint": "otel-collector.otel-eks:4317",
                        "otelCollectorHttpEndpoint": "otel-collector.otel-eks:4318"
                    },
                    "trainingData": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABABlj2FMtIwoDnP2c8+Lp4FGjm/XO4kIax5Cr71/91hOfCBR19Y2ujLSvMQARiXiHGkyJdzwonlLV077klpIYIq+QhZCabrXHF9wWHxYMNi90EPtS4nGD3KG0Vc4Amo9ck2M4lRZ1094SO9igZua4WTi4XFeHGqakb9EbgXGCOmEl9E4alwXg7vKLKoUO9UcqobZIqySnxBn7FxZv4qClmcu9WXRO7jRN6g=="
                    },
                    "vpc": {
                        "azs": [
                            "us-west-2a",
                            "us-west-2b"
                        ],
                        "privateNacl": "acl-0233fa641a513e5e1",
                        "privateRouteTable": "rtb-0aa99465a704b99ca",
                        "privateSubnets": [
                            "subnet-0e17b2c51bb9d79f4",
                            "subnet-0615a2647b66a222c"
                        ],
                        "publicNacl": "acl-028ea53fe8d0de67a",
                        "publicRouteTable": "rtb-038eca38cb7b4d47a",
                        "publicSubnets": [
                            "subnet-06368c2eeec944c76",
                            "subnet-08382870e07aaa6a7"
                        ],
                        "vpcId": "vpc-05832a35998c34f0c"
                    }
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider",
                "custom": true,
                "id": "41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                "custom": true,
                "id": "vpc-05832a35998c34f0c",
                "type": "aws:ec2/vpc:Vpc",
                "inputs": {
                    "__defaults": [
                        "enableDnsSupport",
                        "instanceTenancy"
                    ],
                    "cidrBlock": "10.103.0.0/16",
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": {
                        "Name": "fennel-vpc",
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:vpc/vpc-05832a35998c34f0c",
                    "assignGeneratedIpv6CidrBlock": false,
                    "cidrBlock": "10.103.0.0/16",
                    "defaultNetworkAclId": "acl-07663a2bbad10c2bc",
                    "defaultRouteTableId": "rtb-06d37ab44d5bcd3fd",
                    "defaultSecurityGroupId": "sg-04c0e4e46a362dbb0",
                    "dhcpOptionsId": "dopt-03c373e451d3b5ba1",
                    "enableClassiclink": false,
                    "enableClassiclinkDnsSupport": false,
                    "enableDnsHostnames": false,
                    "enableDnsSupport": true,
                    "id": "vpc-05832a35998c34f0c",
                    "instanceTenancy": "default",
                    "ipv6AssociationId": "",
                    "ipv6CidrBlock": "",
                    "ipv6CidrBlockNetworkBorderGroup": "",
                    "ipv6IpamPoolId": "",
                    "ipv6NetmaskLength": 0,
                    "mainRouteTableId": "rtb-06d37ab44d5bcd3fd",
                    "ownerId": "030813887342",
                    "tags": {
                        "Name": "fennel-vpc",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "fennel-vpc",
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "cidrBlock": null,
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:ManagedNodeGroup::p-3-common-ng-x86",
                "custom": false,
                "type": "eks:index:ManagedNodeGroup",
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3"
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "custom": false,
                "type": "eks:index:Cluster",
                "outputs": {
                    "eksCluster": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "p-3-eks-cluster-eksCluster-fd821aa",
                        "packageVersion": "",
                        "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    },
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3"
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:ManagedNodeGroup::p-3-nitrous-ng-arm",
                "custom": false,
                "type": "eks:index:ManagedNodeGroup",
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3"
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/internetGateway:InternetGateway::p-3-internet-gateway",
                "custom": true,
                "id": "igw-0dc1cfafc5351f380",
                "type": "aws:ec2/internetGateway:InternetGateway",
                "inputs": {
                    "__defaults": [],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "arn": "arn:aws:ec2:us-west-2:030813887342:internet-gateway/igw-0dc1cfafc5351f380",
                    "id": "igw-0dc1cfafc5351f380",
                    "ownerId": "030813887342",
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:ManagedNodeGroup::p-3-common-ng-arm64",
                "custom": false,
                "type": "eks:index:ManagedNodeGroup",
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3"
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                "custom": true,
                "id": "rtb-0aa99465a704b99ca",
                "type": "aws:ec2/routeTable:RouteTable",
                "inputs": {
                    "__defaults": [],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:route-table/rtb-0aa99465a704b99ca",
                    "id": "rtb-0aa99465a704b99ca",
                    "ownerId": "030813887342",
                    "propagatingVgws": [],
                    "routes": [],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3",
                "custom": true,
                "id": "285f7ea0-7054-487d-953b-f9ac8882f13f",
                "type": "pulumi:providers:command",
                "inputs": {
                    "version": "0.0.3"
                },
                "outputs": {
                    "version": "0.0.3"
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                "custom": true,
                "id": "subnet-08382870e07aaa6a7",
                "type": "aws:ec2/subnet:Subnet",
                "inputs": {
                    "__defaults": [
                        "assignIpv6AddressOnCreation",
                        "enableDns64",
                        "enableResourceNameDnsARecordOnLaunch",
                        "enableResourceNameDnsAaaaRecordOnLaunch",
                        "ipv6Native",
                        "mapPublicIpOnLaunch"
                    ],
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2b",
                    "cidrBlock": "10.103.64.0/18",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "ipv6Native": false,
                    "mapPublicIpOnLaunch": false,
                    "tags": {
                        "Name": "p-3-secondary-public-subnet",
                        "__defaults": [],
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":1200000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:subnet/subnet-08382870e07aaa6a7",
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2b",
                    "availabilityZoneId": "usw2-az1",
                    "cidrBlock": "10.103.64.0/18",
                    "customerOwnedIpv4Pool": "",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "id": "subnet-08382870e07aaa6a7",
                    "ipv6CidrBlock": "",
                    "ipv6CidrBlockAssociationId": "",
                    "ipv6Native": false,
                    "mapCustomerOwnedIpOnLaunch": false,
                    "mapPublicIpOnLaunch": false,
                    "outpostArn": "",
                    "ownerId": "030813887342",
                    "privateDnsHostnameTypeOnLaunch": "ip-name",
                    "tags": {
                        "Name": "p-3-secondary-public-subnet",
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "p-3-secondary-public-subnet",
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "availabilityZone": null,
                    "cidrBlock": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider",
                "custom": true,
                "id": "258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-3-peering-connection",
                "custom": true,
                "id": "pcx-05cbfb0d43bf374e9",
                "type": "aws:ec2/vpcPeeringConnection:VpcPeeringConnection",
                "inputs": {
                    "__defaults": [],
                    "peerOwnerId": "030813887342",
                    "peerRegion": "us-west-2",
                    "peerVpcId": "vpc-0d9942e83f94c049c",
                    "tags": {
                        "Side": "Requester",
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":60000000000,\"delete\":60000000000,\"update\":60000000000}}",
                    "acceptStatus": "pending-acceptance",
                    "accepter": null,
                    "id": "pcx-05cbfb0d43bf374e9",
                    "peerOwnerId": "030813887342",
                    "peerRegion": "us-west-2",
                    "peerVpcId": "vpc-0d9942e83f94c049c",
                    "requester": {
                        "allowClassicLinkToRemoteVpc": false,
                        "allowRemoteVpcDnsResolution": false,
                        "allowVpcToRemoteClassicLink": false
                    },
                    "tags": {
                        "Side": "Requester",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Side": "Requester",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "peerOwnerId": null,
                    "peerRegion": null,
                    "peerVpcId": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                "custom": true,
                "id": "subnet-0615a2647b66a222c",
                "type": "aws:ec2/subnet:Subnet",
                "inputs": {
                    "__defaults": [
                        "assignIpv6AddressOnCreation",
                        "enableDns64",
                        "enableResourceNameDnsARecordOnLaunch",
                        "enableResourceNameDnsAaaaRecordOnLaunch",
                        "ipv6Native",
                        "mapPublicIpOnLaunch"
                    ],
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2b",
                    "cidrBlock": "10.103.192.0/18",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "ipv6Native": false,
                    "mapPublicIpOnLaunch": false,
                    "tags": {
                        "Name": "p-3-secondary-private-subnet",
                        "__defaults": [],
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":1200000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:subnet/subnet-0615a2647b66a222c",
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2b",
                    "availabilityZoneId": "usw2-az1",
                    "cidrBlock": "10.103.192.0/18",
                    "customerOwnedIpv4Pool": "",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "id": "subnet-0615a2647b66a222c",
                    "ipv6CidrBlock": "",
                    "ipv6CidrBlockAssociationId": "",
                    "ipv6Native": false,
                    "mapCustomerOwnedIpOnLaunch": false,
                    "mapPublicIpOnLaunch": false,
                    "outpostArn": "",
                    "ownerId": "030813887342",
                    "privateDnsHostnameTypeOnLaunch": "ip-name",
                    "tags": {
                        "Name": "p-3-secondary-private-subnet",
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "p-3-secondary-private-subnet",
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "availabilityZone": null,
                    "cidrBlock": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::vpc-control-plane-provider",
                "custom": true,
                "id": "38ff4c7c-f077-4521-b724-58c60def0919",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                "custom": true,
                "id": "subnet-06368c2eeec944c76",
                "type": "aws:ec2/subnet:Subnet",
                "inputs": {
                    "__defaults": [
                        "assignIpv6AddressOnCreation",
                        "enableDns64",
                        "enableResourceNameDnsARecordOnLaunch",
                        "enableResourceNameDnsAaaaRecordOnLaunch",
                        "ipv6Native",
                        "mapPublicIpOnLaunch"
                    ],
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2a",
                    "cidrBlock": "10.103.0.0/18",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "ipv6Native": false,
                    "mapPublicIpOnLaunch": false,
                    "tags": {
                        "Name": "p-3-primary-public-subnet",
                        "__defaults": [],
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":1200000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:subnet/subnet-06368c2eeec944c76",
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2a",
                    "availabilityZoneId": "usw2-az2",
                    "cidrBlock": "10.103.0.0/18",
                    "customerOwnedIpv4Pool": "",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "id": "subnet-06368c2eeec944c76",
                    "ipv6CidrBlock": "",
                    "ipv6CidrBlockAssociationId": "",
                    "ipv6Native": false,
                    "mapCustomerOwnedIpOnLaunch": false,
                    "mapPublicIpOnLaunch": false,
                    "outpostArn": "",
                    "ownerId": "030813887342",
                    "privateDnsHostnameTypeOnLaunch": "ip-name",
                    "tags": {
                        "Name": "p-3-primary-public-subnet",
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "p-3-primary-public-subnet",
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "availabilityZone": null,
                    "cidrBlock": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                "custom": true,
                "id": "rtb-038eca38cb7b4d47a",
                "type": "aws:ec2/routeTable:RouteTable",
                "inputs": {
                    "__defaults": [],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:route-table/rtb-038eca38cb7b4d47a",
                    "id": "rtb-038eca38cb7b4d47a",
                    "ownerId": "030813887342",
                    "propagatingVgws": [],
                    "routes": [],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/eip:Eip::p-3-eip",
                "custom": true,
                "id": "eipalloc-05334f715567272ba",
                "type": "aws:ec2/eip:Eip",
                "inputs": {
                    "__defaults": [],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"delete\":180000000000,\"read\":900000000000,\"update\":300000000000}}",
                    "allocationId": "eipalloc-05334f715567272ba",
                    "associationId": "",
                    "carrierIp": "",
                    "customerOwnedIp": "",
                    "customerOwnedIpv4Pool": "",
                    "domain": "vpc",
                    "id": "eipalloc-05334f715567272ba",
                    "instance": "",
                    "networkBorderGroup": "us-west-2",
                    "networkInterface": "",
                    "privateIp": "",
                    "publicDns": "ec2-44-228-106-241.us-west-2.compute.amazonaws.com",
                    "publicIp": "44.228.106.241",
                    "publicIpv4Pool": "amazon",
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpc": true
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-3-eks-cluster-instanceRole",
                "custom": false,
                "type": "eks:index:ServiceRole",
                "outputs": {
                    "role": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb",
                        "packageVersion": "",
                        "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster"
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-3-eks-cluster-eksRole",
                "custom": false,
                "type": "eks:index:ServiceRole",
                "outputs": {
                    "role": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "p-3-eks-cluster-eksRole-role-cf34518",
                        "packageVersion": "",
                        "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-eksRole-role"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster"
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                "custom": true,
                "id": "subnet-0e17b2c51bb9d79f4",
                "type": "aws:ec2/subnet:Subnet",
                "inputs": {
                    "__defaults": [
                        "assignIpv6AddressOnCreation",
                        "enableDns64",
                        "enableResourceNameDnsARecordOnLaunch",
                        "enableResourceNameDnsAaaaRecordOnLaunch",
                        "ipv6Native",
                        "mapPublicIpOnLaunch"
                    ],
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2a",
                    "cidrBlock": "10.103.128.0/18",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "ipv6Native": false,
                    "mapPublicIpOnLaunch": false,
                    "tags": {
                        "Name": "p-3-primary-private-subnet",
                        "__defaults": [],
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":1200000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:subnet/subnet-0e17b2c51bb9d79f4",
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2a",
                    "availabilityZoneId": "usw2-az2",
                    "cidrBlock": "10.103.128.0/18",
                    "customerOwnedIpv4Pool": "",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "id": "subnet-0e17b2c51bb9d79f4",
                    "ipv6CidrBlock": "",
                    "ipv6CidrBlockAssociationId": "",
                    "ipv6Native": false,
                    "mapCustomerOwnedIpOnLaunch": false,
                    "mapPublicIpOnLaunch": false,
                    "outpostArn": "",
                    "ownerId": "030813887342",
                    "privateDnsHostnameTypeOnLaunch": "ip-name",
                    "tags": {
                        "Name": "p-3-primary-private-subnet",
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "p-3-primary-private-subnet",
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "availabilityZone": null,
                    "cidrBlock": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/vpcEndpoint:VpcEndpoint::s3-endpoint",
                "custom": true,
                "id": "vpce-050df9f852eb103b2",
                "type": "aws:ec2/vpcEndpoint:VpcEndpoint",
                "inputs": {
                    "__defaults": [
                        "privateDnsEnabled"
                    ],
                    "privateDnsEnabled": false,
                    "routeTableIds": [
                        "rtb-0aa99465a704b99ca"
                    ],
                    "serviceName": "com.amazonaws.us-west-2.s3",
                    "tags": {
                        "Name": "p-3-s3-endpoint",
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcEndpointType": "Gateway",
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":600000000000,\"update\":600000000000}}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:vpc-endpoint/vpce-050df9f852eb103b2",
                    "cidrBlocks": [
                        "3.5.76.0/22",
                        "3.5.80.0/21",
                        "18.34.48.0/20",
                        "18.34.244.0/22",
                        "52.92.128.0/17",
                        "52.218.128.0/17"
                    ],
                    "dnsEntries": [],
                    "id": "vpce-050df9f852eb103b2",
                    "networkInterfaceIds": [],
                    "ownerId": "030813887342",
                    "policy": "{\"Statement\":[{\"Action\":\"*\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Resource\":\"*\"}],\"Version\":\"2008-10-17\"}",
                    "prefixListId": "pl-68a54001",
                    "privateDnsEnabled": false,
                    "requesterManaged": false,
                    "routeTableIds": [
                        "rtb-0aa99465a704b99ca"
                    ],
                    "securityGroupIds": [],
                    "serviceName": "com.amazonaws.us-west-2.s3",
                    "state": "available",
                    "subnetIds": [],
                    "tags": {
                        "Name": "p-3-s3-endpoint",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "p-3-s3-endpoint",
                        "managed-by": "fennel.ai"
                    },
                    "vpcEndpointType": "Gateway",
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "routeTableIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt"
                    ],
                    "serviceName": null,
                    "tags": null,
                    "vpcEndpointType": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::command:local:Command::root-ca",
                "custom": true,
                "id": "298660134e099",
                "type": "command:local:Command",
                "inputs": {
                    "create": "step certificate create root.linkerd.cluster.local ca.crt ca.key --profile root-ca --no-password --insecure",
                    "delete": "rm -f ca.crt ca.key"
                },
                "outputs": {
                    "create": "step certificate create root.linkerd.cluster.local ca.crt ca.key --profile root-ca --no-password --insecure",
                    "delete": "rm -f ca.crt ca.key",
                    "stderr": "Your certificate has been saved in ca.crt.\nYour private key has been saved in ca.key.",
                    "stdout": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3::285f7ea0-7054-487d-953b-f9ac8882f13f",
                "propertyDependencies": {
                    "create": null,
                    "delete": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/keyPair:KeyPair::p-3-eks-workers",
                "custom": true,
                "id": "p-3-eks-workers-45d3504",
                "type": "aws:ec2/keyPair:KeyPair",
                "inputs": {
                    "__defaults": [
                        "keyName"
                    ],
                    "keyName": "p-3-eks-workers-45d3504",
                    "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDE5dBWnI9Cq1MMdzulJRXI+fY3Y+3EQ/ANkZyaM1sTMKYatbLJuMYR1M6PByhiWG+iT08x/zFK3/GceflCADRn35R0f4VsAtYwL75htvhI7oPCgS+6Jnv+jsRTt/tBujXtoWViwHkdWQuNicWAG2AqSplVvtiZ+xW1g9HPbvM0ywwLCoVcL3VUmHBXqpX6jjZTlTDibvgCUzVl53TZd+v+XXB1tmybA8HllvI2hwob67ibfhDlU/zrO15ptxU5Nv7BcvXrKlPx5D2KK1z4H/kqlMzULVJFSckKjB4x5BxUnxnmnIMqRGHpBmT2E31o7H40IN+Cfk2L2RWphpdB+5kbSngxzMr3EumgodLcoHG3/D2Fm0YD5YELBpvLeGxr+eBscfbTGIBAnY+rBpfzzzd/l2N1ysqy/puVdM4RcdyTEmC9FvtH3p0jcb9mSDafzInmBwpUDNC4NGo5NYLzphkG+22Tzg14fGATA1/BlI3KmRl6Hpp+hPRrmylrATpNtos= amitarya@Amits-MBP.attlocal.net\n"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:key-pair/p-3-eks-workers-45d3504",
                    "fingerprint": "30:f1:52:f9:db:9b:63:b9:4e:34:71:61:39:21:51:e4",
                    "id": "p-3-eks-workers-45d3504",
                    "keyName": "p-3-eks-workers-45d3504",
                    "keyNamePrefix": "",
                    "keyPairId": "key-090d14889b086db3b",
                    "publicKey": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDE5dBWnI9Cq1MMdzulJRXI+fY3Y+3EQ/ANkZyaM1sTMKYatbLJuMYR1M6PByhiWG+iT08x/zFK3/GceflCADRn35R0f4VsAtYwL75htvhI7oPCgS+6Jnv+jsRTt/tBujXtoWViwHkdWQuNicWAG2AqSplVvtiZ+xW1g9HPbvM0ywwLCoVcL3VUmHBXqpX6jjZTlTDibvgCUzVl53TZd+v+XXB1tmybA8HllvI2hwob67ibfhDlU/zrO15ptxU5Nv7BcvXrKlPx5D2KK1z4H/kqlMzULVJFSckKjB4x5BxUnxnmnIMqRGHpBmT2E31o7H40IN+Cfk2L2RWphpdB+5kbSngxzMr3EumgodLcoHG3/D2Fm0YD5YELBpvLeGxr+eBscfbTGIBAnY+rBpfzzzd/l2N1ysqy/puVdM4RcdyTEmC9FvtH3p0jcb9mSDafzInmBwpUDNC4NGo5NYLzphkG+22Tzg14fGATA1/BlI3KmRl6Hpp+hPRrmylrATpNtos= amitarya@Amits-MBP.attlocal.net",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "publicKey": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/route:Route::p-3-route-to-control-plane-0",
                "custom": true,
                "id": "r-rtb-0aa99465a704b99ca3854007479",
                "type": "aws:ec2/route:Route",
                "inputs": {
                    "__defaults": [],
                    "destinationCidrBlock": "172.31.0.0/16",
                    "routeTableId": "rtb-0aa99465a704b99ca",
                    "vpcPeeringConnectionId": "pcx-05cbfb0d43bf374e9"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "carrierGatewayId": "",
                    "destinationCidrBlock": "172.31.0.0/16",
                    "destinationIpv6CidrBlock": "",
                    "destinationPrefixListId": "",
                    "egressOnlyGatewayId": "",
                    "gatewayId": "",
                    "id": "r-rtb-0aa99465a704b99ca3854007479",
                    "instanceId": "",
                    "instanceOwnerId": "",
                    "localGatewayId": "",
                    "natGatewayId": "",
                    "networkInterfaceId": "",
                    "origin": "CreateRoute",
                    "routeTableId": "rtb-0aa99465a704b99ca",
                    "state": "active",
                    "transitGatewayId": "",
                    "vpcEndpointId": "",
                    "vpcPeeringConnectionId": "pcx-05cbfb0d43bf374e9"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-3-peering-connection"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "destinationCidrBlock": null,
                    "routeTableId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt"
                    ],
                    "vpcPeeringConnectionId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-3-peering-connection"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/routeTableAssociation:RouteTableAssociation::p-3-rt-assoc-private-1",
                "custom": true,
                "id": "rtbassoc-0ef00f932f57ed573",
                "type": "aws:ec2/routeTableAssociation:RouteTableAssociation",
                "inputs": {
                    "__defaults": [],
                    "routeTableId": "rtb-0aa99465a704b99ca",
                    "subnetId": "subnet-0615a2647b66a222c"
                },
                "outputs": {
                    "gatewayId": "",
                    "id": "rtbassoc-0ef00f932f57ed573",
                    "routeTableId": "rtb-0aa99465a704b99ca",
                    "subnetId": "subnet-0615a2647b66a222c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "routeTableId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt"
                    ],
                    "subnetId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/vpcPeeringConnectionAccepter:VpcPeeringConnectionAccepter::p-3-peering-connection-acceptor",
                "custom": true,
                "id": "pcx-05cbfb0d43bf374e9",
                "type": "aws:ec2/vpcPeeringConnectionAccepter:VpcPeeringConnectionAccepter",
                "inputs": {
                    "__defaults": [],
                    "accepter": {
                        "__defaults": [
                            "allowClassicLinkToRemoteVpc",
                            "allowVpcToRemoteClassicLink"
                        ],
                        "allowClassicLinkToRemoteVpc": false,
                        "allowRemoteVpcDnsResolution": true,
                        "allowVpcToRemoteClassicLink": false
                    },
                    "autoAccept": true,
                    "tags": {
                        "Side": "Acceptor",
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcPeeringConnectionId": "pcx-05cbfb0d43bf374e9"
                },
                "outputs": {
                    "acceptStatus": "active",
                    "accepter": {
                        "allowClassicLinkToRemoteVpc": false,
                        "allowRemoteVpcDnsResolution": true,
                        "allowVpcToRemoteClassicLink": false
                    },
                    "autoAccept": true,
                    "id": "pcx-05cbfb0d43bf374e9",
                    "peerOwnerId": "030813887342",
                    "peerRegion": "us-west-2",
                    "peerVpcId": "vpc-0d9942e83f94c049c",
                    "requester": {
                        "allowClassicLinkToRemoteVpc": false,
                        "allowRemoteVpcDnsResolution": false,
                        "allowVpcToRemoteClassicLink": false
                    },
                    "tags": {
                        "Side": "Acceptor",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Side": "Acceptor",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c",
                    "vpcPeeringConnectionId": "pcx-05cbfb0d43bf374e9"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-3-peering-connection"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::vpc-control-plane-provider::38ff4c7c-f077-4521-b724-58c60def0919",
                "propertyDependencies": {
                    "accepter": null,
                    "autoAccept": null,
                    "tags": null,
                    "vpcPeeringConnectionId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-3-peering-connection"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/route:Route::p-3-route-to-data-plane",
                "custom": true,
                "id": "r-rtb-07afe7458db9c44792563646185",
                "type": "aws:ec2/route:Route",
                "inputs": {
                    "__defaults": [],
                    "destinationCidrBlock": "10.103.0.0/16",
                    "routeTableId": "rtb-07afe7458db9c4479",
                    "vpcPeeringConnectionId": "pcx-05cbfb0d43bf374e9"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "carrierGatewayId": "",
                    "destinationCidrBlock": "10.103.0.0/16",
                    "destinationIpv6CidrBlock": "",
                    "destinationPrefixListId": "",
                    "egressOnlyGatewayId": "",
                    "gatewayId": "",
                    "id": "r-rtb-07afe7458db9c44792563646185",
                    "instanceId": "",
                    "instanceOwnerId": "",
                    "localGatewayId": "",
                    "natGatewayId": "",
                    "networkInterfaceId": "",
                    "origin": "CreateRoute",
                    "routeTableId": "rtb-07afe7458db9c4479",
                    "state": "active",
                    "transitGatewayId": "",
                    "vpcEndpointId": "",
                    "vpcPeeringConnectionId": "pcx-05cbfb0d43bf374e9"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-3-peering-connection"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::vpc-control-plane-provider::38ff4c7c-f077-4521-b724-58c60def0919",
                "propertyDependencies": {
                    "destinationCidrBlock": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ],
                    "routeTableId": null,
                    "vpcPeeringConnectionId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-3-peering-connection"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                "custom": true,
                "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "name",
                        "path"
                    ],
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ec2.amazonaws.com\"]}}]}",
                    "forceDetachPolicies": false,
                    "maxSessionDuration": 3600,
                    "name": "p-3-eks-cluster-instanceRole-role-dcb5bdb",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2022-03-22T02:56:13Z",
                    "description": "",
                    "forceDetachPolicies": false,
                    "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb",
                    "inlinePolicies": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "p-3-eks-cluster-instanceRole-role-dcb5bdb",
                    "namePrefix": "",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAQOLFGTNXG3IPYVYWL"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-3-eks-cluster-instanceRole",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "assumeRolePolicy": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-eksRole-role",
                "custom": true,
                "id": "p-3-eks-cluster-eksRole-role-cf34518",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "name",
                        "path"
                    ],
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"eks.amazonaws.com\"]}}]}",
                    "description": "Allows EKS to manage clusters on your behalf.",
                    "forceDetachPolicies": false,
                    "maxSessionDuration": 3600,
                    "name": "p-3-eks-cluster-eksRole-role-cf34518",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-eksRole-role-cf34518",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2022-03-22T02:56:13Z",
                    "description": "Allows EKS to manage clusters on your behalf.",
                    "forceDetachPolicies": false,
                    "id": "p-3-eks-cluster-eksRole-role-cf34518",
                    "inlinePolicies": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "p-3-eks-cluster-eksRole-role-cf34518",
                    "namePrefix": "",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAQOLFGTNXHOEDATCAQ"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-3-eks-cluster-eksRole",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "assumeRolePolicy": null,
                    "description": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/routeTableAssociation:RouteTableAssociation::p-3-rt-assoc-public-1",
                "custom": true,
                "id": "rtbassoc-0c0e505da89995b66",
                "type": "aws:ec2/routeTableAssociation:RouteTableAssociation",
                "inputs": {
                    "__defaults": [],
                    "routeTableId": "rtb-038eca38cb7b4d47a",
                    "subnetId": "subnet-08382870e07aaa6a7"
                },
                "outputs": {
                    "gatewayId": "",
                    "id": "rtbassoc-0c0e505da89995b66",
                    "routeTableId": "rtb-038eca38cb7b4d47a",
                    "subnetId": "subnet-08382870e07aaa6a7"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "routeTableId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ],
                    "subnetId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/routeTableAssociation:RouteTableAssociation::p-3-rt-assoc-public-0",
                "custom": true,
                "id": "rtbassoc-051064ba6718bb270",
                "type": "aws:ec2/routeTableAssociation:RouteTableAssociation",
                "inputs": {
                    "__defaults": [],
                    "routeTableId": "rtb-038eca38cb7b4d47a",
                    "subnetId": "subnet-06368c2eeec944c76"
                },
                "outputs": {
                    "gatewayId": "",
                    "id": "rtbassoc-051064ba6718bb270",
                    "routeTableId": "rtb-038eca38cb7b4d47a",
                    "subnetId": "subnet-06368c2eeec944c76"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "routeTableId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ],
                    "subnetId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                "custom": true,
                "id": "acl-028ea53fe8d0de67a",
                "type": "aws:ec2/networkAcl:NetworkAcl",
                "inputs": {
                    "__defaults": [],
                    "egress": [
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "protocol": "tcp",
                            "ruleNo": 100,
                            "toPort": 65535
                        }
                    ],
                    "ingress": [
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "protocol": "tcp",
                            "ruleNo": 100,
                            "toPort": 65535
                        }
                    ],
                    "subnetIds": [
                        "subnet-06368c2eeec944c76",
                        "subnet-08382870e07aaa6a7"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "arn": "arn:aws:ec2:us-west-2:030813887342:network-acl/acl-028ea53fe8d0de67a",
                    "egress": [
                        {
                            "action": "allow",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "6",
                            "ruleNo": 100,
                            "toPort": 65535
                        }
                    ],
                    "id": "acl-028ea53fe8d0de67a",
                    "ingress": [
                        {
                            "action": "allow",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "6",
                            "ruleNo": 100,
                            "toPort": 65535
                        }
                    ],
                    "ownerId": "030813887342",
                    "subnetIds": [
                        "subnet-06368c2eeec944c76",
                        "subnet-08382870e07aaa6a7"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "egress": null,
                    "ingress": null,
                    "subnetIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet"
                    ],
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/route:Route::p-3-allow-all-public-rt",
                "custom": true,
                "id": "r-rtb-038eca38cb7b4d47a1080289494",
                "type": "aws:ec2/route:Route",
                "inputs": {
                    "__defaults": [],
                    "destinationCidrBlock": "0.0.0.0/0",
                    "gatewayId": "igw-0dc1cfafc5351f380",
                    "routeTableId": "rtb-038eca38cb7b4d47a"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "carrierGatewayId": "",
                    "destinationCidrBlock": "0.0.0.0/0",
                    "destinationIpv6CidrBlock": "",
                    "destinationPrefixListId": "",
                    "egressOnlyGatewayId": "",
                    "gatewayId": "igw-0dc1cfafc5351f380",
                    "id": "r-rtb-038eca38cb7b4d47a1080289494",
                    "instanceId": "",
                    "instanceOwnerId": "",
                    "localGatewayId": "",
                    "natGatewayId": "",
                    "networkInterfaceId": "",
                    "origin": "CreateRoute",
                    "routeTableId": "rtb-038eca38cb7b4d47a",
                    "state": "active",
                    "transitGatewayId": "",
                    "vpcEndpointId": "",
                    "vpcPeeringConnectionId": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/internetGateway:InternetGateway::p-3-internet-gateway",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "destinationCidrBlock": null,
                    "gatewayId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/internetGateway:InternetGateway::p-3-internet-gateway"
                    ],
                    "routeTableId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-ca",
                "custom": true,
                "id": "298755d817e49",
                "type": "command:local:Command",
                "inputs": {
                    "create": "step certificate create identity.linkerd.cluster.local issuer.crt issuer.key --profile intermediate-ca --not-after 8760h --no-password --insecure --ca ca.crt --ca-key ca.key",
                    "delete": "rm -f issuer.crt issuer.key"
                },
                "outputs": {
                    "create": "step certificate create identity.linkerd.cluster.local issuer.crt issuer.key --profile intermediate-ca --not-after 8760h --no-password --insecure --ca ca.crt --ca-key ca.key",
                    "delete": "rm -f issuer.crt issuer.key",
                    "stderr": "Your certificate has been saved in issuer.crt.\nYour private key has been saved in issuer.key.",
                    "stdout": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::command:local:Command::root-ca"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3::285f7ea0-7054-487d-953b-f9ac8882f13f",
                "propertyDependencies": {
                    "create": null,
                    "delete": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::command:local:Command::ca-crt",
                "custom": true,
                "id": "298764124b8b1",
                "type": "command:local:Command",
                "inputs": {
                    "create": "cat ca.crt"
                },
                "outputs": {
                    "create": "cat ca.crt",
                    "stderr": "",
                    "stdout": "-----BEGIN CERTIFICATE-----\nMIIBjjCCATSgAwIBAgIRAJ6egis+ZdOoSLaaMrPEaiMwCgYIKoZIzj0EAwIwJTEj\nMCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjIwODEyMjA0\nMzM1WhcNMzIwODA5MjA0MzM1WjAlMSMwIQYDVQQDExpyb290LmxpbmtlcmQuY2x1\nc3Rlci5sb2NhbDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJYrqUcXMz622pea\nzqxHD3VxYHDzTuwKLSXmiXrmCKJU32OmdOsj9Uvyq7Ufavaf+8muk6Y0P3Fw3mLG\noba9glOjRTBDMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMB0G\nA1UdDgQWBBRnSSYf3cVWdghpUod6oxp27wvYxzAKBggqhkjOPQQDAgNIADBFAiA4\nENXg8ul8wOD9G24U5b5I6lhVZJuwOVQUlVXsdPRJzAIhAKXAsZrL4Ebe6AHwPNW3\nWrMcID7Bs05yFH2i9QDVdMzR\n-----END CERTIFICATE-----"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::command:local:Command::root-ca"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3::285f7ea0-7054-487d-953b-f9ac8882f13f",
                "propertyDependencies": {
                    "create": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/routeTableAssociation:RouteTableAssociation::p-3-rt-assoc-private-0",
                "custom": true,
                "id": "rtbassoc-0ece333700b369259",
                "type": "aws:ec2/routeTableAssociation:RouteTableAssociation",
                "inputs": {
                    "__defaults": [],
                    "routeTableId": "rtb-0aa99465a704b99ca",
                    "subnetId": "subnet-0e17b2c51bb9d79f4"
                },
                "outputs": {
                    "gatewayId": "",
                    "id": "rtbassoc-0ece333700b369259",
                    "routeTableId": "rtb-0aa99465a704b99ca",
                    "subnetId": "subnet-0e17b2c51bb9d79f4"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "routeTableId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt"
                    ],
                    "subnetId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/natGateway:NatGateway::p-3-nat-gateway",
                "custom": true,
                "id": "nat-0e88b135fcff38984",
                "type": "aws:ec2/natGateway:NatGateway",
                "inputs": {
                    "__defaults": [
                        "connectivityType"
                    ],
                    "allocationId": "eipalloc-05334f715567272ba",
                    "connectivityType": "public",
                    "subnetId": "subnet-06368c2eeec944c76",
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "allocationId": "eipalloc-05334f715567272ba",
                    "connectivityType": "public",
                    "id": "nat-0e88b135fcff38984",
                    "networkInterfaceId": "eni-0ef159d9284886802",
                    "privateIp": "10.103.34.165",
                    "publicIp": "44.228.106.241",
                    "subnetId": "subnet-06368c2eeec944c76",
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/eip:Eip::p-3-eip",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "allocationId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/eip:Eip::p-3-eip"
                    ],
                    "subnetId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet"
                    ],
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                "custom": true,
                "id": "acl-0233fa641a513e5e1",
                "type": "aws:ec2/networkAcl:NetworkAcl",
                "inputs": {
                    "__defaults": [],
                    "egress": [
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "protocol": "tcp",
                            "ruleNo": 100,
                            "toPort": 65535
                        },
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "10.103.0.0/16",
                            "fromPort": 0,
                            "protocol": "-1",
                            "ruleNo": 101,
                            "toPort": 0
                        }
                    ],
                    "ingress": [
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "protocol": "tcp",
                            "ruleNo": 100,
                            "toPort": 65535
                        },
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "10.103.0.0/16",
                            "fromPort": 0,
                            "protocol": "-1",
                            "ruleNo": 101,
                            "toPort": 0
                        }
                    ],
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "arn": "arn:aws:ec2:us-west-2:030813887342:network-acl/acl-0233fa641a513e5e1",
                    "egress": [
                        {
                            "action": "allow",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "6",
                            "ruleNo": 100,
                            "toPort": 65535
                        },
                        {
                            "action": "allow",
                            "cidrBlock": "10.103.0.0/16",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "-1",
                            "ruleNo": 101,
                            "toPort": 0
                        }
                    ],
                    "id": "acl-0233fa641a513e5e1",
                    "ingress": [
                        {
                            "action": "allow",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "6",
                            "ruleNo": 100,
                            "toPort": 65535
                        },
                        {
                            "action": "allow",
                            "cidrBlock": "10.103.0.0/16",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "-1",
                            "ruleNo": 101,
                            "toPort": 0
                        }
                    ],
                    "ownerId": "030813887342",
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "egress": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ],
                    "ingress": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ],
                    "subnetIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet"
                    ],
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                "custom": true,
                "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220322025618122600000004",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "outputs": {
                    "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220322025618122600000004",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-3-eks-cluster-instanceRole",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "policyArn": null,
                    "role": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                "custom": true,
                "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220322025618266400000005",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "outputs": {
                    "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220322025618266400000005",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-3-eks-cluster-instanceRole",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "policyArn": null,
                    "role": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                "custom": true,
                "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220322025618363400000006",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "outputs": {
                    "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220322025618363400000006",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-3-eks-cluster-instanceRole",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "policyArn": null,
                    "role": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-eksRole-4b490823",
                "custom": true,
                "id": "p-3-eks-cluster-eksRole-role-cf34518-20220322025617714600000002",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                    "role": "p-3-eks-cluster-eksRole-role-cf34518"
                },
                "outputs": {
                    "id": "p-3-eks-cluster-eksRole-role-cf34518-20220322025617714600000002",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                    "role": "p-3-eks-cluster-eksRole-role-cf34518"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-3-eks-cluster-eksRole",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-eksRole-role"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "policyArn": null,
                    "role": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-eksRole-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-crt",
                "custom": true,
                "id": "29901c7f97d6d",
                "type": "command:local:Command",
                "inputs": {
                    "create": "cat issuer.crt"
                },
                "outputs": {
                    "create": "cat issuer.crt",
                    "stderr": "",
                    "stdout": "-----BEGIN CERTIFICATE-----\nMIIBtDCCAVmgAwIBAgIRAP6vt04VxXjj43xaE2WTjzgwCgYIKoZIzj0EAwIwJTEj\nMCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjIwODEyMjA0\nMzM2WhcNMjMwODEyMjA0MzM2WjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJk\nLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATARss9tCHN\n9f06G5RvO+MNhJJ90iSF/d7p4v43n7+J7KabkCCqsXempZnXTw9B4dULBY5ZDekn\n7KMEV1nDKmUHo2YwZDAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIB\nADAdBgNVHQ4EFgQUYuWmLk/TVDGfUljjqyk4gI992l8wHwYDVR0jBBgwFoAUZ0km\nH93FVnYIaVKHeqMadu8L2McwCgYIKoZIzj0EAwIDSQAwRgIhAOylxPm8XpT/9sP+\n2F/gzP80MBi8r46VvgOsInZgP8UbAiEAkRdhKB7cEd6E3ic0fKC5OXrYhXiWhSST\ng2zkFul8LlA=\n-----END CERTIFICATE-----"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-ca"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3::285f7ea0-7054-487d-953b-f9ac8882f13f",
                "propertyDependencies": {
                    "create": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-key",
                "custom": true,
                "id": "299008bf461eb",
                "type": "command:local:Command",
                "inputs": {
                    "create": "cat issuer.key"
                },
                "outputs": {
                    "create": "cat issuer.key",
                    "stderr": "",
                    "stdout": "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIB3D9k+L2miRl6rA5XgiYsEpDUY0DoRAmz7NYtXCU5r5oAoGCCqGSM49\nAwEHoUQDQgAEwEbLPbQhzfX9OhuUbzvjDYSSfdIkhf3e6eL+N5+/ieymm5AgqrF3\npqWZ108PQeHVCwWOWQ3pJ+yjBFdZwyplBw==\n-----END EC PRIVATE KEY-----"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-ca"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3::285f7ea0-7054-487d-953b-f9ac8882f13f",
                "propertyDependencies": {
                    "create": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/route:Route::p-3-allow-all-private-rt",
                "custom": true,
                "id": "r-rtb-0aa99465a704b99ca1080289494",
                "type": "aws:ec2/route:Route",
                "inputs": {
                    "__defaults": [],
                    "destinationCidrBlock": "0.0.0.0/0",
                    "natGatewayId": "nat-0e88b135fcff38984",
                    "routeTableId": "rtb-0aa99465a704b99ca"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "carrierGatewayId": "",
                    "destinationCidrBlock": "0.0.0.0/0",
                    "destinationIpv6CidrBlock": "",
                    "destinationPrefixListId": "",
                    "egressOnlyGatewayId": "",
                    "gatewayId": "",
                    "id": "r-rtb-0aa99465a704b99ca1080289494",
                    "instanceId": "",
                    "instanceOwnerId": "",
                    "localGatewayId": "",
                    "natGatewayId": "nat-0e88b135fcff38984",
                    "networkInterfaceId": "",
                    "origin": "CreateRoute",
                    "routeTableId": "rtb-0aa99465a704b99ca",
                    "state": "active",
                    "transitGatewayId": "",
                    "vpcEndpointId": "",
                    "vpcPeeringConnectionId": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/natGateway:NatGateway::p-3-nat-gateway",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "destinationCidrBlock": null,
                    "natGatewayId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/natGateway:NatGateway::p-3-nat-gateway"
                    ],
                    "routeTableId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup",
                "custom": true,
                "id": "sg-05b57e1a5ad5c4ea1",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Managed by Pulumi",
                    "name": "p-3-eks-cluster-eksClusterSecurityGroup-6c8b773",
                    "revokeRulesOnDelete": true,
                    "tags": {
                        "Name": "p-3-eks-cluster-eksClusterSecurityGroup",
                        "__defaults": []
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:security-group/sg-05b57e1a5ad5c4ea1",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-05b57e1a5ad5c4ea1",
                    "ingress": [],
                    "name": "p-3-eks-cluster-eksClusterSecurityGroup-6c8b773",
                    "namePrefix": "",
                    "ownerId": "030813887342",
                    "revokeRulesOnDelete": true,
                    "tags": {
                        "Name": "p-3-eks-cluster-eksClusterSecurityGroup"
                    },
                    "tagsAll": {
                        "Name": "p-3-eks-cluster-eksClusterSecurityGroup"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "description": null,
                    "revokeRulesOnDelete": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                "custom": true,
                "id": "p-3-eks-cluster-eksCluster-fd821aa",
                "type": "aws:eks/cluster:Cluster",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "enabledClusterLogTypes": [
                        "api",
                        "authenticator",
                        "controllerManager",
                        "scheduler"
                    ],
                    "name": "p-3-eks-cluster-eksCluster-fd821aa",
                    "roleArn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-eksRole-role-cf34518",
                    "tags": {
                        "Name": "p-3-eks-cluster-eksCluster",
                        "__defaults": []
                    },
                    "version": "1.22",
                    "vpcConfig": {
                        "__defaults": [],
                        "endpointPrivateAccess": true,
                        "endpointPublicAccess": true,
                        "securityGroupIds": [
                            "sg-05b57e1a5ad5c4ea1"
                        ],
                        "subnetIds": [
                            "subnet-06368c2eeec944c76",
                            "subnet-08382870e07aaa6a7",
                            "subnet-0e17b2c51bb9d79f4",
                            "subnet-0615a2647b66a222c"
                        ]
                    }
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":1800000000000,\"delete\":900000000000,\"update\":3600000000000}}",
                    "arn": "arn:aws:eks:us-west-2:030813887342:cluster/p-3-eks-cluster-eksCluster-fd821aa",
                    "certificateAuthority": {
                        "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
                    },
                    "createdAt": "2022-03-22 02:57:22.746 +0000 UTC",
                    "enabledClusterLogTypes": [
                        "controllerManager",
                        "scheduler",
                        "authenticator",
                        "api"
                    ],
                    "encryptionConfig": null,
                    "endpoint": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com",
                    "id": "p-3-eks-cluster-eksCluster-fd821aa",
                    "identities": [
                        {
                            "oidcs": [
                                {
                                    "issuer": "https://oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195"
                                }
                            ]
                        }
                    ],
                    "kubernetesNetworkConfig": {
                        "ipFamily": "ipv4",
                        "serviceIpv4Cidr": "172.20.0.0/16"
                    },
                    "name": "p-3-eks-cluster-eksCluster-fd821aa",
                    "platformVersion": "eks.1",
                    "roleArn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-eksRole-role-cf34518",
                    "status": "ACTIVE",
                    "tags": {
                        "Name": "p-3-eks-cluster-eksCluster"
                    },
                    "tagsAll": {
                        "Name": "p-3-eks-cluster-eksCluster"
                    },
                    "version": "1.22",
                    "vpcConfig": {
                        "clusterSecurityGroupId": "sg-02576e409d44907ef",
                        "endpointPrivateAccess": true,
                        "endpointPublicAccess": true,
                        "publicAccessCidrs": [
                            "0.0.0.0/0"
                        ],
                        "securityGroupIds": [
                            "sg-05b57e1a5ad5c4ea1"
                        ],
                        "subnetIds": [
                            "subnet-0e17b2c51bb9d79f4",
                            "subnet-06368c2eeec944c76",
                            "subnet-0615a2647b66a222c",
                            "subnet-08382870e07aaa6a7"
                        ],
                        "vpcId": "vpc-05832a35998c34f0c"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-eksRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-eksRole-4b490823"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "enabledClusterLogTypes": null,
                    "roleArn": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-eksRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-eksRole-4b490823"
                    ],
                    "tags": null,
                    "version": null,
                    "vpcConfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-3-eks-cluster-eksClusterInternetEgressRule",
                "custom": true,
                "id": "sgrule-2642216731",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "0.0.0.0/0"
                    ],
                    "description": "Allow internet access.",
                    "fromPort": 0,
                    "protocol": "-1",
                    "securityGroupId": "sg-05b57e1a5ad5c4ea1",
                    "toPort": 0,
                    "type": "egress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "0.0.0.0/0"
                    ],
                    "description": "Allow internet access.",
                    "fromPort": 0,
                    "id": "sgrule-2642216731",
                    "protocol": "-1",
                    "securityGroupId": "sg-05b57e1a5ad5c4ea1",
                    "self": false,
                    "toPort": 0,
                    "type": "egress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/rolePolicy:RolePolicy::p-3-s3-createbucket-rolepolicy",
                "custom": true,
                "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb:p-3-s3-createbucket-rolepolicy",
                "type": "aws:iam/rolePolicy:RolePolicy",
                "inputs": {
                    "__defaults": [],
                    "name": "p-3-s3-createbucket-rolepolicy",
                    "policy": "{\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": \"s3:CreateBucket\",\n                    \"Resource\": \"*\"\n                }\n            ]\n        }",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "outputs": {
                    "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb:p-3-s3-createbucket-rolepolicy",
                    "name": "p-3-s3-createbucket-rolepolicy",
                    "policy": "{\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": \"s3:CreateBucket\",\n                    \"Resource\": \"*\"\n                }\n            ]\n        }",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "name": null,
                    "policy": null,
                    "role": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::default_3_16_0",
                "custom": true,
                "id": "aaeb9b53-84c7-4091-9473-777276f3af23",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "version": "3.16.0"
                },
                "outputs": {
                    "version": "3.16.0"
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                "custom": true,
                "id": "arn:aws:iam::030813887342:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195",
                "type": "aws:iam/openIdConnectProvider:OpenIdConnectProvider",
                "inputs": {
                    "__defaults": [],
                    "clientIdLists": [
                        "sts.amazonaws.com"
                    ],
                    "thumbprintLists": [
                        "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
                    ],
                    "url": "https://oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195",
                    "clientIdLists": [
                        "sts.amazonaws.com"
                    ],
                    "id": "arn:aws:iam::030813887342:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195",
                    "tags": {},
                    "tagsAll": {},
                    "thumbprintLists": [
                        "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
                    ],
                    "url": "oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "clientIdLists": null,
                    "thumbprintLists": null,
                    "url": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup",
                "custom": true,
                "id": "sg-0269fa98ddd9ca37d",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Managed by Pulumi",
                    "name": "p-3-eks-cluster-nodeSecurityGroup-6c59794",
                    "revokeRulesOnDelete": true,
                    "tags": {
                        "Name": "p-3-eks-cluster-nodeSecurityGroup",
                        "__defaults": [],
                        "kubernetes.io/cluster/p-3-eks-cluster-eksCluster-fd821aa": "owned"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:security-group/sg-0269fa98ddd9ca37d",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-0269fa98ddd9ca37d",
                    "ingress": [],
                    "name": "p-3-eks-cluster-nodeSecurityGroup-6c59794",
                    "namePrefix": "",
                    "ownerId": "030813887342",
                    "revokeRulesOnDelete": true,
                    "tags": {
                        "Name": "p-3-eks-cluster-nodeSecurityGroup",
                        "kubernetes.io/cluster/p-3-eks-cluster-eksCluster-fd821aa": "owned"
                    },
                    "tagsAll": {
                        "Name": "p-3-eks-cluster-nodeSecurityGroup",
                        "kubernetes.io/cluster/p-3-eks-cluster-eksCluster-fd821aa": "owned"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "description": null,
                    "revokeRulesOnDelete": null,
                    "tags": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ],
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::eks-nvme-ssd-provisioner",
                "custom": false,
                "type": "kubernetes:yaml:ConfigFile",
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3"
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::plane-eks-instance-iam-policy-provider",
                "custom": true,
                "id": "b21c905b-9cbe-4b9a-870a-b0be3a1a44b9",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/policy:Policy::p-3-lbc-policy",
                "custom": true,
                "id": "arn:aws:iam::030813887342:policy/p-3-AWSLoadBalancerControllerIAMPolicy20220812204337160700000001",
                "type": "aws:iam/policy:Policy",
                "inputs": {
                    "__defaults": [
                        "path"
                    ],
                    "namePrefix": "p-3-AWSLoadBalancerControllerIAMPolicy",
                    "path": "/",
                    "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:CreateServiceLinkedRole\",\n                \"ec2:DescribeAccountAttributes\",\n                \"ec2:DescribeAddresses\",\n                \"ec2:DescribeAvailabilityZones\",\n                \"ec2:DescribeInternetGateways\",\n                \"ec2:DescribeVpcs\",\n                \"ec2:DescribeSubnets\",\n                \"ec2:DescribeSecurityGroups\",\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeNetworkInterfaces\",\n                \"ec2:DescribeTags\",\n                \"ec2:GetCoipPoolUsage\",\n                \"ec2:DescribeCoipPools\",\n                \"elasticloadbalancing:DescribeLoadBalancers\",\n                \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n                \"elasticloadbalancing:DescribeListeners\",\n                \"elasticloadbalancing:DescribeListenerCertificates\",\n                \"elasticloadbalancing:DescribeSSLPolicies\",\n                \"elasticloadbalancing:DescribeRules\",\n                \"elasticloadbalancing:DescribeTargetGroups\",\n                \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n                \"elasticloadbalancing:DescribeTargetHealth\",\n                \"elasticloadbalancing:DescribeTags\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"cognito-idp:DescribeUserPoolClient\",\n                \"acm:ListCertificates\",\n                \"acm:DescribeCertificate\",\n                \"iam:ListServerCertificates\",\n                \"iam:GetServerCertificate\",\n                \"waf-regional:GetWebACL\",\n                \"waf-regional:GetWebACLForResource\",\n                \"waf-regional:AssociateWebACL\",\n                \"waf-regional:DisassociateWebACL\",\n                \"wafv2:GetWebACL\",\n                \"wafv2:GetWebACLForResource\",\n                \"wafv2:AssociateWebACL\",\n                \"wafv2:DisassociateWebACL\",\n                \"shield:GetSubscriptionState\",\n                \"shield:DescribeProtection\",\n                \"shield:CreateProtection\",\n                \"shield:DeleteProtection\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AuthorizeSecurityGroupIngress\",\n                \"ec2:RevokeSecurityGroupIngress\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateSecurityGroup\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"ec2:CreateAction\": \"CreateSecurityGroup\"\n                },\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\",\n                \"ec2:DeleteTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AuthorizeSecurityGroupIngress\",\n                \"ec2:RevokeSecurityGroupIngress\",\n                \"ec2:DeleteSecurityGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:CreateLoadBalancer\",\n                \"elasticloadbalancing:CreateTargetGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:CreateListener\",\n                \"elasticloadbalancing:DeleteListener\",\n                \"elasticloadbalancing:CreateRule\",\n                \"elasticloadbalancing:DeleteRule\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:AddTags\",\n                \"elasticloadbalancing:RemoveTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n            ],\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:AddTags\",\n                \"elasticloadbalancing:RemoveTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n                \"elasticloadbalancing:SetIpAddressType\",\n                \"elasticloadbalancing:SetSecurityGroups\",\n                \"elasticloadbalancing:SetSubnets\",\n                \"elasticloadbalancing:DeleteLoadBalancer\",\n                \"elasticloadbalancing:ModifyTargetGroup\",\n                \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n                \"elasticloadbalancing:DeleteTargetGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:RegisterTargets\",\n                \"elasticloadbalancing:DeregisterTargets\"\n            ],\n            \"Resource\": \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:SetWebAcl\",\n                \"elasticloadbalancing:ModifyListener\",\n                \"elasticloadbalancing:AddListenerCertificates\",\n                \"elasticloadbalancing:RemoveListenerCertificates\",\n                \"elasticloadbalancing:ModifyRule\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:policy/p-3-AWSLoadBalancerControllerIAMPolicy20220812204337160700000001",
                    "description": "",
                    "id": "arn:aws:iam::030813887342:policy/p-3-AWSLoadBalancerControllerIAMPolicy20220812204337160700000001",
                    "name": "p-3-AWSLoadBalancerControllerIAMPolicy20220812204337160700000001",
                    "namePrefix": "p-3-AWSLoadBalancerControllerIAMPolicy",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"iam:CreateServiceLinkedRole\",\"ec2:DescribeAccountAttributes\",\"ec2:DescribeAddresses\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeInternetGateways\",\"ec2:DescribeVpcs\",\"ec2:DescribeSubnets\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeInstances\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeTags\",\"ec2:GetCoipPoolUsage\",\"ec2:DescribeCoipPools\",\"elasticloadbalancing:DescribeLoadBalancers\",\"elasticloadbalancing:DescribeLoadBalancerAttributes\",\"elasticloadbalancing:DescribeListeners\",\"elasticloadbalancing:DescribeListenerCertificates\",\"elasticloadbalancing:DescribeSSLPolicies\",\"elasticloadbalancing:DescribeRules\",\"elasticloadbalancing:DescribeTargetGroups\",\"elasticloadbalancing:DescribeTargetGroupAttributes\",\"elasticloadbalancing:DescribeTargetHealth\",\"elasticloadbalancing:DescribeTags\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"cognito-idp:DescribeUserPoolClient\",\"acm:ListCertificates\",\"acm:DescribeCertificate\",\"iam:ListServerCertificates\",\"iam:GetServerCertificate\",\"waf-regional:GetWebACL\",\"waf-regional:GetWebACLForResource\",\"waf-regional:AssociateWebACL\",\"waf-regional:DisassociateWebACL\",\"wafv2:GetWebACL\",\"wafv2:GetWebACLForResource\",\"wafv2:AssociateWebACL\",\"wafv2:DisassociateWebACL\",\"shield:GetSubscriptionState\",\"shield:DescribeProtection\",\"shield:CreateProtection\",\"shield:DeleteProtection\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:AuthorizeSecurityGroupIngress\",\"ec2:RevokeSecurityGroupIngress\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateSecurityGroup\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"ec2:CreateAction\":\"CreateSecurityGroup\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:CreateTags\",\"ec2:DeleteTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:AuthorizeSecurityGroupIngress\",\"ec2:RevokeSecurityGroupIngress\",\"ec2:DeleteSecurityGroup\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:CreateTargetGroup\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateListener\",\"elasticloadbalancing:DeleteListener\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:DeleteRule\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:AddTags\",\"elasticloadbalancing:RemoveTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:AddTags\",\"elasticloadbalancing:RemoveTags\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"]},{\"Action\":[\"elasticloadbalancing:ModifyLoadBalancerAttributes\",\"elasticloadbalancing:SetIpAddressType\",\"elasticloadbalancing:SetSecurityGroups\",\"elasticloadbalancing:SetSubnets\",\"elasticloadbalancing:DeleteLoadBalancer\",\"elasticloadbalancing:ModifyTargetGroup\",\"elasticloadbalancing:ModifyTargetGroupAttributes\",\"elasticloadbalancing:DeleteTargetGroup\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:RegisterTargets\",\"elasticloadbalancing:DeregisterTargets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"},{\"Action\":[\"elasticloadbalancing:SetWebAcl\",\"elasticloadbalancing:ModifyListener\",\"elasticloadbalancing:AddListenerCertificates\",\"elasticloadbalancing:RemoveListenerCertificates\",\"elasticloadbalancing:ModifyRule\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                    "policyId": "ANPAQOLFGTNXDUHYZW2HG",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "namePrefix": null,
                    "policy": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::msk-aws-provider",
                "custom": true,
                "id": "2c275936-3b8d-4d79-a0fe-28ebef6ab1d4",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::tele-aws-provider",
                "custom": true,
                "id": "8a93fbf2-2243-4c81-8798-3be31bfda4ca",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::model-monitoring-aws-provider",
                "custom": true,
                "id": "a16976e2-e417-402a-9e51-07bd24614a27",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::nitrous-aws-provider",
                "custom": true,
                "id": "31c41e62-293c-41cb-b349-8432c84ec82c",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::connector-sink-aws-provider",
                "custom": true,
                "id": "3cc7c16b-f14f-4caf-9a2f-369ea16085f6",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::local-static-provisioner",
                "custom": false,
                "type": "kubernetes:yaml:ConfigFile",
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3"
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::offline-aggregate-source-aws-provider",
                "custom": true,
                "id": "739626f9-b430-4703-8282-4e46ba9b0dbd",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::milvus-aws-provider",
                "custom": true,
                "id": "a98e4333-c33d-4116-abce-a093e2ecb200",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::redis-aws-provider",
                "custom": true,
                "id": "5e1ff797-2ef0-488a-9b9f-7f4d89f937d2",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:confluent::conf-provider",
                "custom": true,
                "id": "a04ab6f7-c710-478f-b18e-57c5f42d108e",
                "type": "pulumi:providers:confluent",
                "inputs": {
                    "password": "Mohit@Fennel",
                    "username": "mohit@fennel.ai",
                    "version": "0.2.2"
                },
                "outputs": {
                    "password": "Mohit@Fennel",
                    "username": "mohit@fennel.ai",
                    "version": "0.2.2"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "password": null,
                    "username": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aurora-aws-provider",
                "custom": true,
                "id": "134d52f5-7f5e-4454-b1be-748af511a354",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::cache-aws-provider",
                "custom": true,
                "id": "54ec0dc8-ad8a-4494-ba57-cb43e332ab76",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::glue-source-aws-provider",
                "custom": true,
                "id": "40273a30-d6a9-4dc6-a682-d54c3ddb7967",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::docker:image:Image::nitrous-img",
                "custom": false,
                "type": "docker:image:Image",
                "outputs": {
                    "baseImageName": "030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-nitrous-repo-0167734:2380e31f",
                    "digest": "030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-nitrous-repo-0167734:2380e31f-07e8bdaaea64910d8f86c10340f80e029a41e6f747f50e27b26389ba34780930",
                    "id": "030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-nitrous-repo-0167734:2380e31f-07e8bdaaea64910d8f86c10340f80e029a41e6f747f50e27b26389ba34780930",
                    "imageName": "030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-nitrous-repo-0167734:2380e31f-07e8bdaaea64910d8f86c10340f80e029a41e6f747f50e27b26389ba34780930",
                    "registryServer": "https://030813887342.dkr.ecr.us-west-2.amazonaws.com"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3"
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::p-3-postgres-aurora-aws-provider",
                "custom": true,
                "id": "c440de75-6a26-42c1-9ded-c5ddbea8da37",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/policy:Policy::p-3-ebs-driver-policy",
                "custom": true,
                "id": "arn:aws:iam::030813887342:policy/p-3-EbsCsiDriverIAMPolicy20220727184014747600000001",
                "type": "aws:iam/policy:Policy",
                "inputs": {
                    "__defaults": [
                        "path"
                    ],
                    "namePrefix": "p-3-EbsCsiDriverIAMPolicy",
                    "path": "/",
                    "policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateSnapshot\",\n        \"ec2:AttachVolume\",\n        \"ec2:DetachVolume\",\n        \"ec2:ModifyVolume\",\n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeSnapshots\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeVolumes\",\n        \"ec2:DescribeVolumesModifications\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ec2:*:*:volume/*\",\n        \"arn:aws:ec2:*:*:snapshot/*\"\n      ],\n      \"Condition\": {\n        \"StringEquals\": {\n          \"ec2:CreateAction\": [\n            \"CreateVolume\",\n            \"CreateSnapshot\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:ec2:*:*:volume/*\",\n        \"arn:aws:ec2:*:*:snapshot/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateVolume\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:RequestTag/ebs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateVolume\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:RequestTag/CSIVolumeName\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:CreateVolume\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"aws:RequestTag/kubernetes.io/cluster/*\": \"owned\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteVolume\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/ebs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteVolume\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/CSIVolumeName\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteVolume\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/kubernetes.io/cluster/*\": \"owned\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteSnapshot\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/CSIVolumeSnapshotName\": \"*\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteSnapshot\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringLike\": {\n          \"ec2:ResourceTag/ebs.csi.aws.com/cluster\": \"true\"\n        }\n      }\n    }\n  ]\n}\n\n"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:policy/p-3-EbsCsiDriverIAMPolicy20220727184014747600000001",
                    "description": "",
                    "id": "arn:aws:iam::030813887342:policy/p-3-EbsCsiDriverIAMPolicy20220727184014747600000001",
                    "name": "p-3-EbsCsiDriverIAMPolicy20220727184014747600000001",
                    "namePrefix": "p-3-EbsCsiDriverIAMPolicy",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"ec2:CreateSnapshot\",\"ec2:AttachVolume\",\"ec2:DetachVolume\",\"ec2:ModifyVolume\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeInstances\",\"ec2:DescribeSnapshots\",\"ec2:DescribeTags\",\"ec2:DescribeVolumes\",\"ec2:DescribeVolumesModifications\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateTags\"],\"Condition\":{\"StringEquals\":{\"ec2:CreateAction\":[\"CreateVolume\",\"CreateSnapshot\"]}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"]},{\"Action\":[\"ec2:DeleteTags\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:ec2:*:*:volume/*\",\"arn:aws:ec2:*:*:snapshot/*\"]},{\"Action\":[\"ec2:CreateVolume\"],\"Condition\":{\"StringLike\":{\"aws:RequestTag/ebs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateVolume\"],\"Condition\":{\"StringLike\":{\"aws:RequestTag/CSIVolumeName\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateVolume\"],\"Condition\":{\"StringLike\":{\"aws:RequestTag/kubernetes.io/cluster/*\":\"owned\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:DeleteVolume\"],\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/ebs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:DeleteVolume\"],\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/CSIVolumeName\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:DeleteVolume\"],\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/kubernetes.io/cluster/*\":\"owned\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:DeleteSnapshot\"],\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/CSIVolumeSnapshotName\":\"*\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:DeleteSnapshot\"],\"Condition\":{\"StringLike\":{\"ec2:ResourceTag/ebs.csi.aws.com/cluster\":\"true\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                    "policyId": "ANPAQOLFGTNXELA4Y3FD2",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "namePrefix": null,
                    "policy": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::prom-aws-provider",
                "custom": true,
                "id": "6ac4bcaa-972b-450a-8d15-a9ee3bbd479b",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-eks-sg-rule",
                "custom": true,
                "id": "sgrule-60827193",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-60827193",
                    "protocol": "tcp",
                    "securityGroupId": "sg-02576e409d44907ef",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::command:local:Command::waiter",
                "custom": true,
                "id": "33438c6f0142e",
                "type": "command:local:Command",
                "inputs": {
                    "create": "kubectl wait deploy/emissary-apiext --for condition=available -n emissary-system"
                },
                "outputs": {
                    "create": "kubectl wait deploy/emissary-apiext --for condition=available -n emissary-system",
                    "stderr": "",
                    "stdout": "deployment.apps/emissary-apiext condition met"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3::285f7ea0-7054-487d-953b-f9ac8882f13f",
                "propertyDependencies": {
                    "create": null
                },
                "customTimeouts": {
                    "create": 3600
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-3-eks-cluster-eksExtApiServerClusterIngressRule",
                "custom": true,
                "id": "sgrule-2987946037",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane",
                    "fromPort": 443,
                    "protocol": "tcp",
                    "securityGroupId": "sg-0269fa98ddd9ca37d",
                    "sourceSecurityGroupId": "sg-05b57e1a5ad5c4ea1",
                    "toPort": 443,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane",
                    "fromPort": 443,
                    "id": "sgrule-2987946037",
                    "protocol": "tcp",
                    "securityGroupId": "sg-0269fa98ddd9ca37d",
                    "self": false,
                    "sourceSecurityGroupId": "sg-05b57e1a5ad5c4ea1",
                    "toPort": 443,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-3-eks-cluster-eksClusterIngressRule",
                "custom": true,
                "id": "sgrule-634280247",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "description": "Allow pods to communicate with the cluster API Server",
                    "fromPort": 443,
                    "protocol": "tcp",
                    "securityGroupId": "sg-05b57e1a5ad5c4ea1",
                    "sourceSecurityGroupId": "sg-0269fa98ddd9ca37d",
                    "toPort": 443,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "description": "Allow pods to communicate with the cluster API Server",
                    "fromPort": 443,
                    "id": "sgrule-634280247",
                    "protocol": "tcp",
                    "securityGroupId": "sg-05b57e1a5ad5c4ea1",
                    "self": false,
                    "sourceSecurityGroupId": "sg-0269fa98ddd9ca37d",
                    "toPort": 443,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-3-eks-cluster-eksNodeInternetEgressRule",
                "custom": true,
                "id": "sgrule-1623821523",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "0.0.0.0/0"
                    ],
                    "description": "Allow internet access.",
                    "fromPort": 0,
                    "protocol": "-1",
                    "securityGroupId": "sg-0269fa98ddd9ca37d",
                    "toPort": 0,
                    "type": "egress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "0.0.0.0/0"
                    ],
                    "description": "Allow internet access.",
                    "fromPort": 0,
                    "id": "sgrule-1623821523",
                    "protocol": "-1",
                    "securityGroupId": "sg-0269fa98ddd9ca37d",
                    "self": false,
                    "toPort": 0,
                    "type": "egress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-3-eks-cluster-eksNodeClusterIngressRule",
                "custom": true,
                "id": "sgrule-184967271",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "description": "Allow worker Kubelets and pods to receive communication from the cluster control plane",
                    "fromPort": 1025,
                    "protocol": "tcp",
                    "securityGroupId": "sg-0269fa98ddd9ca37d",
                    "sourceSecurityGroupId": "sg-05b57e1a5ad5c4ea1",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "description": "Allow worker Kubelets and pods to receive communication from the cluster control plane",
                    "fromPort": 1025,
                    "id": "sgrule-184967271",
                    "protocol": "tcp",
                    "securityGroupId": "sg-0269fa98ddd9ca37d",
                    "self": false,
                    "sourceSecurityGroupId": "sg-05b57e1a5ad5c4ea1",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-3-eks-cluster-eksNodeIngressRule",
                "custom": true,
                "id": "sgrule-862419176",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "description": "Allow nodes to communicate with each other",
                    "fromPort": 0,
                    "protocol": "-1",
                    "securityGroupId": "sg-0269fa98ddd9ca37d",
                    "self": true,
                    "toPort": 0,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "description": "Allow nodes to communicate with each other",
                    "fromPort": 0,
                    "id": "sgrule-862419176",
                    "protocol": "-1",
                    "securityGroupId": "sg-0269fa98ddd9ca37d",
                    "self": true,
                    "toPort": 0,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                    ],
                    "self": null,
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-lbc-role",
                "custom": true,
                "id": "p-3-aws-load-balancer-controller20220812204338173100000002",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "path"
                    ],
                    "assumeRolePolicy": "{\n             \"Version\": \"2012-10-17\",\n             \"Statement\": [\n               {\n                 \"Effect\": \"Allow\",\n                 \"Principal\": {\n                   \"Federated\": \"arn:aws:iam::030813887342:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195\"\n                 },\n                 \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n                 \"Condition\": {\n                   \"StringEquals\": {\n                     \"oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195:sub\": \"system:serviceaccount:kube-system:aws-load-balancer-controller\",\n                     \"oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195:aud\": \"sts.amazonaws.com\"\n                   }\n                 }\n               }\n             ]\n           }",
                    "forceDetachPolicies": false,
                    "maxSessionDuration": 3600,
                    "namePrefix": "p-3-aws-load-balancer-controller",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:role/p-3-aws-load-balancer-controller20220812204338173100000002",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::030813887342:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195:sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller\",\"oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195:aud\":\"sts.amazonaws.com\"}}}]}",
                    "createDate": "2022-08-12T20:43:38Z",
                    "description": "",
                    "forceDetachPolicies": false,
                    "id": "p-3-aws-load-balancer-controller20220812204338173100000002",
                    "inlinePolicies": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "p-3-aws-load-balancer-controller20220812204338173100000002",
                    "namePrefix": "p-3-aws-load-balancer-controller",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAQOLFGTNXCCHOJ2OZK"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "assumeRolePolicy": null,
                    "namePrefix": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-autoscaler-role",
                "custom": true,
                "id": "p-3-autoscaler-role20220621013447476800000001",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "path"
                    ],
                    "assumeRolePolicy": "{\n                 \"Version\": \"2012-10-17\",\n                 \"Statement\": [\n                   {\n                     \"Effect\": \"Allow\",\n                     \"Principal\": {\n                       \"Federated\": \"arn:aws:iam::030813887342:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195\"\n                     },\n                     \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n                     \"Condition\": {\n                       \"StringEquals\": {\n                         \"oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195:sub\": \"system:serviceaccount:kube-system:cluster-autoscaler\"\n                       }\n                     }\n                   }\n                 ]\n               }",
                    "description": "IAM role for EKS cluster autoscaler",
                    "forceDetachPolicies": false,
                    "inlinePolicies": [
                        {
                            "__defaults": [],
                            "name": "eks-cluster-autoscaler-policy",
                            "policy": "{\n                    \"Version\": \"2012-10-17\",\n                    \"Statement\": [\n                        {\n                            \"Effect\": \"Allow\",\n                            \"Action\": [\n                                \"autoscaling:SetDesiredCapacity\",\n                                \"autoscaling:TerminateInstanceInAutoScalingGroup\"\n                            ],\n                            \"Resource\": \"*\",\n                            \"Condition\": {\n                                \"StringEquals\": {\n                                    \"aws:ResourceTag/k8s.io/cluster-autoscaler/p-3-eks-cluster-eksCluster-fd821aa\": \"owned\"\n                                }\n                            }\n                        },\n                        {\n                            \"Effect\": \"Allow\",\n                            \"Action\": [\n                                \"autoscaling:DescribeAutoScalingGroups\",\n                                \"autoscaling:DescribeAutoScalingInstances\",\n                                \"autoscaling:DescribeInstances\",\n                                \"autoscaling:DescribeLaunchConfigurations\",\n                                \"autoscaling:DescribeTags\",\n                                \"autoscaling:DescribeScalingActivities\",\n                                \"ec2:DescribeLaunchTemplateVersions\",\n                                \"ec2:DescribeInstanceTypes\",\n                                \"ec2:DescribeImages\",\n                                \"ec2:GetInstanceTypesFromInstanceRequirements\",\n                                \"eks:DescribeNodegroup\"\n                            ],\n                            \"Resource\": \"*\"\n                        }\n                    ]\n                }"
                        }
                    ],
                    "maxSessionDuration": 3600,
                    "namePrefix": "p-3-autoscaler-role",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:role/p-3-autoscaler-role20220621013447476800000001",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::030813887342:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195:sub\":\"system:serviceaccount:kube-system:cluster-autoscaler\"}}}]}",
                    "createDate": "2022-06-21T01:34:47Z",
                    "description": "IAM role for EKS cluster autoscaler",
                    "forceDetachPolicies": false,
                    "id": "p-3-autoscaler-role20220621013447476800000001",
                    "inlinePolicies": [
                        {
                            "name": "eks-cluster-autoscaler-policy",
                            "policy": "{\n                    \"Version\": \"2012-10-17\",\n                    \"Statement\": [\n                        {\n                            \"Effect\": \"Allow\",\n                            \"Action\": [\n                                \"autoscaling:SetDesiredCapacity\",\n                                \"autoscaling:TerminateInstanceInAutoScalingGroup\"\n                            ],\n                            \"Resource\": \"*\",\n                            \"Condition\": {\n                                \"StringEquals\": {\n                                    \"aws:ResourceTag/k8s.io/cluster-autoscaler/p-3-eks-cluster-eksCluster-fd821aa\": \"owned\"\n                                }\n                            }\n                        },\n                        {\n                            \"Effect\": \"Allow\",\n                            \"Action\": [\n                                \"autoscaling:DescribeAutoScalingGroups\",\n                                \"autoscaling:DescribeAutoScalingInstances\",\n                                \"autoscaling:DescribeInstances\",\n                                \"autoscaling:DescribeLaunchConfigurations\",\n                                \"autoscaling:DescribeTags\",\n                                \"autoscaling:DescribeScalingActivities\",\n                                \"ec2:DescribeLaunchTemplateVersions\",\n                                \"ec2:DescribeInstanceTypes\",\n                                \"ec2:DescribeImages\",\n                                \"ec2:GetInstanceTypesFromInstanceRequirements\",\n                                \"eks:DescribeNodegroup\"\n                            ],\n                            \"Resource\": \"*\"\n                        }\n                    ]\n                }"
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "p-3-autoscaler-role20220621013447476800000001",
                    "namePrefix": "p-3-autoscaler-role",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAQOLFGTNXP2TO7G743"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "assumeRolePolicy": null,
                    "description": null,
                    "inlinePolicies": null,
                    "namePrefix": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:cloudwatch/logGroup:LogGroup::msk-log-group",
                "custom": true,
                "id": "/aws/msk/p-3-brokers",
                "type": "aws:cloudwatch/logGroup:LogGroup",
                "inputs": {
                    "__defaults": [],
                    "name": "/aws/msk/p-3-brokers",
                    "retentionInDays": 5
                },
                "outputs": {
                    "arn": "arn:aws:logs:us-west-2:030813887342:log-group:/aws/msk/p-3-brokers",
                    "id": "/aws/msk/p-3-brokers",
                    "kmsKeyId": "",
                    "name": "/aws/msk/p-3-brokers",
                    "retentionInDays": 5,
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::msk-aws-provider::2c275936-3b8d-4d79-a0fe-28ebef6ab1d4",
                "propertyDependencies": {
                    "name": null,
                    "retentionInDays": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::msk-sg",
                "custom": true,
                "id": "sg-0ddf7758471767008",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "revokeRulesOnDelete"
                    ],
                    "description": "Managed by Pulumi",
                    "namePrefix": "p-3-msk-sg-",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:security-group/sg-0ddf7758471767008",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-0ddf7758471767008",
                    "ingress": [],
                    "name": "p-3-msk-sg-20220823213322517100000001",
                    "namePrefix": "p-3-msk-sg-",
                    "ownerId": "030813887342",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::msk-aws-provider::2c275936-3b8d-4d79-a0fe-28ebef6ab1d4",
                "propertyDependencies": {
                    "description": null,
                    "namePrefix": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:msk/configuration:Configuration::msk-cluster-config",
                "custom": true,
                "id": "arn:aws:kafka:us-west-2:030813887342:configuration/p-3-cluster-config/5c66dfd7-9e19-49b4-a321-2987437729b5-10",
                "type": "aws:msk/configuration:Configuration",
                "inputs": {
                    "__defaults": [],
                    "description": "plane 3 kafka broker configuration",
                    "kafkaVersions": [
                        "2.6.2"
                    ],
                    "name": "p-3-cluster-config",
                    "serverProperties": "replica.selector.class = org.apache.kafka.common.replica.RackAwareReplicaSelector"
                },
                "outputs": {
                    "arn": "arn:aws:kafka:us-west-2:030813887342:configuration/p-3-cluster-config/5c66dfd7-9e19-49b4-a321-2987437729b5-10",
                    "description": "plane 3 kafka broker configuration",
                    "id": "arn:aws:kafka:us-west-2:030813887342:configuration/p-3-cluster-config/5c66dfd7-9e19-49b4-a321-2987437729b5-10",
                    "kafkaVersions": [
                        "2.6.2"
                    ],
                    "latestRevision": 2,
                    "name": "p-3-cluster-config",
                    "serverProperties": "replica.selector.class = org.apache.kafka.common.replica.RackAwareReplicaSelector"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::msk-aws-provider::2c275936-3b8d-4d79-a0fe-28ebef6ab1d4",
                "propertyDependencies": {
                    "description": null,
                    "kafkaVersions": null,
                    "name": null,
                    "serverProperties": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:kms/key:Key::msk-key",
                "custom": true,
                "id": "7fe4b3be-06c2-4bd1-a63d-a669196ca9cc",
                "type": "aws:kms/key:Key",
                "inputs": {
                    "__defaults": [
                        "bypassPolicyLockoutSafetyCheck",
                        "customerMasterKeySpec",
                        "enableKeyRotation",
                        "isEnabled",
                        "keyUsage"
                    ],
                    "bypassPolicyLockoutSafetyCheck": false,
                    "customerMasterKeySpec": "SYMMETRIC_DEFAULT",
                    "description": "",
                    "enableKeyRotation": false,
                    "isEnabled": true,
                    "keyUsage": "ENCRYPT_DECRYPT"
                },
                "outputs": {
                    "arn": "arn:aws:kms:us-west-2:030813887342:key/7fe4b3be-06c2-4bd1-a63d-a669196ca9cc",
                    "bypassPolicyLockoutSafetyCheck": false,
                    "customerMasterKeySpec": "SYMMETRIC_DEFAULT",
                    "description": "",
                    "enableKeyRotation": false,
                    "id": "7fe4b3be-06c2-4bd1-a63d-a669196ca9cc",
                    "isEnabled": true,
                    "keyId": "7fe4b3be-06c2-4bd1-a63d-a669196ca9cc",
                    "keyUsage": "ENCRYPT_DECRYPT",
                    "multiRegion": false,
                    "policy": "{\"Id\":\"key-default-1\",\"Statement\":[{\"Action\":\"kms:*\",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::030813887342:root\"},\"Resource\":\"*\",\"Sid\":\"Enable IAM User Permissions\"}],\"Version\":\"2012-10-17\"}",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::msk-aws-provider::2c275936-3b8d-4d79-a0fe-28ebef6ab1d4",
                "propertyDependencies": {
                    "description": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:msk/configuration:Configuration::msk-cluster-config-2",
                "custom": true,
                "id": "arn:aws:kafka:us-west-2:030813887342:configuration/p-3-cluster-config-2/c72abaa8-ebb1-4357-81b2-f5d30f8bda26-10",
                "type": "aws:msk/configuration:Configuration",
                "inputs": {
                    "__defaults": [],
                    "description": "plane 3 kafka broker configuration",
                    "kafkaVersions": [
                        "2.6.2",
                        "2.7.0"
                    ],
                    "name": "p-3-cluster-config-2",
                    "serverProperties": "replica.selector.class = org.apache.kafka.common.replica.RackAwareReplicaSelector"
                },
                "outputs": {
                    "arn": "arn:aws:kafka:us-west-2:030813887342:configuration/p-3-cluster-config-2/c72abaa8-ebb1-4357-81b2-f5d30f8bda26-10",
                    "description": "plane 3 kafka broker configuration",
                    "id": "arn:aws:kafka:us-west-2:030813887342:configuration/p-3-cluster-config-2/c72abaa8-ebb1-4357-81b2-f5d30f8bda26-10",
                    "kafkaVersions": [
                        "2.6.2",
                        "2.7.0"
                    ],
                    "latestRevision": 1,
                    "name": "p-3-cluster-config-2",
                    "serverProperties": "replica.selector.class = org.apache.kafka.common.replica.RackAwareReplicaSelector"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::msk-aws-provider::2c275936-3b8d-4d79-a0fe-28ebef6ab1d4",
                "propertyDependencies": {
                    "description": null,
                    "kafkaVersions": null,
                    "name": null,
                    "serverProperties": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-eks-k8s",
                "custom": true,
                "id": "6a9ff21e-85d1-4fe3-9de4-3e2262414e8c",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\",\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1alpha1\",\"command\":\"aws\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"]}}}]}",
                    "version": "3.16.0"
                },
                "outputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\",\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1alpha1\",\"command\":\"aws\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"]}}}]}",
                    "version": "3.16.0"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider",
                "custom": true,
                "id": "8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\",\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1alpha1\",\"command\":\"aws\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"]}}}]}",
                    "version": "3.16.0"
                },
                "outputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\",\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1alpha1\",\"command\":\"aws\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"]}}}]}",
                    "version": "3.16.0"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:eks::default",
                "custom": true,
                "id": "1da20d10-d4ee-446a-b946-89f9f58ee49f",
                "type": "pulumi:providers:eks"
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-csi-driver-role",
                "custom": true,
                "id": "p-3-ebs-csi-controller-sa20220727184016758800000002",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "path"
                    ],
                    "assumeRolePolicy": "{\n             \"Version\": \"2012-10-17\",\n             \"Statement\": [\n               {\n                 \"Effect\": \"Allow\",\n                 \"Principal\": {\n                   \"Federated\": \"arn:aws:iam::030813887342:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195\"\n                 },\n                 \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n                 \"Condition\": {\n                   \"StringEquals\": {\n                     \"oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195:sub\": \"system:serviceaccount:kube-system:ebs-csi-controller-sa\",\n                     \"oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195:aud\": \"sts.amazonaws.com\"\n                   }\n                 }\n               }\n             ]\n           }",
                    "forceDetachPolicies": false,
                    "maxSessionDuration": 3600,
                    "namePrefix": "p-3-ebs-csi-controller-sa",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:role/p-3-ebs-csi-controller-sa20220727184016758800000002",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::030813887342:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195:sub\":\"system:serviceaccount:kube-system:ebs-csi-controller-sa\",\"oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195:aud\":\"sts.amazonaws.com\"}}}]}",
                    "createDate": "2022-07-27T18:40:17Z",
                    "description": "",
                    "forceDetachPolicies": false,
                    "id": "p-3-ebs-csi-controller-sa20220727184016758800000002",
                    "inlinePolicies": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "p-3-ebs-csi-controller-sa20220727184016758800000002",
                    "namePrefix": "p-3-ebs-csi-controller-sa",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAQOLFGTNXEFDFCTNF7"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "assumeRolePolicy": null,
                    "namePrefix": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/policy:Policy::p-3-otel-collector-policy",
                "custom": true,
                "id": "arn:aws:iam::030813887342:policy/p-3-AWSDistroOpenTelemetryPolicy-20220322025614485200000001",
                "type": "aws:iam/policy:Policy",
                "inputs": {
                    "__defaults": [
                        "path"
                    ],
                    "namePrefix": "p-3-AWSDistroOpenTelemetryPolicy-",
                    "path": "/",
                    "policy": "{\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n            {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                    \"logs:PutLogEvents\",\n                    \"logs:CreateLogGroup\",\n                    \"logs:CreateLogStream\",\n                    \"logs:DescribeLogStreams\",\n                    \"logs:DescribeLogGroups\",\n                    \"cloudwatch:PutMetricData\",\n                    \"xray:PutTraceSegments\",\n                    \"xray:PutTelemetryRecords\",\n                    \"xray:GetSamplingRules\",\n                    \"xray:GetSamplingTargets\",\n                    \"xray:GetSamplingStatisticSummaries\",\n                    \"ssm:GetParameters\",\n                    \"aps:RemoteWrite\"\n                ],\n                \"Resource\": \"*\"\n            }\n        ]\n    }\n    "
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:policy/p-3-AWSDistroOpenTelemetryPolicy-20220322025614485200000001",
                    "description": "",
                    "id": "arn:aws:iam::030813887342:policy/p-3-AWSDistroOpenTelemetryPolicy-20220322025614485200000001",
                    "name": "p-3-AWSDistroOpenTelemetryPolicy-20220322025614485200000001",
                    "namePrefix": "p-3-AWSDistroOpenTelemetryPolicy-",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogGroup\",\"logs:CreateLogStream\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"cloudwatch:PutMetricData\",\"xray:PutTraceSegments\",\"xray:PutTelemetryRecords\",\"xray:GetSamplingRules\",\"xray:GetSamplingTargets\",\"xray:GetSamplingStatisticSummaries\",\"ssm:GetParameters\",\"aps:RemoteWrite\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                    "policyId": "ANPAQOLFGTNXKZ6NH37F5",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::tele-aws-provider::8a93fbf2-2243-4c81-8798-3be31bfda4ca",
                "propertyDependencies": {
                    "namePrefix": null,
                    "policy": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ecr/repository:Repository::p-3-model-monitoring-repo",
                "custom": true,
                "id": "p-3-model-monitoring-repo-c78e5db",
                "type": "aws:ecr/repository:Repository",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "imageScanningConfiguration": {
                        "__defaults": [],
                        "scanOnPush": true
                    },
                    "imageTagMutability": "MUTABLE",
                    "name": "p-3-model-monitoring-repo-c78e5db"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"delete\":1200000000000}}",
                    "arn": "arn:aws:ecr:us-west-2:030813887342:repository/p-3-model-monitoring-repo-c78e5db",
                    "encryptionConfigurations": [
                        {
                            "encryptionType": "AES256",
                            "kmsKey": ""
                        }
                    ],
                    "id": "p-3-model-monitoring-repo-c78e5db",
                    "imageScanningConfiguration": {
                        "scanOnPush": true
                    },
                    "imageTagMutability": "MUTABLE",
                    "name": "p-3-model-monitoring-repo-c78e5db",
                    "registryId": "030813887342",
                    "repositoryUrl": "030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-model-monitoring-repo-c78e5db",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::model-monitoring-aws-provider::a16976e2-e417-402a-9e51-07bd24614a27",
                "propertyDependencies": {
                    "imageScanningConfiguration": null,
                    "imageTagMutability": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::nitrous-p-3-backup",
                "custom": true,
                "id": "nitrous-p-3-backup",
                "type": "aws:s3/bucket:Bucket",
                "inputs": {
                    "__defaults": [],
                    "acl": "private",
                    "bucket": "nitrous-p-3-backup",
                    "forceDestroy": true
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::nitrous-p-3-backup",
                    "bucket": "nitrous-p-3-backup",
                    "bucketDomainName": "nitrous-p-3-backup.s3.amazonaws.com",
                    "bucketRegionalDomainName": "nitrous-p-3-backup.s3.us-west-2.amazonaws.com",
                    "corsRules": [],
                    "forceDestroy": true,
                    "grants": [],
                    "hostedZoneId": "Z3BJ6K6RIION7M",
                    "id": "nitrous-p-3-backup",
                    "lifecycleRules": [],
                    "loggings": [],
                    "objectLockConfiguration": null,
                    "region": "us-west-2",
                    "replicationConfiguration": null,
                    "requestPayer": "BucketOwner",
                    "serverSideEncryptionConfiguration": null,
                    "tags": {},
                    "tagsAll": {},
                    "versioning": {
                        "enabled": false,
                        "mfaDelete": false
                    },
                    "website": null
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::nitrous-aws-provider::31c41e62-293c-41cb-b349-8432c84ec82c",
                "propertyDependencies": {
                    "acl": null,
                    "bucket": null,
                    "forceDestroy": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ecr/repository:Repository::p-3-nitrous-repo",
                "custom": true,
                "id": "p-3-nitrous-repo-0167734",
                "type": "aws:ecr/repository:Repository",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "imageScanningConfiguration": {
                        "__defaults": [],
                        "scanOnPush": true
                    },
                    "imageTagMutability": "MUTABLE",
                    "name": "p-3-nitrous-repo-0167734"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"delete\":1200000000000}}",
                    "arn": "arn:aws:ecr:us-west-2:030813887342:repository/p-3-nitrous-repo-0167734",
                    "encryptionConfigurations": [
                        {
                            "encryptionType": "AES256",
                            "kmsKey": ""
                        }
                    ],
                    "id": "p-3-nitrous-repo-0167734",
                    "imageScanningConfiguration": {
                        "scanOnPush": true
                    },
                    "imageTagMutability": "MUTABLE",
                    "name": "p-3-nitrous-repo-0167734",
                    "registryId": "030813887342",
                    "repositoryUrl": "030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-nitrous-repo-0167734",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::nitrous-aws-provider::31c41e62-293c-41cb-b349-8432c84ec82c",
                "propertyDependencies": {
                    "imageScanningConfiguration": null,
                    "imageTagMutability": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::conn-sink-bucket",
                "custom": true,
                "id": "p-3-training-data",
                "type": "aws:s3/bucket:Bucket",
                "inputs": {
                    "__defaults": [],
                    "acl": "private",
                    "bucket": "p-3-training-data",
                    "forceDestroy": true
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::p-3-training-data",
                    "bucket": "p-3-training-data",
                    "bucketDomainName": "p-3-training-data.s3.amazonaws.com",
                    "bucketRegionalDomainName": "p-3-training-data.s3.us-west-2.amazonaws.com",
                    "corsRules": [],
                    "forceDestroy": true,
                    "grants": [],
                    "hostedZoneId": "Z3BJ6K6RIION7M",
                    "id": "p-3-training-data",
                    "lifecycleRules": [],
                    "loggings": [],
                    "objectLockConfiguration": null,
                    "region": "us-west-2",
                    "replicationConfiguration": null,
                    "requestPayer": "BucketOwner",
                    "serverSideEncryptionConfiguration": null,
                    "tags": {},
                    "tagsAll": {},
                    "versioning": {
                        "enabled": false,
                        "mfaDelete": false
                    },
                    "website": null
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::connector-sink-aws-provider::3cc7c16b-f14f-4caf-9a2f-369ea16085f6",
                "propertyDependencies": {
                    "acl": null,
                    "bucket": null,
                    "forceDestroy": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::p-3-offline-aggregate-source-bucket",
                "custom": true,
                "id": "p-3-offline-aggregate-source",
                "type": "aws:s3/bucket:Bucket",
                "inputs": {
                    "__defaults": [],
                    "acl": "private",
                    "bucket": "p-3-offline-aggregate-source",
                    "forceDestroy": true
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::p-3-offline-aggregate-source",
                    "bucket": "p-3-offline-aggregate-source",
                    "bucketDomainName": "p-3-offline-aggregate-source.s3.amazonaws.com",
                    "bucketRegionalDomainName": "p-3-offline-aggregate-source.s3.us-west-2.amazonaws.com",
                    "corsRules": [],
                    "forceDestroy": true,
                    "grants": [],
                    "hostedZoneId": "Z3BJ6K6RIION7M",
                    "id": "p-3-offline-aggregate-source",
                    "lifecycleRules": [],
                    "loggings": [],
                    "objectLockConfiguration": null,
                    "region": "us-west-2",
                    "replicationConfiguration": null,
                    "requestPayer": "BucketOwner",
                    "serverSideEncryptionConfiguration": null,
                    "tags": {},
                    "tagsAll": {},
                    "versioning": {
                        "enabled": false,
                        "mfaDelete": false
                    },
                    "website": null
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::offline-aggregate-source-aws-provider::739626f9-b430-4703-8282-4e46ba9b0dbd",
                "propertyDependencies": {
                    "acl": null,
                    "bucket": null,
                    "forceDestroy": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/user:User::milvus-p-3",
                "custom": true,
                "id": "p-3-milvus-user",
                "type": "aws:iam/user:User",
                "inputs": {
                    "__defaults": [
                        "forceDestroy",
                        "path"
                    ],
                    "forceDestroy": false,
                    "name": "p-3-milvus-user",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:user/p-3-milvus-user",
                    "forceDestroy": false,
                    "id": "p-3-milvus-user",
                    "name": "p-3-milvus-user",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AIDAQOLFGTNXJPQAMCAQ7"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::milvus-aws-provider::a98e4333-c33d-4116-abce-a093e2ecb200",
                "propertyDependencies": {
                    "name": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-redis-sg",
                "custom": true,
                "id": "sg-09e571f0713759de2",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "revokeRulesOnDelete"
                    ],
                    "description": "Managed by Pulumi",
                    "namePrefix": "p-3-redis-sg-",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:security-group/sg-09e571f0713759de2",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-09e571f0713759de2",
                    "ingress": [],
                    "name": "p-3-redis-sg-20220322025716251800000001",
                    "namePrefix": "p-3-redis-sg-",
                    "ownerId": "030813887342",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::redis-aws-provider::5e1ff797-2ef0-488a-9b9f-7f4d89f937d2",
                "propertyDependencies": {
                    "description": null,
                    "namePrefix": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::confluent:index/confluentEnvironment:ConfluentEnvironment::conf-env",
                "custom": true,
                "id": "env-ry1w0",
                "type": "confluent:index/confluentEnvironment:ConfluentEnvironment",
                "inputs": {
                    "__defaults": [],
                    "name": "plane-3"
                },
                "outputs": {
                    "id": "env-ry1w0",
                    "name": "plane-3"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:confluent::conf-provider::a04ab6f7-c710-478f-b18e-57c5f42d108e",
                "propertyDependencies": {
                    "name": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-db-sg",
                "custom": true,
                "id": "sg-05840b7dcfd0ec43f",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "revokeRulesOnDelete"
                    ],
                    "description": "Managed by Pulumi",
                    "namePrefix": "p-3-db-sg-",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:security-group/sg-05840b7dcfd0ec43f",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-05840b7dcfd0ec43f",
                    "ingress": [],
                    "name": "p-3-db-sg-20220322025716384800000001",
                    "namePrefix": "p-3-db-sg-",
                    "ownerId": "030813887342",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aurora-aws-provider::134d52f5-7f5e-4454-b1be-748af511a354",
                "propertyDependencies": {
                    "description": null,
                    "namePrefix": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:elasticache/parameterGroup:ParameterGroup::p-3-cache-pg",
                "custom": true,
                "id": "p-3-cache-pg-e78f834",
                "type": "aws:elasticache/parameterGroup:ParameterGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Managed by Pulumi",
                    "family": "redis6.x",
                    "name": "p-3-cache-pg-e78f834",
                    "parameters": [
                        {
                            "__defaults": [],
                            "name": "maxmemory-policy",
                            "value": "allkeys-lru"
                        },
                        {
                            "__defaults": [],
                            "name": "cluster-enabled",
                            "value": "yes"
                        }
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:elasticache:us-west-2:030813887342:parametergroup:p-3-cache-pg-e78f834",
                    "description": "Managed by Pulumi",
                    "family": "redis6.x",
                    "id": "p-3-cache-pg-e78f834",
                    "name": "p-3-cache-pg-e78f834",
                    "parameters": [
                        {
                            "name": "cluster-enabled",
                            "value": "yes"
                        },
                        {
                            "name": "maxmemory-policy",
                            "value": "allkeys-lru"
                        }
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::cache-aws-provider::54ec0dc8-ad8a-4494-ba57-cb43e332ab76",
                "propertyDependencies": {
                    "description": null,
                    "family": null,
                    "parameters": null,
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-cache-sg",
                "custom": true,
                "id": "sg-05be6e341ac459146",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "name",
                        "revokeRulesOnDelete"
                    ],
                    "description": "Managed by Pulumi",
                    "name": "p-3-cache-sg-c30b840",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:security-group/sg-05be6e341ac459146",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-05be6e341ac459146",
                    "ingress": [],
                    "name": "p-3-cache-sg-c30b840",
                    "namePrefix": "",
                    "ownerId": "030813887342",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::cache-aws-provider::54ec0dc8-ad8a-4494-ba57-cb43e332ab76",
                "propertyDependencies": {
                    "description": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::glue-source-bucket",
                "custom": true,
                "id": "p-3-gluejob-source",
                "type": "aws:s3/bucket:Bucket",
                "inputs": {
                    "__defaults": [],
                    "acl": "private",
                    "bucket": "p-3-gluejob-source",
                    "forceDestroy": true
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::p-3-gluejob-source",
                    "bucket": "p-3-gluejob-source",
                    "bucketDomainName": "p-3-gluejob-source.s3.amazonaws.com",
                    "bucketRegionalDomainName": "p-3-gluejob-source.s3.us-west-2.amazonaws.com",
                    "corsRules": [],
                    "forceDestroy": true,
                    "grants": [],
                    "hostedZoneId": "Z3BJ6K6RIION7M",
                    "id": "p-3-gluejob-source",
                    "lifecycleRules": [],
                    "loggings": [],
                    "objectLockConfiguration": null,
                    "region": "us-west-2",
                    "replicationConfiguration": null,
                    "requestPayer": "BucketOwner",
                    "serverSideEncryptionConfiguration": null,
                    "tags": {},
                    "tagsAll": {},
                    "versioning": {
                        "enabled": false,
                        "mfaDelete": false
                    },
                    "website": null
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::glue-source-aws-provider::40273a30-d6a9-4dc6-a682-d54c3ddb7967",
                "propertyDependencies": {
                    "acl": null,
                    "bucket": null,
                    "forceDestroy": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:memorydb/subnetGroup:SubnetGroup::p-3-redis-subnet-group",
                "custom": true,
                "id": "p-3-redis-subnet-group-4fc6ede",
                "type": "aws:memorydb/subnetGroup:SubnetGroup",
                "inputs": {
                    "__defaults": [
                        "description",
                        "name"
                    ],
                    "description": "Managed by Terraform",
                    "name": "p-3-redis-subnet-group-4fc6ede",
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:memorydb:us-west-2:030813887342:subnetgroup/p-3-redis-subnet-group-4fc6ede",
                    "description": "Managed by Terraform",
                    "id": "p-3-redis-subnet-group-4fc6ede",
                    "name": "p-3-redis-subnet-group-4fc6ede",
                    "namePrefix": "",
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::redis-aws-provider::5e1ff797-2ef0-488a-9b9f-7f4d89f937d2",
                "propertyDependencies": {
                    "subnetIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ],
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-postgres-db-sg",
                "custom": true,
                "id": "sg-07b6818f917ecc054",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "revokeRulesOnDelete"
                    ],
                    "description": "Managed by Pulumi",
                    "namePrefix": "p-3-postgres-db-sg-",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:security-group/sg-07b6818f917ecc054",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-07b6818f917ecc054",
                    "ingress": [],
                    "name": "p-3-postgres-db-sg-20220714170044843000000001",
                    "namePrefix": "p-3-postgres-db-sg-",
                    "ownerId": "030813887342",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::p-3-postgres-aurora-aws-provider::c440de75-6a26-42c1-9ded-c5ddbea8da37",
                "propertyDependencies": {
                    "description": null,
                    "namePrefix": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:rds/subnetGroup:SubnetGroup::p-3-db-subnetgroup",
                "custom": true,
                "id": "p-3-db-subnetgroup-ffcd8b8",
                "type": "aws:rds/subnetGroup:SubnetGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Subnet group for primary database",
                    "name": "p-3-db-subnetgroup-ffcd8b8",
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:rds:us-west-2:030813887342:subgrp:p-3-db-subnetgroup-ffcd8b8",
                    "description": "Subnet group for primary database",
                    "id": "p-3-db-subnetgroup-ffcd8b8",
                    "name": "p-3-db-subnetgroup-ffcd8b8",
                    "subnetIds": [
                        "subnet-0615a2647b66a222c",
                        "subnet-0e17b2c51bb9d79f4"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aurora-aws-provider::134d52f5-7f5e-4454-b1be-748af511a354",
                "propertyDependencies": {
                    "description": null,
                    "subnetIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ],
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:elasticache/subnetGroup:SubnetGroup::p-3-cache-subnets",
                "custom": true,
                "id": "p-3-cache-subnets-b1d67d3",
                "type": "aws:elasticache/subnetGroup:SubnetGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Managed by Pulumi",
                    "name": "p-3-cache-subnets-b1d67d3",
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:elasticache:us-west-2:030813887342:subnetgroup:p-3-cache-subnets-b1d67d3",
                    "description": "Managed by Pulumi",
                    "id": "p-3-cache-subnets-b1d67d3",
                    "name": "p-3-cache-subnets-b1d67d3",
                    "subnetIds": [
                        "subnet-0615a2647b66a222c",
                        "subnet-0e17b2c51bb9d79f4"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::cache-aws-provider::54ec0dc8-ad8a-4494-ba57-cb43e332ab76",
                "propertyDependencies": {
                    "description": null,
                    "subnetIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ],
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:amp/workspace:Workspace::p-3-prom",
                "custom": true,
                "id": "ws-09330607-fd6e-4e8a-8c1d-5c0bcfd1d0b0",
                "type": "aws:amp/workspace:Workspace",
                "inputs": {
                    "__defaults": [],
                    "alias": "p-3-prom"
                },
                "outputs": {
                    "alias": "p-3-prom",
                    "arn": "arn:aws:aps:us-west-2:030813887342:workspace/ws-09330607-fd6e-4e8a-8c1d-5c0bcfd1d0b0",
                    "id": "ws-09330607-fd6e-4e8a-8c1d-5c0bcfd1d0b0",
                    "prometheusEndpoint": "https://aps-workspaces.us-west-2.amazonaws.com/workspaces/ws-09330607-fd6e-4e8a-8c1d-5c0bcfd1d0b0/"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::prom-aws-provider::6ac4bcaa-972b-450a-8d15-a9ee3bbd479b",
                "propertyDependencies": {
                    "alias": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-attach-lbc-policy",
                "custom": true,
                "id": "p-3-aws-load-balancer-controller20220812204338173100000002-20220812204751783300000001",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::030813887342:policy/p-3-AWSLoadBalancerControllerIAMPolicy20220812204337160700000001",
                    "role": "p-3-aws-load-balancer-controller20220812204338173100000002"
                },
                "outputs": {
                    "id": "p-3-aws-load-balancer-controller20220812204338173100000002-20220812204751783300000001",
                    "policyArn": "arn:aws:iam::030813887342:policy/p-3-AWSLoadBalancerControllerIAMPolicy20220812204337160700000001",
                    "role": "p-3-aws-load-balancer-controller20220812204338173100000002"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/policy:Policy::p-3-lbc-policy",
                    "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-lbc-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "policyArn": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/policy:Policy::p-3-lbc-policy"
                    ],
                    "role": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-lbc-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-msk-allow-connected-cidr",
                "custom": true,
                "id": "sgrule-3847446749",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-0ddf7758471767008",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-3847446749",
                    "protocol": "tcp",
                    "securityGroupId": "sg-0ddf7758471767008",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::msk-sg"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::msk-aws-provider::2c275936-3b8d-4d79-a0fe-28ebef6ab1d4",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::msk-sg"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:secretsmanager/secret:Secret::msk-secret",
                "custom": true,
                "id": "arn:aws:secretsmanager:us-west-2:030813887342:secret:AmazonMSK_p-3-msk-secret-1chck5",
                "type": "aws:secretsmanager/secret:Secret",
                "inputs": {
                    "__defaults": [
                        "forceOverwriteReplicaSecret",
                        "recoveryWindowInDays"
                    ],
                    "forceOverwriteReplicaSecret": false,
                    "kmsKeyId": "7fe4b3be-06c2-4bd1-a63d-a669196ca9cc",
                    "name": "AmazonMSK_p-3-msk-secret",
                    "recoveryWindowInDays": 30
                },
                "outputs": {
                    "arn": "arn:aws:secretsmanager:us-west-2:030813887342:secret:AmazonMSK_p-3-msk-secret-1chck5",
                    "description": "",
                    "forceOverwriteReplicaSecret": false,
                    "id": "arn:aws:secretsmanager:us-west-2:030813887342:secret:AmazonMSK_p-3-msk-secret-1chck5",
                    "kmsKeyId": "7fe4b3be-06c2-4bd1-a63d-a669196ca9cc",
                    "name": "AmazonMSK_p-3-msk-secret",
                    "policy": "",
                    "recoveryWindowInDays": 30,
                    "replicas": [],
                    "rotationEnabled": false,
                    "rotationLambdaArn": "",
                    "rotationRules": null,
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:kms/key:Key::msk-key"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::msk-aws-provider::2c275936-3b8d-4d79-a0fe-28ebef6ab1d4",
                "propertyDependencies": {
                    "kmsKeyId": [
                        "urn:pulumi:plane-3::launchpad::aws:kms/key:Key::msk-key"
                    ],
                    "name": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$kubernetes:core/v1:ConfigMap::p-3-eks-cluster-nodeAccess",
                "custom": true,
                "id": "kube-system/aws-auth",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "mapRoles": "- rolearn: 'arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb'\n  username: 'system:node:{{EC2PrivateDNSName}}'\n  groups:\n    - 'system:bootstrappers'\n    - 'system:nodes'\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "aws-auth",
                        "namespace": "kube-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "mapRoles": "- rolearn: 'arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb'\n  username: 'system:node:{{EC2PrivateDNSName}}'\n  groups:\n    - 'system:bootstrappers'\n    - 'system:nodes'\n"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "aws-auth",
                            "namespace": "kube-system"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "mapRoles": "- rolearn: 'arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb'\n  username: 'system:node:{{EC2PrivateDNSName}}'\n  groups:\n    - 'system:bootstrappers'\n    - 'system:nodes'\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"mapRoles\":\"- rolearn: 'arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb'\\n  username: 'system:node:{{EC2PrivateDNSName}}'\\n  groups:\\n    - 'system:bootstrappers'\\n    - 'system:nodes'\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"aws-auth\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2022-03-22T03:10:02Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:mapRoles": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T03:10:02Z"
                            }
                        ],
                        "name": "aws-auth",
                        "namespace": "kube-system",
                        "resourceVersion": "1071",
                        "uid": "7fb40716-a7a9-441b-8e71-d92882cbbca1"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-eks-k8s::6a9ff21e-85d1-4fe3-9de4-3e2262414e8c",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2"
                    ],
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ConfigMap::kube-system/local-static-provisioner-config",
                "custom": true,
                "id": "kube-system/local-static-provisioner-config",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "setPVOwnerRef": "true",
                        "storageClassMap": "nvme-ssd:\n   hostDir: /pv-disks\n   mountDir: /pv-disks\n",
                        "useNodeNameOnly": "true"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "name": "local-static-provisioner-config",
                        "namespace": "kube-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "setPVOwnerRef": "true",
                            "storageClassMap": "nvme-ssd:\n   hostDir: /pv-disks\n   mountDir: /pv-disks\n",
                            "useNodeNameOnly": "true"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "provisioner"
                            },
                            "name": "local-static-provisioner-config",
                            "namespace": "kube-system"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "setPVOwnerRef": "true",
                        "storageClassMap": "nvme-ssd:\n   hostDir: /pv-disks\n   mountDir: /pv-disks\n",
                        "useNodeNameOnly": "true"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"setPVOwnerRef\":\"true\",\"storageClassMap\":\"nvme-ssd:\\n   hostDir: /pv-disks\\n   mountDir: /pv-disks\\n\",\"useNodeNameOnly\":\"true\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"provisioner\"},\"name\":\"local-static-provisioner-config\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2022-08-24T18:13:50Z",
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:setPVOwnerRef": {},
                                        "f:storageClassMap": {},
                                        "f:useNodeNameOnly": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T18:13:50Z"
                            }
                        ],
                        "name": "local-static-provisioner-config",
                        "namespace": "kube-system",
                        "resourceVersion": "57140119",
                        "uid": "0286f9ba-42a7-46e6-bc1f-5e72dcea7b13"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::local-static-provisioner",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:Namespace::fennel-ns",
                "custom": true,
                "id": "fennel",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/inject": "enabled"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "fennel"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/inject": "enabled"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "fennel"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"linkerd.io/inject\":\"enabled\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"fennel\"}}\n",
                            "linkerd.io/inject": "enabled"
                        },
                        "creationTimestamp": "2022-03-22T03:11:03Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "fennel"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {},
                                            "f:linkerd.io/inject": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:kubernetes.io/metadata.name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-13T00:25:47Z"
                            }
                        ],
                        "name": "fennel",
                        "resourceVersion": "51855236",
                        "uid": "aeeab0a3-9472-4ff9-8094-187b45a77fd1"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::local-storage-provisioner-node-binding",
                "custom": true,
                "id": "local-storage-provisioner-node-binding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "name": "local-storage-provisioner-node-binding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "local-storage-provisioner-node-clusterrole"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "local-static-provisioner",
                            "namespace": "kube-system"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "provisioner"
                            },
                            "name": "local-storage-provisioner-node-binding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "local-storage-provisioner-node-clusterrole"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "local-static-provisioner",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"provisioner\"},\"name\":\"local-storage-provisioner-node-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"local-storage-provisioner-node-clusterrole\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"local-static-provisioner\",\"namespace\":\"kube-system\"}]}\n"
                        },
                        "creationTimestamp": "2022-08-24T18:13:47Z",
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T18:13:47Z"
                            }
                        ],
                        "name": "local-storage-provisioner-node-binding",
                        "resourceVersion": "57140097",
                        "uid": "fc692a2f-fc73-4e3b-ac5a-9e5142e0d1cb"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "local-storage-provisioner-node-clusterrole"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "local-static-provisioner",
                            "namespace": "kube-system"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::local-static-provisioner",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ServiceAccount::kube-system/local-static-provisioner",
                "custom": true,
                "id": "kube-system/local-static-provisioner",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "name": "local-static-provisioner",
                        "namespace": "kube-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "provisioner"
                            },
                            "name": "local-static-provisioner",
                            "namespace": "kube-system"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"provisioner\"},\"name\":\"local-static-provisioner\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2022-08-24T18:13:47Z",
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"local-static-provisioner-token-lf769\"}": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-08-24T18:13:47Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T18:13:47Z"
                            }
                        ],
                        "name": "local-static-provisioner",
                        "namespace": "kube-system",
                        "resourceVersion": "57140100",
                        "uid": "b23e831b-1bd6-4e5d-a781-398ad9457ee8"
                    },
                    "secrets": [
                        {
                            "name": "local-static-provisioner-token-lf769"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::local-static-provisioner",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                "custom": true,
                "id": "ebs-io1-50ops-n8o4xdjp",
                "type": "kubernetes:storage.k8s.io/v1:StorageClass",
                "inputs": {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "pulumi.com/autonamed": "true"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "ebs-io1-50ops-n8o4xdjp"
                    },
                    "parameters": {
                        "encrypted": "true",
                        "fsType": "ext4",
                        "iopsPerGB": "50",
                        "type": "io1"
                    },
                    "provisioner": "kubernetes.io/aws-ebs",
                    "reclaimPolicy": "Delete",
                    "volumeBindingMode": "WaitForFirstConsumer"
                },
                "outputs": {
                    "__initialApiVersion": "storage.k8s.io/v1",
                    "__inputs": {
                        "allowVolumeExpansion": true,
                        "apiVersion": "storage.k8s.io/v1",
                        "kind": "StorageClass",
                        "metadata": {
                            "annotations": {
                                "pulumi.com/autonamed": "true"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "ebs-io1-50ops-n8o4xdjp"
                        },
                        "parameters": {
                            "encrypted": "true",
                            "fsType": "ext4",
                            "iopsPerGB": "50",
                            "type": "io1"
                        },
                        "provisioner": "kubernetes.io/aws-ebs",
                        "reclaimPolicy": "Delete",
                        "volumeBindingMode": "WaitForFirstConsumer"
                    },
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"pulumi.com/autonamed\":\"true\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"ebs-io1-50ops-n8o4xdjp\"},\"parameters\":{\"encrypted\":\"true\",\"fsType\":\"ext4\",\"iopsPerGB\":\"50\",\"type\":\"io1\"},\"provisioner\":\"kubernetes.io/aws-ebs\",\"reclaimPolicy\":\"Delete\",\"volumeBindingMode\":\"WaitForFirstConsumer\"}\n",
                            "pulumi.com/autonamed": "true"
                        },
                        "creationTimestamp": "2022-06-05T16:51:37Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "storage.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:allowVolumeExpansion": {},
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {},
                                            "f:pulumi.com/autonamed": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:parameters": {
                                        ".": {},
                                        "f:encrypted": {},
                                        "f:fsType": {},
                                        "f:iopsPerGB": {},
                                        "f:type": {}
                                    },
                                    "f:provisioner": {},
                                    "f:reclaimPolicy": {},
                                    "f:volumeBindingMode": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-05T16:51:37Z"
                            }
                        ],
                        "name": "ebs-io1-50ops-n8o4xdjp",
                        "resourceVersion": "22857692",
                        "uid": "aaae534b-5cfe-4c1d-89be-513ccddce2e3"
                    },
                    "parameters": {
                        "encrypted": "true",
                        "fsType": "ext4",
                        "iopsPerGB": "50",
                        "type": "io1"
                    },
                    "provisioner": "kubernetes.io/aws-ebs",
                    "reclaimPolicy": "Delete",
                    "volumeBindingMode": "WaitForFirstConsumer"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "allowVolumeExpansion": null,
                    "apiVersion": null,
                    "kind": null,
                    "parameters": null,
                    "provisioner": null,
                    "reclaimPolicy": null,
                    "volumeBindingMode": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:getambassador.io/v3alpha1:Module::l5d-amb-config",
                "custom": true,
                "id": "default/ambassador",
                "type": "kubernetes:getambassador.io/v3alpha1:Module",
                "inputs": {
                    "apiVersion": "getambassador.io/v3alpha1",
                    "kind": "Module",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "ambassador",
                        "namespace": "default"
                    },
                    "spec": {
                        "config": {
                            "add_linkerd_headers": true,
                            "circuit_breakers": {
                                "max_connections": 3072,
                                "max_pending_requests": 1024,
                                "max_requests": 3072
                            },
                            "envoy_log_format": "%REQ(:METHOD)% %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% %DURATION%",
                            "envoy_log_type": "text"
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "getambassador.io/v3alpha1",
                    "__inputs": {
                        "apiVersion": "getambassador.io/v3alpha1",
                        "kind": "Module",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "ambassador",
                            "namespace": "default"
                        },
                        "spec": {
                            "config": {
                                "add_linkerd_headers": true,
                                "circuit_breakers": {
                                    "max_connections": 3072,
                                    "max_pending_requests": 1024,
                                    "max_requests": 3072
                                },
                                "envoy_log_format": "%REQ(:METHOD)% %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% %DURATION%",
                                "envoy_log_type": "text"
                            }
                        }
                    },
                    "apiVersion": "getambassador.io/v3alpha1",
                    "kind": "Module",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"getambassador.io/v3alpha1\",\"kind\":\"Module\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"ambassador\",\"namespace\":\"default\"},\"spec\":{\"config\":{\"add_linkerd_headers\":true,\"circuit_breakers\":{\"max_connections\":3072,\"max_pending_requests\":1024,\"max_requests\":3072},\"envoy_log_format\":\"%REQ(:METHOD)% %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% %DURATION%\",\"envoy_log_type\":\"text\"}}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:52:35Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "getambassador.io/v3alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        ".": {},
                                        "f:config": {
                                            ".": {},
                                            "f:add_linkerd_headers": {},
                                            "f:circuit_breakers": {},
                                            "f:envoy_log_format": {},
                                            "f:envoy_log_type": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:52:35Z"
                            }
                        ],
                        "name": "ambassador",
                        "namespace": "default",
                        "resourceVersion": "51778410",
                        "uid": "92264b7f-0921-4ef3-a416-e53d84d3090a"
                    },
                    "spec": {
                        "ambassador_id": [
                            "default"
                        ],
                        "config": {
                            "add_linkerd_headers": true,
                            "circuit_breakers": {
                                "max_connections": 3072,
                                "max_pending_requests": 1024,
                                "max_requests": 3072
                            },
                            "envoy_log_format": "%REQ(:METHOD)% %RESPONSE_CODE% %RESPONSE_FLAGS% %RESPONSE_CODE_DETAILS% %CONNECTION_TERMINATION_DETAILS% %DURATION%",
                            "envoy_log_type": "text"
                        }
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::command:local:Command::waiter"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:storage.k8s.io/v1:StorageClass::nvme-ssd",
                "custom": true,
                "id": "nvme-ssd",
                "type": "kubernetes:storage.k8s.io/v1:StorageClass",
                "inputs": {
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "name": "nvme-ssd"
                    },
                    "provisioner": "kubernetes.io/no-provisioner",
                    "reclaimPolicy": "Delete",
                    "volumeBindingMode": "WaitForFirstConsumer"
                },
                "outputs": {
                    "__initialApiVersion": "storage.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "storage.k8s.io/v1",
                        "kind": "StorageClass",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "provisioner"
                            },
                            "name": "nvme-ssd"
                        },
                        "provisioner": "kubernetes.io/no-provisioner",
                        "reclaimPolicy": "Delete",
                        "volumeBindingMode": "WaitForFirstConsumer"
                    },
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"provisioner\"},\"name\":\"nvme-ssd\"},\"provisioner\":\"kubernetes.io/no-provisioner\",\"reclaimPolicy\":\"Delete\",\"volumeBindingMode\":\"WaitForFirstConsumer\"}\n"
                        },
                        "creationTimestamp": "2022-08-24T18:13:49Z",
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "storage.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:provisioner": {},
                                    "f:reclaimPolicy": {},
                                    "f:volumeBindingMode": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T18:13:49Z"
                            }
                        ],
                        "name": "nvme-ssd",
                        "resourceVersion": "57140114",
                        "uid": "9b31a776-0836-44b6-98d6-20105369315e"
                    },
                    "provisioner": "kubernetes.io/no-provisioner",
                    "reclaimPolicy": "Delete",
                    "volumeBindingMode": "WaitForFirstConsumer"
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::local-static-provisioner",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "provisioner": null,
                    "reclaimPolicy": null,
                    "volumeBindingMode": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:ServiceAccount::lbc-ac",
                "custom": true,
                "id": "kube-system/aws-load-balancer-controller",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "automountServiceAccountToken": true,
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "eks.amazonaws.com/role-arn": "arn:aws:iam::030813887342:role/p-3-aws-load-balancer-controller20220812204338173100000002"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "aws-load-balancer-controller",
                        "namespace": "kube-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "automountServiceAccountToken": true,
                        "kind": "ServiceAccount",
                        "metadata": {
                            "annotations": {
                                "eks.amazonaws.com/role-arn": "arn:aws:iam::030813887342:role/p-3-aws-load-balancer-controller20220812204338173100000002"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "aws-load-balancer-controller",
                            "namespace": "kube-system"
                        }
                    },
                    "apiVersion": "v1",
                    "automountServiceAccountToken": true,
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "eks.amazonaws.com/role-arn": "arn:aws:iam::030813887342:role/p-3-aws-load-balancer-controller20220812204338173100000002",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"automountServiceAccountToken\":true,\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::030813887342:role/p-3-aws-load-balancer-controller20220812204338173100000002\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"aws-load-balancer-controller\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:49:16Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:automountServiceAccountToken": {},
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:eks.amazonaws.com/role-arn": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:49:16Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"aws-load-balancer-controller-token-f899r\"}": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-08-12T20:49:17Z"
                            }
                        ],
                        "name": "aws-load-balancer-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "51776917",
                        "uid": "ce316114-25ac-4796-8845-bdf3564fafd9"
                    },
                    "secrets": [
                        {
                            "name": "aws-load-balancer-controller-token-f899r"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-lbc-role"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "automountServiceAccountToken": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-lbc-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops",
                "custom": true,
                "id": "ebs-io2-200ops-811od6mc",
                "type": "kubernetes:storage.k8s.io/v1:StorageClass",
                "inputs": {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "pulumi.com/autonamed": "true"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "ebs-io2-200ops-811od6mc"
                    },
                    "parameters": {
                        "encrypted": "true",
                        "fsType": "ext4",
                        "iopsPerGB": "200",
                        "type": "io2"
                    },
                    "provisioner": "ebs.csi.aws.com",
                    "reclaimPolicy": "Delete",
                    "volumeBindingMode": "WaitForFirstConsumer"
                },
                "outputs": {
                    "__initialApiVersion": "storage.k8s.io/v1",
                    "__inputs": {
                        "allowVolumeExpansion": true,
                        "apiVersion": "storage.k8s.io/v1",
                        "kind": "StorageClass",
                        "metadata": {
                            "annotations": {
                                "pulumi.com/autonamed": "true"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "ebs-io2-200ops-811od6mc"
                        },
                        "parameters": {
                            "encrypted": "true",
                            "fsType": "ext4",
                            "iopsPerGB": "200",
                            "type": "io2"
                        },
                        "provisioner": "ebs.csi.aws.com",
                        "reclaimPolicy": "Delete",
                        "volumeBindingMode": "WaitForFirstConsumer"
                    },
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"pulumi.com/autonamed\":\"true\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"ebs-io2-200ops-811od6mc\"},\"parameters\":{\"encrypted\":\"true\",\"fsType\":\"ext4\",\"iopsPerGB\":\"200\",\"type\":\"io2\"},\"provisioner\":\"ebs.csi.aws.com\",\"reclaimPolicy\":\"Delete\",\"volumeBindingMode\":\"WaitForFirstConsumer\"}\n",
                            "pulumi.com/autonamed": "true"
                        },
                        "creationTimestamp": "2022-08-02T21:06:09Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "storage.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:allowVolumeExpansion": {},
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {},
                                            "f:pulumi.com/autonamed": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:parameters": {
                                        ".": {},
                                        "f:encrypted": {},
                                        "f:fsType": {},
                                        "f:iopsPerGB": {},
                                        "f:type": {}
                                    },
                                    "f:provisioner": {},
                                    "f:reclaimPolicy": {},
                                    "f:volumeBindingMode": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-02T21:06:09Z"
                            }
                        ],
                        "name": "ebs-io2-200ops-811od6mc",
                        "resourceVersion": "46953407",
                        "uid": "747cc376-56b3-4099-ac8c-3b5e36a22da2"
                    },
                    "parameters": {
                        "encrypted": "true",
                        "fsType": "ext4",
                        "iopsPerGB": "200",
                        "type": "io2"
                    },
                    "provisioner": "ebs.csi.aws.com",
                    "reclaimPolicy": "Delete",
                    "volumeBindingMode": "WaitForFirstConsumer"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "allowVolumeExpansion": null,
                    "apiVersion": null,
                    "kind": null,
                    "parameters": null,
                    "provisioner": null,
                    "reclaimPolicy": null,
                    "volumeBindingMode": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::descheduler",
                "custom": true,
                "id": "kube-system/descheduler-ho5tf1yr",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "descheduler",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "descheduler-ho5tf1yr",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes-sigs.github.io/descheduler/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "descheduler-ho5tf1yr"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "descheduler-ho5tf1yr"
                        ],
                        "ConfigMap/v1": [
                            "kube-system/descheduler-ho5tf1yr"
                        ],
                        "CronJob.batch/batch/v1": [
                            "kube-system/descheduler-ho5tf1yr"
                        ],
                        "Pod/v1": [
                            "kube-system/descheduler-test-pod"
                        ],
                        "PodSecurityPolicy.policy/policy/v1beta1": [
                            "kube-system/descheduler-ho5tf1yr"
                        ],
                        "ServiceAccount/v1": [
                            "kube-system/descheduler-ho5tf1yr"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND"
                        },
                        "schedule": "*/30 * * * *"
                    },
                    "verify": false,
                    "version": "",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAJMhO9MuManjuf5Pii1kOPSoRN0B+Oa0l7PmNt4/yAwV3xhor2bofw+12wMfwmh2gVwb0Pfkr9MGcSnXv6MnziH/NWVmK9DS7wq5vT+bVXuVsMr+CnEphYIS4FZlWzVPAJQlec6gzbgpJ/8O99L4jLBd/bc40GHXBEgMGuLe21xFDh9puHyqPOS/eyX/rkY/dvYEsCLlQmXwYplVyjoKTZZLXlQLRK52S0oySKVamqBQ0Vo97EIk+kfbdHZG9BHNmUJb31P9NJ6J51cdvbs2y3MYFlex1CMZtHpTnJC5hqQttKr1tl8MfRB4d8lFlmff445wsUZTPtsYKEvY6tKLuX/A3Ta+QhHSQZJJqsd6o0sGg65uC4GX355XPn0JIa1CmSy1SDl77rMw8XbLXZThtfHFxngndUIyEE8gJpWVtoszwmG4FYYRM+7yQFsett/F484pKENRIZ6Wqa2SIL263kFEdsoNh5AwexJtj4NE4DRN/bEzp2gxXNN8AXJa/m5TXTOIZAE4hAdEJzzTTcEdXN4lKf1dbsgewbqUBH91OFqv0P2jYyNk+PsmOWjyW5AQmQ/csorEswcNgDsMeN7H+QSWVMhwYPnpKPXt1tDBeOM58wr3Hf5NtmqJclzaJ5d8CcSLh+J5Ck1iaUv/VLLIUyJPhRane54K/emR/ltejqogsq9ZiaObVRNOTF2iogsP13y3niClwWJLj7OMkqDyHUT8atfAguxXv5FadRGNHwZjIYMrA6EWIuf/7uiGvuwbSir70qMNycw24JFjyoBzg9PQAGaPhFc4aWz4/4+uoi7AOR7VGdU82/eKGypTsI4DLpABlrOmGwxlogt9wf8SoX9Z2zab54Z7lYLTA+E4y8P+IAwhzdFJWEiEoW228FG51yua9tPBCwUOU7WRXajDik1BMdojgJMHfw0HN6yzMZSC/XpVnIRwX9B7whGMQz95z9Sb7AmDfeoJWjctb2GmmRFqdpUgMVRlXPrLGXK+4r8HrDEhG3R2obC1BoUpnzxsY4A/lnYGzBy/MIoKVOm1Web1Ozzwan3LYvK/XITvsFTTvJe81eDKDSONdHaqfJkdB9kQ/7l4TYP1jTN7w/CMYrNT5uoc3BDAndGSf8n0Bw8KGbgZ/vw25EHNPmXJRJZ6Ok9JpEnuv9pLvP+koFwB2dmBzq6dtUbTUZbdpSGZBpVXzuL9t8/uLlPI/BRg5SAm6WE61WgnTfqX27nLXteCJ69VohpMUV2h82rdxYv/szgFR5F0IMXLUhttU18fQkXNZhhZBjgtvvV4bBBjiBENpbD0Uhy2BA21KlLdoPgV6uM6EUHMZ7mkDjHaBSX/Bq06B36YhWaef2mCZVQWnMoWc5UvFyuQjKxuHY65g1k7w1c1AGwj8Reo7ebgCNDj6EtVKyYBllQQi5C+44Xw1UPGjVC07bHIQVjeOuZ9sr065ItuIWxHjBcWNygm+Vp7QqGz9Mlqgs2QK7j3HBVKnrGKz7FTs1W/j56AqZw6FIoEg4xXvVj5sMdn/OXW5mDWNSsATkT/uBnEGuoSu9lgVmaX5LUxQfTtpqCy44EX3taB5YFu3TGpZhu5zTcQmAvieiY6gLf0xdlRy5w10bPXY/XTwIawjomeK6mjIZl6TFnVs+xNuoPA3KjCgpzmqyorHt1Vmo+VJ/qTeb5C38w3KXmogFSF1DYUvWlQgiU6JvDbDK8VFsFbYZHJNtcECCV2ZB6zXLQElbwtLrkHvepCUu0pVuHeEJR8t3vY"
                    },
                    "atomic": false,
                    "chart": "descheduler",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "descheduler-ho5tf1yr",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes-sigs.github.io/descheduler/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "descheduler-ho5tf1yr"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "descheduler-ho5tf1yr"
                        ],
                        "ConfigMap/v1": [
                            "kube-system/descheduler-ho5tf1yr"
                        ],
                        "CronJob.batch/batch/v1": [
                            "kube-system/descheduler-ho5tf1yr"
                        ],
                        "PodSecurityPolicy.policy/policy/v1beta1": [
                            "kube-system/descheduler-ho5tf1yr"
                        ],
                        "ServiceAccount/v1": [
                            "kube-system/descheduler-ho5tf1yr"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "0.24.1",
                        "chart": "descheduler",
                        "name": "descheduler-ho5tf1yr",
                        "namespace": "kube-system",
                        "revision": 3,
                        "status": "deployed",
                        "version": "0.24.1"
                    },
                    "timeout": 300,
                    "values": {
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND"
                        },
                        "schedule": "*/30 * * * *"
                    },
                    "verify": false,
                    "version": "0.24.1",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "namespace": null,
                    "repositoryOpts": null,
                    "values": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::local-storage-provisioner-node-clusterrole",
                "custom": true,
                "id": "local-storage-provisioner-node-clusterrole",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "name": "local-storage-provisioner-node-clusterrole"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "create",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                "storage.k8s.io"
                            ],
                            "resources": [
                                "storageclasses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "",
                                "events.k8s.io"
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "update",
                                "patch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "provisioner"
                            },
                            "name": "local-storage-provisioner-node-clusterrole"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "persistentvolumes"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch",
                                    "create",
                                    "delete"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "storage.k8s.io"
                                ],
                                "resources": [
                                    "storageclasses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "",
                                    "events.k8s.io"
                                ],
                                "resources": [
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "update",
                                    "patch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"provisioner\"},\"name\":\"local-storage-provisioner-node-clusterrole\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"persistentvolumes\"],\"verbs\":[\"get\",\"list\",\"watch\",\"create\",\"delete\"]},{\"apiGroups\":[\"storage.k8s.io\"],\"resources\":[\"storageclasses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"watch\"]},{\"apiGroups\":[\"\",\"events.k8s.io\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"update\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\"]}]}\n"
                        },
                        "creationTimestamp": "2022-08-24T18:13:48Z",
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T18:13:48Z"
                            }
                        ],
                        "name": "local-storage-provisioner-node-clusterrole",
                        "resourceVersion": "57140107",
                        "uid": "31e84158-91fb-41da-abdc-9c141c677f08"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "persistentvolumes"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch",
                                "create",
                                "delete"
                            ]
                        },
                        {
                            "apiGroups": [
                                "storage.k8s.io"
                            ],
                            "resources": [
                                "storageclasses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "",
                                "events.k8s.io"
                            ],
                            "resources": [
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "update",
                                "patch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::local-static-provisioner",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::linkerd",
                "custom": true,
                "id": "default/linkerd-55bsq40c",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "linkerd2",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "linkerd-55bsq40c",
                    "namespace": "default",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://helm.linkerd.io/stable",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd-heartbeat",
                            "linkerd-linkerd-destination",
                            "linkerd-linkerd-identity",
                            "linkerd-linkerd-proxy-injector",
                            "linkerd-policy"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd-destination-policy",
                            "linkerd-heartbeat",
                            "linkerd-linkerd-destination",
                            "linkerd-linkerd-identity",
                            "linkerd-linkerd-proxy-injector"
                        ],
                        "ConfigMap/v1": [
                            "linkerd/linkerd-config",
                            "linkerd/linkerd-identity-trust-roots"
                        ],
                        "CronJob.batch/batch/v1beta1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "CustomResourceDefinition.apiextensions.k8s.io/apiextensions.k8s.io/v1": [
                            "serverauthorizations.policy.linkerd.io",
                            "servers.policy.linkerd.io",
                            "serviceprofiles.linkerd.io",
                            "trafficsplits.split.smi-spec.io"
                        ],
                        "Deployment.apps/apps/v1": [
                            "linkerd/linkerd-destination",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-proxy-injector"
                        ],
                        "MutatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "linkerd-proxy-injector-webhook-config"
                        ],
                        "Namespace/v1": [
                            "linkerd"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "Secret/v1": [
                            "linkerd/linkerd-identity-issuer",
                            "linkerd/linkerd-policy-validator-k8s-tls",
                            "linkerd/linkerd-proxy-injector-k8s-tls",
                            "linkerd/linkerd-sp-validator-k8s-tls"
                        ],
                        "Service/v1": [
                            "linkerd/linkerd-dst",
                            "linkerd/linkerd-dst-headless",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-identity-headless",
                            "linkerd/linkerd-policy",
                            "linkerd/linkerd-policy-validator",
                            "linkerd/linkerd-proxy-injector",
                            "linkerd/linkerd-sp-validator"
                        ],
                        "ServiceAccount/v1": [
                            "linkerd/linkerd-destination",
                            "linkerd/linkerd-heartbeat",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-proxy-injector"
                        ],
                        "ValidatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "linkerd-policy-validator-webhook-config",
                            "linkerd-sp-validator-webhook-config"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "identity": {
                            "issuer": {
                                "tls": {
                                    "crtPEM": "-----BEGIN CERTIFICATE-----\nMIIBtDCCAVmgAwIBAgIRAP6vt04VxXjj43xaE2WTjzgwCgYIKoZIzj0EAwIwJTEj\nMCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjIwODEyMjA0\nMzM2WhcNMjMwODEyMjA0MzM2WjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJk\nLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATARss9tCHN\n9f06G5RvO+MNhJJ90iSF/d7p4v43n7+J7KabkCCqsXempZnXTw9B4dULBY5ZDekn\n7KMEV1nDKmUHo2YwZDAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIB\nADAdBgNVHQ4EFgQUYuWmLk/TVDGfUljjqyk4gI992l8wHwYDVR0jBBgwFoAUZ0km\nH93FVnYIaVKHeqMadu8L2McwCgYIKoZIzj0EAwIDSQAwRgIhAOylxPm8XpT/9sP+\n2F/gzP80MBi8r46VvgOsInZgP8UbAiEAkRdhKB7cEd6E3ic0fKC5OXrYhXiWhSST\ng2zkFul8LlA=\n-----END CERTIFICATE-----",
                                    "keyPEM": "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIB3D9k+L2miRl6rA5XgiYsEpDUY0DoRAmz7NYtXCU5r5oAoGCCqGSM49\nAwEHoUQDQgAEwEbLPbQhzfX9OhuUbzvjDYSSfdIkhf3e6eL+N5+/ieymm5AgqrF3\npqWZ108PQeHVCwWOWQ3pJ+yjBFdZwyplBw==\n-----END EC PRIVATE KEY-----"
                                }
                            }
                        },
                        "identityTrustAnchorsPEM": "-----BEGIN CERTIFICATE-----\nMIIBjjCCATSgAwIBAgIRAJ6egis+ZdOoSLaaMrPEaiMwCgYIKoZIzj0EAwIwJTEj\nMCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjIwODEyMjA0\nMzM1WhcNMzIwODA5MjA0MzM1WjAlMSMwIQYDVQQDExpyb290LmxpbmtlcmQuY2x1\nc3Rlci5sb2NhbDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJYrqUcXMz622pea\nzqxHD3VxYHDzTuwKLSXmiXrmCKJU32OmdOsj9Uvyq7Ufavaf+8muk6Y0P3Fw3mLG\noba9glOjRTBDMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMB0G\nA1UdDgQWBBRnSSYf3cVWdghpUod6oxp27wvYxzAKBggqhkjOPQQDAgNIADBFAiA4\nENXg8ul8wOD9G24U5b5I6lhVZJuwOVQUlVXsdPRJzAIhAKXAsZrL4Ebe6AHwPNW3\nWrMcID7Bs05yFH2i9QDVdMzR\n-----END CERTIFICATE-----",
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND",
                            "kubernetes.io/os": "linux"
                        },
                        "proxy": {
                            "opaquePorts": "25,587,3306,4444,5432,6379,9300,11211,2425"
                        }
                    },
                    "verify": false,
                    "version": "2.11",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAEKume2ocJQ3q7W3faHe2U5ZFeRZQvF2Uo4m9x8WmtPkWP0G2f0XHb96Lo/uoJ3YSidsY/PoIpGfMddMYQzKmWaTwPBYH3bHJyEWrc1Ed9b2uQYTeNBcT9mwGTONd6/5YC3SYw11sXNsQqOjWv6qL06YVyNghv1f6MTAi6x/YwreLekp+E38a84EsjjNN4/LOwdI20CG0z6ISP6fKpC4NpCj+CsdW4E3PiKf0fRcFDkG5PF/w185Ia263K4w/CnmeJN0sSExdTWuRVAEwuUGKZ9xieH3HMS+6F1L7UftRuAwstlNEPeHqHukKYyuPJ3VI2iIbwLzm4yOZBq3ZrBGJDNQjHYIqkzGL9ttA8j2WCBpJz1MGc2BK5mOkmo6uKK48YZl2+ZrYFWQYXe803Yju3nJFT3HJ64UmhkcFG8c6ITQT+ZruTXq9BtHmf0HS42m5w35Cucn++J82hrQqyvdw6yIknvDeg4T28fqTD2rHd4C7pbo6Av4vqo+vt7FbqTOLAwtCWfkH4IvjahFJNKSpCAh/HjwjEZ55BtP++8dE+ppWsMcTDBge+E0ozd2FTHWOrTDW2rdAKEjwZS+XZ7/3yFOd66bfvZHqEzzbqTmwE7AODckB77umuR8jdxaBkXsaH2ojeHVR5+1VlpIDsSSIGcx3pcCuGHUlhJo7O2YRgd1DFn5YbtwZQn6p8drZJH6/vPmVfh+cSfMaPRrxkookH5Rg7vWpiSEIAAPl/Odh9uFin1Ot+xLiBQkAXk2mUwcI3wjoPdlQmTLa1pFZoaV2fXZwnCLC5IzQ9y85irgwRGaMU9TEOr3b+eKwtytxSc0DIM52h5gE3yirEngPXEXbLOZbC+JgqKU/98D/FATOv4/8Fenst4wIb0SfBKDmWjbBxfS/aZfm5hj5Q7DPKXYmnwRQqeQUV61XBDVPAsvATKc6kj12mjKiakuHeGmbdy54bcGlLdDZeRNkYNTwslx8itPiyzz5YSdgErIB17o5d5eHlvQlStL3tcS78KO0pX8rXlq1+biWVUoqKPFnxamsnlrGzM36XY48aOOlbyth7hRnqIPdplqwoXyc1Q3K1d54aW0MPTw0BqpsbwAHS9W5sJHQrMa9hwKXxAZEVvgFMOV/idQYP4LkD3Ev8wWlPoZRhOpCccWFoqAzSBZgi9Xa3odhb9yyQZataL0+ArE0SAUo1lqFCU1ZyrbiOCgcl0TBnsAofiwE2zjfwjdDBj9vzjkh7Uwzn1zuFVAd0KByxWFZIbeKdqtJJxhykHKT5/xBOJSW0Yu8LcQ1apqyy1tgJyh/np5L6PyLr+rtusT4tNPxEK7tUt2kfQu4BTxJMDCADDEjjRUqviW6rzTm6qur5XVjJC6LqaECDC0ubhGm5ehl+kMWsQInRUcRdy8Ig6Mpdh1FKUrpsT5v1Mye2FVYEbyCVWsLJvQUVgShaqj29x9eC1k+buH28mqB95cgRetcKDAtPnosUD+OGWV5mPUoOPkmrtZPz7GmwEZE36I6iv5iyl1GLAoKhJTvGWeE+yGqPV14ZWTQ/hTVp3fEm/NxYCXH+CLjWahN01PYTzTOTrUyby/epf1Dq5pXTLloxDYekfkCvWicNvuRrTyqlE5E6pXFWqFYc0vZlSJ0bNSToYpxbbZU33i3hSUWTHz9StAMR7cw7sUjaph5ufopqPsGxz2FruLz7ZsZf1H6gSAbnKbiJeHXmxxp5vC+JYuwvQAQk5zwmBse9BT9IKuJKSiQuqwrkjafltc5YVaMmQ05342dkJ8bv6hyr9IsAQ+AIZOmyBkYi1+cjVQwTglmDmETx+FoqGP2sgWJjKaJkrMFJZal4LKpscJM0tYRWgEeTYvZBhorvmZju9LS8wBjMTgMtT2553ll1OMZYXwW/DnV3DnuFmZ3hQ7Yz7Qul+2OZ/y/D14I+5wSgG6xGXoKFI4Fk3PdzrkHdOICS/WeS157+0sfNGUvnpeGP2dlyPTtv0g4Krh8v7JA7gOtkkDjYjOX5dRBUksZuV18gQc/SLhibBQzUR/NOa8qkgh8fS2qXTHMzTLZJoLvdB9MwHa5TieRXxlhFr+rmtK23NRnphjBbiER7nqKbGI1OE8YnnPr0AoXcxofJ/K+lKI9okIB9uzybmAJQC5XWIlmOZJqO3Pc8wk/I/2x/Ethj/YPGrW5ESyaqz7sr6YVXNNJbvHQJ+YeCALhLgD00/vH+PBRJw8hVi0hMvDvmIe58Kykt2gJOeJPF9oLrXjF2oHYiYcYiMY+BtPjHDV7irnWq1ytnO5jb/w2lh85Pm0Az30nnfHcXOlDmKJCcPuC90SvwAoTLSAmNHGViGhPr56ADAU+QwPrWJlMMIz51xK5aIHAwauuCIENBaGyRBQGqVvt5zfiRHXmTSgZF7pBkDQemWZ9u7b+J+kInHG0HQdwgrfL7cqn8Kgj7P3OxGMqQSvmNnlL2Ly8cgntzQr13U1ScXEI4F/ziaynVpHEVBX8qgG287aPwRroVwXaef1lJAaxKS2Vu1T5klCDA0Kj8DsJXt4pXJMKagtx5QRdxpItDJKbPXIwLsu+m9JsUE33heV7RjXf9ubJcO8lqj23uXUqhlvMYjU0nL5ont/nOblDATSxiDheHAmHAUXxfFpo/OdwmC6NUHaR6ml5Y5iy/WRkRr088p0QuF62pzESFOo44zxSc8Ehmun1tq+EOKycAHVq+uynEgMnOWxKfwDtBcS8ZpE+1U3oaivkiPbXDSxqxNAY5WwhVaQyo8kZrB8Z+ZgaOII9dabXBwfK34ENHbl5fdPYg8qMau/t3HdH4I9yrekUE07T+MAriZbJv4AG0OGa47KjyCFpvIBgqmUDkmnPfPyrjPEWlrDWTibafCkhD07rK2NUrl3ti7F9d+wj398g+SIAyzKx9zknwkodlL+pQfVO41mXRW+wpoc+h5zJk76ckcZiMQggicynLjyJEhT2Pr7byJnogMRlAXAgJF73smbMQ1HDG942y7rntWftcMHz1GZMJUk9W2TCno4L6y5XTtSPyCn5ZAcoTZaN/Oq6QbL+AmWl5TN1kKX8BDjkFI+PqI+s+K/a2wG42HyAzxXuh7n0SaIG5bR4dhAk83kkiA4M79iod9VV+oy2OGe5DGWh0XBNyNWMWYJLkjFnwx2OycMopGpRBZeuicCtTxzPkUFjAd/0LAAdLEynBhaRpkKXG1TvSd/70/O+ltgDaOd/4lT8nwX95z6QeQR0KF2yndxVkIqh91xjuWTra5NoCmASwHLJq2L2lTzcFka7vlaT1M6XX8iiYKsSQnJKA7jFuWWABRdL26E4beEjkvrImoD5QQZ2j5ejL8xtH/MAXlRMWjpi/5oww8/4YpbYAsUUKmj5z3ajrsEJqk9WhshL/ey7WxZHOcqh6Tytm/SZ20OUIYY1PGjjktsBjwW1rpZNsMzTO8bUMpEJstCevhbULmxf7MxouPmyksCGp2kkipaUTs6Vcdg56u/k/dspPEL/tpeK+gjoF69c3LCAZv83DrdjRQfM0SZeV5EQ+OsBb+3TUXSAE/fCUMn0BiI3I7fHnTmdGYT/8FzJzM8HFwyURbxpzeVxM5zR4JWjiTGLR57q2z+sV63C6RGoyazfSqhnH2K+hvCZF76JUMXMjcrOF8V9Lv/CvXVRAV3at+RyP+UTOb2nk9zuDov0A/ykdexI3dqQxEZmWnYQUGcYTIaBwKPgHHFwXD2DUGnSWj+qkeUsMFAErEnfaiDvMe2StevlkvaW+eIomyIs+Tf6akFr7FnwOKEvhjrTJRPYVt/d/jDefq4maPNm7xPwPDepygD46Urt2K5e2Bj4nA8T/XC38gUPRmZLMdKBucsX+akFCWzp3QPPB1itZ7OSmNzJUTImlP4pKjC0BMTg01WNS+E4fMNp1bE42C4+SoVXi09KQ6+AW/dRC5o/4ilzyYYzhHSoF7jkkLTNiEoHeEOcUfcqkxfF3nX401NImW8Cel9RL9cZ8/HczqPLRsiTD7ZgrUHg/LmpYBi0UM+qMF87AbXr223+fUbX/X5HKzHYj/WgKIysjzxpkUl7Ue4iXITrBbu2M6IOsHHnNvu0PHOOF2WxzJsXJlePQHQwdpcljCO17ZBjgl3jTleAz6OYjC0W1piLey4r0q63OcNSD5Gf4xhZpCPfJPUWTqozkIVSEt5c4ihn1J0O6O93bSRnU5CyqCwNFo4F+YGvMc1wQfkdHilZZJAcme2WImo1UE98AXGAyHND6LADhLjNKTlCfSgol63AE2dHO3R3b+3plJ2AVe8tq1kXkAtcjII6iyFzdSSIipMYgNJr3epM7IRyLOIpTx2ivWHZd1Ku006wMgHeLAUeksobfoNuLafl+ypJNKRQLRKbXSbuQqnSrXqqfHAEXmWmr+XUT2dj+u7p1dMFS9uQgzbpZhYOb6zK026e42lfZeB0VW+v51UGiD1F87lQ4KfVFZ8008iwiIeCqgqoyU/546W2qg+5OZ9iqAeMGrXTeAeKHhw9pzkoDa0M99UbA6BVg4XM3fCipeuFYM5f8lTqbd0aJyQ04TANa3mkwpf4LMgGmBvur7hwKSG8gKLihDPv3MgR47Z3N4U1+dzQVzHKazlfZchJ5xkv/qobYRHEJgBYJpmRZA2eWIrAP9nGJADU4KfOhlG1ITxF6gclo3dVS464c1qY63KDu4n+qUyT6M6iv51sFd6iZPa2md5VshEYqJ68UJZqftxOEZtPjT0SetrommvD5Q/j7d2rXGDgYjQL1tZm89lvWKNudv7GTK7gxLzVEiK09W8mctZQ4s/6RzLEMBBe9XDqYZ4Aud47wiR4fVdX/GcM14s0ZoXqPRPRcw0FmaDVf2evHzO4AJcOZjGgoVD7E7/22rq6rIZEYbhv+Wr56D0fIxY3z0RlkGUEWx99GtEYiHisXV0BXg+VP+D3mlPK2ApZhHVHI2Xo1XWi35IGBhw0Xmzc5tIXnlzX/YWW0hSbzrqxH2Cu/MYJl1jKIJvAq5ECPMuvX1ZR95ZJjLct8TxRfCvq3Ntppia2Tg+mucWT9Dc3W++UigHw6X70+thppSE2kWH1gBKBATshDuVCReS2Ll7hARQp7Sh2eA79GpJuunJeQdDhaylIMdbd5FPxZgHAVFpRVwkZJh8q0cjHz1HArppHNmuH4UeMVGWS/uZ7FdMPSRhMQagYV1Q0+94EzC789oysOqnlKpZzV0thLTSpKWzXla73Mq7uanRG4bjjgkrirFI1IO84W7rcBeEPsPa1AAvXxO0A2OX4ToYaNY+MZp34cY8VhT8SmW8oKMHlrnlZJuvCU6yYqlazUZrQL1NXnFhUnYuC1rkqfHVFaLl6kYkLj5HAHaakrLTHYOGrdpTV37sk2MAythSOUjtacg7RdNSN/CpwhNGkzoR/88NOkP+Xwr1pZNfJ2pYNEhAVsfI1PkeNPKlZNVI1eDGrNYFnZsILMIi+NFSagyu3Al407/fxzqEPjckLltlffN5jnexE0+rfSgofYKHoHKTeOgmYRF07ygLhfMMFHUT49Cem9iVs9tpZI3BKCdLpnYcAhiZIJY9Qc3M/W5DIQ72dS+WQGE4hontG0hJEEVZfDVoTorqALgsHOHarihuKtjSllLUZ0/yvwrZN8hXj6VlwcugovtTzTzev0wGZkjN2S/m9uDPekv3lyAmIC2l12LYgceTj6pSNcFtPtdopcGiV+vGIluuj8j2EwrnFgNf+AQKhUtD2lteA67nLEd4TxYYS7MmlQ23VcAvMA5ncPaEmIhHl5qn+K2OCMCIJAq8gtr5z3I4SZWQmPjMrSzrom/4MlJzjRekzHvNSIUFp/l40ws0E4ww/FF1SFOO1ry494J4D0S8utkJZwR59yFE6Xry20E2YVf4KNh4rOMWS0ENrX+FfqICtkqKWJZYLhCZMsrrk/7ELA=="
                    },
                    "atomic": false,
                    "chart": "linkerd2",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "linkerd-55bsq40c",
                    "namespace": "default",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://helm.linkerd.io/stable",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd-heartbeat",
                            "linkerd-linkerd-destination",
                            "linkerd-linkerd-identity",
                            "linkerd-linkerd-proxy-injector",
                            "linkerd-policy"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd-destination-policy",
                            "linkerd-heartbeat",
                            "linkerd-linkerd-destination",
                            "linkerd-linkerd-identity",
                            "linkerd-linkerd-proxy-injector"
                        ],
                        "ConfigMap/v1": [
                            "linkerd/linkerd-config",
                            "linkerd/linkerd-identity-trust-roots"
                        ],
                        "CronJob.batch/batch/v1beta1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "CustomResourceDefinition.apiextensions.k8s.io/apiextensions.k8s.io/v1": [
                            "serverauthorizations.policy.linkerd.io",
                            "servers.policy.linkerd.io",
                            "serviceprofiles.linkerd.io",
                            "trafficsplits.split.smi-spec.io"
                        ],
                        "Deployment.apps/apps/v1": [
                            "linkerd/linkerd-destination",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-proxy-injector"
                        ],
                        "MutatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "linkerd-proxy-injector-webhook-config"
                        ],
                        "Namespace/v1": [
                            "linkerd"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "Secret/v1": [
                            "linkerd/linkerd-identity-issuer",
                            "linkerd/linkerd-policy-validator-k8s-tls",
                            "linkerd/linkerd-proxy-injector-k8s-tls",
                            "linkerd/linkerd-sp-validator-k8s-tls"
                        ],
                        "Service/v1": [
                            "linkerd/linkerd-dst",
                            "linkerd/linkerd-dst-headless",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-identity-headless",
                            "linkerd/linkerd-policy",
                            "linkerd/linkerd-policy-validator",
                            "linkerd/linkerd-proxy-injector",
                            "linkerd/linkerd-sp-validator"
                        ],
                        "ServiceAccount/v1": [
                            "linkerd/linkerd-destination",
                            "linkerd/linkerd-heartbeat",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-proxy-injector"
                        ],
                        "ValidatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "linkerd-policy-validator-webhook-config",
                            "linkerd-sp-validator-webhook-config"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "stable-2.11.4",
                        "chart": "linkerd2",
                        "name": "linkerd-55bsq40c",
                        "namespace": "default",
                        "revision": 1,
                        "status": "deployed",
                        "version": "2.11.4"
                    },
                    "timeout": 300,
                    "values": {
                        "identity": {
                            "issuer": {
                                "tls": {
                                    "crtPEM": "-----BEGIN CERTIFICATE-----\nMIIBtDCCAVmgAwIBAgIRAP6vt04VxXjj43xaE2WTjzgwCgYIKoZIzj0EAwIwJTEj\nMCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjIwODEyMjA0\nMzM2WhcNMjMwODEyMjA0MzM2WjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJk\nLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAATARss9tCHN\n9f06G5RvO+MNhJJ90iSF/d7p4v43n7+J7KabkCCqsXempZnXTw9B4dULBY5ZDekn\n7KMEV1nDKmUHo2YwZDAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIB\nADAdBgNVHQ4EFgQUYuWmLk/TVDGfUljjqyk4gI992l8wHwYDVR0jBBgwFoAUZ0km\nH93FVnYIaVKHeqMadu8L2McwCgYIKoZIzj0EAwIDSQAwRgIhAOylxPm8XpT/9sP+\n2F/gzP80MBi8r46VvgOsInZgP8UbAiEAkRdhKB7cEd6E3ic0fKC5OXrYhXiWhSST\ng2zkFul8LlA=\n-----END CERTIFICATE-----",
                                    "keyPEM": "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIB3D9k+L2miRl6rA5XgiYsEpDUY0DoRAmz7NYtXCU5r5oAoGCCqGSM49\nAwEHoUQDQgAEwEbLPbQhzfX9OhuUbzvjDYSSfdIkhf3e6eL+N5+/ieymm5AgqrF3\npqWZ108PQeHVCwWOWQ3pJ+yjBFdZwyplBw==\n-----END EC PRIVATE KEY-----"
                                }
                            }
                        },
                        "identityTrustAnchorsPEM": "-----BEGIN CERTIFICATE-----\nMIIBjjCCATSgAwIBAgIRAJ6egis+ZdOoSLaaMrPEaiMwCgYIKoZIzj0EAwIwJTEj\nMCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjIwODEyMjA0\nMzM1WhcNMzIwODA5MjA0MzM1WjAlMSMwIQYDVQQDExpyb290LmxpbmtlcmQuY2x1\nc3Rlci5sb2NhbDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJYrqUcXMz622pea\nzqxHD3VxYHDzTuwKLSXmiXrmCKJU32OmdOsj9Uvyq7Ufavaf+8muk6Y0P3Fw3mLG\noba9glOjRTBDMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMB0G\nA1UdDgQWBBRnSSYf3cVWdghpUod6oxp27wvYxzAKBggqhkjOPQQDAgNIADBFAiA4\nENXg8ul8wOD9G24U5b5I6lhVZJuwOVQUlVXsdPRJzAIhAKXAsZrL4Ebe6AHwPNW3\nWrMcID7Bs05yFH2i9QDVdMzR\n-----END CERTIFICATE-----",
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND",
                            "kubernetes.io/os": "linux"
                        },
                        "proxy": {
                            "opaquePorts": "25,587,3306,4444,5432,6379,9300,11211,2425"
                        }
                    },
                    "verify": false,
                    "version": "2.11.4",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::command:local:Command::ca-crt",
                    "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-crt",
                    "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-key"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "repositoryOpts": null,
                    "values": [
                        "urn:pulumi:plane-3::launchpad::command:local:Command::ca-crt",
                        "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-crt",
                        "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-key"
                    ],
                    "version": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apps/v1:DaemonSet::kube-system/eks-nvme-ssd-provisioner",
                "custom": true,
                "id": "kube-system/eks-nvme-ssd-provisioner",
                "type": "kubernetes:apps/v1:DaemonSet",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "DaemonSet",
                    "metadata": {
                        "labels": {
                            "app": "eks-nvme-ssd-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "eks-nvme-ssd-provisioner",
                        "namespace": "kube-system"
                    },
                    "spec": {
                        "selector": {
                            "matchLabels": {
                                "name": "eks-nvme-ssd-provisioner"
                            }
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "name": "eks-nvme-ssd-provisioner"
                                }
                            },
                            "spec": {
                                "automountServiceAccountToken": false,
                                "containers": [
                                    {
                                        "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/eks-nvme-ssd-provisioner:latest",
                                        "imagePullPolicy": "Always",
                                        "name": "eks-nvme-ssd-provisioner",
                                        "securityContext": {
                                            "privileged": true
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/pv-disks",
                                                "mountPropagation": "Bidirectional",
                                                "name": "pv-disks"
                                            },
                                            {
                                                "mountPath": "/nvme",
                                                "mountPropagation": "Bidirectional",
                                                "name": "nvme"
                                            }
                                        ]
                                    }
                                ],
                                "nodeSelector": {
                                    "aws.amazon.com/eks-local-ssd": "true"
                                },
                                "priorityClassName": "system-node-critical",
                                "volumes": [
                                    {
                                        "hostPath": {
                                            "path": "/pv-disks"
                                        },
                                        "name": "pv-disks"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/nvme"
                                        },
                                        "name": "nvme"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "metadata": {
                            "labels": {
                                "app": "eks-nvme-ssd-provisioner",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "eks-nvme-ssd-provisioner",
                            "namespace": "kube-system"
                        },
                        "spec": {
                            "selector": {
                                "matchLabels": {
                                    "name": "eks-nvme-ssd-provisioner"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "eks-nvme-ssd-provisioner"
                                    }
                                },
                                "spec": {
                                    "automountServiceAccountToken": false,
                                    "containers": [
                                        {
                                            "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/eks-nvme-ssd-provisioner:latest",
                                            "imagePullPolicy": "Always",
                                            "name": "eks-nvme-ssd-provisioner",
                                            "securityContext": {
                                                "privileged": true
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/pv-disks",
                                                    "mountPropagation": "Bidirectional",
                                                    "name": "pv-disks"
                                                },
                                                {
                                                    "mountPath": "/nvme",
                                                    "mountPropagation": "Bidirectional",
                                                    "name": "nvme"
                                                }
                                            ]
                                        }
                                    ],
                                    "nodeSelector": {
                                        "aws.amazon.com/eks-local-ssd": "true"
                                    },
                                    "priorityClassName": "system-node-critical",
                                    "volumes": [
                                        {
                                            "hostPath": {
                                                "path": "/pv-disks"
                                            },
                                            "name": "pv-disks"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/nvme"
                                            },
                                            "name": "nvme"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "DaemonSet",
                    "metadata": {
                        "annotations": {
                            "deprecated.daemonset.template.generation": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"labels\":{\"app\":\"eks-nvme-ssd-provisioner\",\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"eks-nvme-ssd-provisioner\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"name\":\"eks-nvme-ssd-provisioner\"}},\"template\":{\"metadata\":{\"labels\":{\"name\":\"eks-nvme-ssd-provisioner\"}},\"spec\":{\"automountServiceAccountToken\":false,\"containers\":[{\"image\":\"030813887342.dkr.ecr.us-west-2.amazonaws.com/eks-nvme-ssd-provisioner:latest\",\"imagePullPolicy\":\"Always\",\"name\":\"eks-nvme-ssd-provisioner\",\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/pv-disks\",\"mountPropagation\":\"Bidirectional\",\"name\":\"pv-disks\"},{\"mountPath\":\"/nvme\",\"mountPropagation\":\"Bidirectional\",\"name\":\"nvme\"}]}],\"nodeSelector\":{\"aws.amazon.com/eks-local-ssd\":\"true\"},\"priorityClassName\":\"system-node-critical\",\"volumes\":[{\"hostPath\":{\"path\":\"/pv-disks\"},\"name\":\"pv-disks\"},{\"hostPath\":{\"path\":\"/nvme\"},\"name\":\"nvme\"}]}}}}\n"
                        },
                        "creationTimestamp": "2022-08-24T18:13:51Z",
                        "generation": 1,
                        "labels": {
                            "app": "eks-nvme-ssd-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:observedGeneration": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-24T18:13:51Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:deprecated.daemonset.template.generation": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    ".": {},
                                                    "f:name": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:automountServiceAccountToken": {},
                                                "f:containers": {
                                                    "k:{\"name\":\"eks-nvme-ssd-provisioner\"}": {
                                                        ".": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:resources": {},
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:privileged": {}
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/nvme\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:mountPropagation": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/pv-disks\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:mountPropagation": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:nodeSelector": {},
                                                "f:priorityClassName": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"nvme\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"pv-disks\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:updateStrategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T18:13:51Z"
                            }
                        ],
                        "name": "eks-nvme-ssd-provisioner",
                        "namespace": "kube-system",
                        "resourceVersion": "57140129",
                        "uid": "4631b22d-803d-4f0a-ab10-e78b44cf4d96"
                    },
                    "spec": {
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "name": "eks-nvme-ssd-provisioner"
                            }
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "name": "eks-nvme-ssd-provisioner"
                                }
                            },
                            "spec": {
                                "automountServiceAccountToken": false,
                                "containers": [
                                    {
                                        "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/eks-nvme-ssd-provisioner:latest",
                                        "imagePullPolicy": "Always",
                                        "name": "eks-nvme-ssd-provisioner",
                                        "resources": {},
                                        "securityContext": {
                                            "privileged": true
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/pv-disks",
                                                "mountPropagation": "Bidirectional",
                                                "name": "pv-disks"
                                            },
                                            {
                                                "mountPath": "/nvme",
                                                "mountPropagation": "Bidirectional",
                                                "name": "nvme"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "nodeSelector": {
                                    "aws.amazon.com/eks-local-ssd": "true"
                                },
                                "priorityClassName": "system-node-critical",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "hostPath": {
                                            "path": "/pv-disks",
                                            "type": ""
                                        },
                                        "name": "pv-disks"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/nvme",
                                            "type": ""
                                        },
                                        "name": "nvme"
                                    }
                                ]
                            }
                        },
                        "updateStrategy": {
                            "rollingUpdate": {
                                "maxSurge": 0,
                                "maxUnavailable": 1
                            },
                            "type": "RollingUpdate"
                        }
                    },
                    "status": {
                        "currentNumberScheduled": 0,
                        "desiredNumberScheduled": 0,
                        "numberMisscheduled": 0,
                        "numberReady": 0,
                        "observedGeneration": 1
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::eks-nvme-ssd-provisioner",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::p-3-metrics-server",
                "custom": true,
                "id": "kube-system/p-3-metrics-server-8d1jnsa5",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "metrics-server",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "p-3-metrics-server-8d1jnsa5",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes-sigs.github.io/metrics-server/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "APIService.apiregistration.k8s.io/apiregistration.k8s.io/v1": [
                            "v1beta1.metrics.k8s.io"
                        ],
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "system:metrics-server-aggregated-reader",
                            "system:p-3-metrics-server"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-3-metrics-server:system:auth-delegator",
                            "system:p-3-metrics-server"
                        ],
                        "Deployment.apps/apps/v1": [
                            "p-3-metrics-server"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-3-metrics-server-auth-reader"
                        ],
                        "Service/v1": [
                            "p-3-metrics-server"
                        ],
                        "ServiceAccount/v1": [
                            "p-3-metrics-server"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "extraArgs": [
                            "--metric-resolution=10s"
                        ],
                        "fullnameOverride": "p-3-metrics-server",
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND"
                        }
                    },
                    "verify": false,
                    "version": "",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAHKuWipJTzrSldinosGvslIB7c1I4qla75mAtJNZUiuyC4iaD2+TzWQEDSR9qdfHi3CWTmCl6zSJsVqtAR8+Gb3uxbADgLAGT7Rf9BwbYzzScNzC1c7kYhmPviNcthW5LtUONpTPCJeSrh4+ZJuQv8ieI5H6JqIn92237jxjA3tvDf065lUDN+rbNNi5z90tQyOf0uhpsbvYRpjgT7+ryTeIndA8/jEqtYdEiHXht1j4iEsGPLb1hhBMaQuPvpNdX2Lq0+zB1OoQpYRhyh4SuMOO1tPlOXLhd3NO4FNVTcnE6NHgkONS6d6ZXuLrh8imkyVfM0EVm2nSUBPb43r5NrTPQ1GVshrojcwo4S039PVhG0Dvs02iNfhDkksCd16xtEnISDvbaXhM+wJ5PeAglX6r7qsaUUfrmPpxdMrQIqxVMGt/ozuR352JS0cd5s9jPVbHsPZsxE8lKUbunzRtb8/X/qnBXiyhaVbiSwiHWEeGaMXU0l+rItwThrxCfQhdzdGkFCA0pwB2ZX1mrhmB0rtKJBRC9CMOL49tEB9a83v9UIIhJf+TKIoD0RfjUkY06OuuURMs5SPsfNBs8DN7VehROropY90NXzIHcLioAg8ee+qiIRyGlCS96DrNoSkzWrC/Tlzk8uGi/RnjpG2Tkz/OoMEeb2TsUI6mn4iUp+qLJ342HgY0w3T/fzH9og3R12iyO2/FAMKDc0rWODqD8A8uuzo6kJK9Pg+4QutkYA8VQw0T1/rlDSfNvelRukPG+6tm/IaphXyW3EtbHzJZF9rcxNpzn2g2pYlEKsjx3rwqi/OsvvWbRCzVKsrNS+aaFQCNc4+EucRfgVFR8krkcEhiBpKbSTGHxyIdGMBEpuXqLpVG+T0LeqqgQzGhvuwvhCskRjA9+l6NxVvBA1iqxDattm+8Yq/rGTiLTgekP3zjMdKrRkkAJgEnqvTo2hidBtYd3NiAGF0FH4zM6QwB9+jMlXiLLy9HUPGlXXdoLXJ02npVs20nADDXE9cdR03OMbROQ6ZPSRYgVj+UqulI1V3ZjR4Gq+ALjVB4L2TlzucTjiQ9MYLgxk4j+PC7dWh2+Wp6CznaaHmnSiihbZiA3EdqiUjgPwMaSsqF0pgQLX8vieFrgCbIAdGSkwp0FzA+1Dag6AtbemBrNnneytQM8JvXDhRgOKmOJM2XEpXaJ4ygn8dPXjs+DfSnCgZKNiD+RhQvF9UlhxPeNrmUMQWdqbrK7r2v+y9zR8C2uZT8vEuMJTRUZAZqwE+/0ByRTEge18Xda69tGEfmSGYHP/0EtvJCmSAQ5frLxBR286D/QPVP5BmftA/UbZdvr2ZMlZe998XOMOtQW2Yd07ZbcqUfuLjOyxMLPleT9TbLB1bZFrcGxs+Lp7bwbMLzHnDVcyTJ9pKYVDGCFYb80bBgZrxAHfoEorqwNQWvcNUDKekGRFQ22HnuDtX2HAukdILQOwfzd9UiP8xXKvMQgx5nFjdPtaWJlTvmUwWBPQgbHf6TP0BWGITQBNbSJscluBgep2WfvONbcYvR0tCpCm47IJ8t4GD2E2w76+uipZA3ZrnF0O4XF1DvEOAPZGnxsEzt6iTxHxErQp3d1Bwk1VoHT1WSVzjCzaOp4JsLy9KGdtFjj8aULwBU2iaXpf1i/XRKFBQ4TMsN3Aw1AhKJCne7OBPFeS/dhTa2vMBDKHeCGwKTAHX9eWOnQU5N+NtzlWVDqOMDdONNhcm2m9TBpnodfBHowlKglHMSxauBFr08StIXLHtKSBL0OKH+N/cVEIRiUrUfenK6m1hy6hbOSGbwvVcCS7uCGNyBKBJNGdH1HQpuejzFeQ5EqfRCeLuy2mF1sWUnICOAn92kjZ5csPKgjimXNKxMsbtmgxm+Pel7CFgTffQ8rXKotSQAZNz+p+eDdDHp5EL0rK0mHj0KRFiLaSan6f2mg1k4yHtrwfmEG7q0Yo+UMI+DvOqDJ6EO3jasyr38Cx45OZVxsCYwpw0Uul+FkdZYYpnrUYWJ2IJRxhNB8g=="
                    },
                    "atomic": false,
                    "chart": "metrics-server",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "p-3-metrics-server-8d1jnsa5",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes-sigs.github.io/metrics-server/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "APIService.apiregistration.k8s.io/apiregistration.k8s.io/v1": [
                            "v1beta1.metrics.k8s.io"
                        ],
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "system:metrics-server-aggregated-reader",
                            "system:p-3-metrics-server"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-3-metrics-server:system:auth-delegator",
                            "system:p-3-metrics-server"
                        ],
                        "Deployment.apps/apps/v1": [
                            "p-3-metrics-server"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-3-metrics-server-auth-reader"
                        ],
                        "Service/v1": [
                            "p-3-metrics-server"
                        ],
                        "ServiceAccount/v1": [
                            "p-3-metrics-server"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "0.6.1",
                        "chart": "metrics-server",
                        "name": "p-3-metrics-server-8d1jnsa5",
                        "namespace": "kube-system",
                        "revision": 9,
                        "status": "deployed",
                        "version": "3.8.2"
                    },
                    "timeout": 300,
                    "values": {
                        "extraArgs": [
                            "--metric-resolution=10s"
                        ],
                        "fullnameOverride": "p-3-metrics-server",
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND"
                        }
                    },
                    "verify": false,
                    "version": "3.8.2",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "namespace": null,
                    "repositoryOpts": null,
                    "values": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::local-storage-provisioner-pv-binding",
                "custom": true,
                "id": "local-storage-provisioner-pv-binding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "name": "local-storage-provisioner-pv-binding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:persistent-volume-provisioner"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "local-static-provisioner",
                            "namespace": "kube-system"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "provisioner"
                            },
                            "name": "local-storage-provisioner-pv-binding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "system:persistent-volume-provisioner"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "local-static-provisioner",
                                "namespace": "kube-system"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"provisioner\"},\"name\":\"local-storage-provisioner-pv-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"system:persistent-volume-provisioner\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"local-static-provisioner\",\"namespace\":\"kube-system\"}]}\n"
                        },
                        "creationTimestamp": "2022-08-24T18:13:51Z",
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T18:13:51Z"
                            }
                        ],
                        "name": "local-storage-provisioner-pv-binding",
                        "resourceVersion": "57140121",
                        "uid": "1f015de4-66c7-4b2a-9c05-5ec951e317b0"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "system:persistent-volume-provisioner"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "local-static-provisioner",
                            "namespace": "kube-system"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::local-static-provisioner",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apps/v1:DaemonSet::kube-system/local-volume-provisioner",
                "custom": true,
                "id": "kube-system/local-volume-provisioner",
                "type": "kubernetes:apps/v1:DaemonSet",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "DaemonSet",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "name": "local-volume-provisioner",
                        "namespace": "kube-system"
                    },
                    "spec": {
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/name": "provisioner"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "checksum/config": "9020bc1a8cc0d5f9d8448c43038ddd5c545eb18c2bb01d6fb8136ffe2fd78e09"
                                },
                                "labels": {
                                    "app.kubernetes.io/instance": "local-static-provisioner",
                                    "app.kubernetes.io/name": "provisioner"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "MY_NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MY_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "JOB_CONTAINER_IMAGE",
                                                "value": "k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0"
                                            }
                                        ],
                                        "image": "k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0",
                                        "name": "provisioner",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "name": "metrics"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "200Mi"
                                            },
                                            "requests": {
                                                "cpu": "50m",
                                                "memory": "100Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "privileged": true
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/etc/provisioner/config",
                                                "name": "provisioner-config",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/dev",
                                                "name": "provisioner-dev"
                                            },
                                            {
                                                "mountPath": "/pv-disks",
                                                "mountPropagation": "HostToContainer",
                                                "name": "nvme-ssd"
                                            }
                                        ]
                                    }
                                ],
                                "nodeSelector": {
                                    "aws.amazon.com/eks-local-ssd": "true"
                                },
                                "serviceAccountName": "local-static-provisioner",
                                "volumes": [
                                    {
                                        "configMap": {
                                            "name": "local-static-provisioner-config"
                                        },
                                        "name": "provisioner-config"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/dev"
                                        },
                                        "name": "provisioner-dev"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/pv-disks"
                                        },
                                        "name": "nvme-ssd"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "provisioner"
                            },
                            "name": "local-volume-provisioner",
                            "namespace": "kube-system"
                        },
                        "spec": {
                            "selector": {
                                "matchLabels": {
                                    "app.kubernetes.io/instance": "local-static-provisioner",
                                    "app.kubernetes.io/name": "provisioner"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "checksum/config": "9020bc1a8cc0d5f9d8448c43038ddd5c545eb18c2bb01d6fb8136ffe2fd78e09"
                                    },
                                    "labels": {
                                        "app.kubernetes.io/instance": "local-static-provisioner",
                                        "app.kubernetes.io/name": "provisioner"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "env": [
                                                {
                                                    "name": "MY_NODE_NAME",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.nodeName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MY_NAMESPACE",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.namespace"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "JOB_CONTAINER_IMAGE",
                                                    "value": "k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0"
                                                }
                                            ],
                                            "image": "k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0",
                                            "name": "provisioner",
                                            "ports": [
                                                {
                                                    "containerPort": 8080,
                                                    "name": "metrics"
                                                }
                                            ],
                                            "resources": {
                                                "limits": {
                                                    "cpu": "100m",
                                                    "memory": "200Mi"
                                                },
                                                "requests": {
                                                    "cpu": "50m",
                                                    "memory": "100Mi"
                                                }
                                            },
                                            "securityContext": {
                                                "privileged": true
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/etc/provisioner/config",
                                                    "name": "provisioner-config",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/dev",
                                                    "name": "provisioner-dev"
                                                },
                                                {
                                                    "mountPath": "/pv-disks",
                                                    "mountPropagation": "HostToContainer",
                                                    "name": "nvme-ssd"
                                                }
                                            ]
                                        }
                                    ],
                                    "nodeSelector": {
                                        "aws.amazon.com/eks-local-ssd": "true"
                                    },
                                    "serviceAccountName": "local-static-provisioner",
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "name": "local-static-provisioner-config"
                                            },
                                            "name": "provisioner-config"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/dev"
                                            },
                                            "name": "provisioner-dev"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/pv-disks"
                                            },
                                            "name": "nvme-ssd"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "DaemonSet",
                    "metadata": {
                        "annotations": {
                            "deprecated.daemonset.template.generation": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"provisioner\"},\"name\":\"local-volume-provisioner\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/name\":\"provisioner\"}},\"template\":{\"metadata\":{\"annotations\":{\"checksum/config\":\"9020bc1a8cc0d5f9d8448c43038ddd5c545eb18c2bb01d6fb8136ffe2fd78e09\"},\"labels\":{\"app.kubernetes.io/instance\":\"local-static-provisioner\",\"app.kubernetes.io/name\":\"provisioner\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"MY_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"MY_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"JOB_CONTAINER_IMAGE\",\"value\":\"k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0\"}],\"image\":\"k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0\",\"name\":\"provisioner\",\"ports\":[{\"containerPort\":8080,\"name\":\"metrics\"}],\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"100Mi\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/provisioner/config\",\"name\":\"provisioner-config\",\"readOnly\":true},{\"mountPath\":\"/dev\",\"name\":\"provisioner-dev\"},{\"mountPath\":\"/pv-disks\",\"mountPropagation\":\"HostToContainer\",\"name\":\"nvme-ssd\"}]}],\"nodeSelector\":{\"aws.amazon.com/eks-local-ssd\":\"true\"},\"serviceAccountName\":\"local-static-provisioner\",\"volumes\":[{\"configMap\":{\"name\":\"local-static-provisioner-config\"},\"name\":\"provisioner-config\"},{\"hostPath\":{\"path\":\"/dev\"},\"name\":\"provisioner-dev\"},{\"hostPath\":{\"path\":\"/pv-disks\"},\"name\":\"nvme-ssd\"}]}}}}\n"
                        },
                        "creationTimestamp": "2022-08-24T18:13:51Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "local-static-provisioner",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "provisioner"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:observedGeneration": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-24T18:13:51Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:deprecated.daemonset.template.generation": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:checksum/config": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/name": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"provisioner\"}": {
                                                        ".": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"JOB_CONTAINER_IMAGE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"MY_NAMESPACE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MY_NODE_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:securityContext": {
                                                            ".": {},
                                                            "f:privileged": {}
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/dev\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/etc/provisioner/config\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/pv-disks\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:mountPropagation": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:nodeSelector": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"nvme-ssd\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"provisioner-config\"}": {
                                                        ".": {},
                                                        "f:configMap": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:name": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"provisioner-dev\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:updateStrategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T18:13:51Z"
                            }
                        ],
                        "name": "local-volume-provisioner",
                        "namespace": "kube-system",
                        "resourceVersion": "57140124",
                        "uid": "0ddad236-a73f-42c0-8513-c64585f1167e"
                    },
                    "spec": {
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "local-static-provisioner",
                                "app.kubernetes.io/name": "provisioner"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "checksum/config": "9020bc1a8cc0d5f9d8448c43038ddd5c545eb18c2bb01d6fb8136ffe2fd78e09"
                                },
                                "labels": {
                                    "app.kubernetes.io/instance": "local-static-provisioner",
                                    "app.kubernetes.io/name": "provisioner"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "MY_NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MY_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "JOB_CONTAINER_IMAGE",
                                                "value": "k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0"
                                            }
                                        ],
                                        "image": "k8s.gcr.io/sig-storage/local-volume-provisioner:v2.4.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "name": "provisioner",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "name": "metrics",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "100m",
                                                "memory": "200Mi"
                                            },
                                            "requests": {
                                                "cpu": "50m",
                                                "memory": "100Mi"
                                            }
                                        },
                                        "securityContext": {
                                            "privileged": true
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/etc/provisioner/config",
                                                "name": "provisioner-config",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/dev",
                                                "name": "provisioner-dev"
                                            },
                                            {
                                                "mountPath": "/pv-disks",
                                                "mountPropagation": "HostToContainer",
                                                "name": "nvme-ssd"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "nodeSelector": {
                                    "aws.amazon.com/eks-local-ssd": "true"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "local-static-provisioner",
                                "serviceAccountName": "local-static-provisioner",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "name": "local-static-provisioner-config"
                                        },
                                        "name": "provisioner-config"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/dev",
                                            "type": ""
                                        },
                                        "name": "provisioner-dev"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/pv-disks",
                                            "type": ""
                                        },
                                        "name": "nvme-ssd"
                                    }
                                ]
                            }
                        },
                        "updateStrategy": {
                            "rollingUpdate": {
                                "maxSurge": 0,
                                "maxUnavailable": 1
                            },
                            "type": "RollingUpdate"
                        }
                    },
                    "status": {
                        "currentNumberScheduled": 0,
                        "desiredNumberScheduled": 0,
                        "numberMisscheduled": 0,
                        "numberReady": 0,
                        "observedGeneration": 1
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::local-static-provisioner",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::p-3-cluster-autoscaler",
                "custom": true,
                "id": "kube-system/p-3-cluster-autoscaler-0bwdl99s",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "cluster-autoscaler",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "p-3-cluster-autoscaler-0bwdl99s",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes.github.io/autoscaler",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-3-cluster-autoscaler"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-3-cluster-autoscaler"
                        ],
                        "ConfigMap/v1": [
                            "kube-system/cluster-autoscaler-priority-expander"
                        ],
                        "Deployment.apps/apps/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "PodDisruptionBudget.policy/policy/v1beta1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "Service/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "ServiceAccount/v1": [
                            "kube-system/cluster-autoscaler"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "autoDiscovery": {
                            "clusterName": "p-3-eks-cluster-eksCluster-fd821aa"
                        },
                        "awsRegion": "us-west-2",
                        "cloudProvider": "aws",
                        "expanderPriorities": {
                            "1": [
                                ".*p-3-common-ng-arm64.*",
                                ".*p-3-common-ng-x86.*",
                                ".*p-3-nitrous-ng-arm.*"
                            ]
                        },
                        "extraArgs": {
                            "expander": "priority"
                        },
                        "fullnameOverride": "p-3-cluster-autoscaler",
                        "image": {
                            "tag": "v1.24.0"
                        },
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND"
                        },
                        "podAnnotations": {
                            "prometheus.io/port": "8085",
                            "prometheus.io/scrape": "true"
                        },
                        "rbac": {
                            "serviceAccount": {
                                "annotations": {
                                    "eks.amazonaws.com/role-arn": "arn:aws:iam::030813887342:role/p-3-autoscaler-role20220621013447476800000001"
                                },
                                "name": "cluster-autoscaler"
                            }
                        },
                        "replicaCount": 1
                    },
                    "verify": false,
                    "version": "9.19.2",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAItdOQps3qg/gyLYW62hIpZv/Sb8IoORUF4YSv5g1TYTMdt1y1hXitXL0PZF0bNDHUcAnKPNO37G7HlWlnW5Y7TBUBn1sgxGXe2Bn94CGWNlgMCqtov8DDuYz8Plh8atX9j/1Xg27/FwSdb8IJC4PmXqnvNZREOyNrGHO1XtZNog2u+ikH3KQ/gB8LbZ6yvQXEPVo+gMC7jj6C59dFlFFUAiXCBOu7AjPMF4F7UFvtMjw730vL3eCzgrtKf7sN9CSoi4mCHOjz48uYvmUZX/7hi3bSpfC2Oh3ktpxDikQWRHP0YsHyuiBE2ejr64K8jwT2oq6xVRPRNCd5mPCrTvhahTTIg8nTTRVDdLMnBK0U8AXm40hOHmFHs77AMeFMDKKXYLIB7KCCcCNFhLdgWn5aGZr89egdG4SmF/sgdGtg5jhK1d6jKA16DUJwG1gkcKyeC1UBdFv0PNCZ2m0NHD2Y3ue3t0akO20AQ2JOF79wF6feRePj9JR/QKsjYKkl3VKOtworn7avp804HVU9cc6eW4vW16OZQk/Wey/kOXh0YlELke0S5oGdS4Scr/y/Qysb3FKDlZ1Ri9kSO8Rx0sBjJVEcRYfewwA4AMSQEfMJSWdIJKPXMQebBdm9nlvj3amxj9QGVT08jDya0O+wARGXLNe8/Y1modoR/XXf86DqEeRIg4tR36jnn45B+PvEy91DZu/4aheptiJl9RKsqCaCWieZtcqfxMVXUylxOPJEA1lHAKopuGD1ez7s/UXN/9vuuPOfAKZ0dlsqQ7cUoP5QTN/Zl4neww/psD27kAOjajJEHYeKrEsl3ugGx4S0w9HBoJwjc6ArPaGViT/FIBwVlu6LtzN3qTumBqtClJr8PbGIGIvzFnJl5QL7d0YMjzzYGUENpEpkY2ipcsoSiqn86POsE31Hnohs/ZnncW9JANUoIhFPXkAinbjHRrrcRTvJ4Mwq8pru3E0T7eNmbvtqePbzT8qdwpTVYwrrvjutT/EijODvCwR6h9kGAlEqBpknVr7dhvJGk/i8JOjzSuB3GvdQHwixF3RC9hTW74JWafNAcD8LJKXiHN9FZgPVXmQ8YWO2wsKCayUiyN/4gloyXkr2YrBUT/+lj4enamGsFi0vfbkKNp4L1of54ciRO+9Tg26F1K6DSZAirbc4NkamK1YGaRPEUacVvfXpqWiRmaBfkNVbvdoyNVlqqp295b9EvD46v9zWqJApAv6yIp3DT55Mltz/wAR02e+dBndSRpnqCSxpRBNXElLTkNtIL5VNYEE1wuMUNwN/kHcTLoHkuRn8+k/DB/0wD2vuO/txNzikoljsPmOb/CaimjDc4XSdty74VvjJi8YONi9hPOi+CZDNR4akZYpTJpSO5dld8055o4nxNRWjDbXqehXk5ofA6WHsA7oU0uwK67U8G4Lq4GybBYFVsTztPWpXVzzKXP0VhPLfPSzQpj4tWHm+mMRrjWiv1bznwf6aPx5IQb0ZKoRVH1zA010GCfo2VVTgT0aVOO8lwNwyUmb1icN0qtF0WbtYsnsyk25s2G28yFw6hjNsyYEIOTbhlNAkbSBMTTPsVaN9PfWU+0PDNDFZeu8zVUALL8CpqI8X6BeorsbAe6DTJgaG+KsN0pPFhjwdUYnj7hXeEkF6Q9VA5ks8Bm8H51Mk5ab26T4aPDUWjyUDhlehmZT8h/cio/D7fTcFpyUDPJjMEaUE5hwSOK1x7aAT4o4oRciS84mR1JYabLfI14Gwgb7IXa8GAKbOdQL2PTXAKle5+aN0Qnuj0hRQvoUv/5lMJDyjLNiKenxZXsnzi2I93GrDQQyOUu1V/IvSKw36G45UL30ni4xCTbn/V4KlNf1W2MlqQUgC86zfvjdni9yP+tALzIGc/rTYWSt+9tWt18m7N97fJfV3/UjYu/UZZKpgmQ1GY5uPIvYiDSV2k6i9x7oroHHebZ5O+HXItOjfw0bztUSR805zwoJA/2cU4U8qBoRbQF0GCm6rN3LdWfuYcfCOQ418kc2fQCjBYsP5YciQ1dNBRN94otyDZAs0hCzRKJwZN5tPa+nq83gKoxt7BtDVFtkZSf+yFFDkSPrI+CVccs1BRi0ma2mBnXeO4YcqfiVpNII12plkda2Z9yZ7P30zYf4KwEM8rGf0KXCoV79leaNlwwjrvcfpS4P9WummNLjMVi2AlJgF6rUk5Jy9+nv4cptZFCYtJG1qNS5rrPvSOum4+IHup8xTaGDrM3ZwAwceYrN9xh4Yh4BlLU8FnZi/x0LZLunEozDsPUqNKCMRu4TPSyMjYEVQM2MpPxIRd3+fznt4VyAKvks45lQl37sGrPfhgJEjOj62KWFh/eoza8+B6m/zr49+lN/TO5DDA3v89J18/ath1ZmACRts3MGRXRj8yKJEEvcdCopt26XNqxSURWuLnwHydv9A7cOMgqWO6tMWCDlZu17r7iyb6bqD/90EMwbKlmbLTkyFqtmlS4p46xydjjrtuvHwXWF1+GeDmFZux3gJxl+4oHAKgvM0KKW3tvkzyq2JVyVabdmzA9dWJf1apDXQ0YFuutBX6vrjX5YpU2pqR7h5e3kt4DXkXSnvNVf4Dm3BM0b1AgRboZchfM8tsNQbp/jow5zo9MgcaFfPVOausbv566kkN2VFqAfTN0co6MQDppp+2W3lX0k8cHX0xXlgOgmvfojSJ4Wo+C0qCb7E/RVZckwaTR4+1fiF1McZeHSFaxr+KKhbAdFTNdwK6P+d8Z7WyGMOxoN/S61GoefBJcc6G7BGpltxvVxvPA+qjOeIfkmBfuE5JuXEuSMrDgrZYUwJ2CpYP0ZwXG/yOdvJHxPlnp7fmJOVMCUdI0u0kGKvBQGVhA4cQ="
                    },
                    "atomic": false,
                    "chart": "cluster-autoscaler",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "p-3-cluster-autoscaler-0bwdl99s",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes.github.io/autoscaler",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-3-cluster-autoscaler"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-3-cluster-autoscaler"
                        ],
                        "ConfigMap/v1": [
                            "kube-system/cluster-autoscaler-priority-expander"
                        ],
                        "Deployment.apps/apps/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "PodDisruptionBudget.policy/policy/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "Service/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "ServiceAccount/v1": [
                            "kube-system/cluster-autoscaler"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "1.23.0",
                        "chart": "cluster-autoscaler",
                        "name": "p-3-cluster-autoscaler-0bwdl99s",
                        "namespace": "kube-system",
                        "revision": 9,
                        "status": "deployed",
                        "version": "9.19.2"
                    },
                    "timeout": 300,
                    "values": {
                        "autoDiscovery": {
                            "clusterName": "p-3-eks-cluster-eksCluster-fd821aa"
                        },
                        "awsRegion": "us-west-2",
                        "cloudProvider": "aws",
                        "expanderPriorities": {
                            "1": [
                                ".*p-3-common-ng-arm64.*",
                                ".*p-3-common-ng-x86.*",
                                ".*p-3-nitrous-ng-arm.*"
                            ]
                        },
                        "extraArgs": {
                            "expander": "priority"
                        },
                        "fullnameOverride": "p-3-cluster-autoscaler",
                        "image": {
                            "tag": "v1.24.0"
                        },
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND"
                        },
                        "podAnnotations": {
                            "prometheus.io/port": "8085",
                            "prometheus.io/scrape": "true"
                        },
                        "rbac": {
                            "serviceAccount": {
                                "annotations": {
                                    "eks.amazonaws.com/role-arn": "arn:aws:iam::030813887342:role/p-3-autoscaler-role20220621013447476800000001"
                                },
                                "name": "cluster-autoscaler"
                            }
                        },
                        "replicaCount": 1
                    },
                    "verify": false,
                    "version": "9.19.2",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "namespace": null,
                    "repositoryOpts": null,
                    "values": null,
                    "version": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:rds/subnetGroup:SubnetGroup::p-3-postgres-db-subnetgroup",
                "custom": true,
                "id": "p-3-postgres-db-subnetgroup-0cc59b0",
                "type": "aws:rds/subnetGroup:SubnetGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Subnet group for postgres database",
                    "name": "p-3-postgres-db-subnetgroup-0cc59b0",
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:rds:us-west-2:030813887342:subgrp:p-3-postgres-db-subnetgroup-0cc59b0",
                    "description": "Subnet group for postgres database",
                    "id": "p-3-postgres-db-subnetgroup-0cc59b0",
                    "name": "p-3-postgres-db-subnetgroup-0cc59b0",
                    "subnetIds": [
                        "subnet-0615a2647b66a222c",
                        "subnet-0e17b2c51bb9d79f4"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::p-3-postgres-aurora-aws-provider::c440de75-6a26-42c1-9ded-c5ddbea8da37",
                "propertyDependencies": {
                    "description": null,
                    "subnetIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ],
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:VpcCni::p-3-eks-cluster-vpc-cni",
                "custom": true,
                "id": "1171d44f53c5e67f",
                "type": "eks:index:VpcCni",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\",\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1alpha1\",\"command\":\"aws\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"]}}}]}"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:eks::default::1da20d10-d4ee-446a-b946-89f9f58ee49f",
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-attach-ebs-policy",
                "custom": true,
                "id": "p-3-ebs-csi-controller-sa20220727184016758800000002-20220727184024443900000003",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::030813887342:policy/p-3-EbsCsiDriverIAMPolicy20220727184014747600000001",
                    "role": "p-3-ebs-csi-controller-sa20220727184016758800000002"
                },
                "outputs": {
                    "id": "p-3-ebs-csi-controller-sa20220727184016758800000002-20220727184024443900000003",
                    "policyArn": "arn:aws:iam::030813887342:policy/p-3-EbsCsiDriverIAMPolicy20220727184014747600000001",
                    "role": "p-3-ebs-csi-controller-sa20220727184016758800000002"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/policy:Policy::p-3-ebs-driver-policy",
                    "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-csi-driver-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "policyArn": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/policy:Policy::p-3-ebs-driver-policy"
                    ],
                    "role": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-csi-driver-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:ServiceAccount::csi-driver-ac",
                "custom": true,
                "id": "kube-system/ebs-csi-controller-sa",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "automountServiceAccountToken": true,
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "eks.amazonaws.com/role-arn": "arn:aws:iam::030813887342:role/p-3-ebs-csi-controller-sa20220727184016758800000002"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "ebs-csi-controller-sa",
                        "namespace": "kube-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "automountServiceAccountToken": true,
                        "kind": "ServiceAccount",
                        "metadata": {
                            "annotations": {
                                "eks.amazonaws.com/role-arn": "arn:aws:iam::030813887342:role/p-3-ebs-csi-controller-sa20220727184016758800000002"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "ebs-csi-controller-sa",
                            "namespace": "kube-system"
                        }
                    },
                    "apiVersion": "v1",
                    "automountServiceAccountToken": true,
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "eks.amazonaws.com/role-arn": "arn:aws:iam::030813887342:role/p-3-ebs-csi-controller-sa20220727184016758800000002",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"automountServiceAccountToken\":true,\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::030813887342:role/p-3-ebs-csi-controller-sa20220727184016758800000002\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"ebs-csi-controller-sa\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2022-07-27T18:40:24Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"ebs-csi-controller-sa-token-wzl4r\"}": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-07-27T18:40:24Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:automountServiceAccountToken": {},
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:eks.amazonaws.com/role-arn": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-07-27T18:40:24Z"
                            }
                        ],
                        "name": "ebs-csi-controller-sa",
                        "namespace": "kube-system",
                        "resourceVersion": "43767110",
                        "uid": "29c896bb-3cdc-4882-9f23-d1635f05f33a"
                    },
                    "secrets": [
                        {
                            "name": "ebs-csi-controller-sa-token-wzl4r"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-csi-driver-role"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "automountServiceAccountToken": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-csi-driver-role"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ecr/lifecyclePolicy:LifecyclePolicy::p-3-model-monitoring-repo-policy",
                "custom": true,
                "id": "p-3-model-monitoring-repo-c78e5db",
                "type": "aws:ecr/lifecyclePolicy:LifecyclePolicy",
                "inputs": {
                    "__defaults": [],
                    "policy": "{\"rules\":[{\"action\":{\"type\":\"expire\"},\"description\":\"Policy to expire images after 120 days\",\"rulePriority\":1,\"selection\":{\"countNumber\":30,\"countType\":\"sinceImagePushed\",\"countUnit\":\"days\",\"tagStatus\":\"any\"}}]}",
                    "repository": "p-3-model-monitoring-repo-c78e5db"
                },
                "outputs": {
                    "id": "p-3-model-monitoring-repo-c78e5db",
                    "policy": "{\"rules\":[{\"action\":{\"type\":\"expire\"},\"description\":\"Policy to expire images after 120 days\",\"rulePriority\":1,\"selection\":{\"countNumber\":30,\"countType\":\"sinceImagePushed\",\"countUnit\":\"days\",\"tagStatus\":\"any\"}}]}",
                    "registryId": "030813887342",
                    "repository": "p-3-model-monitoring-repo-c78e5db"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ecr/repository:Repository::p-3-model-monitoring-repo"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::model-monitoring-aws-provider::a16976e2-e417-402a-9e51-07bd24614a27",
                "propertyDependencies": {
                    "policy": null,
                    "repository": [
                        "urn:pulumi:plane-3::launchpad::aws:ecr/repository:Repository::p-3-model-monitoring-repo"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/user:User::conn-sink-user",
                "custom": true,
                "id": "p-3-conn-sink-user",
                "type": "aws:iam/user:User",
                "inputs": {
                    "__defaults": [
                        "forceDestroy"
                    ],
                    "forceDestroy": false,
                    "name": "p-3-conn-sink-user",
                    "path": "/conf_conn_user/",
                    "tags": {
                        "__defaults": [],
                        "managed_by": "fennel.ai",
                        "plane": "p-3",
                        "sink": "p-3-training-data"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:user/conf_conn_user/p-3-conn-sink-user",
                    "forceDestroy": false,
                    "id": "p-3-conn-sink-user",
                    "name": "p-3-conn-sink-user",
                    "path": "/conf_conn_user/",
                    "tags": {
                        "managed_by": "fennel.ai",
                        "plane": "p-3",
                        "sink": "p-3-training-data"
                    },
                    "tagsAll": {
                        "managed_by": "fennel.ai",
                        "plane": "p-3",
                        "sink": "p-3-training-data"
                    },
                    "uniqueId": "AIDAQOLFGTNXNHD3ZEKT4"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::conn-sink-bucket"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::connector-sink-aws-provider::3cc7c16b-f14f-4caf-9a2f-369ea16085f6",
                "propertyDependencies": {
                    "name": null,
                    "path": null,
                    "tags": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:s3/bucketObject:BucketObject::p-3-cf-source-object",
                "custom": true,
                "id": "cf.py",
                "type": "aws:s3/bucketObject:BucketObject",
                "inputs": {
                    "__defaults": [
                        "acl",
                        "forceDestroy"
                    ],
                    "acl": "private",
                    "bucket": "p-3-offline-aggregate-source",
                    "etag": "6a1f44bd15a1bac858fd46181d090274",
                    "forceDestroy": false,
                    "key": "cf.py",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "e30f3411875ccacd07deb9d591510357dfc5178820d4a842f2fbda3a4c9283eb",
                        "path": "/Users/mohitreddy/rexer/pyspark/cf.py"
                    },
                    "sourceHash": "6a1f44bd15a1bac858fd46181d090274"
                },
                "outputs": {
                    "acl": "private",
                    "bucket": "p-3-offline-aggregate-source",
                    "bucketKeyEnabled": false,
                    "cacheControl": "",
                    "contentDisposition": "",
                    "contentEncoding": "",
                    "contentLanguage": "",
                    "contentType": "binary/octet-stream",
                    "etag": "6a1f44bd15a1bac858fd46181d090274",
                    "forceDestroy": false,
                    "id": "cf.py",
                    "key": "cf.py",
                    "metadata": {},
                    "objectLockLegalHoldStatus": "",
                    "objectLockMode": "",
                    "objectLockRetainUntilDate": "",
                    "serverSideEncryption": "",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "e30f3411875ccacd07deb9d591510357dfc5178820d4a842f2fbda3a4c9283eb",
                        "path": "/Users/sfu/fennel-ai/rexer/pyspark/cf.py"
                    },
                    "sourceHash": "6a1f44bd15a1bac858fd46181d090274",
                    "storageClass": "STANDARD",
                    "tags": {},
                    "tagsAll": {},
                    "versionId": "",
                    "websiteRedirect": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::p-3-offline-aggregate-source-bucket"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::offline-aggregate-source-aws-provider::739626f9-b430-4703-8282-4e46ba9b0dbd",
                "propertyDependencies": {
                    "bucket": [
                        "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::p-3-offline-aggregate-source-bucket"
                    ],
                    "etag": null,
                    "key": null,
                    "source": null,
                    "sourceHash": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:s3/bucketObject:BucketObject::p-3-topk-source-object",
                "custom": true,
                "id": "topk.py",
                "type": "aws:s3/bucketObject:BucketObject",
                "inputs": {
                    "__defaults": [
                        "acl",
                        "forceDestroy"
                    ],
                    "acl": "private",
                    "bucket": "p-3-offline-aggregate-source",
                    "etag": "47a215f2872099e6d776a49497b51e1c",
                    "forceDestroy": false,
                    "key": "topk.py",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "37952d2751e912c93e23326b3681845467b57155b9504e47697ee95bda3f3365",
                        "path": "/Users/mohitreddy/rexer/pyspark/topk.py"
                    },
                    "sourceHash": "47a215f2872099e6d776a49497b51e1c"
                },
                "outputs": {
                    "acl": "private",
                    "bucket": "p-3-offline-aggregate-source",
                    "bucketKeyEnabled": false,
                    "cacheControl": "",
                    "contentDisposition": "",
                    "contentEncoding": "",
                    "contentLanguage": "",
                    "contentType": "binary/octet-stream",
                    "etag": "47a215f2872099e6d776a49497b51e1c",
                    "forceDestroy": false,
                    "id": "topk.py",
                    "key": "topk.py",
                    "metadata": {},
                    "objectLockLegalHoldStatus": "",
                    "objectLockMode": "",
                    "objectLockRetainUntilDate": "",
                    "serverSideEncryption": "",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "37952d2751e912c93e23326b3681845467b57155b9504e47697ee95bda3f3365",
                        "path": "/Users/sfu/fennel-ai/rexer/pyspark/topk.py"
                    },
                    "sourceHash": "47a215f2872099e6d776a49497b51e1c",
                    "storageClass": "STANDARD",
                    "tags": {},
                    "tagsAll": {},
                    "versionId": "",
                    "websiteRedirect": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::p-3-offline-aggregate-source-bucket"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::offline-aggregate-source-aws-provider::739626f9-b430-4703-8282-4e46ba9b0dbd",
                "propertyDependencies": {
                    "bucket": [
                        "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::p-3-offline-aggregate-source-bucket"
                    ],
                    "etag": null,
                    "key": null,
                    "source": null,
                    "sourceHash": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/accessKey:AccessKey::milvus-p-3-access-key",
                "custom": true,
                "id": "AKIAQOLFGTNXMQUOE2HK",
                "type": "aws:iam/accessKey:AccessKey",
                "inputs": {
                    "__defaults": [
                        "status"
                    ],
                    "status": "Active",
                    "user": "p-3-milvus-user"
                },
                "outputs": {
                    "createDate": "2022-06-07T07:21:08Z",
                    "id": "AKIAQOLFGTNXMQUOE2HK",
                    "secret": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABALRosjJY+mN2pKFIRdjTwPnpsVNAvzs9G6Z3aP5NH6aiif7LEz6+iIzUIk0yTMnzEHOvBJg5b5wTHuYlOl89rkQGOHXW57c="
                    },
                    "sesSmtpPasswordV4": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAH8MUEZo208MBW++igZaKq51WM2X9IGhzVbWGzdtEEPZPGdYjb9nubI4kJbdcX7lJI9/bbyZ20GPmlFwOkJpgo5Ezv6AMZ9+vOUK"
                    },
                    "status": "Active",
                    "user": "p-3-milvus-user"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/user:User::milvus-p-3"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::milvus-aws-provider::a98e4333-c33d-4116-abce-a093e2ecb200",
                "propertyDependencies": {
                    "user": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/user:User::milvus-p-3"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::milvus-bucket-3",
                "custom": true,
                "id": "p-3-milvus-data",
                "type": "aws:s3/bucket:Bucket",
                "inputs": {
                    "__defaults": [
                        "acl",
                        "forceDestroy"
                    ],
                    "acl": "private",
                    "bucket": "p-3-milvus-data",
                    "forceDestroy": false,
                    "policy": "{\"Statement\":[{\"Action\":[\"s3:*\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::030813887342:user/p-3-milvus-user\"},\"Resource\":[\"arn:aws:s3:::p-3-milvus-data\",\"arn:aws:s3:::p-3-milvus-data/*\"]}],\"Version\":\"2012-10-17\"}"
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::p-3-milvus-data",
                    "bucket": "p-3-milvus-data",
                    "bucketDomainName": "p-3-milvus-data.s3.amazonaws.com",
                    "bucketRegionalDomainName": "p-3-milvus-data.s3.us-west-2.amazonaws.com",
                    "corsRules": [],
                    "forceDestroy": false,
                    "grants": [],
                    "hostedZoneId": "Z3BJ6K6RIION7M",
                    "id": "p-3-milvus-data",
                    "lifecycleRules": [],
                    "loggings": [],
                    "objectLockConfiguration": null,
                    "policy": "{\"Statement\":[{\"Action\":[\"s3:*\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::030813887342:user/p-3-milvus-user\"},\"Resource\":[\"arn:aws:s3:::p-3-milvus-data\",\"arn:aws:s3:::p-3-milvus-data/*\"]}],\"Version\":\"2012-10-17\"}",
                    "region": "us-west-2",
                    "replicationConfiguration": null,
                    "requestPayer": "BucketOwner",
                    "serverSideEncryptionConfiguration": null,
                    "tags": {},
                    "tagsAll": {},
                    "versioning": {
                        "enabled": false,
                        "mfaDelete": false
                    },
                    "website": null
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/user:User::milvus-p-3"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::milvus-aws-provider::a98e4333-c33d-4116-abce-a093e2ecb200",
                "propertyDependencies": {
                    "bucket": null,
                    "policy": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/user:User::milvus-p-3"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-redis-allow-connected-cidr",
                "custom": true,
                "id": "sgrule-189653717",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-09e571f0713759de2",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-189653717",
                    "protocol": "tcp",
                    "securityGroupId": "sg-09e571f0713759de2",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-redis-sg"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::redis-aws-provider::5e1ff797-2ef0-488a-9b9f-7f4d89f937d2",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-redis-sg"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::confluent:index/kafkaCluster:KafkaCluster::cluster",
                "custom": true,
                "id": "lkc-811rkq",
                "type": "confluent:index/kafkaCluster:KafkaCluster",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "availability": "LOW",
                    "environmentId": "env-ry1w0",
                    "name": "cluster-4a33703",
                    "region": "us-west-2",
                    "serviceProvider": "AWS"
                },
                "outputs": {
                    "availability": "LOW",
                    "bootstrapServers": "SASL_SSL://pkc-pgq85.us-west-2.aws.confluent.cloud:9092",
                    "environmentId": "env-ry1w0",
                    "id": "lkc-811rkq",
                    "name": "cluster-4a33703",
                    "region": "us-west-2",
                    "serviceProvider": "AWS"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::confluent:index/confluentEnvironment:ConfluentEnvironment::conf-env"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:confluent::conf-provider::a04ab6f7-c710-478f-b18e-57c5f42d108e",
                "propertyDependencies": {
                    "availability": null,
                    "environmentId": [
                        "urn:pulumi:plane-3::launchpad::confluent:index/confluentEnvironment:ConfluentEnvironment::conf-env"
                    ],
                    "region": null,
                    "serviceProvider": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-aurora-allow-connected-cidr",
                "custom": true,
                "id": "sgrule-2968767633",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-05840b7dcfd0ec43f",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-2968767633",
                    "protocol": "tcp",
                    "securityGroupId": "sg-05840b7dcfd0ec43f",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-db-sg"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aurora-aws-provider::134d52f5-7f5e-4454-b1be-748af511a354",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-db-sg"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-cache-allow-connected-cidr",
                "custom": true,
                "id": "sgrule-4232553623",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-05be6e341ac459146",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-4232553623",
                    "protocol": "tcp",
                    "securityGroupId": "sg-05be6e341ac459146",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-cache-sg"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::cache-aws-provider::54ec0dc8-ad8a-4494-ba57-cb43e332ab76",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-cache-sg"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:s3/bucketObject:BucketObject::py-source-object",
                "custom": true,
                "id": "aws_glue_parquet_transforms.py",
                "type": "aws:s3/bucketObject:BucketObject",
                "inputs": {
                    "__defaults": [
                        "acl",
                        "forceDestroy"
                    ],
                    "acl": "private",
                    "bucket": "p-3-gluejob-source",
                    "etag": "f9a60c63a556e6596847f2f225150ed8",
                    "forceDestroy": false,
                    "key": "aws_glue_parquet_transforms.py",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "18e847356f3cdab7af4fd880ae4b0bec47ce4148be8d4c1f341d39feb460663e",
                        "path": "/Users/mohitreddy/rexer/tools/aws_glue_parquet_transform.py"
                    },
                    "sourceHash": "f9a60c63a556e6596847f2f225150ed8"
                },
                "outputs": {
                    "acl": "private",
                    "bucket": "p-3-gluejob-source",
                    "bucketKeyEnabled": false,
                    "cacheControl": "",
                    "contentDisposition": "",
                    "contentEncoding": "",
                    "contentLanguage": "",
                    "contentType": "binary/octet-stream",
                    "etag": "f9a60c63a556e6596847f2f225150ed8",
                    "forceDestroy": false,
                    "id": "aws_glue_parquet_transforms.py",
                    "key": "aws_glue_parquet_transforms.py",
                    "metadata": {},
                    "objectLockLegalHoldStatus": "",
                    "objectLockMode": "",
                    "objectLockRetainUntilDate": "",
                    "serverSideEncryption": "",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "18e847356f3cdab7af4fd880ae4b0bec47ce4148be8d4c1f341d39feb460663e",
                        "path": "/Users/mohitreddy/rexer/tools/aws_glue_parquet_transform.py"
                    },
                    "sourceHash": "f9a60c63a556e6596847f2f225150ed8",
                    "storageClass": "STANDARD",
                    "tags": {},
                    "tagsAll": {},
                    "versionId": "",
                    "websiteRedirect": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::glue-source-bucket"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::glue-source-aws-provider::40273a30-d6a9-4dc6-a682-d54c3ddb7967",
                "propertyDependencies": {
                    "bucket": [
                        "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::glue-source-bucket"
                    ],
                    "etag": null,
                    "key": null,
                    "source": null,
                    "sourceHash": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:memorydb/cluster:Cluster::p-3-redis-db",
                "custom": true,
                "id": "p-3-redis-db-57b5586",
                "type": "aws:memorydb/cluster:Cluster",
                "inputs": {
                    "__defaults": [
                        "description",
                        "name"
                    ],
                    "aclName": "open-access",
                    "autoMinorVersionUpgrade": true,
                    "description": "Managed by Terraform",
                    "engineVersion": "6.2",
                    "name": "p-3-redis-db-57b5586",
                    "nodeType": "db.t4g.medium",
                    "numReplicasPerShard": 0,
                    "numShards": 4,
                    "securityGroupIds": [
                        "sg-09e571f0713759de2"
                    ],
                    "subnetGroupName": "p-3-redis-subnet-group-4fc6ede",
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "tlsEnabled": true
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":7200000000000,\"delete\":7200000000000,\"update\":7200000000000}}",
                    "aclName": "open-access",
                    "arn": "arn:aws:memorydb:us-west-2:030813887342:cluster/p-3-redis-db-57b5586",
                    "autoMinorVersionUpgrade": true,
                    "clusterEndpoints": [
                        {
                            "address": "clustercfg.p-3-redis-db-57b5586.fbjfph.memorydb.us-west-2.amazonaws.com",
                            "port": 6379
                        }
                    ],
                    "description": "Managed by Terraform",
                    "enginePatchVersion": "6.2.4",
                    "engineVersion": "6.2",
                    "id": "p-3-redis-db-57b5586",
                    "kmsKeyArn": "",
                    "maintenanceWindow": "fri:06:30-fri:07:30",
                    "name": "p-3-redis-db-57b5586",
                    "namePrefix": "",
                    "nodeType": "db.t4g.medium",
                    "numReplicasPerShard": 0,
                    "numShards": 4,
                    "parameterGroupName": "default.memorydb-redis6",
                    "port": 6379,
                    "securityGroupIds": [
                        "sg-09e571f0713759de2"
                    ],
                    "shards": [
                        {
                            "name": "0004",
                            "nodes": [
                                {
                                    "availabilityZone": "us-west-2b",
                                    "createTime": "2022-06-25T18:05:03Z",
                                    "endpoints": [
                                        {
                                            "address": "p-3-redis-db-57b5586-0004-001.p-3-redis-db-57b5586.fbjfph.memorydb.us-west-2.amazonaws.com",
                                            "port": 6379
                                        }
                                    ],
                                    "name": "p-3-redis-db-57b5586-0004-001"
                                }
                            ],
                            "numNodes": 1,
                            "slots": "3362-7457"
                        },
                        {
                            "name": "0001",
                            "nodes": [
                                {
                                    "availabilityZone": "us-west-2a",
                                    "createTime": "2022-03-22T03:13:36Z",
                                    "endpoints": [
                                        {
                                            "address": "p-3-redis-db-57b5586-0001-001.p-3-redis-db-57b5586.fbjfph.memorydb.us-west-2.amazonaws.com",
                                            "port": 6379
                                        }
                                    ],
                                    "name": "p-3-redis-db-57b5586-0001-001"
                                }
                            ],
                            "numNodes": 1,
                            "slots": "12288-16383"
                        },
                        {
                            "name": "0003",
                            "nodes": [
                                {
                                    "availabilityZone": "us-west-2a",
                                    "createTime": "2022-06-25T18:05:03Z",
                                    "endpoints": [
                                        {
                                            "address": "p-3-redis-db-57b5586-0003-001.p-3-redis-db-57b5586.fbjfph.memorydb.us-west-2.amazonaws.com",
                                            "port": 6379
                                        }
                                    ],
                                    "name": "p-3-redis-db-57b5586-0003-001"
                                }
                            ],
                            "numNodes": 1,
                            "slots": "8192-12287"
                        },
                        {
                            "name": "0002",
                            "nodes": [
                                {
                                    "availabilityZone": "us-west-2b",
                                    "createTime": "2022-06-21T05:53:59Z",
                                    "endpoints": [
                                        {
                                            "address": "p-3-redis-db-57b5586-0002-001.p-3-redis-db-57b5586.fbjfph.memorydb.us-west-2.amazonaws.com",
                                            "port": 6379
                                        }
                                    ],
                                    "name": "p-3-redis-db-57b5586-0002-001"
                                }
                            ],
                            "numNodes": 1,
                            "slots": "0-3361,7458-8191"
                        }
                    ],
                    "snapshotArns": null,
                    "snapshotRetentionLimit": 0,
                    "snapshotWindow": "08:30-09:30",
                    "snsTopicArn": "",
                    "subnetGroupName": "p-3-redis-subnet-group-4fc6ede",
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "tlsEnabled": true
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-redis-sg",
                    "urn:pulumi:plane-3::launchpad::aws:memorydb/subnetGroup:SubnetGroup::p-3-redis-subnet-group"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::redis-aws-provider::5e1ff797-2ef0-488a-9b9f-7f4d89f937d2",
                "propertyDependencies": {
                    "aclName": null,
                    "autoMinorVersionUpgrade": null,
                    "engineVersion": null,
                    "nodeType": null,
                    "numReplicasPerShard": null,
                    "numShards": null,
                    "securityGroupIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-redis-sg"
                    ],
                    "subnetGroupName": [
                        "urn:pulumi:plane-3::launchpad::aws:memorydb/subnetGroup:SubnetGroup::p-3-redis-subnet-group"
                    ],
                    "tags": null,
                    "tlsEnabled": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-postgres-aurora-allow-connected-cidr",
                "custom": true,
                "id": "sgrule-1008228184",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-07b6818f917ecc054",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-1008228184",
                    "protocol": "tcp",
                    "securityGroupId": "sg-07b6818f917ecc054",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-postgres-db-sg"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::p-3-postgres-aurora-aws-provider::c440de75-6a26-42c1-9ded-c5ddbea8da37",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-postgres-db-sg"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:elasticache/replicationGroup:ReplicationGroup::p-3-cache-cluster",
                "custom": true,
                "id": "p-3-cache-cluster-b20c9a6",
                "type": "aws:elasticache/replicationGroup:ReplicationGroup",
                "inputs": {
                    "__defaults": [
                        "autoMinorVersionUpgrade",
                        "multiAzEnabled",
                        "replicationGroupId"
                    ],
                    "applyImmediately": true,
                    "atRestEncryptionEnabled": true,
                    "autoMinorVersionUpgrade": true,
                    "automaticFailoverEnabled": true,
                    "clusterMode": {
                        "__defaults": [],
                        "numNodeGroups": 2,
                        "replicasPerNodeGroup": 0
                    },
                    "engine": "redis",
                    "engineVersion": "6.x",
                    "multiAzEnabled": false,
                    "nodeType": "cache.t4g.medium",
                    "parameterGroupName": "p-3-cache-pg-e78f834",
                    "replicationGroupDescription": "redis-based elastic cache",
                    "replicationGroupId": "p-3-cache-cluster-b20c9a6",
                    "securityGroupIds": [
                        "sg-05be6e341ac459146"
                    ],
                    "subnetGroupName": "p-3-cache-subnets-b1d67d3",
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "transitEncryptionEnabled": true
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":3600000000000,\"delete\":2400000000000,\"update\":2400000000000},\"schema_version\":\"1\"}",
                    "applyImmediately": true,
                    "arn": "arn:aws:elasticache:us-west-2:030813887342:replicationgroup:p-3-cache-cluster-b20c9a6",
                    "atRestEncryptionEnabled": true,
                    "authToken": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAHhVMwh26BWxE+uv7t/qxA/DIFd2D6GbqUIJSLZ+xg=="
                    },
                    "autoMinorVersionUpgrade": true,
                    "automaticFailoverEnabled": true,
                    "availabilityZones": [],
                    "clusterEnabled": true,
                    "clusterMode": {
                        "numNodeGroups": 2,
                        "replicasPerNodeGroup": 0
                    },
                    "configurationEndpointAddress": "clustercfg.p-3-cache-cluster-b20c9a6.fbjfph.usw2.cache.amazonaws.com",
                    "dataTieringEnabled": false,
                    "engine": "redis",
                    "engineVersion": "6.x",
                    "engineVersionActual": "6.2.5",
                    "id": "p-3-cache-cluster-b20c9a6",
                    "kmsKeyId": "",
                    "maintenanceWindow": "sat:10:00-sat:11:00",
                    "memberClusters": [
                        "p-3-cache-cluster-b20c9a6-0001-001",
                        "p-3-cache-cluster-b20c9a6-0002-001"
                    ],
                    "multiAzEnabled": false,
                    "nodeType": "cache.t4g.medium",
                    "numberCacheClusters": 2,
                    "parameterGroupName": "p-3-cache-pg-e78f834",
                    "port": 6379,
                    "replicationGroupDescription": "redis-based elastic cache",
                    "replicationGroupId": "p-3-cache-cluster-b20c9a6",
                    "securityGroupIds": [
                        "sg-05be6e341ac459146"
                    ],
                    "securityGroupNames": [],
                    "snapshotArns": [],
                    "snapshotRetentionLimit": 0,
                    "snapshotWindow": "09:00-10:00",
                    "subnetGroupName": "p-3-cache-subnets-b1d67d3",
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "transitEncryptionEnabled": true,
                    "userGroupIds": []
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-cache-sg",
                    "urn:pulumi:plane-3::launchpad::aws:elasticache/parameterGroup:ParameterGroup::p-3-cache-pg",
                    "urn:pulumi:plane-3::launchpad::aws:elasticache/subnetGroup:SubnetGroup::p-3-cache-subnets"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::cache-aws-provider::54ec0dc8-ad8a-4494-ba57-cb43e332ab76",
                "propertyDependencies": {
                    "applyImmediately": null,
                    "atRestEncryptionEnabled": null,
                    "automaticFailoverEnabled": null,
                    "clusterMode": null,
                    "engine": null,
                    "engineVersion": null,
                    "nodeType": null,
                    "parameterGroupName": [
                        "urn:pulumi:plane-3::launchpad::aws:elasticache/parameterGroup:ParameterGroup::p-3-cache-pg"
                    ],
                    "replicationGroupDescription": null,
                    "securityGroupIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-cache-sg"
                    ],
                    "subnetGroupName": [
                        "urn:pulumi:plane-3::launchpad::aws:elasticache/subnetGroup:SubnetGroup::p-3-cache-subnets"
                    ],
                    "tags": null,
                    "transitEncryptionEnabled": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc",
                "custom": true,
                "id": "kube-system/aws-lbc-z9qcfbk5",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "aws-load-balancer-controller",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "aws-lbc-z9qcfbk5",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://aws.github.io/eks-charts",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "aws-lbc-z9qcfbk5-aws-load-balancer-controller-role"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "aws-lbc-z9qcfbk5-aws-load-balancer-controller-rolebinding"
                        ],
                        "CustomResourceDefinition.apiextensions.k8s.io/apiextensions.k8s.io/v1": [
                            "ingressclassparams.elbv2.k8s.aws",
                            "targetgroupbindings.elbv2.k8s.aws"
                        ],
                        "Deployment.apps/apps/v1": [
                            "kube-system/aws-lbc-z9qcfbk5-aws-load-balancer-controller"
                        ],
                        "List/v1": [
                            "ingress-class"
                        ],
                        "MutatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "aws-load-balancer-webhook"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/aws-lbc-z9qcfbk5-aws-load-balancer-controller-leader-election-role"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/aws-lbc-z9qcfbk5-aws-load-balancer-controller-leader-election-rolebinding"
                        ],
                        "Secret/v1": [
                            "kube-system/aws-load-balancer-tls"
                        ],
                        "Service/v1": [
                            "kube-system/aws-load-balancer-webhook-service"
                        ],
                        "ValidatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "aws-load-balancer-webhook"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "clusterName": "p-3-eks-cluster-eksCluster-fd821aa",
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND"
                        },
                        "serviceAccount": {
                            "create": false,
                            "name": "aws-load-balancer-controller"
                        }
                    },
                    "verify": false,
                    "version": "",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAMdEieHMf+2+ERfdVNhKZxB1ab5qvkghcSk2RW7iz2AjvpkHLUspbjg3z/HwQZYtfwbfFilCCZfjH757/oVKDn936UbwPjWn1M/5h9zlM0l80VxYeq0FznMsMw3U2WolfF1pdlsHJ+wtrQlRM9yoGg7YeuHzvN0IDYuDW0hDPDHm7K2kpZ8CQsow0Ol0LMXKL3PYgKb9SDSXt1N1ZeT/wUwBEKa/HU9gwkJwxEg3GcBw+RZgmJq8ljAWVt/K9iKMpqxfqOoyMbL9ojKnCeDzOSouNKzwI7SbuNxj4q6JkKnDwaRz6M6NVXlszLReokiYcDy6wRGRrbTMN7Ij4IGIpgflMl9Ag/iSHrMZ9+TbhZwROa856T2U9VosjXiyvR6C+suNy43pcv04ALN1NVr9dwYVqKzPZqJJzdY2+NJ9B13dFtJVF7PGKoiCVVrc5iPfnSXybHy55yGjZhwtULDLycFjr3/bb9UHUth7t2pNP6MUnwdJ9stqrqThZC/DNutXIEFLi4QhA8OpsVXoF1moL+o+rshu0o1DFFLKnhboRPFbTUB54hOA3+bBHo+RKvUqIl6yGiiuOVxUsScbpnvji8x9E5W9HzJCL485tsJR7gube0QQAg76kmupfpsKEWjlwbc9GetF7oskKvAO3XJ3rvyvuEh1uudSHxZCjDlN4lm/6y6gheE1DTuRz9rcbZhbBu40+JwEonyJcvGRO/xN95INfccbQEZvmP/PaJGkZhBopIa2pIAEAYnIMY7TdsLEgHl+0z6IgR6fXkAR/KtEstB8dyCLN1JMyWbDiZRRLEJgLGEzn0Lq1/XKTTaiUWJkthVqiDpADIrAGM9PV1PN0/AxWX0hmpO4mqKA+p996O/As7r0VS9BVCniL68nn8tSIqr8C2SdB5gX1NUHtBoE6Vw00z8dZcWey4RU2Fo2vBRjromz60UmoDTcNkUMZcYFQzT68Nm03sCJFhXIlGSENtyYYfDzyR0GNiEAeb2f+/Vm9+abTZY3hGs6VZ4R5Vj6b/x0ycgKZxarXzOWDJSP/ozKfJS9yrdVDW2PnTdaLHZfiP2CK6sE5N4JQaPMC+SSjvsUcZ458mwKdM/HUSdbAVjTX8jTUuEI1iZV0c4PNi7J6ClmTmaVUAbYGcCXxat132fMDpzue5xcmFXSk6kxIpIx3aT/MPwTJlo1OsAYGRpgjcU2ILuv/2Rp1CQFpWNDynhFvBQeKOYwGPqMC9zTFVkwIixKLzOzap5dM5BZBtx2TThSlpEupsEzdpxoLP5f3RpZmXs+PsJOI/+sZSHKbS97WCo6DkpKerzxPDaiNr/nz7KHEowPhXJyUJFwA1LCXD9SVgf+PZT8X+VnvRsf/zgQXLUCpEVr+oXBHy/DbTU03zIX7voy9aKYdzq980aoeJ0rRryIWeBNLlO7Ab9N38oUUQZ3eZ1z/ws3siyIHHMjz7U3i+2WWwON88S2H5WShr8G10j/mh7C8N0AbyARWBemPOCNOY4KvHFnOJAW9pWu4fpAIC/qQC7veyGGNca0QzJTew8/HToaL/NgqOA+EGfaXrPORMQVXZhcqUC7IteIuxX2sR2uPsHmK5CR8Ds+c4kdwEXWHDbVUkgq6T51p60ABo9kQ63SaLvxdzq8sDjpXvVMFi7m3vyPLgRMgz9Nr1RwRO5TKbMIqa3flR+BHe0RVSWyr2WnYKrnjHdsLCG13XGVqF45lNuBFyRTScMsxhqX1JZob5R4rYX0ktd0zEu18GGOxuR4sXNAlZfrYIJIKw0oD3aKmDiDhJjzqlbXSrH39XjGLl65JHi1CP54HTUYTG5M1Wdm5TjiFlVd7+9Fw1+oCNTiOwL3NrAwCFj1SDCXvRFMjfgnth5mmSanbeGyHr7nbQLONz1PZPkp8feAVEb4iCF7d0NtD53vNMb5KwHQOdkxeROi0S6IAkEoFKPfBUmUJ7n5uPx4tbF8M+QySiwknwEjSS0B/aVK9BLunH5ewxNeqaMB27Y22qNLSiGe29X5khusm0TcsJML37nl4C4E1irMiyOCLoMxuKckAa2NTW+n3EmKbHPeAb112QBV8uBC/poK/u6dJaJUxHC/sQLZOOiUuyoTe2xMfiM8dZQDuKGig68BKdHQw9kEesuRjTtFDSYUNP61pBQ8YEAHbZruK3NzFieCEWO8RjJHWeoS3ZU3NHWqnn7qM0i3OqkWXct1EsYudw3D3wbNj52VbRbQVnNNn08h5mnRoyND5E94V5/jXPiLztb9qKM4cFvnZPAo9GOFSaguuoIT9hnuRoDOpqScGVztB8Eax3K6Nywn5LNpxp/XBxjXgs7pOE7nlY0FWtyNPhO/CRcCaEZmUKkoK77RDFvojuTpN7pTBPEhbKvoT2tJuyQlEXRDOJB/IWs2y4H5NRUKcSLAFYqB1KOUfMrkq+RHkgK54CFwhH6NmxcY1eKYwpSIgNqdwMX0KwKus7itREYrBFkfpTxylUX/vwTq7Bc1DkcfkMVZ8zS6heTupPFHVsTs0Ni+DnJkLQkOSdw7QIbafooRplmFZetNitJGQxYhdXITDtfaYZu/sgm5IwBcQ/4mPcy9l4uLJfgw3LijSBgmwmL8Z9Y0I+/HbF20d2oFlv5y+ZpByoShFGEYY/hrinmN5liW1vFlbFxHbewpOfO7F6hNt+hk/R1/uSJsaoVME4vDPkEbv2+CYFW0xu7mMqjH4upOurYhL0nDB3Bzn5kwKjBG7c0TGEClgdwgiQ61L4QTP+TCXV08YLTBoJOKGDDE/a/uO2K/5HE5Z6TrCJqCvCR/zF4uHIrQfnye0piJ9QSzIs8="
                    },
                    "atomic": false,
                    "chart": "aws-load-balancer-controller",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "aws-lbc-z9qcfbk5",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://aws.github.io/eks-charts",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "aws-lbc-z9qcfbk5-aws-load-balancer-controller-role"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "aws-lbc-z9qcfbk5-aws-load-balancer-controller-rolebinding"
                        ],
                        "Deployment.apps/apps/v1": [
                            "kube-system/aws-lbc-z9qcfbk5-aws-load-balancer-controller"
                        ],
                        "List/v1": [
                            "ingress-class"
                        ],
                        "MutatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "aws-load-balancer-webhook"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/aws-lbc-z9qcfbk5-aws-load-balancer-controller-leader-election-role"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/aws-lbc-z9qcfbk5-aws-load-balancer-controller-leader-election-rolebinding"
                        ],
                        "Secret/v1": [
                            "kube-system/aws-load-balancer-tls"
                        ],
                        "Service/v1": [
                            "kube-system/aws-load-balancer-webhook-service"
                        ],
                        "ValidatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "aws-load-balancer-webhook"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "v2.4.3",
                        "chart": "aws-load-balancer-controller",
                        "name": "aws-lbc-z9qcfbk5",
                        "namespace": "kube-system",
                        "revision": 1,
                        "status": "deployed",
                        "version": "1.4.4"
                    },
                    "timeout": 300,
                    "values": {
                        "clusterName": "p-3-eks-cluster-eksCluster-fd821aa",
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND"
                        },
                        "serviceAccount": {
                            "create": false,
                            "name": "aws-load-balancer-controller"
                        }
                    },
                    "verify": false,
                    "version": "1.4.4",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-attach-lbc-policy",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "namespace": null,
                    "repositoryOpts": null,
                    "values": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:secretsmanager/secretVersion:SecretVersion::msk-secret-version",
                "custom": true,
                "id": "arn:aws:secretsmanager:us-west-2:030813887342:secret:AmazonMSK_p-3-msk-secret-1chck5|E38B8846-2737-462B-A58F-55C60759E359",
                "type": "aws:secretsmanager/secretVersion:SecretVersion",
                "inputs": {
                    "__defaults": [],
                    "secretId": "arn:aws:secretsmanager:us-west-2:030813887342:secret:AmazonMSK_p-3-msk-secret-1chck5",
                    "secretString": "{\"username\":\"p-3-username\",\"password\":\"p-3-password\"}"
                },
                "outputs": {
                    "arn": "arn:aws:secretsmanager:us-west-2:030813887342:secret:AmazonMSK_p-3-msk-secret-1chck5",
                    "id": "arn:aws:secretsmanager:us-west-2:030813887342:secret:AmazonMSK_p-3-msk-secret-1chck5|E38B8846-2737-462B-A58F-55C60759E359",
                    "secretBinary": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAFsvEkK0iV3j0y7aQ4OCQZPc4YeIqbTpIfiRaNuiVQ=="
                    },
                    "secretId": "arn:aws:secretsmanager:us-west-2:030813887342:secret:AmazonMSK_p-3-msk-secret-1chck5",
                    "secretString": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAPyKS6J9itLe1CvrXDLpwKb5EVBauUcvBIadOt3DbqpUm3sZVXD0i3BOgFJyVNtB3OzI6lemchWmZVTNDYcMDnWr+OVBouRp2h27aMSZJeT4AEIGjXev/jum7GQ="
                    },
                    "versionId": "E38B8846-2737-462B-A58F-55C60759E359",
                    "versionStages": [
                        "AWSCURRENT"
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:secretsmanager/secret:Secret::msk-secret"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::msk-aws-provider::2c275936-3b8d-4d79-a0fe-28ebef6ab1d4",
                "propertyDependencies": {
                    "secretId": [
                        "urn:pulumi:plane-3::launchpad::aws:secretsmanager/secret:Secret::msk-secret"
                    ],
                    "secretString": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:secretsmanager/secretPolicy:SecretPolicy::msk-secret-policy",
                "custom": true,
                "id": "arn:aws:secretsmanager:us-west-2:030813887342:secret:AmazonMSK_p-3-msk-secret-1chck5",
                "type": "aws:secretsmanager/secretPolicy:SecretPolicy",
                "inputs": {
                    "__defaults": [],
                    "policy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"kafka.amazonaws.com\"},\"Action\":\"secretsmanager:getSecretValue\",\"Resource\":\"arn:aws:secretsmanager:us-west-2:030813887342:secret:AmazonMSK_p-3-msk-secret-1chck5\"}]}",
                    "secretArn": "arn:aws:secretsmanager:us-west-2:030813887342:secret:AmazonMSK_p-3-msk-secret-1chck5"
                },
                "outputs": {
                    "id": "arn:aws:secretsmanager:us-west-2:030813887342:secret:AmazonMSK_p-3-msk-secret-1chck5",
                    "policy": "{\"Statement\":[{\"Action\":\"secretsmanager:getSecretValue\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"kafka.amazonaws.com\"},\"Resource\":\"arn:aws:secretsmanager:us-west-2:030813887342:secret:AmazonMSK_p-3-msk-secret-1chck5\"}],\"Version\":\"2012-10-17\"}",
                    "secretArn": "arn:aws:secretsmanager:us-west-2:030813887342:secret:AmazonMSK_p-3-msk-secret-1chck5"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:secretsmanager/secret:Secret::msk-secret"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::msk-aws-provider::2c275936-3b8d-4d79-a0fe-28ebef6ab1d4",
                "propertyDependencies": {
                    "policy": null,
                    "secretArn": [
                        "urn:pulumi:plane-3::launchpad::aws:secretsmanager/secret:Secret::msk-secret"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:ManagedNodeGroup$aws:eks/nodeGroup:NodeGroup::p-3-nitrous-ng-arm",
                "custom": true,
                "id": "p-3-eks-cluster-eksCluster-fd821aa:p-3-nitrous-ng-arm20220831151454949600000001",
                "type": "aws:eks/nodeGroup:NodeGroup",
                "inputs": {
                    "__defaults": [],
                    "amiType": "AL2_ARM_64",
                    "capacityType": "ON_DEMAND",
                    "clusterName": "p-3-eks-cluster-eksCluster-fd821aa",
                    "instanceTypes": [
                        "c6gd.large"
                    ],
                    "labels": {
                        "__defaults": [],
                        "aws.amazon.com/eks-local-ssd": "true",
                        "node-group": "p-3-nitrous-ng"
                    },
                    "nodeGroupNamePrefix": "p-3-nitrous-ng-arm",
                    "nodeRoleArn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb",
                    "remoteAccess": {
                        "__defaults": [],
                        "ec2SshKey": "p-3-eks-workers-45d3504"
                    },
                    "scalingConfig": {
                        "__defaults": [],
                        "desiredSize": 1,
                        "maxSize": 1,
                        "minSize": 1
                    },
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ]
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":3600000000000,\"delete\":3600000000000,\"update\":3600000000000}}",
                    "amiType": "AL2_ARM_64",
                    "arn": "arn:aws:eks:us-west-2:030813887342:nodegroup/p-3-eks-cluster-eksCluster-fd821aa/p-3-nitrous-ng-arm20220831151454949600000001/3ac17a3c-1b49-2646-8f9b-e88f6f37acbf",
                    "capacityType": "ON_DEMAND",
                    "clusterName": "p-3-eks-cluster-eksCluster-fd821aa",
                    "diskSize": 20,
                    "id": "p-3-eks-cluster-eksCluster-fd821aa:p-3-nitrous-ng-arm20220831151454949600000001",
                    "instanceTypes": [
                        "c6gd.large"
                    ],
                    "labels": {
                        "aws.amazon.com/eks-local-ssd": "true",
                        "node-group": "p-3-nitrous-ng"
                    },
                    "launchTemplate": null,
                    "nodeGroupName": "p-3-nitrous-ng-arm20220831151454949600000001",
                    "nodeGroupNamePrefix": "p-3-nitrous-ng-arm",
                    "nodeRoleArn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb",
                    "releaseVersion": "1.22.12-20220824",
                    "remoteAccess": {
                        "ec2SshKey": "p-3-eks-workers-45d3504",
                        "sourceSecurityGroupIds": []
                    },
                    "resources": [
                        {
                            "autoscalingGroups": [
                                {
                                    "name": "eks-p-3-nitrous-ng-arm20220831151454949600000001-3ac17a3c-1b49-2646-8f9b-e88f6f37acbf"
                                }
                            ],
                            "remoteAccessSecurityGroupId": "sg-0cc54991d70ffe645"
                        }
                    ],
                    "scalingConfig": {
                        "desiredSize": 1,
                        "maxSize": 1,
                        "minSize": 1
                    },
                    "status": "ACTIVE",
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {},
                    "tagsAll": {},
                    "taints": [],
                    "updateConfig": {
                        "maxUnavailable": 1,
                        "maxUnavailablePercentage": 0
                    },
                    "version": "1.22"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:ManagedNodeGroup::p-3-nitrous-ng-arm",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/keyPair:KeyPair::p-3-eks-workers",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$kubernetes:core/v1:ConfigMap::p-3-eks-cluster-nodeAccess"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "amiType": null,
                    "capacityType": null,
                    "clusterName": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ],
                    "instanceTypes": null,
                    "labels": null,
                    "nodeGroupNamePrefix": null,
                    "nodeRoleArn": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2"
                    ],
                    "remoteAccess": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/keyPair:KeyPair::p-3-eks-workers"
                    ],
                    "scalingConfig": null,
                    "subnetIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:ManagedNodeGroup$aws:eks/nodeGroup:NodeGroup::p-3-common-ng-x86",
                "custom": true,
                "id": "p-3-eks-cluster-eksCluster-fd821aa:p-3-common-ng-x8620220807014357156300000003",
                "type": "aws:eks/nodeGroup:NodeGroup",
                "inputs": {
                    "__defaults": [],
                    "amiType": "AL2_x86_64",
                    "capacityType": "ON_DEMAND",
                    "clusterName": "p-3-eks-cluster-eksCluster-fd821aa",
                    "instanceTypes": [
                        "c6i.2xlarge"
                    ],
                    "nodeGroupNamePrefix": "p-3-common-ng-x86",
                    "nodeRoleArn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb",
                    "remoteAccess": {
                        "__defaults": [],
                        "ec2SshKey": "p-3-eks-workers-45d3504"
                    },
                    "scalingConfig": {
                        "__defaults": [],
                        "desiredSize": 4,
                        "maxSize": 10,
                        "minSize": 4
                    },
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ]
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":3600000000000,\"delete\":3600000000000,\"update\":3600000000000}}",
                    "amiType": "AL2_x86_64",
                    "arn": "arn:aws:eks:us-west-2:030813887342:nodegroup/p-3-eks-cluster-eksCluster-fd821aa/p-3-common-ng-x8620220807014357156300000003/16c13afc-9072-bcb3-fd8b-c94a0d7df69f",
                    "capacityType": "ON_DEMAND",
                    "clusterName": "p-3-eks-cluster-eksCluster-fd821aa",
                    "diskSize": 20,
                    "id": "p-3-eks-cluster-eksCluster-fd821aa:p-3-common-ng-x8620220807014357156300000003",
                    "instanceTypes": [
                        "c6i.2xlarge"
                    ],
                    "labels": {},
                    "launchTemplate": null,
                    "nodeGroupName": "p-3-common-ng-x8620220807014357156300000003",
                    "nodeGroupNamePrefix": "p-3-common-ng-x86",
                    "nodeRoleArn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb",
                    "releaseVersion": "1.22.9-20220725",
                    "remoteAccess": {
                        "ec2SshKey": "p-3-eks-workers-45d3504",
                        "sourceSecurityGroupIds": []
                    },
                    "resources": [
                        {
                            "autoscalingGroups": [
                                {
                                    "name": "eks-p-3-common-ng-x8620220807014357156300000003-16c13afc-9072-bcb3-fd8b-c94a0d7df69f"
                                }
                            ],
                            "remoteAccessSecurityGroupId": "sg-0ee8840df54d866ec"
                        }
                    ],
                    "scalingConfig": {
                        "desiredSize": 4,
                        "maxSize": 10,
                        "minSize": 4
                    },
                    "status": "ACTIVE",
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {},
                    "tagsAll": {},
                    "taints": [],
                    "updateConfig": {
                        "maxUnavailable": 1,
                        "maxUnavailablePercentage": 0
                    },
                    "version": "1.22"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:ManagedNodeGroup::p-3-common-ng-x86",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/keyPair:KeyPair::p-3-eks-workers",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$kubernetes:core/v1:ConfigMap::p-3-eks-cluster-nodeAccess"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "amiType": null,
                    "capacityType": null,
                    "clusterName": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ],
                    "instanceTypes": null,
                    "nodeGroupNamePrefix": null,
                    "nodeRoleArn": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2"
                    ],
                    "remoteAccess": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/keyPair:KeyPair::p-3-eks-workers"
                    ],
                    "scalingConfig": null,
                    "subnetIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "custom": false,
                "type": "kubernetes:yaml:ConfigFile",
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3"
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:ManagedNodeGroup$aws:eks/nodeGroup:NodeGroup::p-3-common-ng-arm64",
                "custom": true,
                "id": "p-3-eks-cluster-eksCluster-fd821aa:p-3-common-ng-arm6420220807014356888900000001",
                "type": "aws:eks/nodeGroup:NodeGroup",
                "inputs": {
                    "__defaults": [],
                    "amiType": "AL2_ARM_64",
                    "capacityType": "ON_DEMAND",
                    "clusterName": "p-3-eks-cluster-eksCluster-fd821aa",
                    "instanceTypes": [
                        "c7g.2xlarge"
                    ],
                    "nodeGroupNamePrefix": "p-3-common-ng-arm64",
                    "nodeRoleArn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb",
                    "remoteAccess": {
                        "__defaults": [],
                        "ec2SshKey": "p-3-eks-workers-45d3504"
                    },
                    "scalingConfig": {
                        "__defaults": [],
                        "desiredSize": 2,
                        "maxSize": 10,
                        "minSize": 2
                    },
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ]
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":3600000000000,\"delete\":3600000000000,\"update\":3600000000000}}",
                    "amiType": "AL2_ARM_64",
                    "arn": "arn:aws:eks:us-west-2:030813887342:nodegroup/p-3-eks-cluster-eksCluster-fd821aa/p-3-common-ng-arm6420220807014356888900000001/acc13afc-9013-f0c7-a38a-59edbc31580d",
                    "capacityType": "ON_DEMAND",
                    "clusterName": "p-3-eks-cluster-eksCluster-fd821aa",
                    "diskSize": 20,
                    "id": "p-3-eks-cluster-eksCluster-fd821aa:p-3-common-ng-arm6420220807014356888900000001",
                    "instanceTypes": [
                        "c7g.2xlarge"
                    ],
                    "labels": {},
                    "launchTemplate": null,
                    "nodeGroupName": "p-3-common-ng-arm6420220807014356888900000001",
                    "nodeGroupNamePrefix": "p-3-common-ng-arm64",
                    "nodeRoleArn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb",
                    "releaseVersion": "1.22.9-20220725",
                    "remoteAccess": {
                        "ec2SshKey": "p-3-eks-workers-45d3504",
                        "sourceSecurityGroupIds": []
                    },
                    "resources": [
                        {
                            "autoscalingGroups": [
                                {
                                    "name": "eks-p-3-common-ng-arm6420220807014356888900000001-acc13afc-9013-f0c7-a38a-59edbc31580d"
                                }
                            ],
                            "remoteAccessSecurityGroupId": "sg-0683471bc30d7b465"
                        }
                    ],
                    "scalingConfig": {
                        "desiredSize": 2,
                        "maxSize": 10,
                        "minSize": 2
                    },
                    "status": "ACTIVE",
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {},
                    "tagsAll": {},
                    "taints": [],
                    "updateConfig": {
                        "maxUnavailable": 1,
                        "maxUnavailablePercentage": 0
                    },
                    "version": "1.22"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:ManagedNodeGroup::p-3-common-ng-arm64",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/keyPair:KeyPair::p-3-eks-workers",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$kubernetes:core/v1:ConfigMap::p-3-eks-cluster-nodeAccess"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "amiType": null,
                    "capacityType": null,
                    "clusterName": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ],
                    "instanceTypes": null,
                    "nodeGroupNamePrefix": null,
                    "nodeRoleArn": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2"
                    ],
                    "remoteAccess": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/keyPair:KeyPair::p-3-eks-workers"
                    ],
                    "scalingConfig": null,
                    "subnetIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-otel-instance",
                "custom": true,
                "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220322031058314400000001",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::030813887342:policy/p-3-AWSDistroOpenTelemetryPolicy-20220322025614485200000001",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "outputs": {
                    "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220322031058314400000001",
                    "policyArn": "arn:aws:iam::030813887342:policy/p-3-AWSDistroOpenTelemetryPolicy-20220322025614485200000001",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/policy:Policy::p-3-otel-collector-policy",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::tele-aws-provider::8a93fbf2-2243-4c81-8798-3be31bfda4ca",
                "propertyDependencies": {
                    "policyArn": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/policy:Policy::p-3-otel-collector-policy"
                    ],
                    "role": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-ec-allow-eks",
                "custom": true,
                "id": "sgrule-272554803",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-05be6e341ac459146",
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "fromPort": 0,
                    "id": "sgrule-272554803",
                    "protocol": "tcp",
                    "securityGroupId": "sg-05be6e341ac459146",
                    "self": false,
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-cache-sg",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::cache-aws-provider::54ec0dc8-ad8a-4494-ba57-cb43e332ab76",
                "propertyDependencies": {
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-cache-sg"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-msk-allow-eks",
                "custom": true,
                "id": "sgrule-1703283696",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-0ddf7758471767008",
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "fromPort": 0,
                    "id": "sgrule-1703283696",
                    "protocol": "tcp",
                    "securityGroupId": "sg-0ddf7758471767008",
                    "self": false,
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::msk-sg",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::msk-aws-provider::2c275936-3b8d-4d79-a0fe-28ebef6ab1d4",
                "propertyDependencies": {
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::msk-sg"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::strimzi-k8s-provider",
                "custom": true,
                "id": "244cf852-b895-43a4-a2e0-0bef1efc7ed7",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.16.0"
                },
                "outputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.16.0"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-allow-eks",
                "custom": true,
                "id": "sgrule-1917858845",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-05840b7dcfd0ec43f",
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "fromPort": 0,
                    "id": "sgrule-1917858845",
                    "protocol": "tcp",
                    "securityGroupId": "sg-05840b7dcfd0ec43f",
                    "self": false,
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-db-sg",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aurora-aws-provider::134d52f5-7f5e-4454-b1be-748af511a354",
                "propertyDependencies": {
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-db-sg"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::node-sagemaker-policy-attach",
                "custom": true,
                "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220709045101998500000001",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "outputs": {
                    "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220709045101998500000001",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::plane-eks-instance-iam-policy-provider::b21c905b-9cbe-4b9a-870a-b0be3a1a44b9",
                "propertyDependencies": {
                    "policyArn": null,
                    "role": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-redis-allow-eks",
                "custom": true,
                "id": "sgrule-131264971",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-09e571f0713759de2",
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "fromPort": 0,
                    "id": "sgrule-131264971",
                    "protocol": "tcp",
                    "securityGroupId": "sg-09e571f0713759de2",
                    "self": false,
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-redis-sg",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::redis-aws-provider::5e1ff797-2ef0-488a-9b9f-7f4d89f937d2",
                "propertyDependencies": {
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-redis-sg"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-postgres-allow-eks",
                "custom": true,
                "id": "sgrule-4075027477",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-07b6818f917ecc054",
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "fromPort": 0,
                    "id": "sgrule-4075027477",
                    "protocol": "tcp",
                    "securityGroupId": "sg-07b6818f917ecc054",
                    "self": false,
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-postgres-db-sg",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::p-3-postgres-aurora-aws-provider::c440de75-6a26-42c1-9ded-c5ddbea8da37",
                "propertyDependencies": {
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-postgres-db-sg"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ],
                    "toPort": null,
                    "type": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::model-monitoring-k8s-provider",
                "custom": true,
                "id": "40d23c85-69e6-4944-99b1-50d50a64e2af",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "namespace": "fennel",
                    "version": "3.16.0"
                },
                "outputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "namespace": "fennel",
                    "version": "3.16.0"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ],
                    "namespace": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::milvus-k8s-provider",
                "custom": true,
                "id": "3d4de186-42ae-4551-ac95-c5880390298d",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.16.0"
                },
                "outputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.16.0"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::nitrous-k8s-provider",
                "custom": true,
                "id": "d40ef660-db74-45d0-94d4-f8711e540642",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "namespace": "fennel",
                    "version": "3.16.0"
                },
                "outputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "namespace": "fennel",
                    "version": "3.16.0"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ],
                    "namespace": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::configs-k8s-provider-msk",
                "custom": true,
                "id": "f495a18e-46fb-4d58-929c-ce7d9df9b5d1",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "namespace": "fennel",
                    "version": "3.16.0"
                },
                "outputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "namespace": "fennel",
                    "version": "3.16.0"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ],
                    "namespace": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:rds/cluster:Cluster::db-instance",
                "custom": true,
                "id": "p-3-db-20220322025721191200000002",
                "type": "aws:rds/cluster:Cluster",
                "inputs": {
                    "__defaults": [
                        "backupRetentionPeriod",
                        "copyTagsToSnapshot",
                        "enableGlobalWriteForwarding",
                        "enableHttpEndpoint"
                    ],
                    "applyImmediately": true,
                    "backupRetentionPeriod": 1,
                    "clusterIdentifierPrefix": "p-3-db-",
                    "copyTagsToSnapshot": false,
                    "dbSubnetGroupName": "p-3-db-subnetgroup-ffcd8b8",
                    "enableGlobalWriteForwarding": false,
                    "enableHttpEndpoint": false,
                    "engine": "aurora-mysql",
                    "engineMode": "serverless",
                    "engineVersion": "5.7.mysql_aurora.2.08.3",
                    "finalSnapshotIdentifier": "p-3-cdda2b0e-a2ca-4ebe-8113-b6470e477e8b",
                    "masterPassword": "foundationdb",
                    "masterUsername": "admin",
                    "scalingConfiguration": {
                        "__defaults": [
                            "autoPause",
                            "secondsUntilAutoPause",
                            "timeoutAction"
                        ],
                        "autoPause": true,
                        "maxCapacity": 4,
                        "minCapacity": 1,
                        "secondsUntilAutoPause": 300,
                        "timeoutAction": "RollbackCapacityChange"
                    },
                    "skipFinalSnapshot": true,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcSecurityGroupIds": [
                        "sg-05840b7dcfd0ec43f"
                    ]
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":7200000000000,\"delete\":7200000000000,\"update\":7200000000000}}",
                    "applyImmediately": true,
                    "arn": "arn:aws:rds:us-west-2:030813887342:cluster:p-3-db-20220322025721191200000002",
                    "availabilityZones": [
                        "us-west-2c",
                        "us-west-2b",
                        "us-west-2a"
                    ],
                    "backtrackWindow": 0,
                    "backupRetentionPeriod": 1,
                    "clusterIdentifier": "p-3-db-20220322025721191200000002",
                    "clusterIdentifierPrefix": "p-3-db-",
                    "clusterMembers": [],
                    "clusterResourceId": "cluster-C34XOKF4PO6EWD6BVDRMHZPLFI",
                    "copyTagsToSnapshot": false,
                    "dbClusterParameterGroupName": "default.aurora-mysql5.7",
                    "dbSubnetGroupName": "p-3-db-subnetgroup-ffcd8b8",
                    "deletionProtection": false,
                    "enableGlobalWriteForwarding": false,
                    "enableHttpEndpoint": false,
                    "enabledCloudwatchLogsExports": [],
                    "endpoint": "p-3-db-20220322025721191200000002.cluster-c00d7gkxaysk.us-west-2.rds.amazonaws.com",
                    "engine": "aurora-mysql",
                    "engineMode": "serverless",
                    "engineVersion": "5.7.mysql_aurora.2.08.3",
                    "engineVersionActual": "5.7.mysql_aurora.2.08.3",
                    "finalSnapshotIdentifier": "p-3-cdda2b0e-a2ca-4ebe-8113-b6470e477e8b",
                    "globalClusterIdentifier": "",
                    "hostedZoneId": "Z1PVIF0B656C1W",
                    "iamDatabaseAuthenticationEnabled": false,
                    "iamRoles": [],
                    "id": "p-3-db-20220322025721191200000002",
                    "kmsKeyId": "arn:aws:kms:us-west-2:030813887342:key/80b2b530-50d9-4c4d-ac2c-38ab82e10c34",
                    "masterPassword": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAJRbdVdIIvNoBwU11Iz66aIWFLBKlpaBxO6WR4vFTSjBPy/gS1rrEoPQIg=="
                    },
                    "masterUsername": "admin",
                    "port": 3306,
                    "preferredBackupWindow": "06:46-07:16",
                    "preferredMaintenanceWindow": "wed:06:05-wed:06:35",
                    "readerEndpoint": "",
                    "replicationSourceIdentifier": "",
                    "restoreToPointInTime": null,
                    "s3Import": null,
                    "scalingConfiguration": {
                        "autoPause": true,
                        "maxCapacity": 4,
                        "minCapacity": 1,
                        "secondsUntilAutoPause": 300,
                        "timeoutAction": "RollbackCapacityChange"
                    },
                    "skipFinalSnapshot": true,
                    "storageEncrypted": true,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcSecurityGroupIds": [
                        "sg-05840b7dcfd0ec43f"
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:rds/subnetGroup:SubnetGroup::p-3-db-subnetgroup",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-db-sg"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aurora-aws-provider::134d52f5-7f5e-4454-b1be-748af511a354",
                "propertyDependencies": {
                    "applyImmediately": null,
                    "clusterIdentifierPrefix": null,
                    "dbSubnetGroupName": [
                        "urn:pulumi:plane-3::launchpad::aws:rds/subnetGroup:SubnetGroup::p-3-db-subnetgroup"
                    ],
                    "engine": null,
                    "engineMode": null,
                    "engineVersion": null,
                    "finalSnapshotIdentifier": null,
                    "masterPassword": null,
                    "masterUsername": null,
                    "scalingConfiguration": null,
                    "skipFinalSnapshot": null,
                    "tags": null,
                    "vpcSecurityGroupIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-db-sg"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider",
                "custom": true,
                "id": "06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.16.0"
                },
                "outputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.16.0"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::prom-k8s-provider",
                "custom": true,
                "id": "977dc48b-1b15-46c5-9234-a8bf9daebecf",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.16.0"
                },
                "outputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.16.0"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:msk/cluster:Cluster::msk-cluster",
                "custom": true,
                "id": "arn:aws:kafka:us-west-2:030813887342:cluster/p-3-kafka-cluster/64e46a95-9c4a-40f1-803d-e703f04db07d-10",
                "type": "aws:msk/cluster:Cluster",
                "inputs": {
                    "__defaults": [],
                    "brokerNodeGroupInfo": {
                        "__defaults": [
                            "azDistribution"
                        ],
                        "azDistribution": "DEFAULT",
                        "clientSubnets": [
                            "subnet-0e17b2c51bb9d79f4",
                            "subnet-0615a2647b66a222c"
                        ],
                        "ebsVolumeSize": 128,
                        "instanceType": "kafka.m5.large",
                        "securityGroups": [
                            "sg-0ddf7758471767008"
                        ]
                    },
                    "clientAuthentication": {
                        "__defaults": [],
                        "sasl": {
                            "__defaults": [],
                            "scram": true
                        }
                    },
                    "clusterName": "p-3-kafka-cluster",
                    "configurationInfo": {
                        "__defaults": [],
                        "arn": "arn:aws:kafka:us-west-2:030813887342:configuration/p-3-cluster-config/5c66dfd7-9e19-49b4-a321-2987437729b5-10",
                        "revision": 2
                    },
                    "enhancedMonitoring": "DEFAULT",
                    "kafkaVersion": "2.6.2",
                    "loggingInfo": {
                        "__defaults": [],
                        "brokerLogs": {
                            "__defaults": [],
                            "cloudwatchLogs": {
                                "__defaults": [],
                                "enabled": true,
                                "logGroup": "/aws/msk/p-3-brokers"
                            }
                        }
                    },
                    "numberOfBrokerNodes": 2,
                    "openMonitoring": {
                        "__defaults": [],
                        "prometheus": {
                            "__defaults": [],
                            "jmxExporter": {
                                "__defaults": [],
                                "enabledInBroker": true
                            },
                            "nodeExporter": {
                                "__defaults": [],
                                "enabledInBroker": true
                            }
                        }
                    }
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":7200000000000,\"delete\":7200000000000,\"update\":7200000000000}}",
                    "arn": "arn:aws:kafka:us-west-2:030813887342:cluster/p-3-kafka-cluster/64e46a95-9c4a-40f1-803d-e703f04db07d-10",
                    "bootstrapBrokers": "",
                    "bootstrapBrokersSaslIam": "",
                    "bootstrapBrokersSaslScram": "b-1.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:9096,b-2.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:9096",
                    "bootstrapBrokersTls": "",
                    "brokerNodeGroupInfo": {
                        "azDistribution": "DEFAULT",
                        "clientSubnets": [
                            "subnet-0e17b2c51bb9d79f4",
                            "subnet-0615a2647b66a222c"
                        ],
                        "ebsVolumeSize": 128,
                        "instanceType": "kafka.m5.large",
                        "securityGroups": [
                            "sg-0ddf7758471767008"
                        ]
                    },
                    "clientAuthentication": {
                        "sasl": {
                            "iam": false,
                            "scram": true
                        },
                        "tls": null
                    },
                    "clusterName": "p-3-kafka-cluster",
                    "configurationInfo": {
                        "arn": "arn:aws:kafka:us-west-2:030813887342:configuration/p-3-cluster-config-2/c72abaa8-ebb1-4357-81b2-f5d30f8bda26-10",
                        "revision": 1
                    },
                    "currentVersion": "KN1VRQENFRJN5",
                    "encryptionInfo": {
                        "encryptionAtRestKmsKeyArn": "arn:aws:kms:us-west-2:030813887342:key/a90cb7fb-85cd-444e-91ef-75535a43a084",
                        "encryptionInTransit": {
                            "clientBroker": "TLS",
                            "inCluster": true
                        }
                    },
                    "enhancedMonitoring": "DEFAULT",
                    "id": "arn:aws:kafka:us-west-2:030813887342:cluster/p-3-kafka-cluster/64e46a95-9c4a-40f1-803d-e703f04db07d-10",
                    "kafkaVersion": "2.7.0",
                    "loggingInfo": {
                        "brokerLogs": {
                            "cloudwatchLogs": {
                                "enabled": true,
                                "logGroup": "/aws/msk/p-3-brokers"
                            },
                            "firehose": null,
                            "s3": null
                        }
                    },
                    "numberOfBrokerNodes": 2,
                    "openMonitoring": {
                        "prometheus": {
                            "jmxExporter": {
                                "enabledInBroker": true
                            },
                            "nodeExporter": {
                                "enabledInBroker": true
                            }
                        }
                    },
                    "tags": {},
                    "tagsAll": {},
                    "zookeeperConnectString": "z-1.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:2181,z-2.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:2181,z-3.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:2181",
                    "zookeeperConnectStringTls": "z-1.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:2182,z-2.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:2182,z-3.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:2182"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::msk-sg",
                    "urn:pulumi:plane-3::launchpad::aws:msk/configuration:Configuration::msk-cluster-config-2",
                    "urn:pulumi:plane-3::launchpad::aws:cloudwatch/logGroup:LogGroup::msk-log-group"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::msk-aws-provider::2c275936-3b8d-4d79-a0fe-28ebef6ab1d4",
                "propertyDependencies": {
                    "brokerNodeGroupInfo": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::msk-sg"
                    ],
                    "clientAuthentication": null,
                    "clusterName": null,
                    "configurationInfo": [
                        "urn:pulumi:plane-3::launchpad::aws:msk/configuration:Configuration::msk-cluster-config-2"
                    ],
                    "enhancedMonitoring": null,
                    "kafkaVersion": null,
                    "loggingInfo": [
                        "urn:pulumi:plane-3::launchpad::aws:cloudwatch/logGroup:LogGroup::msk-log-group"
                    ],
                    "numberOfBrokerNodes": null,
                    "openMonitoring": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::command:local:Command::cleanup",
                "custom": true,
                "id": "32471aebae779",
                "type": "command:local:Command",
                "inputs": {
                    "create": "rm -f ca.crt ca.key issuer.crt issuer.key"
                },
                "outputs": {
                    "create": "rm -f ca.crt ca.key issuer.crt issuer.key",
                    "stderr": "",
                    "stdout": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::linkerd"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3::285f7ea0-7054-487d-953b-f9ac8882f13f",
                "propertyDependencies": {
                    "create": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:rds/cluster:Cluster::p-3-postgres-db-instance",
                "custom": true,
                "id": "p-3-postgres-db-20220714170049754900000002",
                "type": "aws:rds/cluster:Cluster",
                "inputs": {
                    "__defaults": [
                        "backupRetentionPeriod",
                        "copyTagsToSnapshot",
                        "enableGlobalWriteForwarding",
                        "enableHttpEndpoint"
                    ],
                    "applyImmediately": true,
                    "backupRetentionPeriod": 1,
                    "clusterIdentifierPrefix": "p-3-postgres-db-",
                    "copyTagsToSnapshot": false,
                    "dbSubnetGroupName": "p-3-postgres-db-subnetgroup-0cc59b0",
                    "enableGlobalWriteForwarding": false,
                    "enableHttpEndpoint": false,
                    "engine": "aurora-postgresql",
                    "engineMode": "serverless",
                    "masterPassword": "password",
                    "masterUsername": "username",
                    "scalingConfiguration": {
                        "__defaults": [
                            "autoPause",
                            "secondsUntilAutoPause",
                            "timeoutAction"
                        ],
                        "autoPause": true,
                        "maxCapacity": 2,
                        "minCapacity": 2,
                        "secondsUntilAutoPause": 300,
                        "timeoutAction": "RollbackCapacityChange"
                    },
                    "skipFinalSnapshot": true,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcSecurityGroupIds": [
                        "sg-07b6818f917ecc054"
                    ]
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":7200000000000,\"delete\":7200000000000,\"update\":7200000000000}}",
                    "applyImmediately": true,
                    "arn": "arn:aws:rds:us-west-2:030813887342:cluster:p-3-postgres-db-20220714170049754900000002",
                    "availabilityZones": [
                        "us-west-2c",
                        "us-west-2b",
                        "us-west-2a"
                    ],
                    "backtrackWindow": 0,
                    "backupRetentionPeriod": 1,
                    "clusterIdentifier": "p-3-postgres-db-20220714170049754900000002",
                    "clusterIdentifierPrefix": "p-3-postgres-db-",
                    "clusterMembers": [],
                    "clusterResourceId": "cluster-F5ZWTZOXNA7MZQP7ROZ6HVKC2Q",
                    "copyTagsToSnapshot": false,
                    "dbClusterParameterGroupName": "default.aurora-postgresql10",
                    "dbSubnetGroupName": "p-3-postgres-db-subnetgroup-0cc59b0",
                    "deletionProtection": false,
                    "enableGlobalWriteForwarding": false,
                    "enableHttpEndpoint": false,
                    "enabledCloudwatchLogsExports": [],
                    "endpoint": "p-3-postgres-db-20220714170049754900000002.cluster-c00d7gkxaysk.us-west-2.rds.amazonaws.com",
                    "engine": "aurora-postgresql",
                    "engineMode": "serverless",
                    "engineVersion": "10.18",
                    "engineVersionActual": "10.18",
                    "globalClusterIdentifier": "",
                    "hostedZoneId": "Z1PVIF0B656C1W",
                    "iamDatabaseAuthenticationEnabled": false,
                    "iamRoles": [],
                    "id": "p-3-postgres-db-20220714170049754900000002",
                    "kmsKeyId": "arn:aws:kms:us-west-2:030813887342:key/80b2b530-50d9-4c4d-ac2c-38ab82e10c34",
                    "masterPassword": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABADVThCsP2rOXkYxPLNJ0iJE5Qp7UMt1/d5gJQyZEjM0Nv7COrfTG"
                    },
                    "masterUsername": "username",
                    "port": 5432,
                    "preferredBackupWindow": "12:51-13:21",
                    "preferredMaintenanceWindow": "tue:07:49-tue:08:19",
                    "readerEndpoint": "",
                    "replicationSourceIdentifier": "",
                    "scalingConfiguration": {
                        "autoPause": true,
                        "maxCapacity": 2,
                        "minCapacity": 2,
                        "secondsUntilAutoPause": 300,
                        "timeoutAction": "RollbackCapacityChange"
                    },
                    "skipFinalSnapshot": true,
                    "storageEncrypted": true,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcSecurityGroupIds": [
                        "sg-07b6818f917ecc054"
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-postgres-db-sg",
                    "urn:pulumi:plane-3::launchpad::aws:rds/subnetGroup:SubnetGroup::p-3-postgres-db-subnetgroup"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::p-3-postgres-aurora-aws-provider::c440de75-6a26-42c1-9ded-c5ddbea8da37",
                "propertyDependencies": {
                    "applyImmediately": null,
                    "clusterIdentifierPrefix": null,
                    "dbSubnetGroupName": [
                        "urn:pulumi:plane-3::launchpad::aws:rds/subnetGroup:SubnetGroup::p-3-postgres-db-subnetgroup"
                    ],
                    "engine": null,
                    "engineMode": null,
                    "masterPassword": null,
                    "masterUsername": null,
                    "scalingConfiguration": null,
                    "skipFinalSnapshot": null,
                    "tags": null,
                    "vpcSecurityGroupIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-postgres-db-sg"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::command:local:Command::model-monitoring-img",
                "custom": true,
                "id": "28215025f4a8f",
                "type": "command:local:Command",
                "inputs": {
                    "create": "docker buildx build --platform linux/amd64,linux/arm64 /Users/mohitreddy/rexer -f /Users/mohitreddy/rexer/dockerfiles/model_monitoring.dockerfile -t 030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-model-monitoring-repo-c78e5db:2380e31f-ea74d823-01fb-4341-8f8b-66d5e28c056c --push"
                },
                "outputs": {
                    "create": "docker buildx build --platform linux/amd64,linux/arm64 /Users/mohitreddy/rexer -f /Users/mohitreddy/rexer/dockerfiles/model_monitoring.dockerfile -t 030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-model-monitoring-repo-c78e5db:2380e31f-ea74d823-01fb-4341-8f8b-66d5e28c056c --push",
                    "stderr": "#1 [internal] load .dockerignore\n#1 transferring context: 2B 0.0s done\n#1 DONE 0.0s\n\n#2 [internal] load build definition from model_monitoring.dockerfile\n#2 transferring dockerfile: 1.93kB 0.0s done\n#2 DONE 0.0s\n\n#3 resolve image config for docker.io/docker/dockerfile:1\n#3 ...\n\n#4 [auth] docker/dockerfile:pull token for registry-1.docker.io\n#4 DONE 0.0s\n\n#3 resolve image config for docker.io/docker/dockerfile:1\n#3 DONE 2.2s\n\n#5 docker-image://docker.io/docker/dockerfile:1@sha256:9ba7531bd80fb0a858632727cf7a112fbfd19b17e94c4e84ced81e24ef1a0dbc\n#5 resolve docker.io/docker/dockerfile:1@sha256:9ba7531bd80fb0a858632727cf7a112fbfd19b17e94c4e84ced81e24ef1a0dbc 0.0s done\n#5 CACHED\n\n#6 [linux/arm64 internal] load metadata for docker.io/library/python:3.9.1-slim\n#6 ...\n\n#7 [auth] library/python:pull token for registry-1.docker.io\n#7 DONE 0.0s\n\n#8 [linux/amd64 internal] load metadata for docker.io/library/python:3.9.1-slim\n#8 DONE 0.9s\n\n#6 [linux/arm64 internal] load metadata for docker.io/library/python:3.9.1-slim\n#6 DONE 1.0s\n\n#9 [linux/amd64 python-base 1/1] FROM docker.io/library/python:3.9.1-slim@sha256:bf3ec573c0ae0d0c619c3f3e0e9490878432bf7a5c63a643b6c39c9878b51191\n#9 resolve docker.io/library/python:3.9.1-slim@sha256:bf3ec573c0ae0d0c619c3f3e0e9490878432bf7a5c63a643b6c39c9878b51191 0.0s done\n#9 DONE 0.0s\n\n#10 [internal] load build context\n#10 transferring context: 213B 0.0s done\n#10 DONE 0.0s\n\n#11 [linux/arm64 python-base 1/1] FROM docker.io/library/python:3.9.1-slim@sha256:bf3ec573c0ae0d0c619c3f3e0e9490878432bf7a5c63a643b6c39c9878b51191\n#11 resolve docker.io/library/python:3.9.1-slim@sha256:bf3ec573c0ae0d0c619c3f3e0e9490878432bf7a5c63a643b6c39c9878b51191 0.0s done\n#11 DONE 0.0s\n\n#12 [linux/amd64 builder-base 3/5] WORKDIR /opt/pysetup\n#12 CACHED\n\n#13 [linux/amd64 builder-base 1/5] RUN apt-get update     \u0026\u0026 apt-get install --no-install-recommends -y         curl         build-essential\n#13 CACHED\n\n#14 [linux/amd64 builder-base 4/5] COPY monitoring/model/poetry.lock monitoring/model/pyproject.toml ./\n#14 CACHED\n\n#15 [linux/amd64 builder-base 5/5] RUN poetry install --no-dev\n#15 CACHED\n\n#16 [linux/amd64 builder-base 2/5] RUN curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python\n#16 CACHED\n\n#17 [linux/amd64 executor 1/3] COPY --from=builder-base /opt/pysetup /opt/pysetup\n#17 CACHED\n\n#18 [linux/amd64 executor 2/3] WORKDIR /app\n#18 CACHED\n\n#19 [linux/amd64 executor 3/3] COPY monitoring/model ./\n#19 CACHED\n\n#20 [linux/arm64 builder-base 2/5] RUN curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python\n#20 CACHED\n\n#21 [linux/arm64 executor 2/3] WORKDIR /app\n#21 CACHED\n\n#22 [linux/arm64 builder-base 1/5] RUN apt-get update     \u0026\u0026 apt-get install --no-install-recommends -y         curl         build-essential\n#22 CACHED\n\n#23 [linux/arm64 builder-base 4/5] COPY monitoring/model/poetry.lock monitoring/model/pyproject.toml ./\n#23 CACHED\n\n#24 [linux/arm64 builder-base 5/5] RUN poetry install --no-dev\n#24 CACHED\n\n#25 [linux/arm64 executor 1/3] COPY --from=builder-base /opt/pysetup /opt/pysetup\n#25 CACHED\n\n#26 [linux/arm64 builder-base 3/5] WORKDIR /opt/pysetup\n#26 CACHED\n\n#27 [linux/arm64 executor 3/3] COPY monitoring/model ./\n#27 CACHED\n\n#28 exporting to image\n#28 exporting layers done\n#28 exporting manifest sha256:bd07f28714ae2bce45a787a9a6d42fbdc6d7bbfef1601f5196cfb27ca8348211 done\n#28 exporting config sha256:562bee2326a4e8889499bbca067f60f550b4fce73b3c813ed7261a6f0bb38940 done\n#28 exporting manifest sha256:fdc47498330818754f76f2e9d40e681b479f074e436271c7e074e76bdddc24a8 0.0s done\n#28 exporting config sha256:29accef45f1f91fd8805319d39afebe8189f6ffeaaf88cc3257339180740e1d1 0.0s done\n#28 exporting manifest list sha256:7f0e6c679fc38304fe54befc4e8471223e0a3675a9c0bab00ab7be8deb966ecb done\n#28 pushing layers\n#28 ...\n\n#29 [auth] sharing credentials for 030813887342.dkr.ecr.us-west-2.amazonaws.com\n#29 DONE 0.0s\n\n#28 exporting to image\n#28 pushing layers 0.8s done\n#28 pushing manifest for 030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-model-monitoring-repo-c78e5db:2380e31f-ea74d823-01fb-4341-8f8b-66d5e28c056c@sha256:7f0e6c679fc38304fe54befc4e8471223e0a3675a9c0bab00ab7be8deb966ecb\n#28 pushing manifest for 030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-model-monitoring-repo-c78e5db:2380e31f-ea74d823-01fb-4341-8f8b-66d5e28c056c@sha256:7f0e6c679fc38304fe54befc4e8471223e0a3675a9c0bab00ab7be8deb966ecb 0.5s done\n#28 DONE 1.4s",
                    "stdout": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3::285f7ea0-7054-487d-953b-f9ac8882f13f",
                "propertyDependencies": {
                    "create": null
                },
                "sequenceNumber": 16
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::confluent:index/apiKey:ApiKey::key",
                "custom": true,
                "id": "863346",
                "type": "confluent:index/apiKey:ApiKey",
                "inputs": {
                    "__defaults": [],
                    "clusterId": "lkc-811rkq",
                    "environmentId": "env-ry1w0"
                },
                "outputs": {
                    "clusterId": "lkc-811rkq",
                    "environmentId": "env-ry1w0",
                    "id": "863346",
                    "key": "SJLSMRYRKYALJ4Q4",
                    "secret": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAN1x+F85Ej2AsQNiQCpCH+iXFhznIC5YVNlJTEmkLX1k8Wm6ZJtj57R4q/T0ljFOY57JNzWzMKVh4taiKsDG6kbtdLZHiUc6MOmNDfPLRB8H8AzfqnE7OqbDWvihJGM="
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::confluent:index/kafkaCluster:KafkaCluster::cluster"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:confluent::conf-provider::a04ab6f7-c710-478f-b18e-57c5f42d108e",
                "propertyDependencies": {
                    "clusterId": [
                        "urn:pulumi:plane-3::launchpad::confluent:index/kafkaCluster:KafkaCluster::cluster"
                    ],
                    "environmentId": [
                        "urn:pulumi:plane-3::launchpad::confluent:index/kafkaCluster:KafkaCluster::cluster"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/accessKey:AccessKey::conn-sink-access-key",
                "custom": true,
                "id": "AKIAQOLFGTNXJDEFE7LJ",
                "type": "aws:iam/accessKey:AccessKey",
                "inputs": {
                    "__defaults": [
                        "status"
                    ],
                    "status": "Active",
                    "user": "p-3-conn-sink-user"
                },
                "outputs": {
                    "createDate": "2022-04-05T13:51:26Z",
                    "id": "AKIAQOLFGTNXJDEFE7LJ",
                    "secret": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAPqTIaaCkW/OYe8JQfTWGG9SJtpBY2Cvg+Hy4ArLh+Yh5iLjCkVMjuw1kSA+RLPS3sO5hbIvBICMfirehCDpU3O3PZxkuFo="
                    },
                    "sesSmtpPasswordV4": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABANhFiZgoIIFFl5w9FWGo4+jv3kQpqCucllnzOEzZcrwE/I8xWkBlRiyEVPHy3ctobHuViYqOhPF44fRsdaf5uo2LX7HNiUD3Zcov"
                    },
                    "status": "Active",
                    "user": "p-3-conn-sink-user"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/user:User::conn-sink-user"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::connector-sink-aws-provider::3cc7c16b-f14f-4caf-9a2f-369ea16085f6",
                "propertyDependencies": {
                    "user": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/user:User::conn-sink-user"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/userPolicy:UserPolicy::conn-sink-user-policy",
                "custom": true,
                "id": "p-3-conn-sink-user:conn-sink-user-policy-f668e72",
                "type": "aws:iam/userPolicy:UserPolicy",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "name": "conn-sink-user-policy-f668e72",
                    "policy": "{\n        \"Version\":\"2012-10-17\",\n        \"Statement\":[\n            {\n                \"Effect\":\"Allow\",\n                \"Action\": [\n                    \"s3:ListAllMyBuckets\"\n                ],\n                \"Resource\":\"arn:aws:s3:::*\"\n            },\n            {\n                \"Effect\":\"Allow\",\n                \"Action\":[\n                    \"s3:ListBucket\",\n                    \"s3:GetBucketLocation\"\n                ],\n                \"Resource\":\"arn:aws:s3:::p-3-training-data\"\n            },\n            {\n                \"Effect\":\"Allow\",\n                \"Action\":[\n                    \"s3:PutObject\",\n                    \"s3:GetObject\",\n                    \"s3:AbortMultipartUpload\",\n                    \"s3:ListMultipartUploadParts\",\n                    \"s3:ListBucketMultipartUploads\"\n                ],\n                \"Resource\":\"arn:aws:s3:::p-3-training-data/*\"\n            }\n        ]\n    }",
                    "user": "p-3-conn-sink-user"
                },
                "outputs": {
                    "id": "p-3-conn-sink-user:conn-sink-user-policy-f668e72",
                    "name": "conn-sink-user-policy-f668e72",
                    "policy": "{\n        \"Version\":\"2012-10-17\",\n        \"Statement\":[\n            {\n                \"Effect\":\"Allow\",\n                \"Action\": [\n                    \"s3:ListAllMyBuckets\"\n                ],\n                \"Resource\":\"arn:aws:s3:::*\"\n            },\n            {\n                \"Effect\":\"Allow\",\n                \"Action\":[\n                    \"s3:ListBucket\",\n                    \"s3:GetBucketLocation\"\n                ],\n                \"Resource\":\"arn:aws:s3:::p-3-training-data\"\n            },\n            {\n                \"Effect\":\"Allow\",\n                \"Action\":[\n                    \"s3:PutObject\",\n                    \"s3:GetObject\",\n                    \"s3:AbortMultipartUpload\",\n                    \"s3:ListMultipartUploadParts\",\n                    \"s3:ListBucketMultipartUploads\"\n                ],\n                \"Resource\":\"arn:aws:s3:::p-3-training-data/*\"\n            }\n        ]\n    }",
                    "user": "p-3-conn-sink-user"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/user:User::conn-sink-user"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::connector-sink-aws-provider::3cc7c16b-f14f-4caf-9a2f-369ea16085f6",
                "propertyDependencies": {
                    "policy": null,
                    "user": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/user:User::conn-sink-user"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::ebs-csi-driver",
                "custom": true,
                "id": "kube-system/ebs-csi-driver-9rj2oo3r",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "aws-ebs-csi-driver",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "ebs-csi-driver-9rj2oo3r",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes-sigs.github.io/aws-ebs-csi-driver/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "CSIDriver.storage.k8s.io/storage.k8s.io/v1": [
                            "ebs.csi.aws.com"
                        ],
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "ebs-csi-node-role",
                            "ebs-external-attacher-role",
                            "ebs-external-provisioner-role",
                            "ebs-external-resizer-role",
                            "ebs-external-snapshotter-role"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "ebs-csi-attacher-binding",
                            "ebs-csi-node-getter-binding",
                            "ebs-csi-provisioner-binding",
                            "ebs-csi-resizer-binding",
                            "ebs-csi-snapshotter-binding"
                        ],
                        "DaemonSet.apps/apps/v1": [
                            "kube-system/ebs-csi-node"
                        ],
                        "Deployment.apps/apps/v1": [
                            "kube-system/ebs-csi-controller"
                        ],
                        "PodDisruptionBudget.policy/policy/v1beta1": [
                            "kube-system/ebs-csi-controller"
                        ],
                        "ServiceAccount/v1": [
                            "kube-system/ebs-csi-node-sa"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "controller": {
                            "nodeSelector": {
                                "eks.amazonaws.com/capacityType": "ON_DEMAND"
                            },
                            "serviceAccount": {
                                "create": false,
                                "name": "ebs-csi-controller-sa"
                            }
                        },
                        "node": {
                            "nodeSelector": {
                                "eks.amazonaws.com/capacityType": "ON_DEMAND"
                            }
                        }
                    },
                    "verify": false,
                    "version": "v2.8.1",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAGAssEBrfWjge06CKOUaEB8O2I2H4P11Kz4d8wdyWd61xC1J2CydUP6TG7QlzhoKp+B3a/mravp4jCnwr1stbsvLTf9Up1bs0ZYIYFJGA7YG2ldGBbgJLCPpaAUeeZUfj0Rj32+oXTN8EG8UGzhqPgT0Y5IYF0f1+yAhGyjPWh2Dil5dSHWIYTbz+5tziYBtmfbktVEjZxAUk9C01xJ599ZiKw3zY2XWqG9I8bfmTxfEL7OrxXClzAoYAT1W9qNz6HSjkkJrYnmPyZAHXVmMcSRfq9ACWacUROWdVeMwrFVTI90b7J2l53/MpatFtMwUOQIkNDVeFp4Vv908pIkU1lWaKtCPJoxlkkU1uNc/iiDie+Xg1HA8GUnWXB8Tr3j9ZoK79jhdsVFRbCBDiRsT9fKLWXHhEeZPvpQ7uN+UdRyRdKM5hkrnH8/AyZmDbKtL/QtDT/QVlPiuoeoLnmgl5GIgV2f4/o3doG5Z3GG3z1/pxqeu5bXljIE7zwsZgOmS+D7ZZyawl08rGk8gjTS+XPvkGSsxHqY8blsKJUNUNO2KnbF+3lvHQtetHETm6vvcJmU41NGXbcAJes46tV06QQxNdf4VW6JOuHCvNKlTmdVIGCT4SUM5DBM9aaCkQHZLjIbEXRAVcKHAq8jwDYwjevYKE5rNVItUhTuDXTQVnDW6uumvWRIOecsOiV1pVuQOuMMCrgudiCbPOxQHJ3YtR3NSlJubIz20e78lf9SGhHIPf5kGgenKWrir6i91LELfYMK9ywnAptq1E1GoDpYtoWTjt0jwVkgdMWmFd17V8ZJTNuKXNqGlgbOnv3Jn7SDLnBRh4Jju2SHZ2YI5sjCtCDPuOPeEw0DDpLwpq7av8g3e39HIyzQACvzoydymG7AIW5qKragWEQcido+4X0Tpp52tGEc3nGNPYGGiBvXf2oBU4krKOCadp3/69e58yUn0X9v4/zvw9kWtY3fw4c4LAEo8klrBES8qwnBUQQdfMn7TqjiVNAx3mjxjm78QB7aqw8ssELN8fzHgnMHexBDCpP7Qg8gFgzch4Lf2xkt2c0tsdT1Qc7Wrm5vCgUfLLAOMmlKhU6gqYCjIbpm+gq68En8m5RbjHdzHziTKJBBQzeemDjk6pzCJwcU6hLcE8JEHyJkEo90bX4ll5DDLyb76KiDl9OrA8Q+SvqDyU5Zt9h1pT3hojTzEr+QoS/PeDT4f6EtZ4etHFiqfTnefol9XEVcM+Slw6oow9Vk6ehgtw9T/CVlETlGP/Same71pCIO08Nd+D85z70RrASRqsySpjyFK6AfUazTCj3VU6wJfcuYCBKvZZmSMhDjzIiTx4vBMvlSYBJJkGNRD1SqKIT7fmPC1DUmLtBm72MkJgygINRSl7c5w1LN4Ywyhm+8B3WcCd/Si9GTaOl8JL6XR1tmJ9ZxRThc4JJ1JfXDwdIQZpZTgqjMWhZrwd2SqI53pSclhzObRaSFPLZ4aEf8qSIBATQ2m2+wfHP0M6Q/V8MnzCV2aMk3s7EIjBXWnVWc42GALQcXqc5srOly/d6QA3s6fEjFw+s2uq2bOzqUydX5cKXcZzghQjsa6MFu9t57v/30WthC4A5/BD3Vu3bjA9SXnwTJVTFw1CJCFvQb0oe6qQwfMTVsFctrZW/tbyL6h1wIp/EfKfvcOfy++LWqu5KA92cBII5uEZIpcd0aDCjdLa5+UzU7YKFyoA2Mmg2/431Ob7X1DE8SlQhN/AIfGkzi6HXCMFOX91wgcgdKUJc6JVOzlL6IwPU2WPN/qbwm30Eu4ovnVyimdRljdzmq5fnypDLmMC+FQAHYBHMysQnHPlhsoObWTbqxDgWkqCjDTwJwXY3cD18tMb+nR8UT8CRwUpqgHv/UtN0iR1ShauKxl4hNmQejc5L5b+/tH3fcNIg6VPb/WMpsCp+fMyP6bjP89RLVKYsqKgm7kVuesWpIO3JHGqZ+INFtoCP+OrmyA7C7Xb/T62YweLIfg+FIF6PN2ElRx3h1/ZviZFZn7NNgMDPo0b4KoLACEE8K2/uaUo9CEYMIr1XugFwZH96eW/12ZEzkey2Jsx4fi4ouSovs+FUliEpipHJVUc5ubnkuK4MjsM8QylbHdZFJRonBeTn3eQzRvx/Gyem0V79m5sK+osOvJGjG8eVrs3zj0Dpm1ccMkkya/2Eg0virXB9RRPiykwklFoaT7uf/9CCSFWWIxSOsj5U+rCyWzxjbS1StOYnQwbSEYh7Xn65ZOWD16GIQ0Cz3Yx/+F3tShZa5ErLs0+jn5iN0V7Wh4xD8="
                    },
                    "atomic": false,
                    "chart": "aws-ebs-csi-driver",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "ebs-csi-driver-9rj2oo3r",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes-sigs.github.io/aws-ebs-csi-driver/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "CSIDriver.storage.k8s.io/storage.k8s.io/v1": [
                            "ebs.csi.aws.com"
                        ],
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "ebs-csi-node-role",
                            "ebs-external-attacher-role",
                            "ebs-external-provisioner-role",
                            "ebs-external-resizer-role",
                            "ebs-external-snapshotter-role"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "ebs-csi-attacher-binding",
                            "ebs-csi-node-getter-binding",
                            "ebs-csi-provisioner-binding",
                            "ebs-csi-resizer-binding",
                            "ebs-csi-snapshotter-binding"
                        ],
                        "DaemonSet.apps/apps/v1": [
                            "kube-system/ebs-csi-node"
                        ],
                        "Deployment.apps/apps/v1": [
                            "kube-system/ebs-csi-controller"
                        ],
                        "PodDisruptionBudget.policy/policy/v1": [
                            "kube-system/ebs-csi-controller"
                        ],
                        "ServiceAccount/v1": [
                            "kube-system/ebs-csi-node-sa"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "1.9.0",
                        "chart": "aws-ebs-csi-driver",
                        "name": "ebs-csi-driver-9rj2oo3r",
                        "namespace": "kube-system",
                        "revision": 2,
                        "status": "deployed",
                        "version": "2.8.1"
                    },
                    "timeout": 300,
                    "values": {
                        "controller": {
                            "nodeSelector": {
                                "eks.amazonaws.com/capacityType": "ON_DEMAND"
                            },
                            "serviceAccount": {
                                "create": false,
                                "name": "ebs-csi-controller-sa"
                            }
                        },
                        "node": {
                            "nodeSelector": {
                                "eks.amazonaws.com/capacityType": "ON_DEMAND"
                            }
                        }
                    },
                    "verify": false,
                    "version": "2.8.1",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-attach-ebs-policy"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "namespace": null,
                    "repositoryOpts": null,
                    "values": null,
                    "version": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "custom": false,
                "type": "kubernetes:yaml:ConfigFile",
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ]
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:Namespace::strimzi-ns",
                "custom": true,
                "id": "strimzi",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "strimzi"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "strimzi"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"strimzi\"}}\n"
                        },
                        "creationTimestamp": "2022-09-01T16:50:40Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "strimzi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:kubernetes.io/metadata.name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-09-01T16:50:40Z"
                            }
                        ],
                        "name": "strimzi",
                        "resourceVersion": "60827669",
                        "uid": "ecbf0afc-c000-4705-8c1b-edb4e9d3a35f"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::strimzi-k8s-provider::244cf852-b895-43a4-a2e0-0bef1efc7ed7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:Namespace::cloudwatch-ns",
                "custom": true,
                "id": "amazon-cloudwatch",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "name": "amazon-cloudwatch"
                        },
                        "name": "amazon-cloudwatch"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "name": "amazon-cloudwatch"
                            },
                            "name": "amazon-cloudwatch"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"name\":\"amazon-cloudwatch\"},\"name\":\"amazon-cloudwatch\"}}\n"
                        },
                        "creationTimestamp": "2022-08-09T20:02:10Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "amazon-cloudwatch",
                            "name": "amazon-cloudwatch"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:kubernetes.io/metadata.name": {},
                                            "f:name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-09T20:02:10Z"
                            }
                        ],
                        "name": "amazon-cloudwatch",
                        "resourceVersion": "50365081",
                        "uid": "e161b80d-caf5-4f87-b91b-ace10f1a18bc"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ConfigMap::otel-eks/otel-agent-conf",
                "custom": true,
                "id": "otel-eks/otel-agent-conf",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "otel-agent-config": "extensions:\n  health_check:\n  pprof:\n  zpages:\n\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:4318\n\nprocessors:\n  # increase the timeout (time after which a batch is sent regardless), defaults to 200ms to maximizing\n  # the number of spans sent collectively to the destination (cloudwatch xray).\n  # rest of the values are set to default `end_batch_size (default = 8192)` and `send_batch_max_size (default = 0)`\n  batch/traces:\n    timeout: 10s\n  batch/metrics:\n    timeout: 60s\n  resourcedetection:\n    detectors:\n      - env\n      - system\n      - ec2\n      - eks\n    timeout: 10s\n    override: false\n  resource:\n    attributes:\n      - key: TaskId\n        from_attribute: job\n        action: insert\n\nexporters:\n  awsxray:\n\nservice:\n  telemetry:\n    logs:\n      level: \"debug\"\n  extensions:\n    - health_check\n    - pprof\n    - zpages\n  pipelines:\n    traces:\n      receivers:\n        - otlp\n      processors:\n        - batch/traces\n      exporters:\n        - awsxray\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app": "opentelemetry",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "component": "otel-agent-conf"
                        },
                        "name": "otel-agent-conf",
                        "namespace": "otel-eks"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "otel-agent-config": "extensions:\n  health_check:\n  pprof:\n  zpages:\n\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:4318\n\nprocessors:\n  # increase the timeout (time after which a batch is sent regardless), defaults to 200ms to maximizing\n  # the number of spans sent collectively to the destination (cloudwatch xray).\n  # rest of the values are set to default `end_batch_size (default = 8192)` and `send_batch_max_size (default = 0)`\n  batch/traces:\n    timeout: 10s\n  batch/metrics:\n    timeout: 60s\n  resourcedetection:\n    detectors:\n      - env\n      - system\n      - ec2\n      - eks\n    timeout: 10s\n    override: false\n  resource:\n    attributes:\n      - key: TaskId\n        from_attribute: job\n        action: insert\n\nexporters:\n  awsxray:\n\nservice:\n  telemetry:\n    logs:\n      level: \"debug\"\n  extensions:\n    - health_check\n    - pprof\n    - zpages\n  pipelines:\n    traces:\n      receivers:\n        - otlp\n      processors:\n        - batch/traces\n      exporters:\n        - awsxray\n"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app": "opentelemetry",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "component": "otel-agent-conf"
                            },
                            "name": "otel-agent-conf",
                            "namespace": "otel-eks"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "otel-agent-config": "extensions:\n  health_check:\n  pprof:\n  zpages:\n\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:4318\n\nprocessors:\n  # increase the timeout (time after which a batch is sent regardless), defaults to 200ms to maximizing\n  # the number of spans sent collectively to the destination (cloudwatch xray).\n  # rest of the values are set to default `end_batch_size (default = 8192)` and `send_batch_max_size (default = 0)`\n  batch/traces:\n    timeout: 10s\n  batch/metrics:\n    timeout: 60s\n  resourcedetection:\n    detectors:\n      - env\n      - system\n      - ec2\n      - eks\n    timeout: 10s\n    override: false\n  resource:\n    attributes:\n      - key: TaskId\n        from_attribute: job\n        action: insert\n\nexporters:\n  awsxray:\n\nservice:\n  telemetry:\n    logs:\n      level: \"debug\"\n  extensions:\n    - health_check\n    - pprof\n    - zpages\n  pipelines:\n    traces:\n      receivers:\n        - otlp\n      processors:\n        - batch/traces\n      exporters:\n        - awsxray\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"otel-agent-config\":\"extensions:\\n  health_check:\\n  pprof:\\n  zpages:\\n\\nreceivers:\\n  otlp:\\n    protocols:\\n      grpc:\\n        endpoint: 0.0.0.0:4317\\n      http:\\n        endpoint: 0.0.0.0:4318\\n\\nprocessors:\\n  # increase the timeout (time after which a batch is sent regardless), defaults to 200ms to maximizing\\n  # the number of spans sent collectively to the destination (cloudwatch xray).\\n  # rest of the values are set to default `end_batch_size (default = 8192)` and `send_batch_max_size (default = 0)`\\n  batch/traces:\\n    timeout: 10s\\n  batch/metrics:\\n    timeout: 60s\\n  resourcedetection:\\n    detectors:\\n      - env\\n      - system\\n      - ec2\\n      - eks\\n    timeout: 10s\\n    override: false\\n  resource:\\n    attributes:\\n      - key: TaskId\\n        from_attribute: job\\n        action: insert\\n\\nexporters:\\n  awsxray:\\n\\nservice:\\n  telemetry:\\n    logs:\\n      level: \\\"debug\\\"\\n  extensions:\\n    - health_check\\n    - pprof\\n    - zpages\\n  pipelines:\\n    traces:\\n      receivers:\\n        - otlp\\n      processors:\\n        - batch/traces\\n      exporters:\\n        - awsxray\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app\":\"opentelemetry\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"component\":\"otel-agent-conf\"},\"name\":\"otel-agent-conf\",\"namespace\":\"otel-eks\"}}\n"
                        },
                        "creationTimestamp": "2022-08-09T20:02:11Z",
                        "labels": {
                            "app": "opentelemetry",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "component": "otel-agent-conf"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:otel-agent-config": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:component": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-09T20:02:11Z"
                            }
                        ],
                        "name": "otel-agent-conf",
                        "namespace": "otel-eks",
                        "resourceVersion": "50365099",
                        "uid": "8eef7720-e7ad-4128-8cc9-d192cd870863"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::aoc-agent-role",
                "custom": true,
                "id": "aoc-agent-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "aoc-agent-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes",
                                "nodes/proxy",
                                "nodes/metrics",
                                "services",
                                "endpoints",
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes/stats",
                                "configmaps",
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "otel-container-insight-clusterleader"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "ingresses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "replicasets"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "jobs"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "nonResourceURLs": [
                                "/metrics"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "aoc-agent-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes",
                                    "nodes/proxy",
                                    "nodes/metrics",
                                    "services",
                                    "endpoints",
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/stats",
                                    "configmaps",
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "otel-container-insight-clusterleader"
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "ingresses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "replicasets"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "nonResourceURLs": [
                                    "/metrics"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"aoc-agent-role\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\",\"nodes/proxy\",\"nodes/metrics\",\"services\",\"endpoints\",\"pods\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes/stats\",\"configmaps\",\"events\"],\"verbs\":[\"create\",\"get\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"otel-container-insight-clusterleader\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"update\"]},{\"apiGroups\":[\"extensions\"],\"resources\":[\"ingresses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"replicasets\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"batch\"],\"resources\":[\"jobs\"],\"verbs\":[\"list\",\"watch\"]},{\"nonResourceURLs\":[\"/metrics\"],\"verbs\":[\"get\"]}]}\n"
                        },
                        "creationTimestamp": "2022-08-09T20:02:12Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-09T20:02:12Z"
                            }
                        ],
                        "name": "aoc-agent-role",
                        "resourceVersion": "50365137",
                        "uid": "fd138846-a0a2-4439-8011-378f051c1912"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes",
                                "nodes/proxy",
                                "nodes/metrics",
                                "services",
                                "endpoints",
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes/stats",
                                "configmaps",
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "otel-container-insight-clusterleader"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "ingresses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "replicasets"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "jobs"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "nonResourceURLs": [
                                "/metrics"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:Service::otel-eks/otel-collector",
                "custom": true,
                "id": "otel-eks/otel-collector",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "otel-collector",
                        "namespace": "otel-eks"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "otlp",
                                "port": 4317,
                                "protocol": "TCP",
                                "targetPort": "otlp"
                            },
                            {
                                "name": "otlp-http",
                                "port": 4318,
                                "protocol": "TCP",
                                "targetPort": "otlp-http"
                            }
                        ],
                        "selector": {
                            "name": "otel-collector"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "otel-collector",
                            "namespace": "otel-eks"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "otlp",
                                    "port": 4317,
                                    "protocol": "TCP",
                                    "targetPort": "otlp"
                                },
                                {
                                    "name": "otlp-http",
                                    "port": 4318,
                                    "protocol": "TCP",
                                    "targetPort": "otlp-http"
                                }
                            ],
                            "selector": {
                                "name": "otel-collector"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"otel-collector\",\"namespace\":\"otel-eks\"},\"spec\":{\"ports\":[{\"name\":\"otlp\",\"port\":4317,\"protocol\":\"TCP\",\"targetPort\":\"otlp\"},{\"name\":\"otlp-http\",\"port\":4318,\"protocol\":\"TCP\",\"targetPort\":\"otlp-http\"}],\"selector\":{\"name\":\"otel-collector\"},\"type\":\"ClusterIP\"}}\n"
                        },
                        "creationTimestamp": "2022-08-09T20:02:11Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:internalTrafficPolicy": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"port\":4317,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            },
                                            "k:{\"port\":4318,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:sessionAffinity": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-09T20:02:11Z"
                            }
                        ],
                        "name": "otel-collector",
                        "namespace": "otel-eks",
                        "resourceVersion": "50365105",
                        "uid": "b4f10223-922b-4c31-b915-b50f8f1103d7"
                    },
                    "spec": {
                        "clusterIP": "172.20.232.129",
                        "clusterIPs": [
                            "172.20.232.129"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "otlp",
                                "port": 4317,
                                "protocol": "TCP",
                                "targetPort": "otlp"
                            },
                            {
                                "name": "otlp-http",
                                "port": 4318,
                                "protocol": "TCP",
                                "targetPort": "otlp-http"
                            }
                        ],
                        "selector": {
                            "name": "otel-collector"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:Namespace::otel-eks",
                "custom": true,
                "id": "otel-eks",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "name": "otel-eks"
                        },
                        "name": "otel-eks"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "name": "otel-eks"
                            },
                            "name": "otel-eks"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"name\":\"otel-eks\"},\"name\":\"otel-eks\"}}\n"
                        },
                        "creationTimestamp": "2022-08-09T20:02:10Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "otel-eks",
                            "name": "otel-eks"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:kubernetes.io/metadata.name": {},
                                            "f:name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-09T20:02:10Z"
                            }
                        ],
                        "name": "otel-eks",
                        "resourceVersion": "50365086",
                        "uid": "0f5395ac-96d9-44ab-8126-1ef1b3cedfc1"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ServiceAccount::otel-eks/otel-collector-account",
                "custom": true,
                "id": "otel-eks/otel-collector-account",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "otel-collector-account",
                        "namespace": "otel-eks"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "otel-collector-account",
                            "namespace": "otel-eks"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"otel-collector-account\",\"namespace\":\"otel-eks\"}}\n"
                        },
                        "creationTimestamp": "2022-08-09T20:02:10Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-09T20:02:10Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"otel-collector-account-token-6x2j4\"}": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-08-09T20:02:11Z"
                            }
                        ],
                        "name": "otel-collector-account",
                        "namespace": "otel-eks",
                        "resourceVersion": "50365097",
                        "uid": "220e6bfe-98dd-471e-a3d9-aaa24eeeea72"
                    },
                    "secrets": [
                        {
                            "name": "otel-collector-account-token-6x2j4"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::aoc-agent-role-binding",
                "custom": true,
                "id": "aoc-agent-role-binding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "aoc-agent-role-binding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "aoc-agent-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "otel-collector-account",
                            "namespace": "otel-eks"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "aoc-agent-role-binding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "aoc-agent-role"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "otel-collector-account",
                                "namespace": "otel-eks"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"aoc-agent-role-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"aoc-agent-role\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"otel-collector-account\",\"namespace\":\"otel-eks\"}]}\n"
                        },
                        "creationTimestamp": "2022-08-09T20:02:11Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-09T20:02:11Z"
                            }
                        ],
                        "name": "aoc-agent-role-binding",
                        "resourceVersion": "50365102",
                        "uid": "826e50ce-33cc-4524-85dc-9ae9dc686b52"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "aoc-agent-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "otel-collector-account",
                            "namespace": "otel-eks"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apps/v1:Deployment::otel-eks/otel-collector",
                "custom": true,
                "id": "otel-eks/otel-collector",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "otel-collector",
                        "namespace": "otel-eks"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "name": "otel-collector"
                            }
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "name": "otel-collector"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "--config",
                                            "/conf/otel-agent-config.yaml"
                                        ],
                                        "env": [
                                            {
                                                "name": "K8S_NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_IP",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "status.hostIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "K8S_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "AWS_REGION",
                                                "value": "us-west-2"
                                            },
                                            {
                                                "name": "OTEL_RESOURCE_ATTRIBUTES",
                                                "value": "ClusterName=p-3-eks-cluster-eksCluster-fd821aa,FileHash=7af3121977d289a93015720f60c84423"
                                            }
                                        ],
                                        "image": "otel/opentelemetry-collector-contrib:latest",
                                        "imagePullPolicy": "Always",
                                        "name": "otel-collector",
                                        "ports": [
                                            {
                                                "containerPort": 4317,
                                                "name": "otlp",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 4318,
                                                "name": "otlp-http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "512m",
                                                "memory": "8G"
                                            },
                                            "requests": {
                                                "cpu": "128m",
                                                "memory": "3G"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/rootfs",
                                                "name": "rootfs",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/run/docker.sock",
                                                "name": "dockersock",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/lib/docker",
                                                "name": "varlibdocker",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/sys",
                                                "name": "sys",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/dev/disk",
                                                "name": "devdisk",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/conf",
                                                "name": "otel-agent-config-vol"
                                            }
                                        ]
                                    }
                                ],
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                },
                                "serviceAccountName": "otel-collector-account",
                                "volumes": [
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "otel-agent-config",
                                                    "path": "otel-agent-config.yaml"
                                                }
                                            ],
                                            "name": "otel-agent-conf"
                                        },
                                        "name": "otel-agent-config-vol"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/"
                                        },
                                        "name": "rootfs"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/run/docker.sock"
                                        },
                                        "name": "dockersock"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/lib/docker"
                                        },
                                        "name": "varlibdocker"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/sys"
                                        },
                                        "name": "sys"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/dev/disk/"
                                        },
                                        "name": "devdisk"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "otel-collector",
                            "namespace": "otel-eks"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "name": "otel-collector"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "otel-collector"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "--config",
                                                "/conf/otel-agent-config.yaml"
                                            ],
                                            "env": [
                                                {
                                                    "name": "K8S_NODE_NAME",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.nodeName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "HOST_IP",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "status.hostIP"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "HOST_NAME",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.nodeName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "K8S_NAMESPACE",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.namespace"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "AWS_REGION",
                                                    "value": "us-west-2"
                                                },
                                                {
                                                    "name": "OTEL_RESOURCE_ATTRIBUTES",
                                                    "value": "ClusterName=p-3-eks-cluster-eksCluster-fd821aa,FileHash=7af3121977d289a93015720f60c84423"
                                                }
                                            ],
                                            "image": "otel/opentelemetry-collector-contrib:latest",
                                            "imagePullPolicy": "Always",
                                            "name": "otel-collector",
                                            "ports": [
                                                {
                                                    "containerPort": 4317,
                                                    "name": "otlp",
                                                    "protocol": "TCP"
                                                },
                                                {
                                                    "containerPort": 4318,
                                                    "name": "otlp-http",
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "resources": {
                                                "limits": {
                                                    "cpu": "512m",
                                                    "memory": "8G"
                                                },
                                                "requests": {
                                                    "cpu": "128m",
                                                    "memory": "3G"
                                                }
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/rootfs",
                                                    "name": "rootfs",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/var/run/docker.sock",
                                                    "name": "dockersock",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/var/lib/docker",
                                                    "name": "varlibdocker",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/sys",
                                                    "name": "sys",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/dev/disk",
                                                    "name": "devdisk",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/conf",
                                                    "name": "otel-agent-config-vol"
                                                }
                                            ]
                                        }
                                    ],
                                    "nodeSelector": {
                                        "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                        "kubernetes.io/arch": "amd64"
                                    },
                                    "serviceAccountName": "otel-collector-account",
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "otel-agent-config",
                                                        "path": "otel-agent-config.yaml"
                                                    }
                                                ],
                                                "name": "otel-agent-conf"
                                            },
                                            "name": "otel-agent-config-vol"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/"
                                            },
                                            "name": "rootfs"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/run/docker.sock"
                                            },
                                            "name": "dockersock"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/lib/docker"
                                            },
                                            "name": "varlibdocker"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/sys"
                                            },
                                            "name": "sys"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/dev/disk/"
                                            },
                                            "name": "devdisk"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "5",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"otel-collector\",\"namespace\":\"otel-eks\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"otel-collector\"}},\"template\":{\"metadata\":{\"labels\":{\"name\":\"otel-collector\"}},\"spec\":{\"containers\":[{\"args\":[\"--config\",\"/conf/otel-agent-config.yaml\"],\"env\":[{\"name\":\"K8S_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"HOST_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"K8S_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"AWS_REGION\",\"value\":\"us-west-2\"},{\"name\":\"OTEL_RESOURCE_ATTRIBUTES\",\"value\":\"ClusterName=p-3-eks-cluster-eksCluster-fd821aa,FileHash=7af3121977d289a93015720f60c84423\"}],\"image\":\"otel/opentelemetry-collector-contrib:latest\",\"imagePullPolicy\":\"Always\",\"name\":\"otel-collector\",\"ports\":[{\"containerPort\":4317,\"name\":\"otlp\",\"protocol\":\"TCP\"},{\"containerPort\":4318,\"name\":\"otlp-http\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"512m\",\"memory\":\"8G\"},\"requests\":{\"cpu\":\"128m\",\"memory\":\"3G\"}},\"volumeMounts\":[{\"mountPath\":\"/rootfs\",\"name\":\"rootfs\",\"readOnly\":true},{\"mountPath\":\"/var/run/docker.sock\",\"name\":\"dockersock\",\"readOnly\":true},{\"mountPath\":\"/var/lib/docker\",\"name\":\"varlibdocker\",\"readOnly\":true},{\"mountPath\":\"/sys\",\"name\":\"sys\",\"readOnly\":true},{\"mountPath\":\"/dev/disk\",\"name\":\"devdisk\",\"readOnly\":true},{\"mountPath\":\"/conf\",\"name\":\"otel-agent-config-vol\"}]}],\"nodeSelector\":{\"eks.amazonaws.com/capacityType\":\"ON_DEMAND\",\"kubernetes.io/arch\":\"amd64\"},\"serviceAccountName\":\"otel-collector-account\",\"volumes\":[{\"configMap\":{\"items\":[{\"key\":\"otel-agent-config\",\"path\":\"otel-agent-config.yaml\"}],\"name\":\"otel-agent-conf\"},\"name\":\"otel-agent-config-vol\"},{\"hostPath\":{\"path\":\"/\"},\"name\":\"rootfs\"},{\"hostPath\":{\"path\":\"/var/run/docker.sock\"},\"name\":\"dockersock\"},{\"hostPath\":{\"path\":\"/var/lib/docker\"},\"name\":\"varlibdocker\"},{\"hostPath\":{\"path\":\"/sys\"},\"name\":\"sys\"},{\"hostPath\":{\"path\":\"/dev/disk/\"},\"name\":\"devdisk\"}]}}}}\n"
                        },
                        "creationTimestamp": "2022-08-09T20:02:11Z",
                        "generation": 5,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:progressDeadlineSeconds": {},
                                        "f:replicas": {},
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:strategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        },
                                        "f:template": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    ".": {},
                                                    "f:name": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"otel-collector\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"AWS_REGION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"HOST_IP\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"HOST_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"K8S_NAMESPACE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"K8S_NODE_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"OTEL_RESOURCE_ATTRIBUTES\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":4317,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            },
                                                            "k:{\"containerPort\":4318,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/conf\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/dev/disk\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/rootfs\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/sys\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/lib/docker\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/run/docker.sock\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:nodeSelector": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"devdisk\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"dockersock\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"otel-agent-config-vol\"}": {
                                                        ".": {},
                                                        "f:configMap": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:items": {},
                                                            "f:name": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"rootfs\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"sys\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"varlibdocker\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-09T20:02:11Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-30T17:24:56Z"
                            }
                        ],
                        "name": "otel-collector",
                        "namespace": "otel-eks",
                        "resourceVersion": "59892549",
                        "uid": "a166fba6-c3a4-4857-91ab-02241f8388ce"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "name": "otel-collector"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "name": "otel-collector"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "--config",
                                            "/conf/otel-agent-config.yaml"
                                        ],
                                        "env": [
                                            {
                                                "name": "K8S_NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_IP",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.hostIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "K8S_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "AWS_REGION",
                                                "value": "us-west-2"
                                            },
                                            {
                                                "name": "OTEL_RESOURCE_ATTRIBUTES",
                                                "value": "ClusterName=p-3-eks-cluster-eksCluster-fd821aa,FileHash=7af3121977d289a93015720f60c84423"
                                            }
                                        ],
                                        "image": "otel/opentelemetry-collector-contrib:latest",
                                        "imagePullPolicy": "Always",
                                        "name": "otel-collector",
                                        "ports": [
                                            {
                                                "containerPort": 4317,
                                                "name": "otlp",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 4318,
                                                "name": "otlp-http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "512m",
                                                "memory": "8G"
                                            },
                                            "requests": {
                                                "cpu": "128m",
                                                "memory": "3G"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/rootfs",
                                                "name": "rootfs",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/run/docker.sock",
                                                "name": "dockersock",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/lib/docker",
                                                "name": "varlibdocker",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/sys",
                                                "name": "sys",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/dev/disk",
                                                "name": "devdisk",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/conf",
                                                "name": "otel-agent-config-vol"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "otel-collector-account",
                                "serviceAccountName": "otel-collector-account",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "items": [
                                                {
                                                    "key": "otel-agent-config",
                                                    "path": "otel-agent-config.yaml"
                                                }
                                            ],
                                            "name": "otel-agent-conf"
                                        },
                                        "name": "otel-agent-config-vol"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/",
                                            "type": ""
                                        },
                                        "name": "rootfs"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/run/docker.sock",
                                            "type": ""
                                        },
                                        "name": "dockersock"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/lib/docker",
                                            "type": ""
                                        },
                                        "name": "varlibdocker"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/sys",
                                            "type": ""
                                        },
                                        "name": "sys"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/dev/disk/",
                                            "type": ""
                                        },
                                        "name": "devdisk"
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-09T20:02:17Z",
                                "lastUpdateTime": "2022-08-09T20:02:17Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2022-08-09T20:02:11Z",
                                "lastUpdateTime": "2022-08-30T17:24:56Z",
                                "message": "ReplicaSet \"otel-collector-5c75fc7644\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 5,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::milvus",
                "custom": true,
                "id": "milvus/milvus",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "milvus",
                    "cleanupOnFail": false,
                    "createNamespace": true,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "milvus",
                    "namespace": "milvus",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://milvus-io.github.io/milvus-helm/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ConfigMap/v1": [
                            "milvus",
                            "milvus/milvus-pulsar-bookie",
                            "milvus/milvus-pulsar-broker",
                            "milvus/milvus-pulsar-proxy",
                            "milvus/milvus-pulsar-recovery",
                            "milvus/milvus-pulsar-zookeeper"
                        ],
                        "Deployment.apps/apps/v1": [
                            "milvus-attu",
                            "milvus-datacoord",
                            "milvus-datanode",
                            "milvus-indexcoord",
                            "milvus-indexnode",
                            "milvus-proxy",
                            "milvus-querycoord",
                            "milvus-querynode",
                            "milvus-rootcoord"
                        ],
                        "Job.batch/batch/v1": [
                            "milvus/milvus-pulsar-bookie-init",
                            "milvus/milvus-pulsar-pulsar-init"
                        ],
                        "PodDisruptionBudget.policy/policy/v1beta1": [
                            "milvus/milvus-pulsar-bookie",
                            "milvus/milvus-pulsar-broker",
                            "milvus/milvus-pulsar-proxy",
                            "milvus/milvus-pulsar-zookeeper"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "milvus-pulsar-broker-role"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "milvus-pulsar-broker-rolebinding"
                        ],
                        "Service/v1": [
                            "milvus",
                            "milvus-attu",
                            "milvus-datacoord",
                            "milvus-datanode",
                            "milvus-indexcoord",
                            "milvus-indexnode",
                            "milvus-querycoord",
                            "milvus-querynode",
                            "milvus-rootcoord",
                            "milvus/milvus-etcd",
                            "milvus/milvus-etcd-headless",
                            "milvus/milvus-pulsar-bookie",
                            "milvus/milvus-pulsar-broker",
                            "milvus/milvus-pulsar-proxy",
                            "milvus/milvus-pulsar-recovery",
                            "milvus/milvus-pulsar-zookeeper"
                        ],
                        "ServiceAccount/v1": [
                            "milvus/milvus-pulsar-broker-acct"
                        ],
                        "StatefulSet.apps/apps/v1": [
                            "milvus/milvus-etcd",
                            "milvus/milvus-pulsar-bookie",
                            "milvus/milvus-pulsar-broker",
                            "milvus/milvus-pulsar-proxy",
                            "milvus/milvus-pulsar-recovery",
                            "milvus/milvus-pulsar-zookeeper"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "attu": {
                            "affinity": {
                                "nodeAffinity": {
                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                        "nodeSelectorTerms": [
                                            {
                                                "matchExpressions": [
                                                    {
                                                        "key": "kubernetes.io/arch",
                                                        "operator": "In",
                                                        "values": [
                                                            "amd64"
                                                        ]
                                                    },
                                                    {
                                                        "key": "eks.amazonaws.com/capacityType",
                                                        "operator": "In",
                                                        "values": [
                                                            "ON_DEMAND"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            },
                            "enabled": true,
                            "ingress": {
                                "enabled": false
                            }
                        },
                        "cluster": {
                            "enabled": true
                        },
                        "etcd": {
                            "image": {
                                "pullPolicy": "IfNotPresent",
                                "tag": "3.5.4-r1"
                            },
                            "nodeSelector": {
                                "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                "kubernetes.io/arch": "amd64"
                            }
                        },
                        "externalS3": {
                            "accessKey": "AKIAQOLFGTNXMQUOE2HK",
                            "bucketName": "p-3-milvus-data",
                            "enabled": true,
                            "host": "s3.us-west-2.amazonaws.com",
                            "post": 80,
                            "secretKey": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "AAABAAWSCqsMVLzFt03yUo/dclfQHa4Y6uvJThkOMGPfWMeiT8RCW3Asq6x967DTwq7K/Bzl+tzmXEkHsh324d5SHGqxsHKjTH4="
                            }
                        },
                        "metrics": {
                            "enabled": true
                        },
                        "minio": {
                            "enabled": false
                        },
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND",
                            "kubernetes.io/arch": "amd64"
                        },
                        "pulsar": {
                            "autorecovery": {
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                }
                            },
                            "bookkeeper": {
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                }
                            },
                            "broker": {
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                }
                            },
                            "enabled": true,
                            "proxy": {
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                }
                            },
                            "zookeeper": {
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                }
                            }
                        },
                        "service": {
                            "annotations": {
                                "service.beta.kubernetes.io/aws-load-balancer-nlb-target-type": "instance",
                                "service.beta.kubernetes.io/aws-load-balancer-scheme": "internal",
                                "service.beta.kubernetes.io/aws-load-balancer-type": "external"
                            },
                            "type": "LoadBalancer"
                        }
                    },
                    "verify": false,
                    "version": "3.0.29",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABABJv8Vt+YpWtYFb0brLgMAncQ4J9aQZNjUd1pipTKO9prKilXg5TPU72ESANGmX9GXpaxSu/xc4LYwoFUsDRdqliab4Fnv7k07RMpJlRVFhHO/ZddKyhvX45P0vmlhLqubc49zaEf/nhiPWJwVY8FnOAUKkRs1vBaYvWELrqhNvZg/rIBN8/ZlhoJSUjXB+IEAIe00ripz0aDKic8uvXJl/GihEp/WY2hREX1QR1NLgurmkWZRgqT1QwWUUAbnk2YPGwF2XSbDCtdo1qebZtTTcc8Qad85FTK8T6CmrdxnjeP1gBnGqGFkXQQomGdQ5h0NzUpDs3jenh2OYiGcm+e0ViCxih6Qdm5UOMmqpPbEdFseSejj7xwaOHYBgVVnvGPwaUiOlnOyDC01DpjvUuQrrehMTw9yAiCcvpqEYxWPvSl3XzND1ZH8TVcST/Wp66FeESmG/WI9c0zUEEzHn6AZAxvItsXgKT7lTjRuYJ6yM4aXmv8/+BLqNROMQ9rlpsBLnD5ROzDejScdpQBxe+VJhyTB5iMcBSfAVmVXrq6mRHODQ/vCWfNewUOyQGptymjFnvm8R2jBRJ9aXWkIJGq5WHv6AJ0ALgyzJyFtvJ9P/Pk3bkAMQ+NkQ/J789yACq+vVazs5/62W5ewxOf/sc3VOvtsakGbElecrFvWK+4h3dZ2uR6i+/qobc/BiwqKvjbhsYlF5AtvHmK4eOgoRJzM1SgkQ5PCAxkfsWUaAWuc2KagQJ8TlrfcrwcrciH/r70y950MVEw+UVUdF0DNF3LvtjMKHR0ysMXB4a9AtA2nFj1tDc2OlV6Jfhs89geqK/HMUlXZk3BC9Q4st2IQDPf+Zpq2ujCoti5e3Psfv4/zR3zcelpuYFnI7svXAczlQKHqx8Tt5Nm0eRr3EE46qhKj6xDxiTabLHsVdpCbOMavjsGCL4SPa5w65NV/HtK6Y5uBX/e9Jb5Jsm0cKshWWBAp9JVVH1tRDjDgz0CBXQq+MrVpXBWf8z/hd8CWlKoocZnDLB7msT0ANExiLEo3PrQb1BsKJfy9JG+hNUTNTkzof99v0bWHCdnUl1WKThUDEO8YayMIMOsQ7Ko1xxLYzSnDnZgFL7/3CpDjgubVOo9lCHrb0Ku02hE7zYNMbYi+Cus1D9WfTtXWs1L36f4c+FAKkqdcWw3gBdbnKspzjqXx//10uXCGLRzPlbtQyS/sMtbJ97MToR2D6J5o0vfzNPvymNT7qGtymAwDli0l+NXyt5CtrHI4MGYH4RUFwM4m+kG8Jdz/4+W5X4QTxlIS7XfPsF/M09I84KDYw17/3N5Fpqt5PS5yHVHoBR0OcD7OaWXrC9NDczEunlXfOxK6OcFzFffak2Y92QUYcRBjjYMjjPqUDAxNmDypxJJNoS1KkJczAH/oMCpipa19lnMKwqHxhX1h7KrN1+Cnnuxoablgbelg2mHXF4a4dAdBsQExPjgLXGcLaBNT4E8XlryfD7raYXNfep3XpANbcQxxgwJMZEQsGLfRi/7ozTEPAjyqSU7Pk459AJ054QHAtGaQIaUOINWaGkqjkl5fYGFqz6uwu80Ss2SyB41vbUTIjhr9ahSpijT3MdeRBu68maWJzQ8A6VbsAzOTAIMwmESY8mE82O/4un5Xr0eHZsOJ/gfrmQBl+z0A+SN12+gUdF/TuOWpuCyptTsmvRmmEORMbWSRcHxhlvzCIJ1F20av1ZOq29pk6MN6Y+RSc5xp4lo7elHEF8j/6WK2HlbQjRt8ghsIq41uoHEctFg4m9lcHXpgrC/Xrr0wsTNZOKwPbHOOo03VqfxpCQiHH+9bJkEKN+p3tXcN/CQeRPBFjx0IfPJkzyLIdSNlAldXshyJqk7ASs9VSwhfxsfDBGvVUSzD5t4WCTRFilK2qDkYf8UbQVIjB32qR5ovsCms2FIZmShylwatwT3QG30Ei51Fdfheh1u9X3LPcpw8m0HWIw2ifb7x9hLKpEXxtQwyiHFGLDOR4YlTEfpGfATGD/CKJmLjpPnJuON1HkEqREuBuQCH/Rjt8pGNVIBI/s1j7NlfN3dKQo4cr7Pb9x3hXIYq4e7AXdeH0PNNsOX40bulqX8GDiampTvWv5fJZ64LxtYJB8Ff4mso3OX+7QH9Oa30CV1AcUbTBFljdM66XlPODg2xQSSiUpufvb6CVoDTsCzUxV+hYjnPMWf8OKi9r15MPsFa6l4xkShv3w1PIoZmNoxtnMuzkJEk5MQe0XNLtMCfJFKXGZH0DTSWzEVPoitBNUBciH9fE6Jh6ipHzoUWcYQ9dLOOP5WKUMsODr33RrmRvLeTnTeZoZnjgKdjTpZMu367hduAGuvpG4FfwO5KUKkLjvgCdl9NBt8AFuqpsygNpM4XUpLnzzRChrzMIQNAXY93Sv+zk81jX9rkyaAKZx+/F4N2ThfFN7i4d7rYJ6SFuVxAZAIUJRpaRutk1fqwLk7itAGj5he4aBLmmJYkJjTPfIr2AM9D/xSRaCnfwIKEeOZ1RwlCxWEHzwMQmFwXByr0qEQoVCBiO852z7oLvhQx2aIm157uSQVxlB9VcEAtm6gy4z6L/VoyUGHucGxnBwBcYhtVKqauT31Hft7Gh37A+hyrF5OwrXpWzHWDxRn9JqqNrAJUmfdvkaToJkXUIID5gAsmYuGF1yylF/PQwiRZCM3bLLpJAmi4UKNoPq5v+4squWBcxoEG0gNQhf048bAiWywyYkgkLeqeqWFFvsvNGH1YsHv9xZLA4yh+2yXILl4JVWSDr1ycH8QTpwo2yL7CvZp4DKl3WyfZL0fqDUmZnA74q1YlRDmgQ5aa+RDJ1j6g67fIxkQLTs5YCgFRMLSIeg/SzdBSKUEiJoFoUgOPntIPn0jo8Y1asA4oJKKhLir2/4oUfp5zHm+e3PzaKf3zVKJdR+8rrAP7LpXiO0t7AQClRSGTxknZchJIBEsu67voKINIlgkV3V0NxWx67zXFAmDWv75Hfvs2E45m7MYynMgqctDQgBDdLIqqc+EgQH9288ur4TiCKZITSpQCAoa7YO5M2FS8vYKrp5EP0s15PeLkG4QG8gI74fmHSxdfBac+9AJsa3Jrc4dPtH0Ao4DAGTHk7cEwEacOJV5/V4obgb98J8wHee82jS0jukhYrEW8W8lsXxs/eNtgR6hlX8wAIzfpwY9e0NmJunuZ9pGRA5hB3NX1dEUe3Dvs+QZDKs49egZcgSpb3njXczQauvvA19XheI87Jcilfrs9mCpLbogMCaHyxU5fuzZWL8id0BMhsh6KQmF/zX7ZrYRNz/dp0HQr6X/M5yDGVM+lRQ60UOrQFby6wG1e3Jv1LL2L6nwYgWju2fwRE9KUozWjpK3PD2EAH9D+rZE3//QziWRhLrCZZy09j3/nfN3n+KuyL8Bv1UrFqm7oyiLSeoJaDOQ/ZWf7QQzCuZ2kevRRS91+5HnjR815Qwm/tgq8ZAQ0X3saQ6RD8WUxSUQliY5gHVuW2V5m73t/OsbzGzurIf5EsCH+CPZOqCzXooO4X7ItTsKwe8nL6VzPtSJuaHGFCCF36DQFp5eHHFA5/8G+7VJk8YAjsiSbnt2nheUcdYoE+LmSG9LzF+YwuhFOnaxXwFRL5DJZS3I43VIxsfMr4lnxwt4dhw1Fd9rbpxvwcUUv/E31U8otFih7VzGAn8V0RFq+r6TXRO/au+uOArNakRW7X8IScgHyuSjqrq66D4/qsxaTs6hPIUHX4HP9eatXmYq/2E5X7PxDLpJiFu8MolJLYlEGIBaFvfItVtG9nW1083EO1PsplBaolLF9NVrRTbIRLJT8r/8csKRYAXLBdYYJsPCqaXLLG5InItl33JIEUO7brwQSjT4fT9PA6JHLw3l9sIrEH1DwReSttYNwhKrr3WIk/a9QyI2kppdHKL5RrcrxFE6TfBEgflRNGOO2HOMKo40Nq/s9o1yp4lFTDCXM1qtZ1kLANyvmAM693hlbI1hSG1xWajywrAhaQpcYaaoeDlHMUuqwdQKfq88aUK0N45+5or0sPcwlYasPFtdjoYRDmIP+ZJjWaFlreeDAWmYQP9PhEKRy5VZ53cGmysRbchWPyH8c8FqUWI0njggtiBYnhFsBsB7X8WCmap2I/O3vmDe4OcRu0HfxBPpBi1OdT27aLgctxq7npAwXMA+pU5TL7WQW9Sn7COA57+beOQeuQmRTIU2njleMV0oK3uXslL5bdKyffdqcnCZNWG56cgmuJFCTobP37KPMlXzRI1O2H0J37yf7ATPBsDJg5f/EWq4ZAz8BjRNUZnx3laN5slxiA/JfbglC2FyKStB3JiRmynQiL932LKzTI9n7VTPNVEly7x7crsJLtZILyR1dy7qYx2VxLAwD3BRsA4vRN1//fv2A7EXMuZ8Y2AQ6VwNLxhfvL3jpLN/5JSWhGutrv1IyaQ1IuCDb84MiuPyS59kW9HnWI6zvgachsx3ZzzOalzRcmZesRjnLnrevP4zbweUa4q6ocj5LCQyGox9qaNLa00rKo6rD2qLdp41QSjpX3fyCn3+W1myevJon07wHNeGPQelcdHPlDrrd2HvUDkBOaojB24JzlDJ0UdbaIGmiuTW88sJZwnz9LFe5erWWj/QzmJYvq+vLusJpyTIZOxp1+offxcWCZpWfTobfFa9YviU8vo0g9b2MoBrfhgZ3FLBdXvvX8xydIbm+60djxPMsS2Sme6Hoda/mNOx1eUbzy8xfkUfgZNVWjfTRLBr+Y8Tu1crsg13VVKPOdDNnQ8RmtEU2QDuw3qRdTx5ijPLvgE8TEKKg6BhQO2JJy7YD8CE/Q1AQvBhaHViBslEQlo/CrhY4+BFTaZnjUT0z8xqazZHeQGwLeoR4X0Nd2730ED0GSdoE/K09K+bj4xWao73Gmt0l4/EfkaXHWa03Fwz6/0Ee+qSoCj97vHZalZVjyKNf7sLpg0XwRi5OoRM/HpXugLEMKre8thKH295EGZBn3B0i/ffXzsrz8zA+kHDUjKBbU3/DzOeJtCzklpleXefZ1U6mwOvhAuSMA4ko0tgHFObmV0awGNIqCzOXCeBk3GMFTDQEOkHdAZJbnY7Yizm9W6J/kaaZRVnk4DjhfsZHTTpEjD8+dz+UEvSTKIZupV4zAHEvv7fVK2ozqs2Fo/OO7y1/KxqigwixYlGQsdj+Qu75n2K3grCXzHlhDLP3fmOcxo98KNRqngH1hq5W+JH9WY"
                    },
                    "atomic": false,
                    "chart": "milvus",
                    "cleanupOnFail": false,
                    "createNamespace": true,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "milvus",
                    "namespace": "milvus",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://milvus-io.github.io/milvus-helm/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ConfigMap/v1": [
                            "milvus",
                            "milvus/milvus-pulsar-bookie",
                            "milvus/milvus-pulsar-broker",
                            "milvus/milvus-pulsar-proxy",
                            "milvus/milvus-pulsar-recovery",
                            "milvus/milvus-pulsar-zookeeper"
                        ],
                        "Deployment.apps/apps/v1": [
                            "milvus-attu",
                            "milvus-datacoord",
                            "milvus-datanode",
                            "milvus-indexcoord",
                            "milvus-indexnode",
                            "milvus-proxy",
                            "milvus-querycoord",
                            "milvus-querynode",
                            "milvus-rootcoord"
                        ],
                        "Job.batch/batch/v1": [
                            "milvus/milvus-pulsar-bookie-init",
                            "milvus/milvus-pulsar-pulsar-init"
                        ],
                        "PodDisruptionBudget.policy/policy/v1beta1": [
                            "milvus/milvus-pulsar-bookie",
                            "milvus/milvus-pulsar-broker",
                            "milvus/milvus-pulsar-proxy",
                            "milvus/milvus-pulsar-zookeeper"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "milvus-pulsar-broker-role"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "milvus-pulsar-broker-rolebinding"
                        ],
                        "Service/v1": [
                            "milvus",
                            "milvus-attu",
                            "milvus-datacoord",
                            "milvus-datanode",
                            "milvus-indexcoord",
                            "milvus-indexnode",
                            "milvus-querycoord",
                            "milvus-querynode",
                            "milvus-rootcoord",
                            "milvus/milvus-etcd",
                            "milvus/milvus-etcd-headless",
                            "milvus/milvus-pulsar-bookie",
                            "milvus/milvus-pulsar-broker",
                            "milvus/milvus-pulsar-proxy",
                            "milvus/milvus-pulsar-recovery",
                            "milvus/milvus-pulsar-zookeeper"
                        ],
                        "ServiceAccount/v1": [
                            "milvus/milvus-pulsar-broker-acct"
                        ],
                        "StatefulSet.apps/apps/v1": [
                            "milvus/milvus-etcd",
                            "milvus/milvus-pulsar-bookie",
                            "milvus/milvus-pulsar-broker",
                            "milvus/milvus-pulsar-proxy",
                            "milvus/milvus-pulsar-recovery",
                            "milvus/milvus-pulsar-zookeeper"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "2.0.2",
                        "chart": "milvus",
                        "name": "milvus",
                        "namespace": "milvus",
                        "revision": 1,
                        "status": "deployed",
                        "version": "3.0.29"
                    },
                    "timeout": 300,
                    "values": {
                        "attu": {
                            "affinity": {
                                "nodeAffinity": {
                                    "requiredDuringSchedulingIgnoredDuringExecution": {
                                        "nodeSelectorTerms": [
                                            {
                                                "matchExpressions": [
                                                    {
                                                        "key": "kubernetes.io/arch",
                                                        "operator": "In",
                                                        "values": [
                                                            "amd64"
                                                        ]
                                                    },
                                                    {
                                                        "key": "eks.amazonaws.com/capacityType",
                                                        "operator": "In",
                                                        "values": [
                                                            "ON_DEMAND"
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            },
                            "enabled": true,
                            "ingress": {
                                "enabled": false
                            }
                        },
                        "cluster": {
                            "enabled": true
                        },
                        "etcd": {
                            "image": {
                                "pullPolicy": "IfNotPresent",
                                "tag": "3.5.4-r1"
                            },
                            "nodeSelector": {
                                "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                "kubernetes.io/arch": "amd64"
                            }
                        },
                        "externalS3": {
                            "accessKey": "AKIAQOLFGTNXMQUOE2HK",
                            "bucketName": "p-3-milvus-data",
                            "enabled": true,
                            "host": "s3.us-west-2.amazonaws.com",
                            "post": 80,
                            "secretKey": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "AAABAE/R+stmBG3a1PJqenjWLd5+tjpcFKMF4sIna9rJzizcx7rRm+eqmwSHsv7SHLu/rL2un6SeibzN2ecPLaKcfMsGw/Vsjg4="
                            }
                        },
                        "metrics": {
                            "enabled": true
                        },
                        "minio": {
                            "enabled": false
                        },
                        "nodeSelector": {
                            "eks.amazonaws.com/capacityType": "ON_DEMAND",
                            "kubernetes.io/arch": "amd64"
                        },
                        "pulsar": {
                            "autorecovery": {
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                }
                            },
                            "bookkeeper": {
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                }
                            },
                            "broker": {
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                }
                            },
                            "enabled": true,
                            "proxy": {
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                }
                            },
                            "zookeeper": {
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                }
                            }
                        },
                        "service": {
                            "annotations": {
                                "service.beta.kubernetes.io/aws-load-balancer-nlb-target-type": "instance",
                                "service.beta.kubernetes.io/aws-load-balancer-scheme": "internal",
                                "service.beta.kubernetes.io/aws-load-balancer-type": "external"
                            },
                            "type": "LoadBalancer"
                        }
                    },
                    "verify": false,
                    "version": "3.0.29",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/accessKey:AccessKey::milvus-p-3-access-key",
                    "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::milvus-bucket-3"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::milvus-k8s-provider::3d4de186-42ae-4551-ac95-c5880390298d",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "createNamespace": null,
                    "name": null,
                    "namespace": null,
                    "repositoryOpts": null,
                    "values": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/accessKey:AccessKey::milvus-p-3-access-key",
                        "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::milvus-bucket-3"
                    ],
                    "version": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::tcpmappings.getambassador.io",
                "custom": true,
                "id": "tcpmappings.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "tcpmappings.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TCPMapping",
                            "listKind": "TCPMappingList",
                            "plural": "tcpmappings",
                            "singular": "tcpmapping"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                        "type": "string"
                                                    },
                                                    "port": {
                                                        "description": "Port isn't a pointer because it's required.",
                                                        "type": "integer"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "port",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                        "type": "string"
                                                    },
                                                    "port": {
                                                        "description": "Port isn't a pointer because it's required.",
                                                        "type": "integer"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "port",
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "tcpmappings.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "TCPMapping",
                                "listKind": "TCPMappingList",
                                "plural": "tcpmappings",
                                "singular": "tcpmapping"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TCPMapping is the Schema for the tcpmappings API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "circuit_breakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "cluster_tag": {
                                                            "type": "string"
                                                        },
                                                        "enable_ipv4": {
                                                            "type": "boolean"
                                                        },
                                                        "enable_ipv6": {
                                                            "type": "boolean"
                                                        },
                                                        "host": {
                                                            "type": "string"
                                                        },
                                                        "idle_timeout_ms": {
                                                            "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                            "type": "string"
                                                        },
                                                        "port": {
                                                            "description": "Port isn't a pointer because it's required.",
                                                            "type": "integer"
                                                        },
                                                        "resolver": {
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        },
                                                        "weight": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "port",
                                                        "service"
                                                    ],
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TCPMapping is the Schema for the tcpmappings API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "circuit_breakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "cluster_tag": {
                                                            "type": "string"
                                                        },
                                                        "enable_ipv4": {
                                                            "type": "boolean"
                                                        },
                                                        "enable_ipv6": {
                                                            "type": "boolean"
                                                        },
                                                        "host": {
                                                            "type": "string"
                                                        },
                                                        "idle_timeout_ms": {
                                                            "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                            "type": "string"
                                                        },
                                                        "port": {
                                                            "description": "Port isn't a pointer because it's required.",
                                                            "type": "integer"
                                                        },
                                                        "resolver": {
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        },
                                                        "tls": {
                                                            "type": "string"
                                                        },
                                                        "v2ExplicitTLS": {
                                                            "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                            "properties": {
                                                                "serviceScheme": {
                                                                    "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                    "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                    "type": "string"
                                                                },
                                                                "tls": {
                                                                    "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                    "enum": [
                                                                        "",
                                                                        "null",
                                                                        "bool:true",
                                                                        "bool:false",
                                                                        "string"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "weight": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "port",
                                                        "service"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TCPMapping is the Schema for the tcpmappings API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"tcpmappings.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"TCPMapping\",\"listKind\":\"TCPMappingList\",\"plural\":\"tcpmappings\",\"singular\":\"tcpmapping\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TCPMapping is the Schema for the tcpmappings API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TCPMappingSpec defines the desired state of TCPMapping\",\"properties\":{\"address\":{\"type\":\"string\"},\"circuit_breakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"cluster_tag\":{\"type\":\"string\"},\"enable_ipv4\":{\"type\":\"boolean\"},\"enable_ipv6\":{\"type\":\"boolean\"},\"host\":{\"type\":\"string\"},\"idle_timeout_ms\":{\"description\":\"FIXME(lukeshu): Surely this should be an 'int'?\",\"type\":\"string\"},\"port\":{\"description\":\"Port isn't a pointer because it's required.\",\"type\":\"integer\"},\"resolver\":{\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"v3StatsName\":{\"type\":\"string\"},\"weight\":{\"type\":\"integer\"}},\"required\":[\"port\",\"service\"],\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TCPMapping is the Schema for the tcpmappings API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TCPMappingSpec defines the desired state of TCPMapping\",\"properties\":{\"address\":{\"type\":\"string\"},\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"circuit_breakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"cluster_tag\":{\"type\":\"string\"},\"enable_ipv4\":{\"type\":\"boolean\"},\"enable_ipv6\":{\"type\":\"boolean\"},\"host\":{\"type\":\"string\"},\"idle_timeout_ms\":{\"description\":\"FIXME(lukeshu): Surely this should be an 'int'?\",\"type\":\"string\"},\"port\":{\"description\":\"Port isn't a pointer because it's required.\",\"type\":\"integer\"},\"resolver\":{\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"stats_name\":{\"type\":\"string\"},\"tls\":{\"type\":\"string\"},\"v2ExplicitTLS\":{\"description\":\"V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.\",\"properties\":{\"serviceScheme\":{\"description\":\"ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \\n Acceptable values are \\\"http://\\\" (case-insensitive), \\\"https://\\\" (case-insensitive), or \\\"\\\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.\",\"pattern\":\"^([hH][tT][tT][pP][sS]?://)?$\",\"type\":\"string\"},\"tls\":{\"description\":\"TLS controls whether and how to represent the \\\"tls\\\" field when its value could be implied by the \\\"service\\\" field.  In v2, there were a lot of different ways to spell an \\\"empty\\\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \\n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \\\"\\\"           | omit the field                        | defer to service (no TLSContext)   |  | \\\"null\\\"       | store an explicit \\\"null\\\" in the field | defer to service (no TLSContext)   |  | \\\"string\\\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \\\"bool:false\\\" | store a Boolean \\\"false\\\" in the field  | defer to service (no TLSContext)   |  | \\\"bool:true\\\"  | store a Boolean \\\"true\\\" in the field   | originate TLS (no TLSContext)      | \\n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \\\"bool:true\\\" if TLS is not to be originated), then this field is ignored.\",\"enum\":[\"\",\"null\",\"bool:true\",\"bool:false\",\"string\"],\"type\":\"string\"}},\"type\":\"object\"},\"weight\":{\"type\":\"integer\"}},\"required\":[\"port\",\"service\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TCPMapping is the Schema for the tcpmappings API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:31Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-12T20:51:31Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:31Z"
                            }
                        ],
                        "name": "tcpmappings.getambassador.io",
                        "resourceVersion": "51777990",
                        "uid": "d7a05087-61ff-47aa-bfee-490a110e9519"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TCPMapping",
                            "listKind": "TCPMappingList",
                            "plural": "tcpmappings",
                            "singular": "tcpmapping"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                        "type": "string"
                                                    },
                                                    "port": {
                                                        "description": "Port isn't a pointer because it's required.",
                                                        "type": "integer"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "port",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                        "type": "string"
                                                    },
                                                    "port": {
                                                        "description": "Port isn't a pointer because it's required.",
                                                        "type": "integer"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "port",
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TCPMapping",
                            "listKind": "TCPMappingList",
                            "plural": "tcpmappings",
                            "singular": "tcpmapping"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::tracingservices.getambassador.io",
                "custom": true,
                "id": "tracingservices.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "tracingservices.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TracingService",
                            "listKind": "TracingServiceList",
                            "plural": "tracingservices",
                            "singular": "tracingservice"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TracingServiceSpec defines the desired state of TracingService",
                                                "properties": {
                                                    "config": {
                                                        "properties": {
                                                            "access_token_file": {
                                                                "type": "string"
                                                            },
                                                            "collector_cluster": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint_version": {
                                                                "enum": [
                                                                    "HTTP_JSON_V1",
                                                                    "HTTP_JSON",
                                                                    "HTTP_PROTO"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "collector_hostname": {
                                                                "type": "string"
                                                            },
                                                            "service_name": {
                                                                "type": "string"
                                                            },
                                                            "shared_span_context": {
                                                                "type": "boolean"
                                                            },
                                                            "trace_id_128bit": {
                                                                "type": "boolean"
                                                            },
                                                            "v3PropagationModes": {
                                                                "items": {
                                                                    "enum": [
                                                                        "ENVOY",
                                                                        "LIGHTSTEP",
                                                                        "B3",
                                                                        "TRACE_CONTEXT"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "lightstep",
                                                            "zipkin",
                                                            "datadog"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "sampling": {
                                                        "properties": {
                                                            "client": {
                                                                "type": "integer"
                                                            },
                                                            "overall": {
                                                                "type": "integer"
                                                            },
                                                            "random": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "tag_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "driver",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TracingServiceSpec defines the desired state of TracingService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "config": {
                                                        "properties": {
                                                            "access_token_file": {
                                                                "type": "string"
                                                            },
                                                            "collector_cluster": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint_version": {
                                                                "enum": [
                                                                    "HTTP_JSON_V1",
                                                                    "HTTP_JSON",
                                                                    "HTTP_PROTO"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "collector_hostname": {
                                                                "type": "string"
                                                            },
                                                            "propagation_modes": {
                                                                "items": {
                                                                    "enum": [
                                                                        "ENVOY",
                                                                        "LIGHTSTEP",
                                                                        "B3",
                                                                        "TRACE_CONTEXT"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "service_name": {
                                                                "type": "string"
                                                            },
                                                            "shared_span_context": {
                                                                "type": "boolean"
                                                            },
                                                            "trace_id_128bit": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "lightstep",
                                                            "zipkin",
                                                            "datadog"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "sampling": {
                                                        "properties": {
                                                            "client": {
                                                                "type": "integer"
                                                            },
                                                            "overall": {
                                                                "type": "integer"
                                                            },
                                                            "random": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "tag_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "driver",
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "tracingservices.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "TracingService",
                                "listKind": "TracingServiceList",
                                "plural": "tracingservices",
                                "singular": "tracingservice"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TracingService is the Schema for the tracingservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TracingServiceSpec defines the desired state of TracingService",
                                                    "properties": {
                                                        "config": {
                                                            "properties": {
                                                                "access_token_file": {
                                                                    "type": "string"
                                                                },
                                                                "collector_cluster": {
                                                                    "type": "string"
                                                                },
                                                                "collector_endpoint": {
                                                                    "type": "string"
                                                                },
                                                                "collector_endpoint_version": {
                                                                    "enum": [
                                                                        "HTTP_JSON_V1",
                                                                        "HTTP_JSON",
                                                                        "HTTP_PROTO"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "collector_hostname": {
                                                                    "type": "string"
                                                                },
                                                                "service_name": {
                                                                    "type": "string"
                                                                },
                                                                "shared_span_context": {
                                                                    "type": "boolean"
                                                                },
                                                                "trace_id_128bit": {
                                                                    "type": "boolean"
                                                                },
                                                                "v3PropagationModes": {
                                                                    "items": {
                                                                        "enum": [
                                                                            "ENVOY",
                                                                            "LIGHTSTEP",
                                                                            "B3",
                                                                            "TRACE_CONTEXT"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "driver": {
                                                            "enum": [
                                                                "lightstep",
                                                                "zipkin",
                                                                "datadog"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "sampling": {
                                                            "properties": {
                                                                "client": {
                                                                    "type": "integer"
                                                                },
                                                                "overall": {
                                                                    "type": "integer"
                                                                },
                                                                "random": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "tag_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "driver",
                                                        "service"
                                                    ],
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TracingService is the Schema for the tracingservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TracingServiceSpec defines the desired state of TracingService",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "config": {
                                                            "properties": {
                                                                "access_token_file": {
                                                                    "type": "string"
                                                                },
                                                                "collector_cluster": {
                                                                    "type": "string"
                                                                },
                                                                "collector_endpoint": {
                                                                    "type": "string"
                                                                },
                                                                "collector_endpoint_version": {
                                                                    "enum": [
                                                                        "HTTP_JSON_V1",
                                                                        "HTTP_JSON",
                                                                        "HTTP_PROTO"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "collector_hostname": {
                                                                    "type": "string"
                                                                },
                                                                "propagation_modes": {
                                                                    "items": {
                                                                        "enum": [
                                                                            "ENVOY",
                                                                            "LIGHTSTEP",
                                                                            "B3",
                                                                            "TRACE_CONTEXT"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "service_name": {
                                                                    "type": "string"
                                                                },
                                                                "shared_span_context": {
                                                                    "type": "boolean"
                                                                },
                                                                "trace_id_128bit": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "driver": {
                                                            "enum": [
                                                                "lightstep",
                                                                "zipkin",
                                                                "datadog"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "sampling": {
                                                            "properties": {
                                                                "client": {
                                                                    "type": "integer"
                                                                },
                                                                "overall": {
                                                                    "type": "integer"
                                                                },
                                                                "random": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        },
                                                        "tag_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "required": [
                                                        "driver",
                                                        "service"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TracingService is the Schema for the tracingservices API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"tracingservices.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"TracingService\",\"listKind\":\"TracingServiceList\",\"plural\":\"tracingservices\",\"singular\":\"tracingservice\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TracingService is the Schema for the tracingservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TracingServiceSpec defines the desired state of TracingService\",\"properties\":{\"config\":{\"properties\":{\"access_token_file\":{\"type\":\"string\"},\"collector_cluster\":{\"type\":\"string\"},\"collector_endpoint\":{\"type\":\"string\"},\"collector_endpoint_version\":{\"enum\":[\"HTTP_JSON_V1\",\"HTTP_JSON\",\"HTTP_PROTO\"],\"type\":\"string\"},\"collector_hostname\":{\"type\":\"string\"},\"service_name\":{\"type\":\"string\"},\"shared_span_context\":{\"type\":\"boolean\"},\"trace_id_128bit\":{\"type\":\"boolean\"},\"v3PropagationModes\":{\"items\":{\"enum\":[\"ENVOY\",\"LIGHTSTEP\",\"B3\",\"TRACE_CONTEXT\"],\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"},\"driver\":{\"enum\":[\"lightstep\",\"zipkin\",\"datadog\"],\"type\":\"string\"},\"sampling\":{\"properties\":{\"client\":{\"type\":\"integer\"},\"overall\":{\"type\":\"integer\"},\"random\":{\"type\":\"integer\"}},\"type\":\"object\"},\"service\":{\"type\":\"string\"},\"tag_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"v3StatsName\":{\"type\":\"string\"}},\"required\":[\"driver\",\"service\"],\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TracingService is the Schema for the tracingservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TracingServiceSpec defines the desired state of TracingService\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"config\":{\"properties\":{\"access_token_file\":{\"type\":\"string\"},\"collector_cluster\":{\"type\":\"string\"},\"collector_endpoint\":{\"type\":\"string\"},\"collector_endpoint_version\":{\"enum\":[\"HTTP_JSON_V1\",\"HTTP_JSON\",\"HTTP_PROTO\"],\"type\":\"string\"},\"collector_hostname\":{\"type\":\"string\"},\"propagation_modes\":{\"items\":{\"enum\":[\"ENVOY\",\"LIGHTSTEP\",\"B3\",\"TRACE_CONTEXT\"],\"type\":\"string\"},\"type\":\"array\"},\"service_name\":{\"type\":\"string\"},\"shared_span_context\":{\"type\":\"boolean\"},\"trace_id_128bit\":{\"type\":\"boolean\"}},\"type\":\"object\"},\"driver\":{\"enum\":[\"lightstep\",\"zipkin\",\"datadog\"],\"type\":\"string\"},\"sampling\":{\"properties\":{\"client\":{\"type\":\"integer\"},\"overall\":{\"type\":\"integer\"},\"random\":{\"type\":\"integer\"}},\"type\":\"object\"},\"service\":{\"type\":\"string\"},\"stats_name\":{\"type\":\"string\"},\"tag_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"driver\",\"service\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TracingService is the Schema for the tracingservices API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:31Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-12T20:51:31Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:31Z"
                            }
                        ],
                        "name": "tracingservices.getambassador.io",
                        "resourceVersion": "51777978",
                        "uid": "610d6ac7-38b0-43a4-885f-c998320e6e95"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TracingService",
                            "listKind": "TracingServiceList",
                            "plural": "tracingservices",
                            "singular": "tracingservice"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TracingServiceSpec defines the desired state of TracingService",
                                                "properties": {
                                                    "config": {
                                                        "properties": {
                                                            "access_token_file": {
                                                                "type": "string"
                                                            },
                                                            "collector_cluster": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint_version": {
                                                                "enum": [
                                                                    "HTTP_JSON_V1",
                                                                    "HTTP_JSON",
                                                                    "HTTP_PROTO"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "collector_hostname": {
                                                                "type": "string"
                                                            },
                                                            "service_name": {
                                                                "type": "string"
                                                            },
                                                            "shared_span_context": {
                                                                "type": "boolean"
                                                            },
                                                            "trace_id_128bit": {
                                                                "type": "boolean"
                                                            },
                                                            "v3PropagationModes": {
                                                                "items": {
                                                                    "enum": [
                                                                        "ENVOY",
                                                                        "LIGHTSTEP",
                                                                        "B3",
                                                                        "TRACE_CONTEXT"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "lightstep",
                                                            "zipkin",
                                                            "datadog"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "sampling": {
                                                        "properties": {
                                                            "client": {
                                                                "type": "integer"
                                                            },
                                                            "overall": {
                                                                "type": "integer"
                                                            },
                                                            "random": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "tag_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "driver",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TracingServiceSpec defines the desired state of TracingService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "config": {
                                                        "properties": {
                                                            "access_token_file": {
                                                                "type": "string"
                                                            },
                                                            "collector_cluster": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint_version": {
                                                                "enum": [
                                                                    "HTTP_JSON_V1",
                                                                    "HTTP_JSON",
                                                                    "HTTP_PROTO"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "collector_hostname": {
                                                                "type": "string"
                                                            },
                                                            "propagation_modes": {
                                                                "items": {
                                                                    "enum": [
                                                                        "ENVOY",
                                                                        "LIGHTSTEP",
                                                                        "B3",
                                                                        "TRACE_CONTEXT"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "service_name": {
                                                                "type": "string"
                                                            },
                                                            "shared_span_context": {
                                                                "type": "boolean"
                                                            },
                                                            "trace_id_128bit": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "lightstep",
                                                            "zipkin",
                                                            "datadog"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "sampling": {
                                                        "properties": {
                                                            "client": {
                                                                "type": "integer"
                                                            },
                                                            "overall": {
                                                                "type": "integer"
                                                            },
                                                            "random": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "tag_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "driver",
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TracingService",
                            "listKind": "TracingServiceList",
                            "plural": "tracingservices",
                            "singular": "tracingservice"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::tlscontexts.getambassador.io",
                "custom": true,
                "id": "tlscontexts.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "tlscontexts.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TLSContext",
                            "listKind": "TLSContextList",
                            "plural": "tlscontexts",
                            "singular": "tlscontext"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TLSContextSpec defines the desired state of TLSContext",
                                                "properties": {
                                                    "alpn_protocols": {
                                                        "type": "string"
                                                    },
                                                    "ca_secret": {
                                                        "type": "string"
                                                    },
                                                    "cacert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_required": {
                                                        "type": "boolean"
                                                    },
                                                    "cipher_suites": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ecdh_curves": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hosts": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "max_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "min_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "private_key_file": {
                                                        "type": "string"
                                                    },
                                                    "redirect_cleartext_from": {
                                                        "type": "integer"
                                                    },
                                                    "secret": {
                                                        "type": "string"
                                                    },
                                                    "secret_namespacing": {
                                                        "type": "boolean"
                                                    },
                                                    "sni": {
                                                        "type": "string"
                                                    },
                                                    "v3CRLSecret": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TLSContextSpec defines the desired state of TLSContext",
                                                "properties": {
                                                    "alpn_protocols": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ca_secret": {
                                                        "type": "string"
                                                    },
                                                    "cacert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_required": {
                                                        "type": "boolean"
                                                    },
                                                    "cipher_suites": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "crl_secret": {
                                                        "type": "string"
                                                    },
                                                    "ecdh_curves": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hosts": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "max_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "min_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "private_key_file": {
                                                        "type": "string"
                                                    },
                                                    "redirect_cleartext_from": {
                                                        "type": "integer"
                                                    },
                                                    "secret": {
                                                        "type": "string"
                                                    },
                                                    "secret_namespacing": {
                                                        "type": "boolean"
                                                    },
                                                    "sni": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "tlscontexts.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "TLSContext",
                                "listKind": "TLSContextList",
                                "plural": "tlscontexts",
                                "singular": "tlscontext"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TLSContext is the Schema for the tlscontexts API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TLSContextSpec defines the desired state of TLSContext",
                                                    "properties": {
                                                        "alpn_protocols": {
                                                            "type": "string"
                                                        },
                                                        "ca_secret": {
                                                            "type": "string"
                                                        },
                                                        "cacert_chain_file": {
                                                            "type": "string"
                                                        },
                                                        "cert_chain_file": {
                                                            "type": "string"
                                                        },
                                                        "cert_required": {
                                                            "type": "boolean"
                                                        },
                                                        "cipher_suites": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "ecdh_curves": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "hosts": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "max_tls_version": {
                                                            "enum": [
                                                                "v1.0",
                                                                "v1.1",
                                                                "v1.2",
                                                                "v1.3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "min_tls_version": {
                                                            "enum": [
                                                                "v1.0",
                                                                "v1.1",
                                                                "v1.2",
                                                                "v1.3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "private_key_file": {
                                                            "type": "string"
                                                        },
                                                        "redirect_cleartext_from": {
                                                            "type": "integer"
                                                        },
                                                        "secret": {
                                                            "type": "string"
                                                        },
                                                        "secret_namespacing": {
                                                            "type": "boolean"
                                                        },
                                                        "sni": {
                                                            "type": "string"
                                                        },
                                                        "v3CRLSecret": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TLSContext is the Schema for the tlscontexts API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TLSContextSpec defines the desired state of TLSContext",
                                                    "properties": {
                                                        "alpn_protocols": {
                                                            "type": "string"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "ca_secret": {
                                                            "type": "string"
                                                        },
                                                        "cacert_chain_file": {
                                                            "type": "string"
                                                        },
                                                        "cert_chain_file": {
                                                            "type": "string"
                                                        },
                                                        "cert_required": {
                                                            "type": "boolean"
                                                        },
                                                        "cipher_suites": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "crl_secret": {
                                                            "type": "string"
                                                        },
                                                        "ecdh_curves": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "hosts": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "max_tls_version": {
                                                            "enum": [
                                                                "v1.0",
                                                                "v1.1",
                                                                "v1.2",
                                                                "v1.3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "min_tls_version": {
                                                            "enum": [
                                                                "v1.0",
                                                                "v1.1",
                                                                "v1.2",
                                                                "v1.3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "private_key_file": {
                                                            "type": "string"
                                                        },
                                                        "redirect_cleartext_from": {
                                                            "type": "integer"
                                                        },
                                                        "secret": {
                                                            "type": "string"
                                                        },
                                                        "secret_namespacing": {
                                                            "type": "boolean"
                                                        },
                                                        "sni": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TLSContext is the Schema for the tlscontexts API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"tlscontexts.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"TLSContext\",\"listKind\":\"TLSContextList\",\"plural\":\"tlscontexts\",\"singular\":\"tlscontext\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TLSContext is the Schema for the tlscontexts API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TLSContextSpec defines the desired state of TLSContext\",\"properties\":{\"alpn_protocols\":{\"type\":\"string\"},\"ca_secret\":{\"type\":\"string\"},\"cacert_chain_file\":{\"type\":\"string\"},\"cert_chain_file\":{\"type\":\"string\"},\"cert_required\":{\"type\":\"boolean\"},\"cipher_suites\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ecdh_curves\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"hosts\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"max_tls_version\":{\"enum\":[\"v1.0\",\"v1.1\",\"v1.2\",\"v1.3\"],\"type\":\"string\"},\"min_tls_version\":{\"enum\":[\"v1.0\",\"v1.1\",\"v1.2\",\"v1.3\"],\"type\":\"string\"},\"private_key_file\":{\"type\":\"string\"},\"redirect_cleartext_from\":{\"type\":\"integer\"},\"secret\":{\"type\":\"string\"},\"secret_namespacing\":{\"type\":\"boolean\"},\"sni\":{\"type\":\"string\"},\"v3CRLSecret\":{\"type\":\"string\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TLSContext is the Schema for the tlscontexts API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TLSContextSpec defines the desired state of TLSContext\",\"properties\":{\"alpn_protocols\":{\"type\":\"string\"},\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ca_secret\":{\"type\":\"string\"},\"cacert_chain_file\":{\"type\":\"string\"},\"cert_chain_file\":{\"type\":\"string\"},\"cert_required\":{\"type\":\"boolean\"},\"cipher_suites\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"crl_secret\":{\"type\":\"string\"},\"ecdh_curves\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"hosts\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"max_tls_version\":{\"enum\":[\"v1.0\",\"v1.1\",\"v1.2\",\"v1.3\"],\"type\":\"string\"},\"min_tls_version\":{\"enum\":[\"v1.0\",\"v1.1\",\"v1.2\",\"v1.3\"],\"type\":\"string\"},\"private_key_file\":{\"type\":\"string\"},\"redirect_cleartext_from\":{\"type\":\"integer\"},\"secret\":{\"type\":\"string\"},\"secret_namespacing\":{\"type\":\"boolean\"},\"sni\":{\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TLSContext is the Schema for the tlscontexts API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:24Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-12T20:51:24Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:24Z"
                            }
                        ],
                        "name": "tlscontexts.getambassador.io",
                        "resourceVersion": "51777924",
                        "uid": "bd5339bb-a273-477e-8a41-f67e648a5217"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TLSContext",
                            "listKind": "TLSContextList",
                            "plural": "tlscontexts",
                            "singular": "tlscontext"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TLSContextSpec defines the desired state of TLSContext",
                                                "properties": {
                                                    "alpn_protocols": {
                                                        "type": "string"
                                                    },
                                                    "ca_secret": {
                                                        "type": "string"
                                                    },
                                                    "cacert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_required": {
                                                        "type": "boolean"
                                                    },
                                                    "cipher_suites": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ecdh_curves": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hosts": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "max_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "min_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "private_key_file": {
                                                        "type": "string"
                                                    },
                                                    "redirect_cleartext_from": {
                                                        "type": "integer"
                                                    },
                                                    "secret": {
                                                        "type": "string"
                                                    },
                                                    "secret_namespacing": {
                                                        "type": "boolean"
                                                    },
                                                    "sni": {
                                                        "type": "string"
                                                    },
                                                    "v3CRLSecret": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TLSContextSpec defines the desired state of TLSContext",
                                                "properties": {
                                                    "alpn_protocols": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ca_secret": {
                                                        "type": "string"
                                                    },
                                                    "cacert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_required": {
                                                        "type": "boolean"
                                                    },
                                                    "cipher_suites": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "crl_secret": {
                                                        "type": "string"
                                                    },
                                                    "ecdh_curves": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hosts": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "max_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "min_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "private_key_file": {
                                                        "type": "string"
                                                    },
                                                    "redirect_cleartext_from": {
                                                        "type": "integer"
                                                    },
                                                    "secret": {
                                                        "type": "string"
                                                    },
                                                    "secret_namespacing": {
                                                        "type": "boolean"
                                                    },
                                                    "sni": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TLSContext",
                            "listKind": "TLSContextList",
                            "plural": "tlscontexts",
                            "singular": "tlscontext"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-12T20:51:24Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-08-12T20:51:24Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::emissary-apiext",
                "custom": true,
                "id": "emissary-apiext",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "apiextensions.k8s.io"
                            ],
                            "resources": [
                                "customresourcedefinitions"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apiextensions.k8s.io"
                            ],
                            "resourceNames": [
                                "authservices.getambassador.io",
                                "consulresolvers.getambassador.io",
                                "devportals.getambassador.io",
                                "hosts.getambassador.io",
                                "kubernetesendpointresolvers.getambassador.io",
                                "kubernetesserviceresolvers.getambassador.io",
                                "listeners.getambassador.io",
                                "logservices.getambassador.io",
                                "mappings.getambassador.io",
                                "modules.getambassador.io",
                                "ratelimitservices.getambassador.io",
                                "tcpmappings.getambassador.io",
                                "tlscontexts.getambassador.io",
                                "tracingservices.getambassador.io"
                            ],
                            "resources": [
                                "customresourcedefinitions"
                            ],
                            "verbs": [
                                "update"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "apiextensions.k8s.io"
                                ],
                                "resources": [
                                    "customresourcedefinitions"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apiextensions.k8s.io"
                                ],
                                "resourceNames": [
                                    "authservices.getambassador.io",
                                    "consulresolvers.getambassador.io",
                                    "devportals.getambassador.io",
                                    "hosts.getambassador.io",
                                    "kubernetesendpointresolvers.getambassador.io",
                                    "kubernetesserviceresolvers.getambassador.io",
                                    "listeners.getambassador.io",
                                    "logservices.getambassador.io",
                                    "mappings.getambassador.io",
                                    "modules.getambassador.io",
                                    "ratelimitservices.getambassador.io",
                                    "tcpmappings.getambassador.io",
                                    "tlscontexts.getambassador.io",
                                    "tracingservices.getambassador.io"
                                ],
                                "resources": [
                                    "customresourcedefinitions"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\"},\"rules\":[{\"apiGroups\":[\"apiextensions.k8s.io\"],\"resources\":[\"customresourcedefinitions\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"apiextensions.k8s.io\"],\"resourceNames\":[\"authservices.getambassador.io\",\"consulresolvers.getambassador.io\",\"devportals.getambassador.io\",\"hosts.getambassador.io\",\"kubernetesendpointresolvers.getambassador.io\",\"kubernetesserviceresolvers.getambassador.io\",\"listeners.getambassador.io\",\"logservices.getambassador.io\",\"mappings.getambassador.io\",\"modules.getambassador.io\",\"ratelimitservices.getambassador.io\",\"tcpmappings.getambassador.io\",\"tlscontexts.getambassador.io\",\"tracingservices.getambassador.io\"],\"resources\":[\"customresourcedefinitions\"],\"verbs\":[\"update\"]}]}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:23Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:23Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "resourceVersion": "51777899",
                        "uid": "017ecb37-4ce7-4ae8-ab1d-9f26d74e2474"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "apiextensions.k8s.io"
                            ],
                            "resources": [
                                "customresourcedefinitions"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apiextensions.k8s.io"
                            ],
                            "resourceNames": [
                                "authservices.getambassador.io",
                                "consulresolvers.getambassador.io",
                                "devportals.getambassador.io",
                                "hosts.getambassador.io",
                                "kubernetesendpointresolvers.getambassador.io",
                                "kubernetesserviceresolvers.getambassador.io",
                                "listeners.getambassador.io",
                                "logservices.getambassador.io",
                                "mappings.getambassador.io",
                                "modules.getambassador.io",
                                "ratelimitservices.getambassador.io",
                                "tcpmappings.getambassador.io",
                                "tlscontexts.getambassador.io",
                                "tracingservices.getambassador.io"
                            ],
                            "resources": [
                                "customresourcedefinitions"
                            ],
                            "verbs": [
                                "update"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::emissary-apiext",
                "custom": true,
                "id": "emissary-apiext",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "emissary-apiext"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "emissary-apiext"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "emissary-apiext",
                                "namespace": "emissary-system"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"emissary-apiext\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}]}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:23Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:23Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "resourceVersion": "51777903",
                        "uid": "04a47d40-5aa2-4ce4-b31d-ff4f7d896e51"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "emissary-apiext"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:Role::emissary-system/emissary-apiext",
                "custom": true,
                "id": "emissary-system/emissary-apiext",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:Role",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext",
                        "namespace": "emissary-system"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "emissary-ingress-webhook-ca"
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "get",
                                "update"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "emissary-ingress-webhook-ca"
                                ],
                                "resources": [
                                    "secrets"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"secrets\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"emissary-ingress-webhook-ca\"],\"resources\":[\"secrets\"],\"verbs\":[\"get\",\"update\"]}]}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:31Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:31Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "namespace": "emissary-system",
                        "resourceVersion": "51777963",
                        "uid": "fedc09c2-4da5-4588-9457-8488c1397bff"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "emissary-ingress-webhook-ca"
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "get",
                                "update"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:Namespace::emissary-system",
                "custom": true,
                "id": "emissary-system",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "emissary-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "emissary-system"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"emissary-system\"}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:22Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "emissary-system"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:kubernetes.io/metadata.name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:22Z"
                            }
                        ],
                        "name": "emissary-system",
                        "resourceVersion": "51777893",
                        "uid": "87319c6c-75c0-45dd-a3ac-fd0abe2075ae"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::consulresolvers.getambassador.io",
                "custom": true,
                "id": "consulresolvers.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "consulresolvers.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "ConsulResolver",
                            "listKind": "ConsulResolverList",
                            "plural": "consulresolvers",
                            "singular": "consulresolver"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "datacenter": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "datacenter": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "consulresolvers.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "ConsulResolver",
                                "listKind": "ConsulResolverList",
                                "plural": "consulresolvers",
                                "singular": "consulresolver"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "datacenter": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "datacenter": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"consulresolvers.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"ConsulResolver\",\"listKind\":\"ConsulResolverList\",\"plural\":\"consulresolvers\",\"singular\":\"consulresolver\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"ConsulResolver is the Schema for the ConsulResolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.\",\"properties\":{\"address\":{\"type\":\"string\"},\"datacenter\":{\"type\":\"string\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"ConsulResolver is the Schema for the ConsulResolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.\",\"properties\":{\"address\":{\"type\":\"string\"},\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"datacenter\":{\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"ConsulResolver is the Schema for the ConsulResolver API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:24Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-12T20:51:24Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:24Z"
                            }
                        ],
                        "name": "consulresolvers.getambassador.io",
                        "resourceVersion": "51777927",
                        "uid": "8ba4a772-aef2-41aa-a470-247d26d71109"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "ConsulResolver",
                            "listKind": "ConsulResolverList",
                            "plural": "consulresolvers",
                            "singular": "consulresolver"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "datacenter": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "datacenter": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "ConsulResolver",
                            "listKind": "ConsulResolverList",
                            "plural": "consulresolvers",
                            "singular": "consulresolver"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-12T20:51:24Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-08-12T20:51:24Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::ratelimitservices.getambassador.io",
                "custom": true,
                "id": "ratelimitservices.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "ratelimitservices.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "RateLimitService",
                            "listKind": "RateLimitServiceList",
                            "plural": "ratelimitservices",
                            "singular": "ratelimitservice"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                "properties": {
                                                    "domain": {
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "Common to all Ambassador objects.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "domain": {
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "description": "ProtocolVersion is the envoy api transport protocol version",
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "ratelimitservices.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "RateLimitService",
                                "listKind": "RateLimitServiceList",
                                "plural": "ratelimitservices",
                                "singular": "ratelimitservice"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "RateLimitService is the Schema for the ratelimitservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                    "properties": {
                                                        "domain": {
                                                            "type": "string"
                                                        },
                                                        "protocol_version": {
                                                            "enum": [
                                                                "v2",
                                                                "v3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "timeout_ms": {
                                                            "type": "integer"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "service"
                                                    ],
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "RateLimitService is the Schema for the ratelimitservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "Common to all Ambassador objects.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "domain": {
                                                            "type": "string"
                                                        },
                                                        "protocol_version": {
                                                            "description": "ProtocolVersion is the envoy api transport protocol version",
                                                            "enum": [
                                                                "v2",
                                                                "v3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        },
                                                        "timeout_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "tls": {
                                                            "type": "string"
                                                        },
                                                        "v2ExplicitTLS": {
                                                            "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                            "properties": {
                                                                "serviceScheme": {
                                                                    "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                    "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                    "type": "string"
                                                                },
                                                                "tls": {
                                                                    "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                    "enum": [
                                                                        "",
                                                                        "null",
                                                                        "bool:true",
                                                                        "bool:false",
                                                                        "string"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "service"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "RateLimitService is the Schema for the ratelimitservices API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"ratelimitservices.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"RateLimitService\",\"listKind\":\"RateLimitServiceList\",\"plural\":\"ratelimitservices\",\"singular\":\"ratelimitservice\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"RateLimitService is the Schema for the ratelimitservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"RateLimitServiceSpec defines the desired state of RateLimitService\",\"properties\":{\"domain\":{\"type\":\"string\"},\"protocol_version\":{\"enum\":[\"v2\",\"v3\"],\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"timeout_ms\":{\"type\":\"integer\"},\"v3StatsName\":{\"type\":\"string\"}},\"required\":[\"service\"],\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"RateLimitService is the Schema for the ratelimitservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"RateLimitServiceSpec defines the desired state of RateLimitService\",\"properties\":{\"ambassador_id\":{\"description\":\"Common to all Ambassador objects.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"domain\":{\"type\":\"string\"},\"protocol_version\":{\"description\":\"ProtocolVersion is the envoy api transport protocol version\",\"enum\":[\"v2\",\"v3\"],\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"stats_name\":{\"type\":\"string\"},\"timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"tls\":{\"type\":\"string\"},\"v2ExplicitTLS\":{\"description\":\"V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.\",\"properties\":{\"serviceScheme\":{\"description\":\"ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \\n Acceptable values are \\\"http://\\\" (case-insensitive), \\\"https://\\\" (case-insensitive), or \\\"\\\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.\",\"pattern\":\"^([hH][tT][tT][pP][sS]?://)?$\",\"type\":\"string\"},\"tls\":{\"description\":\"TLS controls whether and how to represent the \\\"tls\\\" field when its value could be implied by the \\\"service\\\" field.  In v2, there were a lot of different ways to spell an \\\"empty\\\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \\n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \\\"\\\"           | omit the field                        | defer to service (no TLSContext)   |  | \\\"null\\\"       | store an explicit \\\"null\\\" in the field | defer to service (no TLSContext)   |  | \\\"string\\\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \\\"bool:false\\\" | store a Boolean \\\"false\\\" in the field  | defer to service (no TLSContext)   |  | \\\"bool:true\\\"  | store a Boolean \\\"true\\\" in the field   | originate TLS (no TLSContext)      | \\n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \\\"bool:true\\\" if TLS is not to be originated), then this field is ignored.\",\"enum\":[\"\",\"null\",\"bool:true\",\"bool:false\",\"string\"],\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"service\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"RateLimitService is the Schema for the ratelimitservices API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:25Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-12T20:51:25Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:25Z"
                            }
                        ],
                        "name": "ratelimitservices.getambassador.io",
                        "resourceVersion": "51777938",
                        "uid": "0089ae38-70cb-4026-8701-7d2e3df75498"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "RateLimitService",
                            "listKind": "RateLimitServiceList",
                            "plural": "ratelimitservices",
                            "singular": "ratelimitservice"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                "properties": {
                                                    "domain": {
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "Common to all Ambassador objects.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "domain": {
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "description": "ProtocolVersion is the envoy api transport protocol version",
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "RateLimitService",
                            "listKind": "RateLimitServiceList",
                            "plural": "ratelimitservices",
                            "singular": "ratelimitservice"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-12T20:51:25Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-08-12T20:51:25Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::authservices.getambassador.io",
                "custom": true,
                "id": "authservices.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "authservices.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "AuthService",
                            "listKind": "AuthServiceList",
                            "plural": "authservices",
                            "singular": "authservice"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "AuthServiceSpec defines the desired state of AuthService",
                                                "properties": {
                                                    "add_auth_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "allow_request_body": {
                                                        "type": "boolean"
                                                    },
                                                    "allowed_authorization_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "allowed_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_service": {
                                                        "type": "string"
                                                    },
                                                    "failure_mode_allow": {
                                                        "type": "boolean"
                                                    },
                                                    "include_body": {
                                                        "properties": {
                                                            "allow_partial": {
                                                                "type": "boolean"
                                                            },
                                                            "max_bytes": {
                                                                "description": "These aren't pointer types because they are required.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "allow_partial",
                                                            "max_bytes"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "path_prefix": {
                                                        "type": "string"
                                                    },
                                                    "proto": {
                                                        "enum": [
                                                            "http",
                                                            "grpc"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "status_on_error": {
                                                        "description": "Why isn't this just an int??",
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "v3CircuitBreakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "auth_service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "AuthServiceSpec defines the desired state of AuthService",
                                                "properties": {
                                                    "add_auth_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "allow_request_body": {
                                                        "description": "TODO(lukeshu): In v3alpha2, drop allow_request_body in favor of include_body. allow_request_body has been deprecated for a long time.",
                                                        "type": "boolean"
                                                    },
                                                    "allowed_authorization_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "allowed_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_service": {
                                                        "description": "TODO(lukeshu): In v3alpha2, consider renameing `auth_service` to just `service`, for consistency with the other resource types.",
                                                        "type": "string"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "failure_mode_allow": {
                                                        "type": "boolean"
                                                    },
                                                    "include_body": {
                                                        "properties": {
                                                            "allow_partial": {
                                                                "type": "boolean"
                                                            },
                                                            "max_bytes": {
                                                                "description": "These aren't pointer types because they are required.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "allow_partial",
                                                            "max_bytes"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "path_prefix": {
                                                        "type": "string"
                                                    },
                                                    "proto": {
                                                        "enum": [
                                                            "http",
                                                            "grpc"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "description": "ProtocolVersion is the envoy api transport protocol version",
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "status_on_error": {
                                                        "description": "TODO(lukeshu): In v3alpha2, consider getting rid of this struct type in favor of just using an int (i.e. `statusOnError: 500` instead of the current `statusOnError: { code: 500 }`).",
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "auth_service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "authservices.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "AuthService",
                                "listKind": "AuthServiceList",
                                "plural": "authservices",
                                "singular": "authservice"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "AuthService is the Schema for the authservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "AuthServiceSpec defines the desired state of AuthService",
                                                    "properties": {
                                                        "add_auth_headers": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "add_linkerd_headers": {
                                                            "type": "boolean"
                                                        },
                                                        "allow_request_body": {
                                                            "type": "boolean"
                                                        },
                                                        "allowed_authorization_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "allowed_request_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "auth_service": {
                                                            "type": "string"
                                                        },
                                                        "failure_mode_allow": {
                                                            "type": "boolean"
                                                        },
                                                        "include_body": {
                                                            "properties": {
                                                                "allow_partial": {
                                                                    "type": "boolean"
                                                                },
                                                                "max_bytes": {
                                                                    "description": "These aren't pointer types because they are required.",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "allow_partial",
                                                                "max_bytes"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "path_prefix": {
                                                            "type": "string"
                                                        },
                                                        "proto": {
                                                            "enum": [
                                                                "http",
                                                                "grpc"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "protocol_version": {
                                                            "enum": [
                                                                "v2",
                                                                "v3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "status_on_error": {
                                                            "description": "Why isn't this just an int??",
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "timeout_ms": {
                                                            "type": "integer"
                                                        },
                                                        "v3CircuitBreakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "auth_service"
                                                    ],
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "AuthService is the Schema for the authservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "AuthServiceSpec defines the desired state of AuthService",
                                                    "properties": {
                                                        "add_auth_headers": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "add_linkerd_headers": {
                                                            "type": "boolean"
                                                        },
                                                        "allow_request_body": {
                                                            "description": "TODO(lukeshu): In v3alpha2, drop allow_request_body in favor of include_body. allow_request_body has been deprecated for a long time.",
                                                            "type": "boolean"
                                                        },
                                                        "allowed_authorization_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "allowed_request_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "auth_service": {
                                                            "description": "TODO(lukeshu): In v3alpha2, consider renameing `auth_service` to just `service`, for consistency with the other resource types.",
                                                            "type": "string"
                                                        },
                                                        "circuit_breakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "failure_mode_allow": {
                                                            "type": "boolean"
                                                        },
                                                        "include_body": {
                                                            "properties": {
                                                                "allow_partial": {
                                                                    "type": "boolean"
                                                                },
                                                                "max_bytes": {
                                                                    "description": "These aren't pointer types because they are required.",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "allow_partial",
                                                                "max_bytes"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "path_prefix": {
                                                            "type": "string"
                                                        },
                                                        "proto": {
                                                            "enum": [
                                                                "http",
                                                                "grpc"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "protocol_version": {
                                                            "description": "ProtocolVersion is the envoy api transport protocol version",
                                                            "enum": [
                                                                "v2",
                                                                "v3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        },
                                                        "status_on_error": {
                                                            "description": "TODO(lukeshu): In v3alpha2, consider getting rid of this struct type in favor of just using an int (i.e. `statusOnError: 500` instead of the current `statusOnError: { code: 500 }`).",
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "timeout_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "tls": {
                                                            "type": "string"
                                                        },
                                                        "v2ExplicitTLS": {
                                                            "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                            "properties": {
                                                                "serviceScheme": {
                                                                    "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                    "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                    "type": "string"
                                                                },
                                                                "tls": {
                                                                    "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                    "enum": [
                                                                        "",
                                                                        "null",
                                                                        "bool:true",
                                                                        "bool:false",
                                                                        "string"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "auth_service"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "AuthService is the Schema for the authservices API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"authservices.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"AuthService\",\"listKind\":\"AuthServiceList\",\"plural\":\"authservices\",\"singular\":\"authservice\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"AuthService is the Schema for the authservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"AuthServiceSpec defines the desired state of AuthService\",\"properties\":{\"add_auth_headers\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"add_linkerd_headers\":{\"type\":\"boolean\"},\"allow_request_body\":{\"type\":\"boolean\"},\"allowed_authorization_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"allowed_request_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"auth_service\":{\"type\":\"string\"},\"failure_mode_allow\":{\"type\":\"boolean\"},\"include_body\":{\"properties\":{\"allow_partial\":{\"type\":\"boolean\"},\"max_bytes\":{\"description\":\"These aren't pointer types because they are required.\",\"type\":\"integer\"}},\"required\":[\"allow_partial\",\"max_bytes\"],\"type\":\"object\"},\"path_prefix\":{\"type\":\"string\"},\"proto\":{\"enum\":[\"http\",\"grpc\"],\"type\":\"string\"},\"protocol_version\":{\"enum\":[\"v2\",\"v3\"],\"type\":\"string\"},\"status_on_error\":{\"description\":\"Why isn't this just an int??\",\"properties\":{\"code\":{\"type\":\"integer\"}},\"type\":\"object\"},\"timeout_ms\":{\"type\":\"integer\"},\"v3CircuitBreakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"v3StatsName\":{\"type\":\"string\"}},\"required\":[\"auth_service\"],\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"AuthService is the Schema for the authservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"AuthServiceSpec defines the desired state of AuthService\",\"properties\":{\"add_auth_headers\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"add_linkerd_headers\":{\"type\":\"boolean\"},\"allow_request_body\":{\"description\":\"TODO(lukeshu): In v3alpha2, drop allow_request_body in favor of include_body. allow_request_body has been deprecated for a long time.\",\"type\":\"boolean\"},\"allowed_authorization_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"allowed_request_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"auth_service\":{\"description\":\"TODO(lukeshu): In v3alpha2, consider renameing `auth_service` to just `service`, for consistency with the other resource types.\",\"type\":\"string\"},\"circuit_breakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"failure_mode_allow\":{\"type\":\"boolean\"},\"include_body\":{\"properties\":{\"allow_partial\":{\"type\":\"boolean\"},\"max_bytes\":{\"description\":\"These aren't pointer types because they are required.\",\"type\":\"integer\"}},\"required\":[\"allow_partial\",\"max_bytes\"],\"type\":\"object\"},\"path_prefix\":{\"type\":\"string\"},\"proto\":{\"enum\":[\"http\",\"grpc\"],\"type\":\"string\"},\"protocol_version\":{\"description\":\"ProtocolVersion is the envoy api transport protocol version\",\"enum\":[\"v2\",\"v3\"],\"type\":\"string\"},\"stats_name\":{\"type\":\"string\"},\"status_on_error\":{\"description\":\"TODO(lukeshu): In v3alpha2, consider getting rid of this struct type in favor of just using an int (i.e. `statusOnError: 500` instead of the current `statusOnError: { code: 500 }`).\",\"properties\":{\"code\":{\"type\":\"integer\"}},\"type\":\"object\"},\"timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"tls\":{\"type\":\"string\"},\"v2ExplicitTLS\":{\"description\":\"V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.\",\"properties\":{\"serviceScheme\":{\"description\":\"ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \\n Acceptable values are \\\"http://\\\" (case-insensitive), \\\"https://\\\" (case-insensitive), or \\\"\\\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.\",\"pattern\":\"^([hH][tT][tT][pP][sS]?://)?$\",\"type\":\"string\"},\"tls\":{\"description\":\"TLS controls whether and how to represent the \\\"tls\\\" field when its value could be implied by the \\\"service\\\" field.  In v2, there were a lot of different ways to spell an \\\"empty\\\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \\n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \\\"\\\"           | omit the field                        | defer to service (no TLSContext)   |  | \\\"null\\\"       | store an explicit \\\"null\\\" in the field | defer to service (no TLSContext)   |  | \\\"string\\\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \\\"bool:false\\\" | store a Boolean \\\"false\\\" in the field  | defer to service (no TLSContext)   |  | \\\"bool:true\\\"  | store a Boolean \\\"true\\\" in the field   | originate TLS (no TLSContext)      | \\n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \\\"bool:true\\\" if TLS is not to be originated), then this field is ignored.\",\"enum\":[\"\",\"null\",\"bool:true\",\"bool:false\",\"string\"],\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"auth_service\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"AuthService is the Schema for the authservices API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:31Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-12T20:51:31Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:31Z"
                            }
                        ],
                        "name": "authservices.getambassador.io",
                        "resourceVersion": "51777985",
                        "uid": "15781345-9cab-42b3-84fc-608547a0e0b3"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "AuthService",
                            "listKind": "AuthServiceList",
                            "plural": "authservices",
                            "singular": "authservice"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "AuthServiceSpec defines the desired state of AuthService",
                                                "properties": {
                                                    "add_auth_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "allow_request_body": {
                                                        "type": "boolean"
                                                    },
                                                    "allowed_authorization_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "allowed_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_service": {
                                                        "type": "string"
                                                    },
                                                    "failure_mode_allow": {
                                                        "type": "boolean"
                                                    },
                                                    "include_body": {
                                                        "properties": {
                                                            "allow_partial": {
                                                                "type": "boolean"
                                                            },
                                                            "max_bytes": {
                                                                "description": "These aren't pointer types because they are required.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "allow_partial",
                                                            "max_bytes"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "path_prefix": {
                                                        "type": "string"
                                                    },
                                                    "proto": {
                                                        "enum": [
                                                            "http",
                                                            "grpc"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "status_on_error": {
                                                        "description": "Why isn't this just an int??",
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "v3CircuitBreakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "auth_service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "AuthServiceSpec defines the desired state of AuthService",
                                                "properties": {
                                                    "add_auth_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "allow_request_body": {
                                                        "description": "TODO(lukeshu): In v3alpha2, drop allow_request_body in favor of include_body. allow_request_body has been deprecated for a long time.",
                                                        "type": "boolean"
                                                    },
                                                    "allowed_authorization_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "allowed_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_service": {
                                                        "description": "TODO(lukeshu): In v3alpha2, consider renameing `auth_service` to just `service`, for consistency with the other resource types.",
                                                        "type": "string"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "failure_mode_allow": {
                                                        "type": "boolean"
                                                    },
                                                    "include_body": {
                                                        "properties": {
                                                            "allow_partial": {
                                                                "type": "boolean"
                                                            },
                                                            "max_bytes": {
                                                                "description": "These aren't pointer types because they are required.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "allow_partial",
                                                            "max_bytes"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "path_prefix": {
                                                        "type": "string"
                                                    },
                                                    "proto": {
                                                        "enum": [
                                                            "http",
                                                            "grpc"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "description": "ProtocolVersion is the envoy api transport protocol version",
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "status_on_error": {
                                                        "description": "TODO(lukeshu): In v3alpha2, consider getting rid of this struct type in favor of just using an int (i.e. `statusOnError: 500` instead of the current `statusOnError: { code: 500 }`).",
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "auth_service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "AuthService",
                            "listKind": "AuthServiceList",
                            "plural": "authservices",
                            "singular": "authservice"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ServiceAccount::emissary-system/emissary-apiext",
                "custom": true,
                "id": "emissary-system/emissary-apiext",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext",
                        "namespace": "emissary-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:23Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"emissary-apiext-token-k2hhb\"}": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:23Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:23Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "namespace": "emissary-system",
                        "resourceVersion": "51777916",
                        "uid": "eeb69747-800d-4df3-bf42-340d960b587b"
                    },
                    "secrets": [
                        {
                            "name": "emissary-apiext-token-k2hhb"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:Service::emissary-system/emissary-apiext",
                "custom": true,
                "id": "emissary-system/emissary-apiext",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext",
                        "namespace": "emissary-system"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "https",
                                "port": 443,
                                "targetPort": "https"
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "https",
                                    "port": 443,
                                    "targetPort": "https"
                                }
                            ],
                            "selector": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"},\"spec\":{\"ports\":[{\"name\":\"https\",\"port\":443,\"targetPort\":\"https\"}],\"selector\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"type\":\"ClusterIP\"}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:23Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:internalTrafficPolicy": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"port\":443,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:sessionAffinity": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:23Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "namespace": "emissary-system",
                        "resourceVersion": "51777915",
                        "uid": "404a3004-034b-439c-9682-d74a01eb92ba"
                    },
                    "spec": {
                        "clusterIP": "172.20.172.238",
                        "clusterIPs": [
                            "172.20.172.238"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "https",
                                "port": 443,
                                "protocol": "TCP",
                                "targetPort": "https"
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::modules.getambassador.io",
                "custom": true,
                "id": "modules.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "modules.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Module",
                            "listKind": "ModuleList",
                            "plural": "modules",
                            "singular": "module"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "properties": {
                                                    "config": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TODO(lukeshu): In v3alpha2, get rid of unnecessary nesting and move `ModuleSpec.config.*` to `ModuleSpec.*`.",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "config": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change the default from `diagnostics.enabled=true` to `diagnostics.enabled=false`.  This needs conversion support in apiext.  See the related comment in irambassador.py. \n TODO(lukeshu): Structurally type ModuleSpec.Config.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    }
                                                },
                                                "required": [
                                                    "config"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\".",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "modules.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "Module",
                                "listKind": "ModuleList",
                                "plural": "modules",
                                "singular": "module"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "properties": {
                                                        "config": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TODO(lukeshu): In v3alpha2, get rid of unnecessary nesting and move `ModuleSpec.config.*` to `ModuleSpec.*`.",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "config": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change the default from `diagnostics.enabled=true` to `diagnostics.enabled=false`.  This needs conversion support in apiext.  See the related comment in irambassador.py. \n TODO(lukeshu): Structurally type ModuleSpec.Config.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        }
                                                    },
                                                    "required": [
                                                        "config"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\".",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"modules.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"Module\",\"listKind\":\"ModuleList\",\"plural\":\"modules\",\"singular\":\"module\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \\\"ambassador\\\" or \\\"tls\\\". \\n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"properties\":{\"config\":{\"description\":\"UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \\\"ambassador\\\" or \\\"tls\\\". \\n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TODO(lukeshu): In v3alpha2, get rid of unnecessary nesting and move `ModuleSpec.config.*` to `ModuleSpec.*`.\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"config\":{\"description\":\"TODO(lukeshu): In v3alpha2, change the default from `diagnostics.enabled=true` to `diagnostics.enabled=false`.  This needs conversion support in apiext.  See the related comment in irambassador.py. \\n TODO(lukeshu): Structurally type ModuleSpec.Config.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"required\":[\"config\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \\\"ambassador\\\" or \\\"tls\\\".\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:24Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-12T20:51:24Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:24Z"
                            }
                        ],
                        "name": "modules.getambassador.io",
                        "resourceVersion": "51777922",
                        "uid": "6dab4a0a-1f8b-4318-bfb0-4de52873f169"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Module",
                            "listKind": "ModuleList",
                            "plural": "modules",
                            "singular": "module"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "properties": {
                                                    "config": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TODO(lukeshu): In v3alpha2, get rid of unnecessary nesting and move `ModuleSpec.config.*` to `ModuleSpec.*`.",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "config": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change the default from `diagnostics.enabled=true` to `diagnostics.enabled=false`.  This needs conversion support in apiext.  See the related comment in irambassador.py. \n TODO(lukeshu): Structurally type ModuleSpec.Config.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    }
                                                },
                                                "required": [
                                                    "config"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\".",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Module",
                            "listKind": "ModuleList",
                            "plural": "modules",
                            "singular": "module"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-12T20:51:24Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-08-12T20:51:24Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::listeners.getambassador.io",
                "custom": true,
                "id": "listeners.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "listeners.getambassador.io"
                    },
                    "spec": {
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Listener",
                            "listKind": "ListenerList",
                            "plural": "listeners",
                            "singular": "listener"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.port",
                                        "name": "Port",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.protocol",
                                        "name": "Protocol",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.protocolStack",
                                        "name": "Stack",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.statsPrefix",
                                        "name": "StatsPrefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.securityModel",
                                        "name": "Security",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.l7Depth",
                                        "name": "L7Depth",
                                        "type": "string"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Listener is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ListenerSpec defines the desired state of this Port",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hostBinding": {
                                                        "description": "HostBinding allows restricting which Hosts will be used for this Listener.",
                                                        "properties": {
                                                            "namespace": {
                                                                "description": "NamespaceBindingType defines we we specify which namespaces to look for Hosts in.",
                                                                "properties": {
                                                                    "from": {
                                                                        "description": "NamespaceFromType defines how we evaluate a NamespaceBindingType.",
                                                                        "enum": [
                                                                            "SELF",
                                                                            "ALL",
                                                                            "SELECTOR"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "selector": {
                                                                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                                "properties": {
                                                                    "matchExpressions": {
                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                        "items": {
                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                    "type": "string"
                                                                                },
                                                                                "values": {
                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "key",
                                                                                "operator"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "matchLabels": {
                                                                        "additionalProperties": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "l7Depth": {
                                                        "description": "L7Depth specifies how many layer 7 load balancers are between us and the edge of the network.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "port": {
                                                        "description": "Port is the network port. Only one Listener can use a given port.",
                                                        "format": "int32",
                                                        "maximum": 65535,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "protocol": {
                                                        "description": "Protocol is a shorthand for certain predefined stacks. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                        "enum": [
                                                            "HTTP",
                                                            "HTTPS",
                                                            "HTTPPROXY",
                                                            "HTTPSPROXY",
                                                            "TCP",
                                                            "TLS",
                                                            "UDP"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocolStack": {
                                                        "description": "ProtocolStack explicitly specifies the protocol stack to set up. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                        "items": {
                                                            "description": "ProtocolStackElement defines specific layers that may be combined in a protocol stack for processing connections to a port.",
                                                            "enum": [
                                                                "HTTP",
                                                                "PROXY",
                                                                "TLS",
                                                                "TCP",
                                                                "UDP"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "securityModel": {
                                                        "description": "SecurityModel specifies how to determine whether connections to this port are secure or insecure.",
                                                        "enum": [
                                                            "XFP",
                                                            "SECURE",
                                                            "INSECURE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "statsPrefix": {
                                                        "description": "StatsPrefix specifies the prefix for statistics sent by Envoy about this Listener. The default depends on the protocol: \"ingress-http\", \"ingress-https\", \"ingress-tls-$port\", or \"ingress-$port\".",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "hostBinding",
                                                    "port",
                                                    "securityModel"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {}
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "listeners.getambassador.io"
                        },
                        "spec": {
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "Listener",
                                "listKind": "ListenerList",
                                "plural": "listeners",
                                "singular": "listener"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "additionalPrinterColumns": [
                                        {
                                            "jsonPath": ".spec.port",
                                            "name": "Port",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.protocol",
                                            "name": "Protocol",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.protocolStack",
                                            "name": "Stack",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.statsPrefix",
                                            "name": "StatsPrefix",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.securityModel",
                                            "name": "Security",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.l7Depth",
                                            "name": "L7Depth",
                                            "type": "string"
                                        }
                                    ],
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Listener is the Schema for the hosts API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "ListenerSpec defines the desired state of this Port",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "hostBinding": {
                                                            "description": "HostBinding allows restricting which Hosts will be used for this Listener.",
                                                            "properties": {
                                                                "namespace": {
                                                                    "description": "NamespaceBindingType defines we we specify which namespaces to look for Hosts in.",
                                                                    "properties": {
                                                                        "from": {
                                                                            "description": "NamespaceFromType defines how we evaluate a NamespaceBindingType.",
                                                                            "enum": [
                                                                                "SELF",
                                                                                "ALL",
                                                                                "SELECTOR"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "selector": {
                                                                    "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                                    "properties": {
                                                                        "matchExpressions": {
                                                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                            "items": {
                                                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "key is the label key that the selector applies to.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "operator": {
                                                                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "values": {
                                                                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key",
                                                                                    "operator"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "matchLabels": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "l7Depth": {
                                                            "description": "L7Depth specifies how many layer 7 load balancers are between us and the edge of the network.",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "port": {
                                                            "description": "Port is the network port. Only one Listener can use a given port.",
                                                            "format": "int32",
                                                            "maximum": 65535,
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        },
                                                        "protocol": {
                                                            "description": "Protocol is a shorthand for certain predefined stacks. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                            "enum": [
                                                                "HTTP",
                                                                "HTTPS",
                                                                "HTTPPROXY",
                                                                "HTTPSPROXY",
                                                                "TCP",
                                                                "TLS",
                                                                "UDP"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "protocolStack": {
                                                            "description": "ProtocolStack explicitly specifies the protocol stack to set up. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                            "items": {
                                                                "description": "ProtocolStackElement defines specific layers that may be combined in a protocol stack for processing connections to a port.",
                                                                "enum": [
                                                                    "HTTP",
                                                                    "PROXY",
                                                                    "TLS",
                                                                    "TCP",
                                                                    "UDP"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "securityModel": {
                                                            "description": "SecurityModel specifies how to determine whether connections to this port are secure or insecure.",
                                                            "enum": [
                                                                "XFP",
                                                                "SECURE",
                                                                "INSECURE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "statsPrefix": {
                                                            "description": "StatsPrefix specifies the prefix for statistics sent by Envoy about this Listener. The default depends on the protocol: \"ingress-http\", \"ingress-https\", \"ingress-tls-$port\", or \"ingress-$port\".",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "hostBinding",
                                                        "port",
                                                        "securityModel"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {}
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"listeners.getambassador.io\"},\"spec\":{\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"Listener\",\"listKind\":\"ListenerList\",\"plural\":\"listeners\",\"singular\":\"listener\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".spec.port\",\"name\":\"Port\",\"type\":\"string\"},{\"jsonPath\":\".spec.protocol\",\"name\":\"Protocol\",\"type\":\"string\"},{\"jsonPath\":\".spec.protocolStack\",\"name\":\"Stack\",\"type\":\"string\"},{\"jsonPath\":\".spec.statsPrefix\",\"name\":\"StatsPrefix\",\"type\":\"string\"},{\"jsonPath\":\".spec.securityModel\",\"name\":\"Security\",\"type\":\"string\"},{\"jsonPath\":\".spec.l7Depth\",\"name\":\"L7Depth\",\"type\":\"string\"}],\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Listener is the Schema for the hosts API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"ListenerSpec defines the desired state of this Port\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"hostBinding\":{\"description\":\"HostBinding allows restricting which Hosts will be used for this Listener.\",\"properties\":{\"namespace\":{\"description\":\"NamespaceBindingType defines we we specify which namespaces to look for Hosts in.\",\"properties\":{\"from\":{\"description\":\"NamespaceFromType defines how we evaluate a NamespaceBindingType.\",\"enum\":[\"SELF\",\"ALL\",\"SELECTOR\"],\"type\":\"string\"}},\"type\":\"object\"},\"selector\":{\"description\":\"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.\",\"properties\":{\"matchExpressions\":{\"description\":\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\"items\":{\"description\":\"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\"properties\":{\"key\":{\"description\":\"key is the label key that the selector applies to.\",\"type\":\"string\"},\"operator\":{\"description\":\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\"type\":\"string\"},\"values\":{\"description\":\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"key\",\"operator\"],\"type\":\"object\"},\"type\":\"array\"},\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"},\"l7Depth\":{\"description\":\"L7Depth specifies how many layer 7 load balancers are between us and the edge of the network.\",\"format\":\"int32\",\"type\":\"integer\"},\"port\":{\"description\":\"Port is the network port. Only one Listener can use a given port.\",\"format\":\"int32\",\"maximum\":65535,\"minimum\":1,\"type\":\"integer\"},\"protocol\":{\"description\":\"Protocol is a shorthand for certain predefined stacks. Exactly one of Protocol or ProtocolStack must be supplied.\",\"enum\":[\"HTTP\",\"HTTPS\",\"HTTPPROXY\",\"HTTPSPROXY\",\"TCP\",\"TLS\",\"UDP\"],\"type\":\"string\"},\"protocolStack\":{\"description\":\"ProtocolStack explicitly specifies the protocol stack to set up. Exactly one of Protocol or ProtocolStack must be supplied.\",\"items\":{\"description\":\"ProtocolStackElement defines specific layers that may be combined in a protocol stack for processing connections to a port.\",\"enum\":[\"HTTP\",\"PROXY\",\"TLS\",\"TCP\",\"UDP\"],\"type\":\"string\"},\"type\":\"array\"},\"securityModel\":{\"description\":\"SecurityModel specifies how to determine whether connections to this port are secure or insecure.\",\"enum\":[\"XFP\",\"SECURE\",\"INSECURE\"],\"type\":\"string\"},\"statsPrefix\":{\"description\":\"StatsPrefix specifies the prefix for statistics sent by Envoy about this Listener. The default depends on the protocol: \\\"ingress-http\\\", \\\"ingress-https\\\", \\\"ingress-tls-$port\\\", or \\\"ingress-$port\\\".\",\"type\":\"string\"}},\"required\":[\"hostBinding\",\"port\",\"securityModel\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{}}]}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:25Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-12T20:51:25Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {}
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:25Z"
                            }
                        ],
                        "name": "listeners.getambassador.io",
                        "resourceVersion": "51777932",
                        "uid": "f322d11a-3e80-411a-9052-7e64929faec1"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "None"
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Listener",
                            "listKind": "ListenerList",
                            "plural": "listeners",
                            "singular": "listener"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.port",
                                        "name": "Port",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.protocol",
                                        "name": "Protocol",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.protocolStack",
                                        "name": "Stack",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.statsPrefix",
                                        "name": "StatsPrefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.securityModel",
                                        "name": "Security",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.l7Depth",
                                        "name": "L7Depth",
                                        "type": "string"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Listener is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ListenerSpec defines the desired state of this Port",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hostBinding": {
                                                        "description": "HostBinding allows restricting which Hosts will be used for this Listener.",
                                                        "properties": {
                                                            "namespace": {
                                                                "description": "NamespaceBindingType defines we we specify which namespaces to look for Hosts in.",
                                                                "properties": {
                                                                    "from": {
                                                                        "description": "NamespaceFromType defines how we evaluate a NamespaceBindingType.",
                                                                        "enum": [
                                                                            "SELF",
                                                                            "ALL",
                                                                            "SELECTOR"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "selector": {
                                                                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                                "properties": {
                                                                    "matchExpressions": {
                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                        "items": {
                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                    "type": "string"
                                                                                },
                                                                                "values": {
                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "key",
                                                                                "operator"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "matchLabels": {
                                                                        "additionalProperties": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "l7Depth": {
                                                        "description": "L7Depth specifies how many layer 7 load balancers are between us and the edge of the network.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "port": {
                                                        "description": "Port is the network port. Only one Listener can use a given port.",
                                                        "format": "int32",
                                                        "maximum": 65535,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "protocol": {
                                                        "description": "Protocol is a shorthand for certain predefined stacks. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                        "enum": [
                                                            "HTTP",
                                                            "HTTPS",
                                                            "HTTPPROXY",
                                                            "HTTPSPROXY",
                                                            "TCP",
                                                            "TLS",
                                                            "UDP"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocolStack": {
                                                        "description": "ProtocolStack explicitly specifies the protocol stack to set up. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                        "items": {
                                                            "description": "ProtocolStackElement defines specific layers that may be combined in a protocol stack for processing connections to a port.",
                                                            "enum": [
                                                                "HTTP",
                                                                "PROXY",
                                                                "TLS",
                                                                "TCP",
                                                                "UDP"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "securityModel": {
                                                        "description": "SecurityModel specifies how to determine whether connections to this port are secure or insecure.",
                                                        "enum": [
                                                            "XFP",
                                                            "SECURE",
                                                            "INSECURE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "statsPrefix": {
                                                        "description": "StatsPrefix specifies the prefix for statistics sent by Envoy about this Listener. The default depends on the protocol: \"ingress-http\", \"ingress-https\", \"ingress-tls-$port\", or \"ingress-$port\".",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "hostBinding",
                                                    "port",
                                                    "securityModel"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {}
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Listener",
                            "listKind": "ListenerList",
                            "plural": "listeners",
                            "singular": "listener"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-12T20:51:25Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-08-12T20:51:25Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v3alpha1"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::devportals.getambassador.io",
                "custom": true,
                "id": "devportals.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "devportals.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "DevPortal",
                            "listKind": "DevPortalList",
                            "plural": "devportals",
                            "singular": "devportal"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "DevPortalSpec defines the desired state of DevPortal",
                                                "properties": {
                                                    "content": {
                                                        "description": "Content specifies where the content shown in the DevPortal come from",
                                                        "properties": {
                                                            "branch": {
                                                                "type": "string"
                                                            },
                                                            "dir": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "default": {
                                                        "description": "Default must be true when this is the default DevPortal",
                                                        "type": "boolean"
                                                    },
                                                    "docs": {
                                                        "description": "Docs is a static docs definition",
                                                        "items": {
                                                            "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                            "properties": {
                                                                "service": {
                                                                    "description": "Service is the service being documented",
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "description": "URL is the URL used for obtaining docs",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "naming_scheme": {
                                                        "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                        "enum": [
                                                            "namespace.name",
                                                            "name.prefix"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "preserve_servers": {
                                                        "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                        "type": "boolean"
                                                    },
                                                    "search": {
                                                        "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                        "properties": {
                                                            "enabled": {
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                "enum": [
                                                                    "title-only",
                                                                    "all-content"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector is used for choosing what is shown in the DevPortal",
                                                        "properties": {
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                "type": "object"
                                                            },
                                                            "matchNamespaces": {
                                                                "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "DevPortalSpec defines the desired state of DevPortal",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "content": {
                                                        "description": "Content specifies where the content shown in the DevPortal come from",
                                                        "properties": {
                                                            "branch": {
                                                                "type": "string"
                                                            },
                                                            "dir": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "default": {
                                                        "description": "Default must be true when this is the default DevPortal",
                                                        "type": "boolean"
                                                    },
                                                    "docs": {
                                                        "description": "Docs is a static docs definition",
                                                        "items": {
                                                            "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                            "properties": {
                                                                "service": {
                                                                    "description": "Service is the service being documented",
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "description": "URL is the URL used for obtaining docs",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "naming_scheme": {
                                                        "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                        "enum": [
                                                            "namespace.name",
                                                            "name.prefix"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "preserve_servers": {
                                                        "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                        "type": "boolean"
                                                    },
                                                    "search": {
                                                        "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                        "properties": {
                                                            "enabled": {
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                "enum": [
                                                                    "title-only",
                                                                    "all-content"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector is used for choosing what is shown in the DevPortal",
                                                        "properties": {
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                "type": "object"
                                                            },
                                                            "matchNamespaces": {
                                                                "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "devportals.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "DevPortal",
                                "listKind": "DevPortalList",
                                "plural": "devportals",
                                "singular": "devportal"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "DevPortalSpec defines the desired state of DevPortal",
                                                    "properties": {
                                                        "content": {
                                                            "description": "Content specifies where the content shown in the DevPortal come from",
                                                            "properties": {
                                                                "branch": {
                                                                    "type": "string"
                                                                },
                                                                "dir": {
                                                                    "type": "string"
                                                                },
                                                                "url": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "default": {
                                                            "description": "Default must be true when this is the default DevPortal",
                                                            "type": "boolean"
                                                        },
                                                        "docs": {
                                                            "description": "Docs is a static docs definition",
                                                            "items": {
                                                                "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                                "properties": {
                                                                    "service": {
                                                                        "description": "Service is the service being documented",
                                                                        "type": "string"
                                                                    },
                                                                    "timeout_ms": {
                                                                        "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                        "type": "integer"
                                                                    },
                                                                    "url": {
                                                                        "description": "URL is the URL used for obtaining docs",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "naming_scheme": {
                                                            "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                            "enum": [
                                                                "namespace.name",
                                                                "name.prefix"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "preserve_servers": {
                                                            "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                            "type": "boolean"
                                                        },
                                                        "search": {
                                                            "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                            "properties": {
                                                                "enabled": {
                                                                    "type": "boolean"
                                                                },
                                                                "type": {
                                                                    "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                    "enum": [
                                                                        "title-only",
                                                                        "all-content"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "selector": {
                                                            "description": "Selector is used for choosing what is shown in the DevPortal",
                                                            "properties": {
                                                                "matchLabels": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                    "type": "object"
                                                                },
                                                                "matchNamespaces": {
                                                                    "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "DevPortalSpec defines the desired state of DevPortal",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "content": {
                                                            "description": "Content specifies where the content shown in the DevPortal come from",
                                                            "properties": {
                                                                "branch": {
                                                                    "type": "string"
                                                                },
                                                                "dir": {
                                                                    "type": "string"
                                                                },
                                                                "url": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "default": {
                                                            "description": "Default must be true when this is the default DevPortal",
                                                            "type": "boolean"
                                                        },
                                                        "docs": {
                                                            "description": "Docs is a static docs definition",
                                                            "items": {
                                                                "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                                "properties": {
                                                                    "service": {
                                                                        "description": "Service is the service being documented",
                                                                        "type": "string"
                                                                    },
                                                                    "timeout_ms": {
                                                                        "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                        "type": "integer"
                                                                    },
                                                                    "url": {
                                                                        "description": "URL is the URL used for obtaining docs",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "naming_scheme": {
                                                            "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                            "enum": [
                                                                "namespace.name",
                                                                "name.prefix"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "preserve_servers": {
                                                            "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                            "type": "boolean"
                                                        },
                                                        "search": {
                                                            "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                            "properties": {
                                                                "enabled": {
                                                                    "type": "boolean"
                                                                },
                                                                "type": {
                                                                    "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                    "enum": [
                                                                        "title-only",
                                                                        "all-content"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "selector": {
                                                            "description": "Selector is used for choosing what is shown in the DevPortal",
                                                            "properties": {
                                                                "matchLabels": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                    "type": "object"
                                                                },
                                                                "matchNamespaces": {
                                                                    "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "DevPortal is the Schema for the DevPortals API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"devportals.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"DevPortal\",\"listKind\":\"DevPortalList\",\"plural\":\"devportals\",\"singular\":\"devportal\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"DevPortal is the Schema for the DevPortals API \\n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \\n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \\n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"DevPortalSpec defines the desired state of DevPortal\",\"properties\":{\"content\":{\"description\":\"Content specifies where the content shown in the DevPortal come from\",\"properties\":{\"branch\":{\"type\":\"string\"},\"dir\":{\"type\":\"string\"},\"url\":{\"type\":\"string\"}},\"type\":\"object\"},\"default\":{\"description\":\"Default must be true when this is the default DevPortal\",\"type\":\"boolean\"},\"docs\":{\"description\":\"Docs is a static docs definition\",\"items\":{\"description\":\"DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \\u003cservice\\u003e:\\u003cURL\\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.\",\"properties\":{\"service\":{\"description\":\"Service is the service being documented\",\"type\":\"string\"},\"timeout_ms\":{\"description\":\"Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back\",\"type\":\"integer\"},\"url\":{\"description\":\"URL is the URL used for obtaining docs\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"naming_scheme\":{\"description\":\"Describes how to display \\\"services\\\" in the DevPortal. Default namespace.name\",\"enum\":[\"namespace.name\",\"name.prefix\"],\"type\":\"string\"},\"preserve_servers\":{\"description\":\"Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.\",\"type\":\"boolean\"},\"search\":{\"description\":\"DevPortalSearchSpec allows configuration over search functionality for the DevPortal\",\"properties\":{\"enabled\":{\"type\":\"boolean\"},\"type\":{\"description\":\"Type of search. \\\"title-only\\\" does a fuzzy search over openapi and page titles \\\"all-content\\\" will fuzzy search over all openapi and page content. \\\"title-only\\\" is the default. warning:  using all-content may incur a larger memory footprint\",\"enum\":[\"title-only\",\"all-content\"],\"type\":\"string\"}},\"type\":\"object\"},\"selector\":{\"description\":\"Selector is used for choosing what is shown in the DevPortal\",\"properties\":{\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.\",\"type\":\"object\"},\"matchNamespaces\":{\"description\":\"MatchNamespaces is a list of namespaces that will be included in this DevPortal.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"DevPortal is the Schema for the DevPortals API \\n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \\n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \\n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"DevPortalSpec defines the desired state of DevPortal\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"content\":{\"description\":\"Content specifies where the content shown in the DevPortal come from\",\"properties\":{\"branch\":{\"type\":\"string\"},\"dir\":{\"type\":\"string\"},\"url\":{\"type\":\"string\"}},\"type\":\"object\"},\"default\":{\"description\":\"Default must be true when this is the default DevPortal\",\"type\":\"boolean\"},\"docs\":{\"description\":\"Docs is a static docs definition\",\"items\":{\"description\":\"DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \\u003cservice\\u003e:\\u003cURL\\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.\",\"properties\":{\"service\":{\"description\":\"Service is the service being documented\",\"type\":\"string\"},\"timeout_ms\":{\"description\":\"Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back\",\"type\":\"integer\"},\"url\":{\"description\":\"URL is the URL used for obtaining docs\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"naming_scheme\":{\"description\":\"Describes how to display \\\"services\\\" in the DevPortal. Default namespace.name\",\"enum\":[\"namespace.name\",\"name.prefix\"],\"type\":\"string\"},\"preserve_servers\":{\"description\":\"Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.\",\"type\":\"boolean\"},\"search\":{\"description\":\"DevPortalSearchSpec allows configuration over search functionality for the DevPortal\",\"properties\":{\"enabled\":{\"type\":\"boolean\"},\"type\":{\"description\":\"Type of search. \\\"title-only\\\" does a fuzzy search over openapi and page titles \\\"all-content\\\" will fuzzy search over all openapi and page content. \\\"title-only\\\" is the default. warning:  using all-content may incur a larger memory footprint\",\"enum\":[\"title-only\",\"all-content\"],\"type\":\"string\"}},\"type\":\"object\"},\"selector\":{\"description\":\"Selector is used for choosing what is shown in the DevPortal\",\"properties\":{\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.\",\"type\":\"object\"},\"matchNamespaces\":{\"description\":\"MatchNamespaces is a list of namespaces that will be included in this DevPortal.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"DevPortal is the Schema for the DevPortals API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:31Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-12T20:51:31Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:31Z"
                            }
                        ],
                        "name": "devportals.getambassador.io",
                        "resourceVersion": "51777988",
                        "uid": "3b1d2057-12a7-457b-8bf8-d10e3f89d588"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "DevPortal",
                            "listKind": "DevPortalList",
                            "plural": "devportals",
                            "singular": "devportal"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "DevPortalSpec defines the desired state of DevPortal",
                                                "properties": {
                                                    "content": {
                                                        "description": "Content specifies where the content shown in the DevPortal come from",
                                                        "properties": {
                                                            "branch": {
                                                                "type": "string"
                                                            },
                                                            "dir": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "default": {
                                                        "description": "Default must be true when this is the default DevPortal",
                                                        "type": "boolean"
                                                    },
                                                    "docs": {
                                                        "description": "Docs is a static docs definition",
                                                        "items": {
                                                            "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                            "properties": {
                                                                "service": {
                                                                    "description": "Service is the service being documented",
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "description": "URL is the URL used for obtaining docs",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "naming_scheme": {
                                                        "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                        "enum": [
                                                            "namespace.name",
                                                            "name.prefix"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "preserve_servers": {
                                                        "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                        "type": "boolean"
                                                    },
                                                    "search": {
                                                        "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                        "properties": {
                                                            "enabled": {
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                "enum": [
                                                                    "title-only",
                                                                    "all-content"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector is used for choosing what is shown in the DevPortal",
                                                        "properties": {
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                "type": "object"
                                                            },
                                                            "matchNamespaces": {
                                                                "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "DevPortalSpec defines the desired state of DevPortal",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "content": {
                                                        "description": "Content specifies where the content shown in the DevPortal come from",
                                                        "properties": {
                                                            "branch": {
                                                                "type": "string"
                                                            },
                                                            "dir": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "default": {
                                                        "description": "Default must be true when this is the default DevPortal",
                                                        "type": "boolean"
                                                    },
                                                    "docs": {
                                                        "description": "Docs is a static docs definition",
                                                        "items": {
                                                            "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                            "properties": {
                                                                "service": {
                                                                    "description": "Service is the service being documented",
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "description": "URL is the URL used for obtaining docs",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "naming_scheme": {
                                                        "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                        "enum": [
                                                            "namespace.name",
                                                            "name.prefix"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "preserve_servers": {
                                                        "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                        "type": "boolean"
                                                    },
                                                    "search": {
                                                        "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                        "properties": {
                                                            "enabled": {
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                "enum": [
                                                                    "title-only",
                                                                    "all-content"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector is used for choosing what is shown in the DevPortal",
                                                        "properties": {
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                "type": "object"
                                                            },
                                                            "matchNamespaces": {
                                                                "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "DevPortal",
                            "listKind": "DevPortalList",
                            "plural": "devportals",
                            "singular": "devportal"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::kubernetesserviceresolvers.getambassador.io",
                "custom": true,
                "id": "kubernetesserviceresolvers.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "kubernetesserviceresolvers.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesServiceResolver",
                            "listKind": "KubernetesServiceResolverList",
                            "plural": "kubernetesserviceresolvers",
                            "singular": "kubernetesserviceresolver"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "kubernetesserviceresolvers.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "KubernetesServiceResolver",
                                "listKind": "KubernetesServiceResolverList",
                                "plural": "kubernetesserviceresolvers",
                                "singular": "kubernetesserviceresolver"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"kubernetesserviceresolvers.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"KubernetesServiceResolver\",\"listKind\":\"KubernetesServiceResolverList\",\"plural\":\"kubernetesserviceresolvers\",\"singular\":\"kubernetesserviceresolver\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:31Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-12T20:51:31Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:31Z"
                            }
                        ],
                        "name": "kubernetesserviceresolvers.getambassador.io",
                        "resourceVersion": "51777970",
                        "uid": "ade834a4-944d-43dd-9732-c652d463576e"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesServiceResolver",
                            "listKind": "KubernetesServiceResolverList",
                            "plural": "kubernetesserviceresolvers",
                            "singular": "kubernetesserviceresolver"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesServiceResolver",
                            "listKind": "KubernetesServiceResolverList",
                            "plural": "kubernetesserviceresolvers",
                            "singular": "kubernetesserviceresolver"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::kubernetesendpointresolvers.getambassador.io",
                "custom": true,
                "id": "kubernetesendpointresolvers.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "kubernetesendpointresolvers.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesEndpointResolver",
                            "listKind": "KubernetesEndpointResolverList",
                            "plural": "kubernetesendpointresolvers",
                            "singular": "kubernetesendpointresolver"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "kubernetesendpointresolvers.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "KubernetesEndpointResolver",
                                "listKind": "KubernetesEndpointResolverList",
                                "plural": "kubernetesendpointresolvers",
                                "singular": "kubernetesendpointresolver"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"kubernetesendpointresolvers.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"KubernetesEndpointResolver\",\"listKind\":\"KubernetesEndpointResolverList\",\"plural\":\"kubernetesendpointresolvers\",\"singular\":\"kubernetesendpointresolver\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:23Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-12T20:51:23Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:23Z"
                            }
                        ],
                        "name": "kubernetesendpointresolvers.getambassador.io",
                        "resourceVersion": "51777909",
                        "uid": "d86a46a9-9f8d-49a4-afd4-a80f69d85982"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesEndpointResolver",
                            "listKind": "KubernetesEndpointResolverList",
                            "plural": "kubernetesendpointresolvers",
                            "singular": "kubernetesendpointresolver"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesEndpointResolver",
                            "listKind": "KubernetesEndpointResolverList",
                            "plural": "kubernetesendpointresolvers",
                            "singular": "kubernetesendpointresolver"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-12T20:51:23Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-08-12T20:51:23Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::logservices.getambassador.io",
                "custom": true,
                "id": "logservices.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "logservices.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "LogService",
                            "listKind": "LogServiceList",
                            "plural": "logservices",
                            "singular": "logservice"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "LogServiceSpec defines the desired state of LogService",
                                                "properties": {
                                                    "driver": {
                                                        "enum": [
                                                            "tcp",
                                                            "http"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "driver_config": {
                                                        "properties": {
                                                            "additional_log_headers": {
                                                                "items": {
                                                                    "properties": {
                                                                        "during_request": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_response": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_trailer": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "header_name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "flush_interval_byte_size": {
                                                        "type": "integer"
                                                    },
                                                    "flush_interval_time": {
                                                        "type": "integer"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "v3ProtocolVersion": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "LogServiceSpec defines the desired state of LogService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "tcp",
                                                            "http"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "driver_config": {
                                                        "properties": {
                                                            "additional_log_headers": {
                                                                "items": {
                                                                    "properties": {
                                                                        "during_request": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_response": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_trailer": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "header_name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "flush_interval_byte_size": {
                                                        "type": "integer"
                                                    },
                                                    "flush_interval_time": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}s`/`SecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "grpc": {
                                                        "description": "TODO(lukeshu): In v3alpha2, drop this LogService.spec.grpc.  Due to sloppy implementation it is required to be present, and required to be 'true'.  It is silly to have a required field with only one valid value, we should just remove the thing.",
                                                        "type": "boolean"
                                                    },
                                                    "protocol_version": {
                                                        "description": "ProtocolVersion is the envoy api transport protocol version",
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "logservices.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "LogService",
                                "listKind": "LogServiceList",
                                "plural": "logservices",
                                "singular": "logservice"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "LogService is the Schema for the logservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "LogServiceSpec defines the desired state of LogService",
                                                    "properties": {
                                                        "driver": {
                                                            "enum": [
                                                                "tcp",
                                                                "http"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "driver_config": {
                                                            "properties": {
                                                                "additional_log_headers": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "during_request": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "during_response": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "during_trailer": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "header_name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "flush_interval_byte_size": {
                                                            "type": "integer"
                                                        },
                                                        "flush_interval_time": {
                                                            "type": "integer"
                                                        },
                                                        "grpc": {
                                                            "type": "boolean"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "v3ProtocolVersion": {
                                                            "enum": [
                                                                "v2",
                                                                "v3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "LogService is the Schema for the logservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "LogServiceSpec defines the desired state of LogService",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "driver": {
                                                            "enum": [
                                                                "tcp",
                                                                "http"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "driver_config": {
                                                            "properties": {
                                                                "additional_log_headers": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "during_request": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "during_response": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "during_trailer": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "header_name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "flush_interval_byte_size": {
                                                            "type": "integer"
                                                        },
                                                        "flush_interval_time": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}s`/`SecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "grpc": {
                                                            "description": "TODO(lukeshu): In v3alpha2, drop this LogService.spec.grpc.  Due to sloppy implementation it is required to be present, and required to be 'true'.  It is silly to have a required field with only one valid value, we should just remove the thing.",
                                                            "type": "boolean"
                                                        },
                                                        "protocol_version": {
                                                            "description": "ProtocolVersion is the envoy api transport protocol version",
                                                            "enum": [
                                                                "v2",
                                                                "v3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "LogService is the Schema for the logservices API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"logservices.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"LogService\",\"listKind\":\"LogServiceList\",\"plural\":\"logservices\",\"singular\":\"logservice\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"LogService is the Schema for the logservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"LogServiceSpec defines the desired state of LogService\",\"properties\":{\"driver\":{\"enum\":[\"tcp\",\"http\"],\"type\":\"string\"},\"driver_config\":{\"properties\":{\"additional_log_headers\":{\"items\":{\"properties\":{\"during_request\":{\"type\":\"boolean\"},\"during_response\":{\"type\":\"boolean\"},\"during_trailer\":{\"type\":\"boolean\"},\"header_name\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"},\"flush_interval_byte_size\":{\"type\":\"integer\"},\"flush_interval_time\":{\"type\":\"integer\"},\"grpc\":{\"type\":\"boolean\"},\"service\":{\"type\":\"string\"},\"v3ProtocolVersion\":{\"enum\":[\"v2\",\"v3\"],\"type\":\"string\"},\"v3StatsName\":{\"type\":\"string\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"LogService is the Schema for the logservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"LogServiceSpec defines the desired state of LogService\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"driver\":{\"enum\":[\"tcp\",\"http\"],\"type\":\"string\"},\"driver_config\":{\"properties\":{\"additional_log_headers\":{\"items\":{\"properties\":{\"during_request\":{\"type\":\"boolean\"},\"during_response\":{\"type\":\"boolean\"},\"during_trailer\":{\"type\":\"boolean\"},\"header_name\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"},\"flush_interval_byte_size\":{\"type\":\"integer\"},\"flush_interval_time\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}s`/`SecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"grpc\":{\"description\":\"TODO(lukeshu): In v3alpha2, drop this LogService.spec.grpc.  Due to sloppy implementation it is required to be present, and required to be 'true'.  It is silly to have a required field with only one valid value, we should just remove the thing.\",\"type\":\"boolean\"},\"protocol_version\":{\"description\":\"ProtocolVersion is the envoy api transport protocol version\",\"enum\":[\"v2\",\"v3\"],\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"stats_name\":{\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"LogService is the Schema for the logservices API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:31Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-12T20:51:31Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:31Z"
                            }
                        ],
                        "name": "logservices.getambassador.io",
                        "resourceVersion": "51777982",
                        "uid": "153b2ee8-23b6-4bae-9218-1645b7541d46"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "LogService",
                            "listKind": "LogServiceList",
                            "plural": "logservices",
                            "singular": "logservice"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "LogServiceSpec defines the desired state of LogService",
                                                "properties": {
                                                    "driver": {
                                                        "enum": [
                                                            "tcp",
                                                            "http"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "driver_config": {
                                                        "properties": {
                                                            "additional_log_headers": {
                                                                "items": {
                                                                    "properties": {
                                                                        "during_request": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_response": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_trailer": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "header_name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "flush_interval_byte_size": {
                                                        "type": "integer"
                                                    },
                                                    "flush_interval_time": {
                                                        "type": "integer"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "v3ProtocolVersion": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "LogServiceSpec defines the desired state of LogService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "tcp",
                                                            "http"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "driver_config": {
                                                        "properties": {
                                                            "additional_log_headers": {
                                                                "items": {
                                                                    "properties": {
                                                                        "during_request": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_response": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_trailer": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "header_name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "flush_interval_byte_size": {
                                                        "type": "integer"
                                                    },
                                                    "flush_interval_time": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}s`/`SecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "grpc": {
                                                        "description": "TODO(lukeshu): In v3alpha2, drop this LogService.spec.grpc.  Due to sloppy implementation it is required to be present, and required to be 'true'.  It is silly to have a required field with only one valid value, we should just remove the thing.",
                                                        "type": "boolean"
                                                    },
                                                    "protocol_version": {
                                                        "description": "ProtocolVersion is the envoy api transport protocol version",
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "LogService",
                            "listKind": "LogServiceList",
                            "plural": "logservices",
                            "singular": "logservice"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apps/v1:Deployment::emissary-system/emissary-apiext",
                "custom": true,
                "id": "emissary-system/emissary-apiext",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext",
                        "namespace": "emissary-system"
                    },
                    "spec": {
                        "replicas": 3,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            }
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "app.kubernetes.io/instance": "emissary-apiext",
                                    "app.kubernetes.io/managed-by": "kubectl_apply_-f_emissary-apiext.yaml",
                                    "app.kubernetes.io/name": "emissary-apiext",
                                    "app.kubernetes.io/part-of": "emissary-apiext"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "apiext",
                                            "emissary-apiext"
                                        ],
                                        "image": "docker.io/emissaryingress/emissary:3.0.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/probes/live",
                                                "port": 8080,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 5,
                                            "periodSeconds": 3
                                        },
                                        "name": "emissary-apiext",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "name": "http"
                                            },
                                            {
                                                "containerPort": 8443,
                                                "name": "https"
                                            }
                                        ]
                                    }
                                ],
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                },
                                "serviceAccountName": "emissary-apiext"
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        },
                        "spec": {
                            "replicas": 3,
                            "selector": {
                                "matchLabels": {
                                    "app.kubernetes.io/instance": "emissary-apiext",
                                    "app.kubernetes.io/name": "emissary-apiext",
                                    "app.kubernetes.io/part-of": "emissary-apiext"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "app.kubernetes.io/instance": "emissary-apiext",
                                        "app.kubernetes.io/managed-by": "kubectl_apply_-f_emissary-apiext.yaml",
                                        "app.kubernetes.io/name": "emissary-apiext",
                                        "app.kubernetes.io/part-of": "emissary-apiext"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "command": [
                                                "apiext",
                                                "emissary-apiext"
                                            ],
                                            "image": "docker.io/emissaryingress/emissary:3.0.0",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/probes/live",
                                                    "port": 8080,
                                                    "scheme": "HTTP"
                                                },
                                                "initialDelaySeconds": 5,
                                                "periodSeconds": 3
                                            },
                                            "name": "emissary-apiext",
                                            "ports": [
                                                {
                                                    "containerPort": 8080,
                                                    "name": "http"
                                                },
                                                {
                                                    "containerPort": 8443,
                                                    "name": "https"
                                                }
                                            ]
                                        }
                                    ],
                                    "nodeSelector": {
                                        "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                        "kubernetes.io/arch": "amd64"
                                    },
                                    "serviceAccountName": "emissary-apiext"
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"kubectl_apply_-f_emissary-apiext.yaml\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"}},\"spec\":{\"containers\":[{\"command\":[\"apiext\",\"emissary-apiext\"],\"image\":\"docker.io/emissaryingress/emissary:3.0.0\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/probes/live\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":5,\"periodSeconds\":3},\"name\":\"emissary-apiext\",\"ports\":[{\"containerPort\":8080,\"name\":\"http\"},{\"containerPort\":8443,\"name\":\"https\"}]}],\"nodeSelector\":{\"eks.amazonaws.com/capacityType\":\"ON_DEMAND\",\"kubernetes.io/arch\":\"amd64\"},\"serviceAccountName\":\"emissary-apiext\"}}}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:31Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:progressDeadlineSeconds": {},
                                        "f:replicas": {},
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:strategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        },
                                        "f:template": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"emissary-apiext\"}": {
                                                        ".": {},
                                                        "f:command": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            },
                                                            "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:resources": {},
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {}
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:nodeSelector": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:31Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-12T20:51:33Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "namespace": "emissary-system",
                        "resourceVersion": "51778061",
                        "uid": "6ec6bba0-833b-414b-865f-5285a3d16cf2"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 3,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "app.kubernetes.io/instance": "emissary-apiext",
                                    "app.kubernetes.io/managed-by": "kubectl_apply_-f_emissary-apiext.yaml",
                                    "app.kubernetes.io/name": "emissary-apiext",
                                    "app.kubernetes.io/part-of": "emissary-apiext"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "apiext",
                                            "emissary-apiext"
                                        ],
                                        "image": "docker.io/emissaryingress/emissary:3.0.0",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/probes/live",
                                                "port": 8080,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 5,
                                            "periodSeconds": 3,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "emissary-apiext",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "name": "http",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 8443,
                                                "name": "https",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {},
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "amd64"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "emissary-apiext",
                                "serviceAccountName": "emissary-apiext",
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 3,
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-12T20:51:33Z",
                                "lastUpdateTime": "2022-08-12T20:51:33Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "lastUpdateTime": "2022-08-12T20:51:33Z",
                                "message": "ReplicaSet \"emissary-apiext-7cbc86f56\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 3,
                        "replicas": 3,
                        "updatedReplicas": 3
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::emissary-system/emissary-apiext",
                "custom": true,
                "id": "emissary-system/emissary-apiext",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:RoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext",
                        "namespace": "emissary-system"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "emissary-apiext"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "emissary-apiext"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "emissary-apiext",
                                "namespace": "emissary-system"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"emissary-apiext\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}]}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:31Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:31Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "namespace": "emissary-system",
                        "resourceVersion": "51777965",
                        "uid": "b2a58da5-c9c7-4ef6-9b0c-c9bf588ab50e"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "emissary-apiext"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::hosts.getambassador.io",
                "custom": true,
                "id": "hosts.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "hosts.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Host",
                            "listKind": "HostList",
                            "plural": "hosts",
                            "singular": "host"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.hostname",
                                        "name": "Hostname",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phaseCompleted",
                                        "name": "Phase Completed",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phasePending",
                                        "name": "Phase Pending",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".metadata.creationTimestamp",
                                        "name": "Age",
                                        "type": "date"
                                    }
                                ],
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Host is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "HostSpec defines the desired state of Host",
                                                "properties": {
                                                    "acmeProvider": {
                                                        "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                        "properties": {
                                                            "authority": {
                                                                "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "privateKeySecret": {
                                                                "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "registration": {
                                                                "description": "This is normally set automatically",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname by which the Ambassador can be reached.",
                                                        "type": "string"
                                                    },
                                                    "previewUrl": {
                                                        "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                        "properties": {
                                                            "enabled": {
                                                                "description": "Is the Preview URL feature enabled?",
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "What type of Preview URL is allowed?",
                                                                "enum": [
                                                                    "Path"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "requestPolicy": {
                                                        "description": "Request policy definition.",
                                                        "properties": {
                                                            "insecure": {
                                                                "properties": {
                                                                    "action": {
                                                                        "enum": [
                                                                            "Redirect",
                                                                            "Reject",
                                                                            "Route"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "additionalPort": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector by which we can find further configuration. Defaults to hostname=$hostname",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                        "properties": {
                                                            "alpn_protocols": {
                                                                "type": "string"
                                                            },
                                                            "ca_secret": {
                                                                "type": "string"
                                                            },
                                                            "cacert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_required": {
                                                                "type": "boolean"
                                                            },
                                                            "cipher_suites": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "ecdh_curves": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "min_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "private_key_file": {
                                                                "type": "string"
                                                            },
                                                            "redirect_cleartext_from": {
                                                                "type": "integer"
                                                            },
                                                            "sni": {
                                                                "type": "string"
                                                            },
                                                            "v3CRLSecret": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsContext": {
                                                        "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSecret": {
                                                        "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "status": {
                                                "description": "HostStatus defines the observed state of Host",
                                                "properties": {
                                                    "errorBackoff": {
                                                        "type": "string"
                                                    },
                                                    "errorReason": {
                                                        "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                        "type": "string"
                                                    },
                                                    "errorTimestamp": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "phaseCompleted": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "phasePending": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                        "enum": [
                                                            "Initial",
                                                            "Pending",
                                                            "Ready",
                                                            "Error"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "tlsCertificateSource": {
                                                        "enum": [
                                                            "Unknown",
                                                            "None",
                                                            "Other",
                                                            "ACME"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.hostname",
                                        "name": "Hostname",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phaseCompleted",
                                        "name": "Phase Completed",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phasePending",
                                        "name": "Phase Pending",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".metadata.creationTimestamp",
                                        "name": "Age",
                                        "type": "date"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Host is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "HostSpec defines the desired state of Host",
                                                "properties": {
                                                    "acmeProvider": {
                                                        "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                        "properties": {
                                                            "authority": {
                                                                "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "privateKeySecret": {
                                                                "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "registration": {
                                                                "description": "This is normally set automatically",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "Common to all Ambassador objects (and optional).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname by which the Ambassador can be reached.",
                                                        "type": "string"
                                                    },
                                                    "mappingSelector": {
                                                        "description": "Selector for Mappings we'll associate with this Host. At the moment, Selector and MappingSelector are synonyms, but that will change soon.",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "previewUrl": {
                                                        "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                        "properties": {
                                                            "enabled": {
                                                                "description": "Is the Preview URL feature enabled?",
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "What type of Preview URL is allowed?",
                                                                "enum": [
                                                                    "Path"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "requestPolicy": {
                                                        "description": "Request policy definition.",
                                                        "properties": {
                                                            "insecure": {
                                                                "properties": {
                                                                    "action": {
                                                                        "enum": [
                                                                            "Redirect",
                                                                            "Reject",
                                                                            "Route"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "additionalPort": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "DEPRECATED: Selector by which we can find further configuration. Use MappingSelector instead. \n TODO(lukeshu): In v3alpha2, figure out how to get rid of HostSpec.DeprecatedSelector.",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                        "properties": {
                                                            "alpn_protocols": {
                                                                "type": "string"
                                                            },
                                                            "ca_secret": {
                                                                "type": "string"
                                                            },
                                                            "cacert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_required": {
                                                                "type": "boolean"
                                                            },
                                                            "cipher_suites": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "crl_secret": {
                                                                "type": "string"
                                                            },
                                                            "ecdh_curves": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "min_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "private_key_file": {
                                                                "type": "string"
                                                            },
                                                            "redirect_cleartext_from": {
                                                                "type": "integer"
                                                            },
                                                            "sni": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsContext": {
                                                        "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSecret": {
                                                        "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "HostStatus defines the observed state of Host",
                                                "properties": {
                                                    "errorBackoff": {
                                                        "type": "string"
                                                    },
                                                    "errorReason": {
                                                        "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                        "type": "string"
                                                    },
                                                    "errorTimestamp": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "phaseCompleted": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "phasePending": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                        "enum": [
                                                            "Initial",
                                                            "Pending",
                                                            "Ready",
                                                            "Error"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "tlsCertificateSource": {
                                                        "enum": [
                                                            "Unknown",
                                                            "None",
                                                            "Other",
                                                            "ACME"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "hosts.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "Host",
                                "listKind": "HostList",
                                "plural": "hosts",
                                "singular": "host"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "additionalPrinterColumns": [
                                        {
                                            "jsonPath": ".spec.hostname",
                                            "name": "Hostname",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.state",
                                            "name": "State",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.phaseCompleted",
                                            "name": "Phase Completed",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.phasePending",
                                            "name": "Phase Pending",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".metadata.creationTimestamp",
                                            "name": "Age",
                                            "type": "date"
                                        }
                                    ],
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Host is the Schema for the hosts API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "HostSpec defines the desired state of Host",
                                                    "properties": {
                                                        "acmeProvider": {
                                                            "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                            "properties": {
                                                                "authority": {
                                                                    "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                    "type": "string"
                                                                },
                                                                "email": {
                                                                    "type": "string"
                                                                },
                                                                "privateKeySecret": {
                                                                    "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "registration": {
                                                                    "description": "This is normally set automatically",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "hostname": {
                                                            "description": "Hostname by which the Ambassador can be reached.",
                                                            "type": "string"
                                                        },
                                                        "previewUrl": {
                                                            "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                            "properties": {
                                                                "enabled": {
                                                                    "description": "Is the Preview URL feature enabled?",
                                                                    "type": "boolean"
                                                                },
                                                                "type": {
                                                                    "description": "What type of Preview URL is allowed?",
                                                                    "enum": [
                                                                        "Path"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "requestPolicy": {
                                                            "description": "Request policy definition.",
                                                            "properties": {
                                                                "insecure": {
                                                                    "properties": {
                                                                        "action": {
                                                                            "enum": [
                                                                                "Redirect",
                                                                                "Reject",
                                                                                "Route"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "additionalPort": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "selector": {
                                                            "description": "Selector by which we can find further configuration. Defaults to hostname=$hostname",
                                                            "properties": {
                                                                "matchExpressions": {
                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                    "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                            },
                                                                            "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                            },
                                                                            "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "key",
                                                                            "operator"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "matchLabels": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tls": {
                                                            "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                            "properties": {
                                                                "alpn_protocols": {
                                                                    "type": "string"
                                                                },
                                                                "ca_secret": {
                                                                    "type": "string"
                                                                },
                                                                "cacert_chain_file": {
                                                                    "type": "string"
                                                                },
                                                                "cert_chain_file": {
                                                                    "type": "string"
                                                                },
                                                                "cert_required": {
                                                                    "type": "boolean"
                                                                },
                                                                "cipher_suites": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "ecdh_curves": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "max_tls_version": {
                                                                    "type": "string"
                                                                },
                                                                "min_tls_version": {
                                                                    "type": "string"
                                                                },
                                                                "private_key_file": {
                                                                    "type": "string"
                                                                },
                                                                "redirect_cleartext_from": {
                                                                    "type": "integer"
                                                                },
                                                                "sni": {
                                                                    "type": "string"
                                                                },
                                                                "v3CRLSecret": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tlsContext": {
                                                            "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tlsSecret": {
                                                            "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                },
                                                "status": {
                                                    "description": "HostStatus defines the observed state of Host",
                                                    "properties": {
                                                        "errorBackoff": {
                                                            "type": "string"
                                                        },
                                                        "errorReason": {
                                                            "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                            "type": "string"
                                                        },
                                                        "errorTimestamp": {
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "phaseCompleted": {
                                                            "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                            "enum": [
                                                                "NA",
                                                                "DefaultsFilled",
                                                                "ACMEUserPrivateKeyCreated",
                                                                "ACMEUserRegistered",
                                                                "ACMECertificateChallenge"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "phasePending": {
                                                            "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                            "enum": [
                                                                "NA",
                                                                "DefaultsFilled",
                                                                "ACMEUserPrivateKeyCreated",
                                                                "ACMEUserRegistered",
                                                                "ACMECertificateChallenge"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                            "enum": [
                                                                "Initial",
                                                                "Pending",
                                                                "Ready",
                                                                "Error"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "tlsCertificateSource": {
                                                            "enum": [
                                                                "Unknown",
                                                                "None",
                                                                "Other",
                                                                "ACME"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {
                                        "status": {}
                                    }
                                },
                                {
                                    "additionalPrinterColumns": [
                                        {
                                            "jsonPath": ".spec.hostname",
                                            "name": "Hostname",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.state",
                                            "name": "State",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.phaseCompleted",
                                            "name": "Phase Completed",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.phasePending",
                                            "name": "Phase Pending",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".metadata.creationTimestamp",
                                            "name": "Age",
                                            "type": "date"
                                        }
                                    ],
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Host is the Schema for the hosts API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "HostSpec defines the desired state of Host",
                                                    "properties": {
                                                        "acmeProvider": {
                                                            "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                            "properties": {
                                                                "authority": {
                                                                    "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                    "type": "string"
                                                                },
                                                                "email": {
                                                                    "type": "string"
                                                                },
                                                                "privateKeySecret": {
                                                                    "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "registration": {
                                                                    "description": "This is normally set automatically",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "Common to all Ambassador objects (and optional).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "hostname": {
                                                            "description": "Hostname by which the Ambassador can be reached.",
                                                            "type": "string"
                                                        },
                                                        "mappingSelector": {
                                                            "description": "Selector for Mappings we'll associate with this Host. At the moment, Selector and MappingSelector are synonyms, but that will change soon.",
                                                            "properties": {
                                                                "matchExpressions": {
                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                    "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                            },
                                                                            "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                            },
                                                                            "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "key",
                                                                            "operator"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "matchLabels": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "previewUrl": {
                                                            "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                            "properties": {
                                                                "enabled": {
                                                                    "description": "Is the Preview URL feature enabled?",
                                                                    "type": "boolean"
                                                                },
                                                                "type": {
                                                                    "description": "What type of Preview URL is allowed?",
                                                                    "enum": [
                                                                        "Path"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "requestPolicy": {
                                                            "description": "Request policy definition.",
                                                            "properties": {
                                                                "insecure": {
                                                                    "properties": {
                                                                        "action": {
                                                                            "enum": [
                                                                                "Redirect",
                                                                                "Reject",
                                                                                "Route"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "additionalPort": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "selector": {
                                                            "description": "DEPRECATED: Selector by which we can find further configuration. Use MappingSelector instead. \n TODO(lukeshu): In v3alpha2, figure out how to get rid of HostSpec.DeprecatedSelector.",
                                                            "properties": {
                                                                "matchExpressions": {
                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                    "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                            },
                                                                            "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                            },
                                                                            "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "key",
                                                                            "operator"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "matchLabels": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tls": {
                                                            "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                            "properties": {
                                                                "alpn_protocols": {
                                                                    "type": "string"
                                                                },
                                                                "ca_secret": {
                                                                    "type": "string"
                                                                },
                                                                "cacert_chain_file": {
                                                                    "type": "string"
                                                                },
                                                                "cert_chain_file": {
                                                                    "type": "string"
                                                                },
                                                                "cert_required": {
                                                                    "type": "boolean"
                                                                },
                                                                "cipher_suites": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "crl_secret": {
                                                                    "type": "string"
                                                                },
                                                                "ecdh_curves": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "max_tls_version": {
                                                                    "type": "string"
                                                                },
                                                                "min_tls_version": {
                                                                    "type": "string"
                                                                },
                                                                "private_key_file": {
                                                                    "type": "string"
                                                                },
                                                                "redirect_cleartext_from": {
                                                                    "type": "integer"
                                                                },
                                                                "sni": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tlsContext": {
                                                            "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tlsSecret": {
                                                            "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "status": {
                                                    "description": "HostStatus defines the observed state of Host",
                                                    "properties": {
                                                        "errorBackoff": {
                                                            "type": "string"
                                                        },
                                                        "errorReason": {
                                                            "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                            "type": "string"
                                                        },
                                                        "errorTimestamp": {
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "phaseCompleted": {
                                                            "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                            "enum": [
                                                                "NA",
                                                                "DefaultsFilled",
                                                                "ACMEUserPrivateKeyCreated",
                                                                "ACMEUserRegistered",
                                                                "ACMECertificateChallenge"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "phasePending": {
                                                            "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                            "enum": [
                                                                "NA",
                                                                "DefaultsFilled",
                                                                "ACMEUserPrivateKeyCreated",
                                                                "ACMEUserRegistered",
                                                                "ACMECertificateChallenge"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                            "enum": [
                                                                "Initial",
                                                                "Pending",
                                                                "Ready",
                                                                "Error"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "tlsCertificateSource": {
                                                            "enum": [
                                                                "Unknown",
                                                                "None",
                                                                "Other",
                                                                "ACME"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false,
                                    "subresources": {
                                        "status": {}
                                    }
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"hosts.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"Host\",\"listKind\":\"HostList\",\"plural\":\"hosts\",\"singular\":\"host\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".spec.hostname\",\"name\":\"Hostname\",\"type\":\"string\"},{\"jsonPath\":\".status.state\",\"name\":\"State\",\"type\":\"string\"},{\"jsonPath\":\".status.phaseCompleted\",\"name\":\"Phase Completed\",\"type\":\"string\"},{\"jsonPath\":\".status.phasePending\",\"name\":\"Phase Pending\",\"type\":\"string\"},{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"}],\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Host is the Schema for the hosts API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"HostSpec defines the desired state of Host\",\"properties\":{\"acmeProvider\":{\"description\":\"Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.\",\"properties\":{\"authority\":{\"description\":\"Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \\\"none\\\" (case-insensitive), do not try to do ACME for this Host.\",\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"privateKeySecret\":{\"description\":\"Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"registration\":{\"description\":\"This is normally set automatically\",\"type\":\"string\"}},\"type\":\"object\"},\"hostname\":{\"description\":\"Hostname by which the Ambassador can be reached.\",\"type\":\"string\"},\"previewUrl\":{\"description\":\"Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.\",\"properties\":{\"enabled\":{\"description\":\"Is the Preview URL feature enabled?\",\"type\":\"boolean\"},\"type\":{\"description\":\"What type of Preview URL is allowed?\",\"enum\":[\"Path\"],\"type\":\"string\"}},\"type\":\"object\"},\"requestPolicy\":{\"description\":\"Request policy definition.\",\"properties\":{\"insecure\":{\"properties\":{\"action\":{\"enum\":[\"Redirect\",\"Reject\",\"Route\"],\"type\":\"string\"},\"additionalPort\":{\"type\":\"integer\"}},\"type\":\"object\"}},\"type\":\"object\"},\"selector\":{\"description\":\"Selector by which we can find further configuration. Defaults to hostname=$hostname\",\"properties\":{\"matchExpressions\":{\"description\":\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\"items\":{\"description\":\"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\"properties\":{\"key\":{\"description\":\"key is the label key that the selector applies to.\",\"type\":\"string\"},\"operator\":{\"description\":\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\"type\":\"string\"},\"values\":{\"description\":\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"key\",\"operator\"],\"type\":\"object\"},\"type\":\"array\"},\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\"type\":\"object\"}},\"type\":\"object\"},\"tls\":{\"description\":\"TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.\",\"properties\":{\"alpn_protocols\":{\"type\":\"string\"},\"ca_secret\":{\"type\":\"string\"},\"cacert_chain_file\":{\"type\":\"string\"},\"cert_chain_file\":{\"type\":\"string\"},\"cert_required\":{\"type\":\"boolean\"},\"cipher_suites\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ecdh_curves\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"max_tls_version\":{\"type\":\"string\"},\"min_tls_version\":{\"type\":\"string\"},\"private_key_file\":{\"type\":\"string\"},\"redirect_cleartext_from\":{\"type\":\"integer\"},\"sni\":{\"type\":\"string\"},\"v3CRLSecret\":{\"type\":\"string\"}},\"type\":\"object\"},\"tlsContext\":{\"description\":\"Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"tlsSecret\":{\"description\":\"Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \\\"\\\".  If the value is \\\"\\\", then we do not do TLS for this Host. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"status\":{\"description\":\"HostStatus defines the observed state of Host\",\"properties\":{\"errorBackoff\":{\"type\":\"string\"},\"errorReason\":{\"description\":\"errorReason, errorTimestamp, and errorBackoff are valid when state==Error.\",\"type\":\"string\"},\"errorTimestamp\":{\"format\":\"date-time\",\"type\":\"string\"},\"phaseCompleted\":{\"description\":\"phaseCompleted and phasePending are valid when state==Pending or state==Error.\",\"enum\":[\"NA\",\"DefaultsFilled\",\"ACMEUserPrivateKeyCreated\",\"ACMEUserRegistered\",\"ACMECertificateChallenge\"],\"type\":\"string\"},\"phasePending\":{\"description\":\"phaseCompleted and phasePending are valid when state==Pending or state==Error.\",\"enum\":[\"NA\",\"DefaultsFilled\",\"ACMEUserPrivateKeyCreated\",\"ACMEUserRegistered\",\"ACMECertificateChallenge\"],\"type\":\"string\"},\"state\":{\"description\":\"The first value listed in the Enum marker becomes the \\\"zero\\\" value, and it would be great if \\\"Pending\\\" could be the default value; but it's Important that the \\\"zero\\\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \\\"Pending\\\" in the \\\"STATE\\\" column, and not leave the column empty.\",\"enum\":[\"Initial\",\"Pending\",\"Ready\",\"Error\"],\"type\":\"string\"},\"tlsCertificateSource\":{\"enum\":[\"Unknown\",\"None\",\"Other\",\"ACME\"],\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}},{\"additionalPrinterColumns\":[{\"jsonPath\":\".spec.hostname\",\"name\":\"Hostname\",\"type\":\"string\"},{\"jsonPath\":\".status.state\",\"name\":\"State\",\"type\":\"string\"},{\"jsonPath\":\".status.phaseCompleted\",\"name\":\"Phase Completed\",\"type\":\"string\"},{\"jsonPath\":\".status.phasePending\",\"name\":\"Phase Pending\",\"type\":\"string\"},{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"}],\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Host is the Schema for the hosts API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"HostSpec defines the desired state of Host\",\"properties\":{\"acmeProvider\":{\"description\":\"Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.\",\"properties\":{\"authority\":{\"description\":\"Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \\\"none\\\" (case-insensitive), do not try to do ACME for this Host.\",\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"privateKeySecret\":{\"description\":\"Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"registration\":{\"description\":\"This is normally set automatically\",\"type\":\"string\"}},\"type\":\"object\"},\"ambassador_id\":{\"description\":\"Common to all Ambassador objects (and optional).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"hostname\":{\"description\":\"Hostname by which the Ambassador can be reached.\",\"type\":\"string\"},\"mappingSelector\":{\"description\":\"Selector for Mappings we'll associate with this Host. At the moment, Selector and MappingSelector are synonyms, but that will change soon.\",\"properties\":{\"matchExpressions\":{\"description\":\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\"items\":{\"description\":\"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\"properties\":{\"key\":{\"description\":\"key is the label key that the selector applies to.\",\"type\":\"string\"},\"operator\":{\"description\":\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\"type\":\"string\"},\"values\":{\"description\":\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"key\",\"operator\"],\"type\":\"object\"},\"type\":\"array\"},\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\"type\":\"object\"}},\"type\":\"object\"},\"previewUrl\":{\"description\":\"Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.\",\"properties\":{\"enabled\":{\"description\":\"Is the Preview URL feature enabled?\",\"type\":\"boolean\"},\"type\":{\"description\":\"What type of Preview URL is allowed?\",\"enum\":[\"Path\"],\"type\":\"string\"}},\"type\":\"object\"},\"requestPolicy\":{\"description\":\"Request policy definition.\",\"properties\":{\"insecure\":{\"properties\":{\"action\":{\"enum\":[\"Redirect\",\"Reject\",\"Route\"],\"type\":\"string\"},\"additionalPort\":{\"type\":\"integer\"}},\"type\":\"object\"}},\"type\":\"object\"},\"selector\":{\"description\":\"DEPRECATED: Selector by which we can find further configuration. Use MappingSelector instead. \\n TODO(lukeshu): In v3alpha2, figure out how to get rid of HostSpec.DeprecatedSelector.\",\"properties\":{\"matchExpressions\":{\"description\":\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\"items\":{\"description\":\"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\"properties\":{\"key\":{\"description\":\"key is the label key that the selector applies to.\",\"type\":\"string\"},\"operator\":{\"description\":\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\"type\":\"string\"},\"values\":{\"description\":\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"key\",\"operator\"],\"type\":\"object\"},\"type\":\"array\"},\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\"type\":\"object\"}},\"type\":\"object\"},\"tls\":{\"description\":\"TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.\",\"properties\":{\"alpn_protocols\":{\"type\":\"string\"},\"ca_secret\":{\"type\":\"string\"},\"cacert_chain_file\":{\"type\":\"string\"},\"cert_chain_file\":{\"type\":\"string\"},\"cert_required\":{\"type\":\"boolean\"},\"cipher_suites\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"crl_secret\":{\"type\":\"string\"},\"ecdh_curves\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"max_tls_version\":{\"type\":\"string\"},\"min_tls_version\":{\"type\":\"string\"},\"private_key_file\":{\"type\":\"string\"},\"redirect_cleartext_from\":{\"type\":\"integer\"},\"sni\":{\"type\":\"string\"}},\"type\":\"object\"},\"tlsContext\":{\"description\":\"Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"tlsSecret\":{\"description\":\"Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \\\"\\\".  If the value is \\\"\\\", then we do not do TLS for this Host. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"status\":{\"description\":\"HostStatus defines the observed state of Host\",\"properties\":{\"errorBackoff\":{\"type\":\"string\"},\"errorReason\":{\"description\":\"errorReason, errorTimestamp, and errorBackoff are valid when state==Error.\",\"type\":\"string\"},\"errorTimestamp\":{\"format\":\"date-time\",\"type\":\"string\"},\"phaseCompleted\":{\"description\":\"phaseCompleted and phasePending are valid when state==Pending or state==Error.\",\"enum\":[\"NA\",\"DefaultsFilled\",\"ACMEUserPrivateKeyCreated\",\"ACMEUserRegistered\",\"ACMECertificateChallenge\"],\"type\":\"string\"},\"phasePending\":{\"description\":\"phaseCompleted and phasePending are valid when state==Pending or state==Error.\",\"enum\":[\"NA\",\"DefaultsFilled\",\"ACMEUserPrivateKeyCreated\",\"ACMEUserRegistered\",\"ACMECertificateChallenge\"],\"type\":\"string\"},\"state\":{\"description\":\"The first value listed in the Enum marker becomes the \\\"zero\\\" value, and it would be great if \\\"Pending\\\" could be the default value; but it's Important that the \\\"zero\\\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \\\"Pending\\\" in the \\\"STATE\\\" column, and not leave the column empty.\",\"enum\":[\"Initial\",\"Pending\",\"Ready\",\"Error\"],\"type\":\"string\"},\"tlsCertificateSource\":{\"enum\":[\"Unknown\",\"None\",\"Other\",\"ACME\"],\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false,\"subresources\":{\"status\":{}}}]}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:31Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-12T20:51:31Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:31Z"
                            }
                        ],
                        "name": "hosts.getambassador.io",
                        "resourceVersion": "51777991",
                        "uid": "3019cf03-3ecc-441b-a444-2ef055010f9a"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Host",
                            "listKind": "HostList",
                            "plural": "hosts",
                            "singular": "host"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.hostname",
                                        "name": "Hostname",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phaseCompleted",
                                        "name": "Phase Completed",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phasePending",
                                        "name": "Phase Pending",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".metadata.creationTimestamp",
                                        "name": "Age",
                                        "type": "date"
                                    }
                                ],
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Host is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "HostSpec defines the desired state of Host",
                                                "properties": {
                                                    "acmeProvider": {
                                                        "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                        "properties": {
                                                            "authority": {
                                                                "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "privateKeySecret": {
                                                                "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "registration": {
                                                                "description": "This is normally set automatically",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname by which the Ambassador can be reached.",
                                                        "type": "string"
                                                    },
                                                    "previewUrl": {
                                                        "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                        "properties": {
                                                            "enabled": {
                                                                "description": "Is the Preview URL feature enabled?",
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "What type of Preview URL is allowed?",
                                                                "enum": [
                                                                    "Path"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "requestPolicy": {
                                                        "description": "Request policy definition.",
                                                        "properties": {
                                                            "insecure": {
                                                                "properties": {
                                                                    "action": {
                                                                        "enum": [
                                                                            "Redirect",
                                                                            "Reject",
                                                                            "Route"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "additionalPort": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector by which we can find further configuration. Defaults to hostname=$hostname",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                        "properties": {
                                                            "alpn_protocols": {
                                                                "type": "string"
                                                            },
                                                            "ca_secret": {
                                                                "type": "string"
                                                            },
                                                            "cacert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_required": {
                                                                "type": "boolean"
                                                            },
                                                            "cipher_suites": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "ecdh_curves": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "min_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "private_key_file": {
                                                                "type": "string"
                                                            },
                                                            "redirect_cleartext_from": {
                                                                "type": "integer"
                                                            },
                                                            "sni": {
                                                                "type": "string"
                                                            },
                                                            "v3CRLSecret": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsContext": {
                                                        "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSecret": {
                                                        "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "status": {
                                                "description": "HostStatus defines the observed state of Host",
                                                "properties": {
                                                    "errorBackoff": {
                                                        "type": "string"
                                                    },
                                                    "errorReason": {
                                                        "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                        "type": "string"
                                                    },
                                                    "errorTimestamp": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "phaseCompleted": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "phasePending": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                        "enum": [
                                                            "Initial",
                                                            "Pending",
                                                            "Ready",
                                                            "Error"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "tlsCertificateSource": {
                                                        "enum": [
                                                            "Unknown",
                                                            "None",
                                                            "Other",
                                                            "ACME"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.hostname",
                                        "name": "Hostname",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phaseCompleted",
                                        "name": "Phase Completed",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phasePending",
                                        "name": "Phase Pending",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".metadata.creationTimestamp",
                                        "name": "Age",
                                        "type": "date"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Host is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "HostSpec defines the desired state of Host",
                                                "properties": {
                                                    "acmeProvider": {
                                                        "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                        "properties": {
                                                            "authority": {
                                                                "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "privateKeySecret": {
                                                                "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "registration": {
                                                                "description": "This is normally set automatically",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "Common to all Ambassador objects (and optional).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname by which the Ambassador can be reached.",
                                                        "type": "string"
                                                    },
                                                    "mappingSelector": {
                                                        "description": "Selector for Mappings we'll associate with this Host. At the moment, Selector and MappingSelector are synonyms, but that will change soon.",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "previewUrl": {
                                                        "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                        "properties": {
                                                            "enabled": {
                                                                "description": "Is the Preview URL feature enabled?",
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "What type of Preview URL is allowed?",
                                                                "enum": [
                                                                    "Path"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "requestPolicy": {
                                                        "description": "Request policy definition.",
                                                        "properties": {
                                                            "insecure": {
                                                                "properties": {
                                                                    "action": {
                                                                        "enum": [
                                                                            "Redirect",
                                                                            "Reject",
                                                                            "Route"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "additionalPort": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "DEPRECATED: Selector by which we can find further configuration. Use MappingSelector instead. \n TODO(lukeshu): In v3alpha2, figure out how to get rid of HostSpec.DeprecatedSelector.",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                        "properties": {
                                                            "alpn_protocols": {
                                                                "type": "string"
                                                            },
                                                            "ca_secret": {
                                                                "type": "string"
                                                            },
                                                            "cacert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_required": {
                                                                "type": "boolean"
                                                            },
                                                            "cipher_suites": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "crl_secret": {
                                                                "type": "string"
                                                            },
                                                            "ecdh_curves": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "min_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "private_key_file": {
                                                                "type": "string"
                                                            },
                                                            "redirect_cleartext_from": {
                                                                "type": "integer"
                                                            },
                                                            "sni": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsContext": {
                                                        "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSecret": {
                                                        "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "HostStatus defines the observed state of Host",
                                                "properties": {
                                                    "errorBackoff": {
                                                        "type": "string"
                                                    },
                                                    "errorReason": {
                                                        "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                        "type": "string"
                                                    },
                                                    "errorTimestamp": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "phaseCompleted": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "phasePending": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                        "enum": [
                                                            "Initial",
                                                            "Pending",
                                                            "Ready",
                                                            "Error"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "tlsCertificateSource": {
                                                        "enum": [
                                                            "Unknown",
                                                            "None",
                                                            "Other",
                                                            "ACME"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Host",
                            "listKind": "HostList",
                            "plural": "hosts",
                            "singular": "host"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::mappings.getambassador.io",
                "custom": true,
                "id": "mappings.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "mappings.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Mapping",
                            "listKind": "MappingList",
                            "plural": "mappings",
                            "singular": "mapping"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.host",
                                        "name": "Source Host",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.prefix",
                                        "name": "Source Prefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.service",
                                        "name": "Dest Service",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.reason",
                                        "name": "Reason",
                                        "type": "string"
                                    }
                                ],
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "MappingSpec defines the desired state of Mapping",
                                                "properties": {
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "add_request_headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "add_response_headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "allow_upgrade": {
                                                        "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_context_extensions": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "auto_host_rewrite": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_auth": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_error_response_overrides": {
                                                        "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                        "type": "boolean"
                                                    },
                                                    "case_sensitive": {
                                                        "type": "boolean"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_idle_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cluster_max_connection_lifetime_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "connect_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cors": {
                                                        "properties": {
                                                            "credentials": {
                                                                "type": "boolean"
                                                            },
                                                            "max_age": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "dns_type": {
                                                        "type": "string"
                                                    },
                                                    "docs": {
                                                        "description": "DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)",
                                                        "properties": {
                                                            "display_name": {
                                                                "type": "string"
                                                            },
                                                            "ignored": {
                                                                "type": "boolean"
                                                            },
                                                            "path": {
                                                                "type": "string"
                                                            },
                                                            "timeout_ms": {
                                                                "type": "integer"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "envoy_override": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "error_response_overrides": {
                                                        "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                        "items": {
                                                            "description": "A response rewrite for an HTTP error response",
                                                            "properties": {
                                                                "body": {
                                                                    "description": "The new response body",
                                                                    "properties": {
                                                                        "content_type": {
                                                                            "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                            "type": "string"
                                                                        },
                                                                        "json_format": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                            "type": "object"
                                                                        },
                                                                        "text_format": {
                                                                            "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                            "type": "string"
                                                                        },
                                                                        "text_format_source": {
                                                                            "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                            "properties": {
                                                                                "filename": {
                                                                                    "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "on_status_code": {
                                                                    "description": "The status code to match on -- not a pointer because it's required.",
                                                                    "maximum": 599,
                                                                    "minimum": 400,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "body",
                                                                "on_status_code"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "host_redirect": {
                                                        "type": "boolean"
                                                    },
                                                    "host_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "host_rewrite": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "keepalive": {
                                                        "properties": {
                                                            "idle_time": {
                                                                "type": "integer"
                                                            },
                                                            "interval": {
                                                                "type": "integer"
                                                            },
                                                            "probes": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "additionalProperties": {
                                                            "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                            "items": {
                                                                "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                "maxProperties": 1,
                                                                "minProperties": 1,
                                                                "type": "object",
                                                                "x-kubernetes-preserve-unknown-fields": true
                                                            },
                                                            "type": "array"
                                                        },
                                                        "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                        "type": "object"
                                                    },
                                                    "load_balancer": {
                                                        "properties": {
                                                            "cookie": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "path": {
                                                                        "type": "string"
                                                                    },
                                                                    "ttl": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "header": {
                                                                "type": "string"
                                                            },
                                                            "policy": {
                                                                "enum": [
                                                                    "round_robin",
                                                                    "ring_hash",
                                                                    "maglev",
                                                                    "least_request"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "source_ip": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "policy"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "method": {
                                                        "type": "string"
                                                    },
                                                    "method_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "modules": {
                                                        "items": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "type": "array"
                                                    },
                                                    "outlier_detection": {
                                                        "type": "string"
                                                    },
                                                    "path_redirect": {
                                                        "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "precedence": {
                                                        "type": "integer"
                                                    },
                                                    "prefix": {
                                                        "type": "string"
                                                    },
                                                    "prefix_exact": {
                                                        "type": "boolean"
                                                    },
                                                    "prefix_redirect": {
                                                        "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "prefix_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "priority": {
                                                        "type": "string"
                                                    },
                                                    "query_parameters": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "redirect_response_code": {
                                                        "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                        "enum": [
                                                            301,
                                                            302,
                                                            303,
                                                            307,
                                                            308
                                                        ],
                                                        "type": "integer"
                                                    },
                                                    "regex_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_redirect": {
                                                        "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_rewrite": {
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "respect_dns_ttl": {
                                                        "type": "boolean"
                                                    },
                                                    "retry_policy": {
                                                        "properties": {
                                                            "num_retries": {
                                                                "type": "integer"
                                                            },
                                                            "per_try_timeout": {
                                                                "type": "string"
                                                            },
                                                            "retry_on": {
                                                                "enum": [
                                                                    "5xx",
                                                                    "gateway-error",
                                                                    "connect-failure",
                                                                    "retriable-4xx",
                                                                    "refused-stream",
                                                                    "retriable-status-codes"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "rewrite": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "shadow": {
                                                        "type": "boolean"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                        "type": "integer"
                                                    },
                                                    "use_websocket": {
                                                        "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]`",
                                                        "type": "boolean"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "prefix",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "status": {
                                                "description": "MappingStatus defines the observed state of Mapping",
                                                "properties": {
                                                    "reason": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "enum": [
                                                            "",
                                                            "Inactive",
                                                            "Running"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.host",
                                        "name": "Source Host",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.prefix",
                                        "name": "Source Prefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.service",
                                        "name": "Dest Service",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.reason",
                                        "name": "Reason",
                                        "type": "string"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "MappingSpec defines the desired state of Mapping",
                                                "properties": {
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "add_request_headers": {
                                                        "additionalProperties": {
                                                            "properties": {
                                                                "append": {
                                                                    "type": "boolean"
                                                                },
                                                                "v2Representation": {
                                                                    "enum": [
                                                                        "",
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_response_headers": {
                                                        "additionalProperties": {
                                                            "properties": {
                                                                "append": {
                                                                    "type": "boolean"
                                                                },
                                                                "v2Representation": {
                                                                    "enum": [
                                                                        "",
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "allow_upgrade": {
                                                        "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_context_extensions": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "auto_host_rewrite": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_auth": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_error_response_overrides": {
                                                        "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                        "type": "boolean"
                                                    },
                                                    "case_sensitive": {
                                                        "type": "boolean"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_idle_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cluster_max_connection_lifetime_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "connect_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cors": {
                                                        "properties": {
                                                            "credentials": {
                                                                "type": "boolean"
                                                            },
                                                            "exposed_headers": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "headers": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_age": {
                                                                "type": "string"
                                                            },
                                                            "methods": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "origins": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "v2CommaSeparatedOrigins": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "dns_type": {
                                                        "type": "string"
                                                    },
                                                    "docs": {
                                                        "description": "DocsInfo provides some extra information about the docs for the Mapping. Docs is used by both the agent and the DevPortal.",
                                                        "properties": {
                                                            "display_name": {
                                                                "type": "string"
                                                            },
                                                            "ignored": {
                                                                "type": "boolean"
                                                            },
                                                            "path": {
                                                                "type": "string"
                                                            },
                                                            "timeout_ms": {
                                                                "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                                "type": "integer"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "envoy_override": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "error_response_overrides": {
                                                        "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                        "items": {
                                                            "description": "A response rewrite for an HTTP error response",
                                                            "properties": {
                                                                "body": {
                                                                    "description": "The new response body",
                                                                    "properties": {
                                                                        "content_type": {
                                                                            "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                            "type": "string"
                                                                        },
                                                                        "json_format": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                            "type": "object"
                                                                        },
                                                                        "text_format": {
                                                                            "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                            "type": "string"
                                                                        },
                                                                        "text_format_source": {
                                                                            "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                            "properties": {
                                                                                "filename": {
                                                                                    "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "on_status_code": {
                                                                    "description": "The status code to match on -- not a pointer because it's required.",
                                                                    "maximum": 599,
                                                                    "minimum": 400,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "body",
                                                                "on_status_code"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "host": {
                                                        "description": "Exact match for the hostname of a request if HostRegex is false; regex match for the hostname if HostRegex is true. \n Host specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Host will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used. \n DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                        "type": "string"
                                                    },
                                                    "host_redirect": {
                                                        "type": "boolean"
                                                    },
                                                    "host_regex": {
                                                        "description": "DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                        "type": "boolean"
                                                    },
                                                    "host_rewrite": {
                                                        "type": "string"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname is a DNS glob specifying the hosts to which this Mapping applies. \n Hostname specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Hostname will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used.",
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "keepalive": {
                                                        "properties": {
                                                            "idle_time": {
                                                                "type": "integer"
                                                            },
                                                            "interval": {
                                                                "type": "integer"
                                                            },
                                                            "probes": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "additionalProperties": {
                                                            "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                            "items": {
                                                                "additionalProperties": {
                                                                    "description": "A MappingLabelsArray is the value in the MappingLabelGroup: an array of label specifiers.",
                                                                    "items": {
                                                                        "description": "A MappingLabelSpecifier (finally!) defines a single label. \n This mimics envoy/config/route/v3/route_components.proto:RateLimit:Action:action_specifier.",
                                                                        "maxProperties": 1,
                                                                        "minProperties": 1,
                                                                        "properties": {
                                                                            "destination_cluster": {
                                                                                "description": "Sets the label \"destination_cluster=«Envoy destination cluster name»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "destination_cluster"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "generic_key": {
                                                                                "description": "Sets the label \"«key»=«value»\" (where by default «key» is \"generic_key\").",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "The default is \"generic_key\".",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "v2Shorthand": {
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "value": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "value"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "remote_address": {
                                                                                "description": "Sets the label \"remote_address=«IP address of the client»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "remote_address"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "request_headers": {
                                                                                "description": "If the «header_name» header is set, then set the label \"«key»=«Value of the «header_name» header»\"; otherwise skip applying this label group.",
                                                                                "properties": {
                                                                                    "header_name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "omit_if_not_present": {
                                                                                        "type": "boolean"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "header_name",
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "source_cluster": {
                                                                                "description": "Sets the label \"source_cluster=«Envoy source cluster name»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "source_cluster"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                "maxProperties": 1,
                                                                "minProperties": 1,
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                        "type": "object"
                                                    },
                                                    "load_balancer": {
                                                        "properties": {
                                                            "cookie": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "path": {
                                                                        "type": "string"
                                                                    },
                                                                    "ttl": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "header": {
                                                                "type": "string"
                                                            },
                                                            "policy": {
                                                                "enum": [
                                                                    "round_robin",
                                                                    "ring_hash",
                                                                    "maglev",
                                                                    "least_request"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "source_ip": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "policy"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "method": {
                                                        "type": "string"
                                                    },
                                                    "method_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "modules": {
                                                        "items": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "type": "array"
                                                    },
                                                    "outlier_detection": {
                                                        "type": "string"
                                                    },
                                                    "path_redirect": {
                                                        "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "precedence": {
                                                        "type": "integer"
                                                    },
                                                    "prefix": {
                                                        "type": "string"
                                                    },
                                                    "prefix_exact": {
                                                        "type": "boolean"
                                                    },
                                                    "prefix_redirect": {
                                                        "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "prefix_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "priority": {
                                                        "type": "string"
                                                    },
                                                    "query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "redirect_response_code": {
                                                        "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                        "enum": [
                                                            301,
                                                            302,
                                                            303,
                                                            307,
                                                            308
                                                        ],
                                                        "type": "integer"
                                                    },
                                                    "regex_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_redirect": {
                                                        "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_rewrite": {
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "remove_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "remove_response_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "respect_dns_ttl": {
                                                        "type": "boolean"
                                                    },
                                                    "retry_policy": {
                                                        "properties": {
                                                            "num_retries": {
                                                                "type": "integer"
                                                            },
                                                            "per_try_timeout": {
                                                                "type": "string"
                                                            },
                                                            "retry_on": {
                                                                "enum": [
                                                                    "5xx",
                                                                    "gateway-error",
                                                                    "connect-failure",
                                                                    "retriable-4xx",
                                                                    "refused-stream",
                                                                    "retriable-status-codes"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "rewrite": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "shadow": {
                                                        "type": "boolean"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "use_websocket": {
                                                        "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]` \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.DeprecatedUseWebsocket.",
                                                        "type": "boolean"
                                                    },
                                                    "v2BoolHeaders": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v2BoolQueryParameters": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "prefix",
                                                    "service"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "MappingStatus defines the observed state of Mapping",
                                                "properties": {
                                                    "reason": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "enum": [
                                                            "",
                                                            "Inactive",
                                                            "Running"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "mappings.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "Mapping",
                                "listKind": "MappingList",
                                "plural": "mappings",
                                "singular": "mapping"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "additionalPrinterColumns": [
                                        {
                                            "jsonPath": ".spec.host",
                                            "name": "Source Host",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.prefix",
                                            "name": "Source Prefix",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.service",
                                            "name": "Dest Service",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.state",
                                            "name": "State",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.reason",
                                            "name": "Reason",
                                            "type": "string"
                                        }
                                    ],
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Mapping is the Schema for the mappings API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "MappingSpec defines the desired state of Mapping",
                                                    "properties": {
                                                        "add_linkerd_headers": {
                                                            "type": "boolean"
                                                        },
                                                        "add_request_headers": {
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "add_response_headers": {
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "allow_upgrade": {
                                                            "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "auth_context_extensions": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "auto_host_rewrite": {
                                                            "type": "boolean"
                                                        },
                                                        "bypass_auth": {
                                                            "type": "boolean"
                                                        },
                                                        "bypass_error_response_overrides": {
                                                            "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                            "type": "boolean"
                                                        },
                                                        "case_sensitive": {
                                                            "type": "boolean"
                                                        },
                                                        "circuit_breakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "cluster_idle_timeout_ms": {
                                                            "type": "integer"
                                                        },
                                                        "cluster_max_connection_lifetime_ms": {
                                                            "type": "integer"
                                                        },
                                                        "cluster_tag": {
                                                            "type": "string"
                                                        },
                                                        "connect_timeout_ms": {
                                                            "type": "integer"
                                                        },
                                                        "cors": {
                                                            "properties": {
                                                                "credentials": {
                                                                    "type": "boolean"
                                                                },
                                                                "max_age": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "dns_type": {
                                                            "type": "string"
                                                        },
                                                        "docs": {
                                                            "description": "DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)",
                                                            "properties": {
                                                                "display_name": {
                                                                    "type": "string"
                                                                },
                                                                "ignored": {
                                                                    "type": "boolean"
                                                                },
                                                                "path": {
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "enable_ipv4": {
                                                            "type": "boolean"
                                                        },
                                                        "enable_ipv6": {
                                                            "type": "boolean"
                                                        },
                                                        "envoy_override": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "error_response_overrides": {
                                                            "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                            "items": {
                                                                "description": "A response rewrite for an HTTP error response",
                                                                "properties": {
                                                                    "body": {
                                                                        "description": "The new response body",
                                                                        "properties": {
                                                                            "content_type": {
                                                                                "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                                "type": "string"
                                                                            },
                                                                            "json_format": {
                                                                                "additionalProperties": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                                "type": "object"
                                                                            },
                                                                            "text_format": {
                                                                                "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                                "type": "string"
                                                                            },
                                                                            "text_format_source": {
                                                                                "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                                "properties": {
                                                                                    "filename": {
                                                                                        "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "on_status_code": {
                                                                        "description": "The status code to match on -- not a pointer because it's required.",
                                                                        "maximum": 599,
                                                                        "minimum": 400,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "body",
                                                                    "on_status_code"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        "grpc": {
                                                            "type": "boolean"
                                                        },
                                                        "headers": {
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "host": {
                                                            "type": "string"
                                                        },
                                                        "host_redirect": {
                                                            "type": "boolean"
                                                        },
                                                        "host_regex": {
                                                            "type": "boolean"
                                                        },
                                                        "host_rewrite": {
                                                            "type": "string"
                                                        },
                                                        "idle_timeout_ms": {
                                                            "type": "integer"
                                                        },
                                                        "keepalive": {
                                                            "properties": {
                                                                "idle_time": {
                                                                    "type": "integer"
                                                                },
                                                                "interval": {
                                                                    "type": "integer"
                                                                },
                                                                "probes": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "labels": {
                                                            "additionalProperties": {
                                                                "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                                "items": {
                                                                    "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                    "maxProperties": 1,
                                                                    "minProperties": 1,
                                                                    "type": "object",
                                                                    "x-kubernetes-preserve-unknown-fields": true
                                                                },
                                                                "type": "array"
                                                            },
                                                            "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                            "type": "object"
                                                        },
                                                        "load_balancer": {
                                                            "properties": {
                                                                "cookie": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "path": {
                                                                            "type": "string"
                                                                        },
                                                                        "ttl": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "header": {
                                                                    "type": "string"
                                                                },
                                                                "policy": {
                                                                    "enum": [
                                                                        "round_robin",
                                                                        "ring_hash",
                                                                        "maglev",
                                                                        "least_request"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "source_ip": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "required": [
                                                                "policy"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "method": {
                                                            "type": "string"
                                                        },
                                                        "method_regex": {
                                                            "type": "boolean"
                                                        },
                                                        "modules": {
                                                            "items": {
                                                                "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                                "type": "object",
                                                                "x-kubernetes-preserve-unknown-fields": true
                                                            },
                                                            "type": "array"
                                                        },
                                                        "outlier_detection": {
                                                            "type": "string"
                                                        },
                                                        "path_redirect": {
                                                            "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "type": "string"
                                                        },
                                                        "precedence": {
                                                            "type": "integer"
                                                        },
                                                        "prefix": {
                                                            "type": "string"
                                                        },
                                                        "prefix_exact": {
                                                            "type": "boolean"
                                                        },
                                                        "prefix_redirect": {
                                                            "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "type": "string"
                                                        },
                                                        "prefix_regex": {
                                                            "type": "boolean"
                                                        },
                                                        "priority": {
                                                            "type": "string"
                                                        },
                                                        "query_parameters": {
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "redirect_response_code": {
                                                            "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                            "enum": [
                                                                301,
                                                                302,
                                                                303,
                                                                307,
                                                                308
                                                            ],
                                                            "type": "integer"
                                                        },
                                                        "regex_headers": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_query_parameters": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_redirect": {
                                                            "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "properties": {
                                                                "pattern": {
                                                                    "type": "string"
                                                                },
                                                                "substitution": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_rewrite": {
                                                            "properties": {
                                                                "pattern": {
                                                                    "type": "string"
                                                                },
                                                                "substitution": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "resolver": {
                                                            "type": "string"
                                                        },
                                                        "respect_dns_ttl": {
                                                            "type": "boolean"
                                                        },
                                                        "retry_policy": {
                                                            "properties": {
                                                                "num_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "per_try_timeout": {
                                                                    "type": "string"
                                                                },
                                                                "retry_on": {
                                                                    "enum": [
                                                                        "5xx",
                                                                        "gateway-error",
                                                                        "connect-failure",
                                                                        "retriable-4xx",
                                                                        "refused-stream",
                                                                        "retriable-status-codes"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "rewrite": {
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "shadow": {
                                                            "type": "boolean"
                                                        },
                                                        "timeout_ms": {
                                                            "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                            "type": "integer"
                                                        },
                                                        "use_websocket": {
                                                            "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]`",
                                                            "type": "boolean"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        },
                                                        "weight": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "prefix",
                                                        "service"
                                                    ],
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                },
                                                "status": {
                                                    "description": "MappingStatus defines the observed state of Mapping",
                                                    "properties": {
                                                        "reason": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "enum": [
                                                                "",
                                                                "Inactive",
                                                                "Running"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {
                                        "status": {}
                                    }
                                },
                                {
                                    "additionalPrinterColumns": [
                                        {
                                            "jsonPath": ".spec.host",
                                            "name": "Source Host",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.prefix",
                                            "name": "Source Prefix",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.service",
                                            "name": "Dest Service",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.state",
                                            "name": "State",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.reason",
                                            "name": "Reason",
                                            "type": "string"
                                        }
                                    ],
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Mapping is the Schema for the mappings API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "MappingSpec defines the desired state of Mapping",
                                                    "properties": {
                                                        "add_linkerd_headers": {
                                                            "type": "boolean"
                                                        },
                                                        "add_request_headers": {
                                                            "additionalProperties": {
                                                                "properties": {
                                                                    "append": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "v2Representation": {
                                                                        "enum": [
                                                                            "",
                                                                            "string",
                                                                            "null"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "add_response_headers": {
                                                            "additionalProperties": {
                                                                "properties": {
                                                                    "append": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "v2Representation": {
                                                                        "enum": [
                                                                            "",
                                                                            "string",
                                                                            "null"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "allow_upgrade": {
                                                            "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "auth_context_extensions": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "auto_host_rewrite": {
                                                            "type": "boolean"
                                                        },
                                                        "bypass_auth": {
                                                            "type": "boolean"
                                                        },
                                                        "bypass_error_response_overrides": {
                                                            "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                            "type": "boolean"
                                                        },
                                                        "case_sensitive": {
                                                            "type": "boolean"
                                                        },
                                                        "circuit_breakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "cluster_idle_timeout_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "cluster_max_connection_lifetime_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "cluster_tag": {
                                                            "type": "string"
                                                        },
                                                        "connect_timeout_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "cors": {
                                                            "properties": {
                                                                "credentials": {
                                                                    "type": "boolean"
                                                                },
                                                                "exposed_headers": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "headers": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "max_age": {
                                                                    "type": "string"
                                                                },
                                                                "methods": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "origins": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "v2CommaSeparatedOrigins": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "dns_type": {
                                                            "type": "string"
                                                        },
                                                        "docs": {
                                                            "description": "DocsInfo provides some extra information about the docs for the Mapping. Docs is used by both the agent and the DevPortal.",
                                                            "properties": {
                                                                "display_name": {
                                                                    "type": "string"
                                                                },
                                                                "ignored": {
                                                                    "type": "boolean"
                                                                },
                                                                "path": {
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "enable_ipv4": {
                                                            "type": "boolean"
                                                        },
                                                        "enable_ipv6": {
                                                            "type": "boolean"
                                                        },
                                                        "envoy_override": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "error_response_overrides": {
                                                            "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                            "items": {
                                                                "description": "A response rewrite for an HTTP error response",
                                                                "properties": {
                                                                    "body": {
                                                                        "description": "The new response body",
                                                                        "properties": {
                                                                            "content_type": {
                                                                                "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                                "type": "string"
                                                                            },
                                                                            "json_format": {
                                                                                "additionalProperties": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                                "type": "object"
                                                                            },
                                                                            "text_format": {
                                                                                "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                                "type": "string"
                                                                            },
                                                                            "text_format_source": {
                                                                                "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                                "properties": {
                                                                                    "filename": {
                                                                                        "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "on_status_code": {
                                                                        "description": "The status code to match on -- not a pointer because it's required.",
                                                                        "maximum": 599,
                                                                        "minimum": 400,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "body",
                                                                    "on_status_code"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        "grpc": {
                                                            "type": "boolean"
                                                        },
                                                        "headers": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "host": {
                                                            "description": "Exact match for the hostname of a request if HostRegex is false; regex match for the hostname if HostRegex is true. \n Host specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Host will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used. \n DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                            "type": "string"
                                                        },
                                                        "host_redirect": {
                                                            "type": "boolean"
                                                        },
                                                        "host_regex": {
                                                            "description": "DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                            "type": "boolean"
                                                        },
                                                        "host_rewrite": {
                                                            "type": "string"
                                                        },
                                                        "hostname": {
                                                            "description": "Hostname is a DNS glob specifying the hosts to which this Mapping applies. \n Hostname specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Hostname will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used.",
                                                            "type": "string"
                                                        },
                                                        "idle_timeout_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "keepalive": {
                                                            "properties": {
                                                                "idle_time": {
                                                                    "type": "integer"
                                                                },
                                                                "interval": {
                                                                    "type": "integer"
                                                                },
                                                                "probes": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "labels": {
                                                            "additionalProperties": {
                                                                "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                                "items": {
                                                                    "additionalProperties": {
                                                                        "description": "A MappingLabelsArray is the value in the MappingLabelGroup: an array of label specifiers.",
                                                                        "items": {
                                                                            "description": "A MappingLabelSpecifier (finally!) defines a single label. \n This mimics envoy/config/route/v3/route_components.proto:RateLimit:Action:action_specifier.",
                                                                            "maxProperties": 1,
                                                                            "minProperties": 1,
                                                                            "properties": {
                                                                                "destination_cluster": {
                                                                                    "description": "Sets the label \"destination_cluster=«Envoy destination cluster name»\".",
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "enum": [
                                                                                                "destination_cluster"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "generic_key": {
                                                                                    "description": "Sets the label \"«key»=«value»\" (where by default «key» is \"generic_key\").",
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "description": "The default is \"generic_key\".",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "v2Shorthand": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "value"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "remote_address": {
                                                                                    "description": "Sets the label \"remote_address=«IP address of the client»\".",
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "enum": [
                                                                                                "remote_address"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "request_headers": {
                                                                                    "description": "If the «header_name» header is set, then set the label \"«key»=«Value of the «header_name» header»\"; otherwise skip applying this label group.",
                                                                                    "properties": {
                                                                                        "header_name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "key": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "omit_if_not_present": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "header_name",
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "source_cluster": {
                                                                                    "description": "Sets the label \"source_cluster=«Envoy source cluster name»\".",
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "enum": [
                                                                                                "source_cluster"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                    "maxProperties": 1,
                                                                    "minProperties": 1,
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                            "type": "object"
                                                        },
                                                        "load_balancer": {
                                                            "properties": {
                                                                "cookie": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "path": {
                                                                            "type": "string"
                                                                        },
                                                                        "ttl": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "header": {
                                                                    "type": "string"
                                                                },
                                                                "policy": {
                                                                    "enum": [
                                                                        "round_robin",
                                                                        "ring_hash",
                                                                        "maglev",
                                                                        "least_request"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "source_ip": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "required": [
                                                                "policy"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "method": {
                                                            "type": "string"
                                                        },
                                                        "method_regex": {
                                                            "type": "boolean"
                                                        },
                                                        "modules": {
                                                            "items": {
                                                                "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                                "type": "object",
                                                                "x-kubernetes-preserve-unknown-fields": true
                                                            },
                                                            "type": "array"
                                                        },
                                                        "outlier_detection": {
                                                            "type": "string"
                                                        },
                                                        "path_redirect": {
                                                            "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "type": "string"
                                                        },
                                                        "precedence": {
                                                            "type": "integer"
                                                        },
                                                        "prefix": {
                                                            "type": "string"
                                                        },
                                                        "prefix_exact": {
                                                            "type": "boolean"
                                                        },
                                                        "prefix_redirect": {
                                                            "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "type": "string"
                                                        },
                                                        "prefix_regex": {
                                                            "type": "boolean"
                                                        },
                                                        "priority": {
                                                            "type": "string"
                                                        },
                                                        "query_parameters": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "redirect_response_code": {
                                                            "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                            "enum": [
                                                                301,
                                                                302,
                                                                303,
                                                                307,
                                                                308
                                                            ],
                                                            "type": "integer"
                                                        },
                                                        "regex_headers": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_query_parameters": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_redirect": {
                                                            "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "properties": {
                                                                "pattern": {
                                                                    "type": "string"
                                                                },
                                                                "substitution": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_rewrite": {
                                                            "properties": {
                                                                "pattern": {
                                                                    "type": "string"
                                                                },
                                                                "substitution": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "remove_request_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "remove_response_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "resolver": {
                                                            "type": "string"
                                                        },
                                                        "respect_dns_ttl": {
                                                            "type": "boolean"
                                                        },
                                                        "retry_policy": {
                                                            "properties": {
                                                                "num_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "per_try_timeout": {
                                                                    "type": "string"
                                                                },
                                                                "retry_on": {
                                                                    "enum": [
                                                                        "5xx",
                                                                        "gateway-error",
                                                                        "connect-failure",
                                                                        "retriable-4xx",
                                                                        "refused-stream",
                                                                        "retriable-status-codes"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "rewrite": {
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "shadow": {
                                                            "type": "boolean"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        },
                                                        "timeout_ms": {
                                                            "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                            "type": "integer"
                                                        },
                                                        "tls": {
                                                            "type": "string"
                                                        },
                                                        "use_websocket": {
                                                            "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]` \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.DeprecatedUseWebsocket.",
                                                            "type": "boolean"
                                                        },
                                                        "v2BoolHeaders": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "v2BoolQueryParameters": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "v2ExplicitTLS": {
                                                            "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                            "properties": {
                                                                "serviceScheme": {
                                                                    "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                    "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                    "type": "string"
                                                                },
                                                                "tls": {
                                                                    "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                    "enum": [
                                                                        "",
                                                                        "null",
                                                                        "bool:true",
                                                                        "bool:false",
                                                                        "string"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "weight": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "prefix",
                                                        "service"
                                                    ],
                                                    "type": "object"
                                                },
                                                "status": {
                                                    "description": "MappingStatus defines the observed state of Mapping",
                                                    "properties": {
                                                        "reason": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "enum": [
                                                                "",
                                                                "Inactive",
                                                                "Running"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false,
                                    "subresources": {
                                        "status": {}
                                    }
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Mapping is the Schema for the mappings API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"mappings.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"Mapping\",\"listKind\":\"MappingList\",\"plural\":\"mappings\",\"singular\":\"mapping\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".spec.host\",\"name\":\"Source Host\",\"type\":\"string\"},{\"jsonPath\":\".spec.prefix\",\"name\":\"Source Prefix\",\"type\":\"string\"},{\"jsonPath\":\".spec.service\",\"name\":\"Dest Service\",\"type\":\"string\"},{\"jsonPath\":\".status.state\",\"name\":\"State\",\"type\":\"string\"},{\"jsonPath\":\".status.reason\",\"name\":\"Reason\",\"type\":\"string\"}],\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Mapping is the Schema for the mappings API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"MappingSpec defines the desired state of Mapping\",\"properties\":{\"add_linkerd_headers\":{\"type\":\"boolean\"},\"add_request_headers\":{\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"add_response_headers\":{\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"allow_upgrade\":{\"description\":\"A case-insensitive list of the non-HTTP protocols to allow \\\"upgrading\\\" to from HTTP via the \\\"Connection: upgrade\\\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \\n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \\n For example, if your upstream service supports WebSockets, you would write \\n    allow_upgrade:    - websocket \\n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \\n    allow_upgrade:    - spdy/3.1\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"auth_context_extensions\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"auto_host_rewrite\":{\"type\":\"boolean\"},\"bypass_auth\":{\"type\":\"boolean\"},\"bypass_error_response_overrides\":{\"description\":\"If true, bypasses any `error_response_overrides` set on the Ambassador module.\",\"type\":\"boolean\"},\"case_sensitive\":{\"type\":\"boolean\"},\"circuit_breakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"cluster_idle_timeout_ms\":{\"type\":\"integer\"},\"cluster_max_connection_lifetime_ms\":{\"type\":\"integer\"},\"cluster_tag\":{\"type\":\"string\"},\"connect_timeout_ms\":{\"type\":\"integer\"},\"cors\":{\"properties\":{\"credentials\":{\"type\":\"boolean\"},\"max_age\":{\"type\":\"string\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"dns_type\":{\"type\":\"string\"},\"docs\":{\"description\":\"DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)\",\"properties\":{\"display_name\":{\"type\":\"string\"},\"ignored\":{\"type\":\"boolean\"},\"path\":{\"type\":\"string\"},\"timeout_ms\":{\"type\":\"integer\"},\"url\":{\"type\":\"string\"}},\"type\":\"object\"},\"enable_ipv4\":{\"type\":\"boolean\"},\"enable_ipv6\":{\"type\":\"boolean\"},\"envoy_override\":{\"description\":\"UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"error_response_overrides\":{\"description\":\"Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.\",\"items\":{\"description\":\"A response rewrite for an HTTP error response\",\"properties\":{\"body\":{\"description\":\"The new response body\",\"properties\":{\"content_type\":{\"description\":\"The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.\",\"type\":\"string\"},\"json_format\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A JSON response with content-type: application/json. The values can contain format text like in text_format.\",\"type\":\"object\"},\"text_format\":{\"description\":\"A format string representing a text response body. Content-Type can be set using the `content_type` field below.\",\"type\":\"string\"},\"text_format_source\":{\"description\":\"A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.\",\"properties\":{\"filename\":{\"description\":\"The name of a file on the Ambassador pod that contains a format text string.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"on_status_code\":{\"description\":\"The status code to match on -- not a pointer because it's required.\",\"maximum\":599,\"minimum\":400,\"type\":\"integer\"}},\"required\":[\"body\",\"on_status_code\"],\"type\":\"object\"},\"minItems\":1,\"type\":\"array\"},\"grpc\":{\"type\":\"boolean\"},\"headers\":{\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"host\":{\"type\":\"string\"},\"host_redirect\":{\"type\":\"boolean\"},\"host_regex\":{\"type\":\"boolean\"},\"host_rewrite\":{\"type\":\"string\"},\"idle_timeout_ms\":{\"type\":\"integer\"},\"keepalive\":{\"properties\":{\"idle_time\":{\"type\":\"integer\"},\"interval\":{\"type\":\"integer\"},\"probes\":{\"type\":\"integer\"}},\"type\":\"object\"},\"labels\":{\"additionalProperties\":{\"description\":\"A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.\",\"items\":{\"description\":\"A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.\",\"maxProperties\":1,\"minProperties\":1,\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"type\":\"array\"},\"description\":\"A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.\",\"type\":\"object\"},\"load_balancer\":{\"properties\":{\"cookie\":{\"properties\":{\"name\":{\"type\":\"string\"},\"path\":{\"type\":\"string\"},\"ttl\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"header\":{\"type\":\"string\"},\"policy\":{\"enum\":[\"round_robin\",\"ring_hash\",\"maglev\",\"least_request\"],\"type\":\"string\"},\"source_ip\":{\"type\":\"boolean\"}},\"required\":[\"policy\"],\"type\":\"object\"},\"method\":{\"type\":\"string\"},\"method_regex\":{\"type\":\"boolean\"},\"modules\":{\"items\":{\"description\":\"UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"type\":\"array\"},\"outlier_detection\":{\"type\":\"string\"},\"path_redirect\":{\"description\":\"Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.\",\"type\":\"string\"},\"precedence\":{\"type\":\"integer\"},\"prefix\":{\"type\":\"string\"},\"prefix_exact\":{\"type\":\"boolean\"},\"prefix_redirect\":{\"description\":\"Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.\",\"type\":\"string\"},\"prefix_regex\":{\"type\":\"boolean\"},\"priority\":{\"type\":\"string\"},\"query_parameters\":{\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"redirect_response_code\":{\"description\":\"The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.\",\"enum\":[301,302,303,307,308],\"type\":\"integer\"},\"regex_headers\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"regex_query_parameters\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"regex_redirect\":{\"description\":\"Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.\",\"properties\":{\"pattern\":{\"type\":\"string\"},\"substitution\":{\"type\":\"string\"}},\"type\":\"object\"},\"regex_rewrite\":{\"properties\":{\"pattern\":{\"type\":\"string\"},\"substitution\":{\"type\":\"string\"}},\"type\":\"object\"},\"resolver\":{\"type\":\"string\"},\"respect_dns_ttl\":{\"type\":\"boolean\"},\"retry_policy\":{\"properties\":{\"num_retries\":{\"type\":\"integer\"},\"per_try_timeout\":{\"type\":\"string\"},\"retry_on\":{\"enum\":[\"5xx\",\"gateway-error\",\"connect-failure\",\"retriable-4xx\",\"refused-stream\",\"retriable-status-codes\"],\"type\":\"string\"}},\"type\":\"object\"},\"rewrite\":{\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"shadow\":{\"type\":\"boolean\"},\"timeout_ms\":{\"description\":\"The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.\",\"type\":\"integer\"},\"use_websocket\":{\"description\":\"use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\\\"websocket\\\"]`\",\"type\":\"boolean\"},\"v3StatsName\":{\"type\":\"string\"},\"weight\":{\"type\":\"integer\"}},\"required\":[\"prefix\",\"service\"],\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"status\":{\"description\":\"MappingStatus defines the observed state of Mapping\",\"properties\":{\"reason\":{\"type\":\"string\"},\"state\":{\"enum\":[\"\",\"Inactive\",\"Running\"],\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}},{\"additionalPrinterColumns\":[{\"jsonPath\":\".spec.host\",\"name\":\"Source Host\",\"type\":\"string\"},{\"jsonPath\":\".spec.prefix\",\"name\":\"Source Prefix\",\"type\":\"string\"},{\"jsonPath\":\".spec.service\",\"name\":\"Dest Service\",\"type\":\"string\"},{\"jsonPath\":\".status.state\",\"name\":\"State\",\"type\":\"string\"},{\"jsonPath\":\".status.reason\",\"name\":\"Reason\",\"type\":\"string\"}],\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Mapping is the Schema for the mappings API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"MappingSpec defines the desired state of Mapping\",\"properties\":{\"add_linkerd_headers\":{\"type\":\"boolean\"},\"add_request_headers\":{\"additionalProperties\":{\"properties\":{\"append\":{\"type\":\"boolean\"},\"v2Representation\":{\"enum\":[\"\",\"string\",\"null\"],\"type\":\"string\"},\"value\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"object\"},\"add_response_headers\":{\"additionalProperties\":{\"properties\":{\"append\":{\"type\":\"boolean\"},\"v2Representation\":{\"enum\":[\"\",\"string\",\"null\"],\"type\":\"string\"},\"value\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"object\"},\"allow_upgrade\":{\"description\":\"A case-insensitive list of the non-HTTP protocols to allow \\\"upgrading\\\" to from HTTP via the \\\"Connection: upgrade\\\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \\n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \\n For example, if your upstream service supports WebSockets, you would write \\n    allow_upgrade:    - websocket \\n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \\n    allow_upgrade:    - spdy/3.1\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"auth_context_extensions\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"auto_host_rewrite\":{\"type\":\"boolean\"},\"bypass_auth\":{\"type\":\"boolean\"},\"bypass_error_response_overrides\":{\"description\":\"If true, bypasses any `error_response_overrides` set on the Ambassador module.\",\"type\":\"boolean\"},\"case_sensitive\":{\"type\":\"boolean\"},\"circuit_breakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"cluster_idle_timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"cluster_max_connection_lifetime_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"cluster_tag\":{\"type\":\"string\"},\"connect_timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"cors\":{\"properties\":{\"credentials\":{\"type\":\"boolean\"},\"exposed_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"max_age\":{\"type\":\"string\"},\"methods\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"origins\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"v2CommaSeparatedOrigins\":{\"type\":\"boolean\"}},\"type\":\"object\"},\"dns_type\":{\"type\":\"string\"},\"docs\":{\"description\":\"DocsInfo provides some extra information about the docs for the Mapping. Docs is used by both the agent and the DevPortal.\",\"properties\":{\"display_name\":{\"type\":\"string\"},\"ignored\":{\"type\":\"boolean\"},\"path\":{\"type\":\"string\"},\"timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"url\":{\"type\":\"string\"}},\"type\":\"object\"},\"enable_ipv4\":{\"type\":\"boolean\"},\"enable_ipv6\":{\"type\":\"boolean\"},\"envoy_override\":{\"description\":\"UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"error_response_overrides\":{\"description\":\"Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.\",\"items\":{\"description\":\"A response rewrite for an HTTP error response\",\"properties\":{\"body\":{\"description\":\"The new response body\",\"properties\":{\"content_type\":{\"description\":\"The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.\",\"type\":\"string\"},\"json_format\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A JSON response with content-type: application/json. The values can contain format text like in text_format.\",\"type\":\"object\"},\"text_format\":{\"description\":\"A format string representing a text response body. Content-Type can be set using the `content_type` field below.\",\"type\":\"string\"},\"text_format_source\":{\"description\":\"A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.\",\"properties\":{\"filename\":{\"description\":\"The name of a file on the Ambassador pod that contains a format text string.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"on_status_code\":{\"description\":\"The status code to match on -- not a pointer because it's required.\",\"maximum\":599,\"minimum\":400,\"type\":\"integer\"}},\"required\":[\"body\",\"on_status_code\"],\"type\":\"object\"},\"minItems\":1,\"type\":\"array\"},\"grpc\":{\"type\":\"boolean\"},\"headers\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"host\":{\"description\":\"Exact match for the hostname of a request if HostRegex is false; regex match for the hostname if HostRegex is true. \\n Host specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Host will not associate with a Host that doesn't have a matching Hostname. \\n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used. \\n DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \\n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.\",\"type\":\"string\"},\"host_redirect\":{\"type\":\"boolean\"},\"host_regex\":{\"description\":\"DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \\n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.\",\"type\":\"boolean\"},\"host_rewrite\":{\"type\":\"string\"},\"hostname\":{\"description\":\"Hostname is a DNS glob specifying the hosts to which this Mapping applies. \\n Hostname specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Hostname will not associate with a Host that doesn't have a matching Hostname. \\n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used.\",\"type\":\"string\"},\"idle_timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"keepalive\":{\"properties\":{\"idle_time\":{\"type\":\"integer\"},\"interval\":{\"type\":\"integer\"},\"probes\":{\"type\":\"integer\"}},\"type\":\"object\"},\"labels\":{\"additionalProperties\":{\"description\":\"A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.\",\"items\":{\"additionalProperties\":{\"description\":\"A MappingLabelsArray is the value in the MappingLabelGroup: an array of label specifiers.\",\"items\":{\"description\":\"A MappingLabelSpecifier (finally!) defines a single label. \\n This mimics envoy/config/route/v3/route_components.proto:RateLimit:Action:action_specifier.\",\"maxProperties\":1,\"minProperties\":1,\"properties\":{\"destination_cluster\":{\"description\":\"Sets the label \\\"destination_cluster=«Envoy destination cluster name»\\\".\",\"properties\":{\"key\":{\"enum\":[\"destination_cluster\"],\"type\":\"string\"}},\"required\":[\"key\"],\"type\":\"object\"},\"generic_key\":{\"description\":\"Sets the label \\\"«key»=«value»\\\" (where by default «key» is \\\"generic_key\\\").\",\"properties\":{\"key\":{\"description\":\"The default is \\\"generic_key\\\".\",\"type\":\"string\"},\"v2Shorthand\":{\"type\":\"boolean\"},\"value\":{\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"remote_address\":{\"description\":\"Sets the label \\\"remote_address=«IP address of the client»\\\".\",\"properties\":{\"key\":{\"enum\":[\"remote_address\"],\"type\":\"string\"}},\"required\":[\"key\"],\"type\":\"object\"},\"request_headers\":{\"description\":\"If the «header_name» header is set, then set the label \\\"«key»=«Value of the «header_name» header»\\\"; otherwise skip applying this label group.\",\"properties\":{\"header_name\":{\"type\":\"string\"},\"key\":{\"type\":\"string\"},\"omit_if_not_present\":{\"type\":\"boolean\"}},\"required\":[\"header_name\",\"key\"],\"type\":\"object\"},\"source_cluster\":{\"description\":\"Sets the label \\\"source_cluster=«Envoy source cluster name»\\\".\",\"properties\":{\"key\":{\"enum\":[\"source_cluster\"],\"type\":\"string\"}},\"required\":[\"key\"],\"type\":\"object\"}},\"type\":\"object\"},\"type\":\"array\"},\"description\":\"A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.\",\"maxProperties\":1,\"minProperties\":1,\"type\":\"object\"},\"type\":\"array\"},\"description\":\"A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.\",\"type\":\"object\"},\"load_balancer\":{\"properties\":{\"cookie\":{\"properties\":{\"name\":{\"type\":\"string\"},\"path\":{\"type\":\"string\"},\"ttl\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"header\":{\"type\":\"string\"},\"policy\":{\"enum\":[\"round_robin\",\"ring_hash\",\"maglev\",\"least_request\"],\"type\":\"string\"},\"source_ip\":{\"type\":\"boolean\"}},\"required\":[\"policy\"],\"type\":\"object\"},\"method\":{\"type\":\"string\"},\"method_regex\":{\"type\":\"boolean\"},\"modules\":{\"items\":{\"description\":\"UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"type\":\"array\"},\"outlier_detection\":{\"type\":\"string\"},\"path_redirect\":{\"description\":\"Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.\",\"type\":\"string\"},\"precedence\":{\"type\":\"integer\"},\"prefix\":{\"type\":\"string\"},\"prefix_exact\":{\"type\":\"boolean\"},\"prefix_redirect\":{\"description\":\"Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.\",\"type\":\"string\"},\"prefix_regex\":{\"type\":\"boolean\"},\"priority\":{\"type\":\"string\"},\"query_parameters\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"redirect_response_code\":{\"description\":\"The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.\",\"enum\":[301,302,303,307,308],\"type\":\"integer\"},\"regex_headers\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"regex_query_parameters\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"regex_redirect\":{\"description\":\"Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.\",\"properties\":{\"pattern\":{\"type\":\"string\"},\"substitution\":{\"type\":\"string\"}},\"type\":\"object\"},\"regex_rewrite\":{\"properties\":{\"pattern\":{\"type\":\"string\"},\"substitution\":{\"type\":\"string\"}},\"type\":\"object\"},\"remove_request_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"remove_response_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"resolver\":{\"type\":\"string\"},\"respect_dns_ttl\":{\"type\":\"boolean\"},\"retry_policy\":{\"properties\":{\"num_retries\":{\"type\":\"integer\"},\"per_try_timeout\":{\"type\":\"string\"},\"retry_on\":{\"enum\":[\"5xx\",\"gateway-error\",\"connect-failure\",\"retriable-4xx\",\"refused-stream\",\"retriable-status-codes\"],\"type\":\"string\"}},\"type\":\"object\"},\"rewrite\":{\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"shadow\":{\"type\":\"boolean\"},\"stats_name\":{\"type\":\"string\"},\"timeout_ms\":{\"description\":\"The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.\",\"type\":\"integer\"},\"tls\":{\"type\":\"string\"},\"use_websocket\":{\"description\":\"use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\\\"websocket\\\"]` \\n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.DeprecatedUseWebsocket.\",\"type\":\"boolean\"},\"v2BoolHeaders\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"v2BoolQueryParameters\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"v2ExplicitTLS\":{\"description\":\"V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.\",\"properties\":{\"serviceScheme\":{\"description\":\"ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \\n Acceptable values are \\\"http://\\\" (case-insensitive), \\\"https://\\\" (case-insensitive), or \\\"\\\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.\",\"pattern\":\"^([hH][tT][tT][pP][sS]?://)?$\",\"type\":\"string\"},\"tls\":{\"description\":\"TLS controls whether and how to represent the \\\"tls\\\" field when its value could be implied by the \\\"service\\\" field.  In v2, there were a lot of different ways to spell an \\\"empty\\\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \\n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \\\"\\\"           | omit the field                        | defer to service (no TLSContext)   |  | \\\"null\\\"       | store an explicit \\\"null\\\" in the field | defer to service (no TLSContext)   |  | \\\"string\\\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \\\"bool:false\\\" | store a Boolean \\\"false\\\" in the field  | defer to service (no TLSContext)   |  | \\\"bool:true\\\"  | store a Boolean \\\"true\\\" in the field   | originate TLS (no TLSContext)      | \\n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \\\"bool:true\\\" if TLS is not to be originated), then this field is ignored.\",\"enum\":[\"\",\"null\",\"bool:true\",\"bool:false\",\"string\"],\"type\":\"string\"}},\"type\":\"object\"},\"weight\":{\"type\":\"integer\"}},\"required\":[\"prefix\",\"service\"],\"type\":\"object\"},\"status\":{\"description\":\"MappingStatus defines the observed state of Mapping\",\"properties\":{\"reason\":{\"type\":\"string\"},\"state\":{\"enum\":[\"\",\"Inactive\",\"Running\"],\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false,\"subresources\":{\"status\":{}}},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Mapping is the Schema for the mappings API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-08-12T20:51:31Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-08-12T20:51:31Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-12T20:51:31Z"
                            }
                        ],
                        "name": "mappings.getambassador.io",
                        "resourceVersion": "51778000",
                        "uid": "bc161c8f-c1eb-4536-bbdc-90e2f9ff215e"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Mapping",
                            "listKind": "MappingList",
                            "plural": "mappings",
                            "singular": "mapping"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.host",
                                        "name": "Source Host",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.prefix",
                                        "name": "Source Prefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.service",
                                        "name": "Dest Service",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.reason",
                                        "name": "Reason",
                                        "type": "string"
                                    }
                                ],
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "MappingSpec defines the desired state of Mapping",
                                                "properties": {
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "add_request_headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "add_response_headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "allow_upgrade": {
                                                        "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_context_extensions": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "auto_host_rewrite": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_auth": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_error_response_overrides": {
                                                        "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                        "type": "boolean"
                                                    },
                                                    "case_sensitive": {
                                                        "type": "boolean"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_idle_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cluster_max_connection_lifetime_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "connect_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cors": {
                                                        "properties": {
                                                            "credentials": {
                                                                "type": "boolean"
                                                            },
                                                            "max_age": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "dns_type": {
                                                        "type": "string"
                                                    },
                                                    "docs": {
                                                        "description": "DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)",
                                                        "properties": {
                                                            "display_name": {
                                                                "type": "string"
                                                            },
                                                            "ignored": {
                                                                "type": "boolean"
                                                            },
                                                            "path": {
                                                                "type": "string"
                                                            },
                                                            "timeout_ms": {
                                                                "type": "integer"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "envoy_override": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "error_response_overrides": {
                                                        "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                        "items": {
                                                            "description": "A response rewrite for an HTTP error response",
                                                            "properties": {
                                                                "body": {
                                                                    "description": "The new response body",
                                                                    "properties": {
                                                                        "content_type": {
                                                                            "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                            "type": "string"
                                                                        },
                                                                        "json_format": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                            "type": "object"
                                                                        },
                                                                        "text_format": {
                                                                            "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                            "type": "string"
                                                                        },
                                                                        "text_format_source": {
                                                                            "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                            "properties": {
                                                                                "filename": {
                                                                                    "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "on_status_code": {
                                                                    "description": "The status code to match on -- not a pointer because it's required.",
                                                                    "maximum": 599,
                                                                    "minimum": 400,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "body",
                                                                "on_status_code"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "host_redirect": {
                                                        "type": "boolean"
                                                    },
                                                    "host_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "host_rewrite": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "keepalive": {
                                                        "properties": {
                                                            "idle_time": {
                                                                "type": "integer"
                                                            },
                                                            "interval": {
                                                                "type": "integer"
                                                            },
                                                            "probes": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "additionalProperties": {
                                                            "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                            "items": {
                                                                "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                "maxProperties": 1,
                                                                "minProperties": 1,
                                                                "type": "object",
                                                                "x-kubernetes-preserve-unknown-fields": true
                                                            },
                                                            "type": "array"
                                                        },
                                                        "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                        "type": "object"
                                                    },
                                                    "load_balancer": {
                                                        "properties": {
                                                            "cookie": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "path": {
                                                                        "type": "string"
                                                                    },
                                                                    "ttl": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "header": {
                                                                "type": "string"
                                                            },
                                                            "policy": {
                                                                "enum": [
                                                                    "round_robin",
                                                                    "ring_hash",
                                                                    "maglev",
                                                                    "least_request"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "source_ip": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "policy"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "method": {
                                                        "type": "string"
                                                    },
                                                    "method_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "modules": {
                                                        "items": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "type": "array"
                                                    },
                                                    "outlier_detection": {
                                                        "type": "string"
                                                    },
                                                    "path_redirect": {
                                                        "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "precedence": {
                                                        "type": "integer"
                                                    },
                                                    "prefix": {
                                                        "type": "string"
                                                    },
                                                    "prefix_exact": {
                                                        "type": "boolean"
                                                    },
                                                    "prefix_redirect": {
                                                        "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "prefix_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "priority": {
                                                        "type": "string"
                                                    },
                                                    "query_parameters": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "redirect_response_code": {
                                                        "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                        "enum": [
                                                            301,
                                                            302,
                                                            303,
                                                            307,
                                                            308
                                                        ],
                                                        "type": "integer"
                                                    },
                                                    "regex_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_redirect": {
                                                        "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_rewrite": {
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "respect_dns_ttl": {
                                                        "type": "boolean"
                                                    },
                                                    "retry_policy": {
                                                        "properties": {
                                                            "num_retries": {
                                                                "type": "integer"
                                                            },
                                                            "per_try_timeout": {
                                                                "type": "string"
                                                            },
                                                            "retry_on": {
                                                                "enum": [
                                                                    "5xx",
                                                                    "gateway-error",
                                                                    "connect-failure",
                                                                    "retriable-4xx",
                                                                    "refused-stream",
                                                                    "retriable-status-codes"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "rewrite": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "shadow": {
                                                        "type": "boolean"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                        "type": "integer"
                                                    },
                                                    "use_websocket": {
                                                        "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]`",
                                                        "type": "boolean"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "prefix",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "status": {
                                                "description": "MappingStatus defines the observed state of Mapping",
                                                "properties": {
                                                    "reason": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "enum": [
                                                            "",
                                                            "Inactive",
                                                            "Running"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.host",
                                        "name": "Source Host",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.prefix",
                                        "name": "Source Prefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.service",
                                        "name": "Dest Service",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.reason",
                                        "name": "Reason",
                                        "type": "string"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "MappingSpec defines the desired state of Mapping",
                                                "properties": {
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "add_request_headers": {
                                                        "additionalProperties": {
                                                            "properties": {
                                                                "append": {
                                                                    "type": "boolean"
                                                                },
                                                                "v2Representation": {
                                                                    "enum": [
                                                                        "",
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_response_headers": {
                                                        "additionalProperties": {
                                                            "properties": {
                                                                "append": {
                                                                    "type": "boolean"
                                                                },
                                                                "v2Representation": {
                                                                    "enum": [
                                                                        "",
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "allow_upgrade": {
                                                        "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_context_extensions": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "auto_host_rewrite": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_auth": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_error_response_overrides": {
                                                        "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                        "type": "boolean"
                                                    },
                                                    "case_sensitive": {
                                                        "type": "boolean"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_idle_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cluster_max_connection_lifetime_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "connect_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cors": {
                                                        "properties": {
                                                            "credentials": {
                                                                "type": "boolean"
                                                            },
                                                            "exposed_headers": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "headers": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_age": {
                                                                "type": "string"
                                                            },
                                                            "methods": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "origins": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "v2CommaSeparatedOrigins": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "dns_type": {
                                                        "type": "string"
                                                    },
                                                    "docs": {
                                                        "description": "DocsInfo provides some extra information about the docs for the Mapping. Docs is used by both the agent and the DevPortal.",
                                                        "properties": {
                                                            "display_name": {
                                                                "type": "string"
                                                            },
                                                            "ignored": {
                                                                "type": "boolean"
                                                            },
                                                            "path": {
                                                                "type": "string"
                                                            },
                                                            "timeout_ms": {
                                                                "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                                "type": "integer"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "envoy_override": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "error_response_overrides": {
                                                        "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                        "items": {
                                                            "description": "A response rewrite for an HTTP error response",
                                                            "properties": {
                                                                "body": {
                                                                    "description": "The new response body",
                                                                    "properties": {
                                                                        "content_type": {
                                                                            "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                            "type": "string"
                                                                        },
                                                                        "json_format": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                            "type": "object"
                                                                        },
                                                                        "text_format": {
                                                                            "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                            "type": "string"
                                                                        },
                                                                        "text_format_source": {
                                                                            "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                            "properties": {
                                                                                "filename": {
                                                                                    "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "on_status_code": {
                                                                    "description": "The status code to match on -- not a pointer because it's required.",
                                                                    "maximum": 599,
                                                                    "minimum": 400,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "body",
                                                                "on_status_code"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "host": {
                                                        "description": "Exact match for the hostname of a request if HostRegex is false; regex match for the hostname if HostRegex is true. \n Host specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Host will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used. \n DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                        "type": "string"
                                                    },
                                                    "host_redirect": {
                                                        "type": "boolean"
                                                    },
                                                    "host_regex": {
                                                        "description": "DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                        "type": "boolean"
                                                    },
                                                    "host_rewrite": {
                                                        "type": "string"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname is a DNS glob specifying the hosts to which this Mapping applies. \n Hostname specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Hostname will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used.",
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "keepalive": {
                                                        "properties": {
                                                            "idle_time": {
                                                                "type": "integer"
                                                            },
                                                            "interval": {
                                                                "type": "integer"
                                                            },
                                                            "probes": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "additionalProperties": {
                                                            "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                            "items": {
                                                                "additionalProperties": {
                                                                    "description": "A MappingLabelsArray is the value in the MappingLabelGroup: an array of label specifiers.",
                                                                    "items": {
                                                                        "description": "A MappingLabelSpecifier (finally!) defines a single label. \n This mimics envoy/config/route/v3/route_components.proto:RateLimit:Action:action_specifier.",
                                                                        "maxProperties": 1,
                                                                        "minProperties": 1,
                                                                        "properties": {
                                                                            "destination_cluster": {
                                                                                "description": "Sets the label \"destination_cluster=«Envoy destination cluster name»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "destination_cluster"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "generic_key": {
                                                                                "description": "Sets the label \"«key»=«value»\" (where by default «key» is \"generic_key\").",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "The default is \"generic_key\".",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "v2Shorthand": {
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "value": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "value"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "remote_address": {
                                                                                "description": "Sets the label \"remote_address=«IP address of the client»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "remote_address"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "request_headers": {
                                                                                "description": "If the «header_name» header is set, then set the label \"«key»=«Value of the «header_name» header»\"; otherwise skip applying this label group.",
                                                                                "properties": {
                                                                                    "header_name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "omit_if_not_present": {
                                                                                        "type": "boolean"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "header_name",
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "source_cluster": {
                                                                                "description": "Sets the label \"source_cluster=«Envoy source cluster name»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "source_cluster"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                "maxProperties": 1,
                                                                "minProperties": 1,
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                        "type": "object"
                                                    },
                                                    "load_balancer": {
                                                        "properties": {
                                                            "cookie": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "path": {
                                                                        "type": "string"
                                                                    },
                                                                    "ttl": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "header": {
                                                                "type": "string"
                                                            },
                                                            "policy": {
                                                                "enum": [
                                                                    "round_robin",
                                                                    "ring_hash",
                                                                    "maglev",
                                                                    "least_request"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "source_ip": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "policy"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "method": {
                                                        "type": "string"
                                                    },
                                                    "method_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "modules": {
                                                        "items": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "type": "array"
                                                    },
                                                    "outlier_detection": {
                                                        "type": "string"
                                                    },
                                                    "path_redirect": {
                                                        "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "precedence": {
                                                        "type": "integer"
                                                    },
                                                    "prefix": {
                                                        "type": "string"
                                                    },
                                                    "prefix_exact": {
                                                        "type": "boolean"
                                                    },
                                                    "prefix_redirect": {
                                                        "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "prefix_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "priority": {
                                                        "type": "string"
                                                    },
                                                    "query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "redirect_response_code": {
                                                        "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                        "enum": [
                                                            301,
                                                            302,
                                                            303,
                                                            307,
                                                            308
                                                        ],
                                                        "type": "integer"
                                                    },
                                                    "regex_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_redirect": {
                                                        "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_rewrite": {
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "remove_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "remove_response_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "respect_dns_ttl": {
                                                        "type": "boolean"
                                                    },
                                                    "retry_policy": {
                                                        "properties": {
                                                            "num_retries": {
                                                                "type": "integer"
                                                            },
                                                            "per_try_timeout": {
                                                                "type": "string"
                                                            },
                                                            "retry_on": {
                                                                "enum": [
                                                                    "5xx",
                                                                    "gateway-error",
                                                                    "connect-failure",
                                                                    "retriable-4xx",
                                                                    "refused-stream",
                                                                    "retriable-status-codes"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "rewrite": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "shadow": {
                                                        "type": "boolean"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "use_websocket": {
                                                        "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]` \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.DeprecatedUseWebsocket.",
                                                        "type": "boolean"
                                                    },
                                                    "v2BoolHeaders": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v2BoolQueryParameters": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "prefix",
                                                    "service"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "MappingStatus defines the observed state of Mapping",
                                                "properties": {
                                                    "reason": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "enum": [
                                                            "",
                                                            "Inactive",
                                                            "Running"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Mapping",
                            "listKind": "MappingList",
                            "plural": "mappings",
                            "singular": "mapping"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-08-12T20:51:31Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::strimzi",
                "custom": true,
                "id": "strimzi/strimzi-brnhuehc",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "strimzi-kafka-operator",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "strimzi-brnhuehc",
                    "namespace": "strimzi",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://strimzi.io/charts/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "strimzi-cluster-operator-global",
                            "strimzi-cluster-operator-namespaced",
                            "strimzi-entity-operator",
                            "strimzi-kafka-broker",
                            "strimzi-kafka-client",
                            "strimzi-topic-operator"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "strimzi-cluster-operator",
                            "strimzi-cluster-operator-kafka-broker-delegation",
                            "strimzi-cluster-operator-kafka-client-delegation"
                        ],
                        "ConfigMap/v1": [
                            "strimzi-cluster-operator"
                        ],
                        "CustomResourceDefinition.apiextensions.k8s.io/apiextensions.k8s.io/v1": [
                            "kafkabridges.kafka.strimzi.io",
                            "kafkaconnectors.kafka.strimzi.io",
                            "kafkaconnects.kafka.strimzi.io",
                            "kafkaconnects2is.kafka.strimzi.io",
                            "kafkamirrormaker2s.kafka.strimzi.io",
                            "kafkamirrormakers.kafka.strimzi.io",
                            "kafkarebalances.kafka.strimzi.io",
                            "kafkas.kafka.strimzi.io",
                            "kafkatopics.kafka.strimzi.io",
                            "kafkausers.kafka.strimzi.io"
                        ],
                        "Deployment.apps/apps/v1": [
                            "strimzi-cluster-operator"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "strimzi/strimzi-cluster-operator",
                            "strimzi/strimzi-cluster-operator-entity-operator-delegation",
                            "strimzi/strimzi-cluster-operator-topic-operator-delegation"
                        ],
                        "ServiceAccount/v1": [
                            "strimzi-cluster-operator"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        }
                    },
                    "verify": false,
                    "version": "0.23.0",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAHZD1wrAJyXXhT9+n6kfjeYo/bPhRs1m/lU8x/mg7m2Eo5dPRMCp6Xo7yq8U0ZEGgoSilItaDzI9PonBCH09PxNFiGkBAVAGNjQKBVurHAuDqZNVwzOYRx2DjxyfdxJUZ3ai5Fp67+TTcO3WSNyjGDyqmT9ugIZxyrmsCQJE2YRfAaVy50O8GCN3burKASYQ2d3t+xJT2rWldgpKMMo0iyXl/OweX2QCGWGqF9AEi1LnHuC6mFK3hBNZ6f+D5HtKT6NtrxF1fF9V12jXdKO3DRJTx0XcC3NDme7z0Xj9B0R1LunCWoi1O0xZruI1oPJnyEJFi2tdnXLQbc4CZO1mY3jZniwECQSIRWvCifzoTRYqPrJ8bMAc7peprIAPMym9wKDpofEgOgOzW0VaECs2w19iM8ENf/SYyBQSLc9se0dvKEuhTOBvtDAhsRgykDj4DuIiqmjtnBf8xlECdF64/96M8KYzG6QBMJHcbqzh0ZVIdJB7ALsBPOrSUkCzGcaNwAwL1FZUl7h6sVtmU9BlhixYQw7QlCEDanBS4D2GenlaASS1NS+6ARLvX4XMJXb/j51ADMhl2s3vTtEoQ/BbEMOHA0XfkljO+RMjCr41BnZsZcbc5G+9GHPibjgzBhFQnaHd2ZwG2ZST4b43BmzuV2lR2CaHPmHeVn0UfBJ9y/YQ8UFJjXbfOkgQg7i8ErLqVPamFkQodT92QuZ/k+OcyFN1fQqujvkgDXr/lwDPHzhodJrVN0NVnNMqWbYSro8eFQYgY04bP7OAhAFBRVR2OGYL9CNJfyDuS7fjN3P2gBR3BArHdKWfxO3Wh2Q/KZ/0ED2IMZTuXGn7aJkkg1jKeSzgVd5lOevLN8jl3edFEB6mWI3xaBuwXUikI1wyT1jKcTl1N+FJ4FBi8YmV/1TaXtv9LKfVtMQYqtzdlCJCtEnZmmQS/sUTCLls8NDAxRZw6O64rnV6S/mDs9gUCTUTzpKCr4nDrNthN6I/jh1acdJRndOezi/f8ZTk2SUIxEfx59iqnD0bvrFfChg4TDo0aw9nCQPoLWLNxHvXwlYoBkqvH2mZObhwCAM4ExNmr5zRHsfpxM0NjbgkUxVUpM3rPwpm+jxhiyifWeVP2sARJ8AkhM4TF7Kq4p/0w4p457A8i111h6md1xsGa0aK31Ohx1uDm/aEXyIJf0LcfdcFzF3CSpuko80Eoml9Eb+5S5KqUV3bQHIBGBBuhTHcQkUkTC/ZLqp+Lvd/N4RrtZKVOujFLBowb/5H1WSP0bnIFFBZSSHyOZBve+BG1StYVxD15QPKtcCjRhY0y9UVw+pchTw5eXBXpQ/CQ4VDwsp8Q3jt6jiW1g6k/lfVF/9GAq6KY0OcHXY/Ss89BwKQOWhGqH6zEm+tpqtt4BSUMsImobvaLfuOR14W4dpc00jG99tUVIKnpA++NJBj4kZtk4H6dZS2fsrzHCIzVcVyx8nRAxZk82nEvewDHHYCtVvpk60rBCNz/ejuLaROr+SErk1JRXr5bPFzyg0h3E2WS18m0BIWIrqSbL2tRlPYO3OwqQI5g8AbEoe8E+3+MPx1Xk+2tm+i3xdloG6HZKF0+5tM1Hlg+sReRW+ng24YuyZKssyVP9jkP7r9nZMZQIfarFbDrw6c6A87B06f24KkLHPLK5c/lbEEDf3Q312zp10a/3NR/uZDvzDOYsDA94ue76eFppeWroQalBdZwDHDQX9Hc4IvNNvey2d/wHO5mOybw7pzyenEX3fLFfscjaq9mJS9YGTvEJbJ5NU0frwDjrY9jjvzxuogK6otP/+ppQ4AYXdcmkP0gT6matMWy8WLGl3ejDoan3EdiTJCek2+vFsWztcY/SeaciIBngomX2PSFn5zjUBZvnBxXXW5+epIjTJr1ngXXyArVYKXaxz5mavBOHC+Wt3SkIB49BMvQFPiksmPk4RN2h5N/wfXB/kwgN7d3FKVS64Hty5koVQA2KjMU9e0UEX1vM4xAYMKJssnuRX2L1cZzv6rCYjbwnUIh2/bcPoGqUJdcqayFZiK4BTuXO/bNW3Ph92p9jD5bjKtYc0GL4Sr8XYDPmEIBCfpZHoFTdqvzNXzc8EGz8rQOND4Z9uG7l3nT5by39qryEoE0lRzNcM8B5scMaXNm8UPx/2gIqrOM4B192y6jHXj+5mjRO8izRQ2ugeaVV49U3Sqqpqy59jGlpubHrTy/J8JCC3T2jpyaXo+YaUBPUJSC+bXbo4Ip+Uy0WfNyaybhgAWhqKaCSYogaAA/3HMbwKR0iAR0AgLiAaDsVBy/cSqyqEO9tDL4J0JSDLzd1vJd2FIpAZoeKXYHb3s2uGLpxd0ORTTQE4ITiYOmOrn90nypTVkBKfJ6RRB9yilrCDCz5svIUfgOMRd8KGY/ij0mmHMNX16kuC6j4zHt+pGiwpFgAyRCANd7RKD8n6XPcV6y8AThpTQqNCgZVHqooy8Wru1uTlZ1p2jFQxd57QQXOYjufc7ArJ3IpJFLr1XfUM7cfZqgRCshBD2VeFJstbDmx3Ax+oSO2UgOxuKh8x/AuXjs3Eh2sovFKUcRgdKW730Wc85vCrn0VgyQIkD/1hsPrLZfvEMCP4LsBhZNz9Mfkh+ZXLpF5GAkhc61IsW8YYFGMye0r2xNxW6nxxi8lUNo6jLs6sZjdXbAgfTsQ9T"
                    },
                    "atomic": false,
                    "chart": "strimzi-kafka-operator",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "strimzi-brnhuehc",
                    "namespace": "strimzi",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://strimzi.io/charts/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "strimzi-cluster-operator-global",
                            "strimzi-cluster-operator-namespaced",
                            "strimzi-entity-operator",
                            "strimzi-kafka-broker",
                            "strimzi-kafka-client",
                            "strimzi-topic-operator"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "strimzi-cluster-operator",
                            "strimzi-cluster-operator-kafka-broker-delegation",
                            "strimzi-cluster-operator-kafka-client-delegation"
                        ],
                        "ConfigMap/v1": [
                            "strimzi-cluster-operator"
                        ],
                        "Deployment.apps/apps/v1": [
                            "strimzi-cluster-operator"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "strimzi/strimzi-cluster-operator",
                            "strimzi/strimzi-cluster-operator-entity-operator-delegation",
                            "strimzi/strimzi-cluster-operator-topic-operator-delegation"
                        ],
                        "ServiceAccount/v1": [
                            "strimzi-cluster-operator"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "0.23.0",
                        "chart": "strimzi-kafka-operator",
                        "name": "strimzi-brnhuehc",
                        "namespace": "strimzi",
                        "revision": 2,
                        "status": "deployed",
                        "version": "0.23.0"
                    },
                    "timeout": 300,
                    "values": {
                        "nodeSelector": {
                            "kubernetes.io/arch": "amd64"
                        }
                    },
                    "verify": false,
                    "version": "0.23.0",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:Namespace::strimzi-ns"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::strimzi-k8s-provider::244cf852-b895-43a4-a2e0-0bef1efc7ed7",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "namespace": [
                        "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:Namespace::strimzi-ns"
                    ],
                    "repositoryOpts": null,
                    "values": null,
                    "version": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:ConfigMap::cluster-info-configmap",
                "custom": true,
                "id": "amazon-cloudwatch/fluent-bit-cluster-info",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "cluster.name": "p-3-eks-cluster-eksCluster-fd821aa",
                        "http.port": "2020",
                        "http.server": "On",
                        "logs.region": "us-west-2",
                        "plane.id": "plane-3",
                        "read.head": "Off",
                        "read.tail": "On"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "fluent-bit-cluster-info",
                        "namespace": "amazon-cloudwatch"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "cluster.name": "p-3-eks-cluster-eksCluster-fd821aa",
                            "http.port": "2020",
                            "http.server": "On",
                            "logs.region": "us-west-2",
                            "plane.id": "plane-3",
                            "read.head": "Off",
                            "read.tail": "On"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "fluent-bit-cluster-info",
                            "namespace": "amazon-cloudwatch"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "cluster.name": "p-3-eks-cluster-eksCluster-fd821aa",
                        "http.port": "2020",
                        "http.server": "On",
                        "logs.region": "us-west-2",
                        "plane.id": "plane-3",
                        "read.head": "Off",
                        "read.tail": "On"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"cluster.name\":\"p-3-eks-cluster-eksCluster-fd821aa\",\"http.port\":\"2020\",\"http.server\":\"On\",\"logs.region\":\"us-west-2\",\"plane.id\":\"plane-3\",\"read.head\":\"Off\",\"read.tail\":\"On\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"fluent-bit-cluster-info\",\"namespace\":\"amazon-cloudwatch\"}}\n"
                        },
                        "creationTimestamp": "2022-08-09T20:02:13Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:cluster.name": {},
                                        "f:http.port": {},
                                        "f:http.server": {},
                                        "f:logs.region": {},
                                        "f:plane.id": {},
                                        "f:read.head": {},
                                        "f:read.tail": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-09T20:02:13Z"
                            }
                        ],
                        "name": "fluent-bit-cluster-info",
                        "namespace": "amazon-cloudwatch",
                        "resourceVersion": "50365139",
                        "uid": "5f590768-6ecc-4191-8338-5872c18cb499"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:Namespace::cloudwatch-ns",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ],
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:Namespace::cloudwatch-ns"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:Service::nitrous-svc",
                "custom": true,
                "id": "fennel/nitrous",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "labels": {
                            "app": "nitrous",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "nitrous",
                        "namespace": "fennel"
                    },
                    "spec": {
                        "ports": [
                            {
                                "port": 3333,
                                "protocol": "TCP",
                                "targetPort": 3333
                            }
                        ],
                        "selector": {
                            "app": "nitrous"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app": "nitrous",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "nitrous",
                            "namespace": "fennel"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "port": 3333,
                                    "protocol": "TCP",
                                    "targetPort": 3333
                                }
                            ],
                            "selector": {
                                "app": "nitrous"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"labels\":{\"app\":\"nitrous\",\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"nitrous\",\"namespace\":\"fennel\"},\"spec\":{\"ports\":[{\"port\":3333,\"protocol\":\"TCP\",\"targetPort\":3333}],\"selector\":{\"app\":\"nitrous\"},\"type\":\"ClusterIP\"}}\n"
                        },
                        "creationTimestamp": "2022-08-31T16:26:54Z",
                        "labels": {
                            "app": "nitrous",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:internalTrafficPolicy": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"port\":3333,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:sessionAffinity": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-31T16:26:54Z"
                            }
                        ],
                        "name": "nitrous",
                        "namespace": "fennel",
                        "resourceVersion": "60348362",
                        "uid": "3cfb9327-20de-4470-b40b-d7222fb21517"
                    },
                    "spec": {
                        "clusterIP": "172.20.114.158",
                        "clusterIPs": [
                            "172.20.114.158"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "port": 3333,
                                "protocol": "TCP",
                                "targetPort": 3333
                            }
                        ],
                        "selector": {
                            "app": "nitrous"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::nitrous-k8s-provider::d40ef660-db74-45d0-94d4-f8711e540642",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "custom": false,
                "type": "kubernetes:yaml:ConfigFile",
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:ConfigMap::cluster-info-configmap"
                ]
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ServiceAccount::amazon-cloudwatch/fluent-bit",
                "custom": true,
                "id": "amazon-cloudwatch/fluent-bit",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "fluent-bit",
                        "namespace": "amazon-cloudwatch"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "fluent-bit",
                            "namespace": "amazon-cloudwatch"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"fluent-bit\",\"namespace\":\"amazon-cloudwatch\"}}\n"
                        },
                        "creationTimestamp": "2022-08-09T20:02:21Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"fluent-bit-token-72rx6\"}": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-08-09T20:02:21Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-09T20:02:21Z"
                            }
                        ],
                        "name": "fluent-bit",
                        "namespace": "amazon-cloudwatch",
                        "resourceVersion": "50365294",
                        "uid": "b2c6efc3-b05b-4ae7-9a6f-7e66d47d4801"
                    },
                    "secrets": [
                        {
                            "name": "fluent-bit-token-72rx6"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::fluent-bit-role",
                "custom": true,
                "id": "fluent-bit-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "fluent-bit-role"
                    },
                    "rules": [
                        {
                            "nonResourceURLs": [
                                "/metrics"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "namespaces",
                                "pods",
                                "pods/logs"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "fluent-bit-role"
                        },
                        "rules": [
                            {
                                "nonResourceURLs": [
                                    "/metrics"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces",
                                    "pods",
                                    "pods/logs"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"fluent-bit-role\"},\"rules\":[{\"nonResourceURLs\":[\"/metrics\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"namespaces\",\"pods\",\"pods/logs\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                        },
                        "creationTimestamp": "2022-08-09T20:02:21Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-09T20:02:21Z"
                            }
                        ],
                        "name": "fluent-bit-role",
                        "resourceVersion": "50365254",
                        "uid": "9ba53446-3a9b-4610-87f0-f80ccd2680d1"
                    },
                    "rules": [
                        {
                            "nonResourceURLs": [
                                "/metrics"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "namespaces",
                                "pods",
                                "pods/logs"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ConfigMap::amazon-cloudwatch/fluent-bit-config",
                "custom": true,
                "id": "amazon-cloudwatch/fluent-bit-config",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "application-log.conf": "[INPUT]\n    Name                tail\n    Tag                 application.*\n    Exclude_Path        /var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*, /var/log/containers/milvus*, /var/log/containers/linkerd*, /var/log/containers/otel-collector*, /var/log/containers/emissary*,\n    Path                /var/log/containers/*.log\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_container.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 application.*\n    Path                /var/log/containers/cloudwatch-agent*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  cwagent_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_cwagent.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    name                  multiline\n    match                 *\n    multiline.key_content log\n    multiline.parser      go\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               application.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/application\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n    log_key             log\n    log_format          json\n",
                        "dataplane-log.conf": "[INPUT]\n    Name                systemd\n    Tag                 dataplane.systemd.*\n    Systemd_Filter      _SYSTEMD_UNIT=docker.service\n    Systemd_Filter      _SYSTEMD_UNIT=kubelet.service\n    DB                  /var/fluent-bit/state/systemd.db\n    Path                /var/log/journal\n    Read_From_Tail      ${READ_FROM_TAIL}\n\n[INPUT]\n    Name                tail\n    Tag                 dataplane.tail.*\n    Path                /var/log/containers/aws-node*, /var/log/containers/kube-proxy*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_dataplane_tail.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                modify\n    Match               dataplane.systemd.*\n    Rename              _HOSTNAME                   hostname\n    Rename              _SYSTEMD_UNIT               systemd_unit\n    Rename              MESSAGE                     message\n    Remove_regex        ^((?!hostname|systemd_unit|message).)*$\n\n[FILTER]\n    Name                aws\n    Match               dataplane.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               dataplane.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/dataplane\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                        "fluent-bit.conf": "[SERVICE]\n    Flush                     5\n    Log_Level                 info\n    Daemon                    off\n    Parsers_File              parsers.conf\n    HTTP_Server               ${HTTP_SERVER}\n    HTTP_Listen               0.0.0.0\n    HTTP_Port                 ${HTTP_PORT}\n    storage.path              /var/fluent-bit/state/flb-storage/\n    storage.sync              normal\n    storage.checksum          off\n    storage.backlog.mem_limit 5M\n    \n@INCLUDE application-log.conf\n@INCLUDE dataplane-log.conf\n@INCLUDE host-log.conf\n",
                        "host-log.conf": "[INPUT]\n    Name                tail\n    Tag                 host.dmesg\n    Path                /var/log/dmesg\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_dmesg.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.messages\n    Path                /var/log/messages\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_messages.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.secure\n    Path                /var/log/secure\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_secure.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                aws\n    Match               host.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               host.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/host\n    log_stream_prefix   ${HOST_NAME}.\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                        "parsers.conf": "[PARSER]\n    Name                docker\n    Format              json\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                syslog\n    Format              regex\n    Regex               ^(?\u003ctime\u003e[^ ]* {1,2}[^ ]* [^ ]*) (?\u003chost\u003e[^ ]*) (?\u003cident\u003e[a-zA-Z0-9_\\/\\.\\-]*)(?:\\[(?\u003cpid\u003e[0-9]+)\\])?(?:[^\\:]*\\:)? *(?\u003cmessage\u003e.*)$\n    Time_Key            time\n    Time_Format         %b %d %H:%M:%S\n\n[PARSER]\n    Name                container_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\S(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                cwagent_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\d{4}[\\/-]\\d{1,2}[\\/-]\\d{1,2}[ T]\\d{2}:\\d{2}:\\d{2}(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "k8s-app": "fluent-bit"
                        },
                        "name": "fluent-bit-config",
                        "namespace": "amazon-cloudwatch"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "application-log.conf": "[INPUT]\n    Name                tail\n    Tag                 application.*\n    Exclude_Path        /var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*, /var/log/containers/milvus*, /var/log/containers/linkerd*, /var/log/containers/otel-collector*, /var/log/containers/emissary*,\n    Path                /var/log/containers/*.log\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_container.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 application.*\n    Path                /var/log/containers/cloudwatch-agent*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  cwagent_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_cwagent.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    name                  multiline\n    match                 *\n    multiline.key_content log\n    multiline.parser      go\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               application.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/application\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n    log_key             log\n    log_format          json\n",
                            "dataplane-log.conf": "[INPUT]\n    Name                systemd\n    Tag                 dataplane.systemd.*\n    Systemd_Filter      _SYSTEMD_UNIT=docker.service\n    Systemd_Filter      _SYSTEMD_UNIT=kubelet.service\n    DB                  /var/fluent-bit/state/systemd.db\n    Path                /var/log/journal\n    Read_From_Tail      ${READ_FROM_TAIL}\n\n[INPUT]\n    Name                tail\n    Tag                 dataplane.tail.*\n    Path                /var/log/containers/aws-node*, /var/log/containers/kube-proxy*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_dataplane_tail.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                modify\n    Match               dataplane.systemd.*\n    Rename              _HOSTNAME                   hostname\n    Rename              _SYSTEMD_UNIT               systemd_unit\n    Rename              MESSAGE                     message\n    Remove_regex        ^((?!hostname|systemd_unit|message).)*$\n\n[FILTER]\n    Name                aws\n    Match               dataplane.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               dataplane.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/dataplane\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                            "fluent-bit.conf": "[SERVICE]\n    Flush                     5\n    Log_Level                 info\n    Daemon                    off\n    Parsers_File              parsers.conf\n    HTTP_Server               ${HTTP_SERVER}\n    HTTP_Listen               0.0.0.0\n    HTTP_Port                 ${HTTP_PORT}\n    storage.path              /var/fluent-bit/state/flb-storage/\n    storage.sync              normal\n    storage.checksum          off\n    storage.backlog.mem_limit 5M\n    \n@INCLUDE application-log.conf\n@INCLUDE dataplane-log.conf\n@INCLUDE host-log.conf\n",
                            "host-log.conf": "[INPUT]\n    Name                tail\n    Tag                 host.dmesg\n    Path                /var/log/dmesg\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_dmesg.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.messages\n    Path                /var/log/messages\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_messages.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.secure\n    Path                /var/log/secure\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_secure.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                aws\n    Match               host.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               host.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/host\n    log_stream_prefix   ${HOST_NAME}.\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                            "parsers.conf": "[PARSER]\n    Name                docker\n    Format              json\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                syslog\n    Format              regex\n    Regex               ^(?\u003ctime\u003e[^ ]* {1,2}[^ ]* [^ ]*) (?\u003chost\u003e[^ ]*) (?\u003cident\u003e[a-zA-Z0-9_\\/\\.\\-]*)(?:\\[(?\u003cpid\u003e[0-9]+)\\])?(?:[^\\:]*\\:)? *(?\u003cmessage\u003e.*)$\n    Time_Key            time\n    Time_Format         %b %d %H:%M:%S\n\n[PARSER]\n    Name                container_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\S(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                cwagent_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\d{4}[\\/-]\\d{1,2}[\\/-]\\d{1,2}[ T]\\d{2}:\\d{2}:\\d{2}(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "k8s-app": "fluent-bit"
                            },
                            "name": "fluent-bit-config",
                            "namespace": "amazon-cloudwatch"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "application-log.conf": "[INPUT]\n    Name                tail\n    Tag                 application.*\n    Exclude_Path        /var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*, /var/log/containers/milvus*, /var/log/containers/linkerd*, /var/log/containers/otel-collector*, /var/log/containers/emissary*,\n    Path                /var/log/containers/*.log\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_container.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 application.*\n    Path                /var/log/containers/cloudwatch-agent*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  cwagent_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_cwagent.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    name                  multiline\n    match                 *\n    multiline.key_content log\n    multiline.parser      go\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               application.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/application\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n    log_key             log\n    log_format          json\n",
                        "dataplane-log.conf": "[INPUT]\n    Name                systemd\n    Tag                 dataplane.systemd.*\n    Systemd_Filter      _SYSTEMD_UNIT=docker.service\n    Systemd_Filter      _SYSTEMD_UNIT=kubelet.service\n    DB                  /var/fluent-bit/state/systemd.db\n    Path                /var/log/journal\n    Read_From_Tail      ${READ_FROM_TAIL}\n\n[INPUT]\n    Name                tail\n    Tag                 dataplane.tail.*\n    Path                /var/log/containers/aws-node*, /var/log/containers/kube-proxy*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_dataplane_tail.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                modify\n    Match               dataplane.systemd.*\n    Rename              _HOSTNAME                   hostname\n    Rename              _SYSTEMD_UNIT               systemd_unit\n    Rename              MESSAGE                     message\n    Remove_regex        ^((?!hostname|systemd_unit|message).)*$\n\n[FILTER]\n    Name                aws\n    Match               dataplane.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               dataplane.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/dataplane\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                        "fluent-bit.conf": "[SERVICE]\n    Flush                     5\n    Log_Level                 info\n    Daemon                    off\n    Parsers_File              parsers.conf\n    HTTP_Server               ${HTTP_SERVER}\n    HTTP_Listen               0.0.0.0\n    HTTP_Port                 ${HTTP_PORT}\n    storage.path              /var/fluent-bit/state/flb-storage/\n    storage.sync              normal\n    storage.checksum          off\n    storage.backlog.mem_limit 5M\n    \n@INCLUDE application-log.conf\n@INCLUDE dataplane-log.conf\n@INCLUDE host-log.conf\n",
                        "host-log.conf": "[INPUT]\n    Name                tail\n    Tag                 host.dmesg\n    Path                /var/log/dmesg\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_dmesg.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.messages\n    Path                /var/log/messages\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_messages.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.secure\n    Path                /var/log/secure\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_secure.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                aws\n    Match               host.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               host.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/host\n    log_stream_prefix   ${HOST_NAME}.\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                        "parsers.conf": "[PARSER]\n    Name                docker\n    Format              json\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                syslog\n    Format              regex\n    Regex               ^(?\u003ctime\u003e[^ ]* {1,2}[^ ]* [^ ]*) (?\u003chost\u003e[^ ]*) (?\u003cident\u003e[a-zA-Z0-9_\\/\\.\\-]*)(?:\\[(?\u003cpid\u003e[0-9]+)\\])?(?:[^\\:]*\\:)? *(?\u003cmessage\u003e.*)$\n    Time_Key            time\n    Time_Format         %b %d %H:%M:%S\n\n[PARSER]\n    Name                container_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\S(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                cwagent_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\d{4}[\\/-]\\d{1,2}[\\/-]\\d{1,2}[ T]\\d{2}:\\d{2}:\\d{2}(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"application-log.conf\":\"[INPUT]\\n    Name                tail\\n    Tag                 application.*\\n    Exclude_Path        /var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*, /var/log/containers/milvus*, /var/log/containers/linkerd*, /var/log/containers/otel-collector*, /var/log/containers/emissary*,\\n    Path                /var/log/containers/*.log\\n    Docker_Mode         On\\n    Docker_Mode_Flush   5\\n    Docker_Mode_Parser  container_firstline\\n    Parser              docker\\n    DB                  /var/fluent-bit/state/flb_container.db\\n    Mem_Buf_Limit       50MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Rotate_Wait         30\\n    storage.type        filesystem\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[INPUT]\\n    Name                tail\\n    Tag                 application.*\\n    Path                /var/log/containers/cloudwatch-agent*\\n    Docker_Mode         On\\n    Docker_Mode_Flush   5\\n    Docker_Mode_Parser  cwagent_firstline\\n    Parser              docker\\n    DB                  /var/fluent-bit/state/flb_cwagent.db\\n    Mem_Buf_Limit       5MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[FILTER]\\n    name                  multiline\\n    match                 *\\n    multiline.key_content log\\n    multiline.parser      go\\n\\n[OUTPUT]\\n    Name                cloudwatch_logs\\n    Match               application.*\\n    region              ${AWS_REGION}\\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/application\\n    log_stream_prefix   from-fluent-bit-\\n    auto_create_group   true\\n    extra_user_agent    container-insights\\n    log_retention_days  5\\n    log_key             log\\n    log_format          json\\n\",\"dataplane-log.conf\":\"[INPUT]\\n    Name                systemd\\n    Tag                 dataplane.systemd.*\\n    Systemd_Filter      _SYSTEMD_UNIT=docker.service\\n    Systemd_Filter      _SYSTEMD_UNIT=kubelet.service\\n    DB                  /var/fluent-bit/state/systemd.db\\n    Path                /var/log/journal\\n    Read_From_Tail      ${READ_FROM_TAIL}\\n\\n[INPUT]\\n    Name                tail\\n    Tag                 dataplane.tail.*\\n    Path                /var/log/containers/aws-node*, /var/log/containers/kube-proxy*\\n    Docker_Mode         On\\n    Docker_Mode_Flush   5\\n    Docker_Mode_Parser  container_firstline\\n    Parser              docker\\n    DB                  /var/fluent-bit/state/flb_dataplane_tail.db\\n    Mem_Buf_Limit       50MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Rotate_Wait         30\\n    storage.type        filesystem\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[FILTER]\\n    Name                modify\\n    Match               dataplane.systemd.*\\n    Rename              _HOSTNAME                   hostname\\n    Rename              _SYSTEMD_UNIT               systemd_unit\\n    Rename              MESSAGE                     message\\n    Remove_regex        ^((?!hostname|systemd_unit|message).)*$\\n\\n[FILTER]\\n    Name                aws\\n    Match               dataplane.*\\n    imds_version        v1\\n\\n[OUTPUT]\\n    Name                cloudwatch_logs\\n    Match               dataplane.*\\n    region              ${AWS_REGION}\\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/dataplane\\n    log_stream_prefix   from-fluent-bit-\\n    auto_create_group   true\\n    extra_user_agent    container-insights\\n    log_retention_days  5\\n\",\"fluent-bit.conf\":\"[SERVICE]\\n    Flush                     5\\n    Log_Level                 info\\n    Daemon                    off\\n    Parsers_File              parsers.conf\\n    HTTP_Server               ${HTTP_SERVER}\\n    HTTP_Listen               0.0.0.0\\n    HTTP_Port                 ${HTTP_PORT}\\n    storage.path              /var/fluent-bit/state/flb-storage/\\n    storage.sync              normal\\n    storage.checksum          off\\n    storage.backlog.mem_limit 5M\\n    \\n@INCLUDE application-log.conf\\n@INCLUDE dataplane-log.conf\\n@INCLUDE host-log.conf\\n\",\"host-log.conf\":\"[INPUT]\\n    Name                tail\\n    Tag                 host.dmesg\\n    Path                /var/log/dmesg\\n    Parser              syslog\\n    DB                  /var/fluent-bit/state/flb_dmesg.db\\n    Mem_Buf_Limit       5MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[INPUT]\\n    Name                tail\\n    Tag                 host.messages\\n    Path                /var/log/messages\\n    Parser              syslog\\n    DB                  /var/fluent-bit/state/flb_messages.db\\n    Mem_Buf_Limit       5MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[INPUT]\\n    Name                tail\\n    Tag                 host.secure\\n    Path                /var/log/secure\\n    Parser              syslog\\n    DB                  /var/fluent-bit/state/flb_secure.db\\n    Mem_Buf_Limit       5MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[FILTER]\\n    Name                aws\\n    Match               host.*\\n    imds_version        v1\\n\\n[OUTPUT]\\n    Name                cloudwatch_logs\\n    Match               host.*\\n    region              ${AWS_REGION}\\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/host\\n    log_stream_prefix   ${HOST_NAME}.\\n    auto_create_group   true\\n    extra_user_agent    container-insights\\n    log_retention_days  5\\n\",\"parsers.conf\":\"[PARSER]\\n    Name                docker\\n    Format              json\\n    Time_Key            time\\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\\n\\n[PARSER]\\n    Name                syslog\\n    Format              regex\\n    Regex               ^(?\\u003ctime\\u003e[^ ]* {1,2}[^ ]* [^ ]*) (?\\u003chost\\u003e[^ ]*) (?\\u003cident\\u003e[a-zA-Z0-9_\\\\/\\\\.\\\\-]*)(?:\\\\[(?\\u003cpid\\u003e[0-9]+)\\\\])?(?:[^\\\\:]*\\\\:)? *(?\\u003cmessage\\u003e.*)$\\n    Time_Key            time\\n    Time_Format         %b %d %H:%M:%S\\n\\n[PARSER]\\n    Name                container_firstline\\n    Format              regex\\n    Regex               (?\\u003clog\\u003e(?\\u003c=\\\"log\\\":\\\")\\\\S(?!\\\\.).*?)(?\\u003c!\\\\\\\\)\\\".*(?\\u003cstream\\u003e(?\\u003c=\\\"stream\\\":\\\").*?)\\\".*(?\\u003ctime\\u003e\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\w*).*(?=})\\n    Time_Key            time\\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\\n\\n[PARSER]\\n    Name                cwagent_firstline\\n    Format              regex\\n    Regex               (?\\u003clog\\u003e(?\\u003c=\\\"log\\\":\\\")\\\\d{4}[\\\\/-]\\\\d{1,2}[\\\\/-]\\\\d{1,2}[ T]\\\\d{2}:\\\\d{2}:\\\\d{2}(?!\\\\.).*?)(?\\u003c!\\\\\\\\)\\\".*(?\\u003cstream\\u003e(?\\u003c=\\\"stream\\\":\\\").*?)\\\".*(?\\u003ctime\\u003e\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\w*).*(?=})\\n    Time_Key            time\\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"k8s-app\":\"fluent-bit\"},\"name\":\"fluent-bit-config\",\"namespace\":\"amazon-cloudwatch\"}}\n"
                        },
                        "creationTimestamp": "2022-08-09T20:02:20Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "k8s-app": "fluent-bit"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:application-log.conf": {},
                                        "f:dataplane-log.conf": {},
                                        "f:fluent-bit.conf": {},
                                        "f:host-log.conf": {},
                                        "f:parsers.conf": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:k8s-app": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-09T20:02:20Z"
                            }
                        ],
                        "name": "fluent-bit-config",
                        "namespace": "amazon-cloudwatch",
                        "resourceVersion": "50365246",
                        "uid": "c166cd95-45c1-4866-920f-ddb25e932a8e"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::fluent-bit-role-binding",
                "custom": true,
                "id": "fluent-bit-role-binding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "fluent-bit-role-binding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "fluent-bit-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "fluent-bit",
                            "namespace": "amazon-cloudwatch"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "fluent-bit-role-binding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "fluent-bit-role"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "fluent-bit",
                                "namespace": "amazon-cloudwatch"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"fluent-bit-role-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"fluent-bit-role\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"fluent-bit\",\"namespace\":\"amazon-cloudwatch\"}]}\n"
                        },
                        "creationTimestamp": "2022-08-09T20:02:21Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:roleRef": {},
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-09T20:02:21Z"
                            }
                        ],
                        "name": "fluent-bit-role-binding",
                        "resourceVersion": "50365304",
                        "uid": "c16f3195-4cfd-4cc3-9cb7-7566f607a777"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "fluent-bit-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "fluent-bit",
                            "namespace": "amazon-cloudwatch"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apps/v1:DaemonSet::amazon-cloudwatch/fluent-bit",
                "custom": true,
                "id": "amazon-cloudwatch/fluent-bit",
                "type": "kubernetes:apps/v1:DaemonSet",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "DaemonSet",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "k8s-app": "fluent-bit",
                            "kubernetes.io/cluster-service": "true",
                            "version": "v1"
                        },
                        "name": "fluent-bit",
                        "namespace": "amazon-cloudwatch"
                    },
                    "spec": {
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "fluent-bit"
                            }
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "k8s-app": "fluent-bit",
                                    "kubernetes.io/cluster-service": "true",
                                    "version": "v1"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "AWS_REGION",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "logs.region",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "CLUSTER_NAME",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "cluster.name",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PLANE_ID",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "plane.id",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HTTP_SERVER",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "http.server",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HTTP_PORT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "http.port",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "READ_FROM_HEAD",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "read.head",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "READ_FROM_TAIL",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "read.tail",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "CI_VERSION",
                                                "value": "k8s/1.3.8"
                                            }
                                        ],
                                        "image": "amazon/aws-for-fluent-bit:2.22.0",
                                        "imagePullPolicy": "Always",
                                        "name": "fluent-bit",
                                        "resources": {
                                            "limits": {
                                                "memory": "200Mi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "100Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/fluent-bit/state",
                                                "name": "fluentbitstate"
                                            },
                                            {
                                                "mountPath": "/var/log",
                                                "name": "varlog",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/lib/docker/containers",
                                                "name": "varlibdockercontainers",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/fluent-bit/etc/",
                                                "name": "fluent-bit-config"
                                            },
                                            {
                                                "mountPath": "/run/log/journal",
                                                "name": "runlogjournal",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/log/dmesg",
                                                "name": "dmesg",
                                                "readOnly": true
                                            }
                                        ]
                                    }
                                ],
                                "serviceAccountName": "fluent-bit",
                                "terminationGracePeriodSeconds": 10,
                                "tolerations": [
                                    {
                                        "effect": "NoSchedule",
                                        "key": "node-role.kubernetes.io/master",
                                        "operator": "Exists"
                                    },
                                    {
                                        "effect": "NoExecute",
                                        "operator": "Exists"
                                    },
                                    {
                                        "effect": "NoSchedule",
                                        "operator": "Exists"
                                    }
                                ],
                                "volumes": [
                                    {
                                        "hostPath": {
                                            "path": "/var/fluent-bit/state"
                                        },
                                        "name": "fluentbitstate"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/log"
                                        },
                                        "name": "varlog"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/lib/docker/containers"
                                        },
                                        "name": "varlibdockercontainers"
                                    },
                                    {
                                        "configMap": {
                                            "name": "fluent-bit-config"
                                        },
                                        "name": "fluent-bit-config"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/run/log/journal"
                                        },
                                        "name": "runlogjournal"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/log/dmesg"
                                        },
                                        "name": "dmesg"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "k8s-app": "fluent-bit",
                                "kubernetes.io/cluster-service": "true",
                                "version": "v1"
                            },
                            "name": "fluent-bit",
                            "namespace": "amazon-cloudwatch"
                        },
                        "spec": {
                            "selector": {
                                "matchLabels": {
                                    "k8s-app": "fluent-bit"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "k8s-app": "fluent-bit",
                                        "kubernetes.io/cluster-service": "true",
                                        "version": "v1"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "env": [
                                                {
                                                    "name": "AWS_REGION",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "logs.region",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "CLUSTER_NAME",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "cluster.name",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "PLANE_ID",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "plane.id",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "HTTP_SERVER",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "http.server",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "HTTP_PORT",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "http.port",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "READ_FROM_HEAD",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "read.head",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "READ_FROM_TAIL",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "read.tail",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "HOST_NAME",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.nodeName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "CI_VERSION",
                                                    "value": "k8s/1.3.8"
                                                }
                                            ],
                                            "image": "amazon/aws-for-fluent-bit:2.22.0",
                                            "imagePullPolicy": "Always",
                                            "name": "fluent-bit",
                                            "resources": {
                                                "limits": {
                                                    "memory": "200Mi"
                                                },
                                                "requests": {
                                                    "cpu": "500m",
                                                    "memory": "100Mi"
                                                }
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/fluent-bit/state",
                                                    "name": "fluentbitstate"
                                                },
                                                {
                                                    "mountPath": "/var/log",
                                                    "name": "varlog",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/var/lib/docker/containers",
                                                    "name": "varlibdockercontainers",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/fluent-bit/etc/",
                                                    "name": "fluent-bit-config"
                                                },
                                                {
                                                    "mountPath": "/run/log/journal",
                                                    "name": "runlogjournal",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/var/log/dmesg",
                                                    "name": "dmesg",
                                                    "readOnly": true
                                                }
                                            ]
                                        }
                                    ],
                                    "serviceAccountName": "fluent-bit",
                                    "terminationGracePeriodSeconds": 10,
                                    "tolerations": [
                                        {
                                            "effect": "NoSchedule",
                                            "key": "node-role.kubernetes.io/master",
                                            "operator": "Exists"
                                        },
                                        {
                                            "effect": "NoExecute",
                                            "operator": "Exists"
                                        },
                                        {
                                            "effect": "NoSchedule",
                                            "operator": "Exists"
                                        }
                                    ],
                                    "volumes": [
                                        {
                                            "hostPath": {
                                                "path": "/var/fluent-bit/state"
                                            },
                                            "name": "fluentbitstate"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/log"
                                            },
                                            "name": "varlog"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/lib/docker/containers"
                                            },
                                            "name": "varlibdockercontainers"
                                        },
                                        {
                                            "configMap": {
                                                "name": "fluent-bit-config"
                                            },
                                            "name": "fluent-bit-config"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/run/log/journal"
                                            },
                                            "name": "runlogjournal"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/log/dmesg"
                                            },
                                            "name": "dmesg"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "DaemonSet",
                    "metadata": {
                        "annotations": {
                            "deprecated.daemonset.template.generation": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"k8s-app\":\"fluent-bit\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v1\"},\"name\":\"fluent-bit\",\"namespace\":\"amazon-cloudwatch\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"fluent-bit\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"fluent-bit\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v1\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"AWS_REGION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"logs.region\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"CLUSTER_NAME\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"cluster.name\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"PLANE_ID\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"plane.id\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"HTTP_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"http.server\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"HTTP_PORT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"http.port\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"READ_FROM_HEAD\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"read.head\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"READ_FROM_TAIL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"read.tail\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"HOST_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"CI_VERSION\",\"value\":\"k8s/1.3.8\"}],\"image\":\"amazon/aws-for-fluent-bit:2.22.0\",\"imagePullPolicy\":\"Always\",\"name\":\"fluent-bit\",\"resources\":{\"limits\":{\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/var/fluent-bit/state\",\"name\":\"fluentbitstate\"},{\"mountPath\":\"/var/log\",\"name\":\"varlog\",\"readOnly\":true},{\"mountPath\":\"/var/lib/docker/containers\",\"name\":\"varlibdockercontainers\",\"readOnly\":true},{\"mountPath\":\"/fluent-bit/etc/\",\"name\":\"fluent-bit-config\"},{\"mountPath\":\"/run/log/journal\",\"name\":\"runlogjournal\",\"readOnly\":true},{\"mountPath\":\"/var/log/dmesg\",\"name\":\"dmesg\",\"readOnly\":true}]}],\"serviceAccountName\":\"fluent-bit\",\"terminationGracePeriodSeconds\":10,\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/fluent-bit/state\"},\"name\":\"fluentbitstate\"},{\"hostPath\":{\"path\":\"/var/log\"},\"name\":\"varlog\"},{\"hostPath\":{\"path\":\"/var/lib/docker/containers\"},\"name\":\"varlibdockercontainers\"},{\"configMap\":{\"name\":\"fluent-bit-config\"},\"name\":\"fluent-bit-config\"},{\"hostPath\":{\"path\":\"/run/log/journal\"},\"name\":\"runlogjournal\"},{\"hostPath\":{\"path\":\"/var/log/dmesg\"},\"name\":\"dmesg\"}]}}}}\n"
                        },
                        "creationTimestamp": "2022-08-09T20:02:21Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "k8s-app": "fluent-bit",
                            "kubernetes.io/cluster-service": "true",
                            "version": "v1"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:deprecated.daemonset.template.generation": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:k8s-app": {},
                                            "f:kubernetes.io/cluster-service": {},
                                            "f:version": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    ".": {},
                                                    "f:k8s-app": {},
                                                    "f:kubernetes.io/cluster-service": {},
                                                    "f:version": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"fluent-bit\"}": {
                                                        ".": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"AWS_REGION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"CI_VERSION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"CLUSTER_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"HOST_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"HTTP_PORT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"HTTP_SERVER\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"PLANE_ID\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"READ_FROM_HEAD\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"READ_FROM_TAIL\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {}
                                                                }
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/fluent-bit/etc/\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/run/log/journal\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/fluent-bit/state\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/lib/docker/containers\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/log\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/log/dmesg\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:tolerations": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"dmesg\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"fluent-bit-config\"}": {
                                                        ".": {},
                                                        "f:configMap": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:name": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"fluentbitstate\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"runlogjournal\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"varlibdockercontainers\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"varlog\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:updateStrategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-09T20:02:21Z"
                            }
                        ],
                        "name": "fluent-bit",
                        "namespace": "amazon-cloudwatch",
                        "resourceVersion": "50365311",
                        "uid": "1e660f88-29c0-40c3-b0f0-4ea990fb90c2"
                    },
                    "spec": {
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "fluent-bit"
                            }
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "k8s-app": "fluent-bit",
                                    "kubernetes.io/cluster-service": "true",
                                    "version": "v1"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "AWS_REGION",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "logs.region",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "CLUSTER_NAME",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "cluster.name",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PLANE_ID",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "plane.id",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HTTP_SERVER",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "http.server",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HTTP_PORT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "http.port",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "READ_FROM_HEAD",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "read.head",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "READ_FROM_TAIL",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "read.tail",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "CI_VERSION",
                                                "value": "k8s/1.3.8"
                                            }
                                        ],
                                        "image": "amazon/aws-for-fluent-bit:2.22.0",
                                        "imagePullPolicy": "Always",
                                        "name": "fluent-bit",
                                        "resources": {
                                            "limits": {
                                                "memory": "200Mi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "100Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/fluent-bit/state",
                                                "name": "fluentbitstate"
                                            },
                                            {
                                                "mountPath": "/var/log",
                                                "name": "varlog",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/lib/docker/containers",
                                                "name": "varlibdockercontainers",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/fluent-bit/etc/",
                                                "name": "fluent-bit-config"
                                            },
                                            {
                                                "mountPath": "/run/log/journal",
                                                "name": "runlogjournal",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/log/dmesg",
                                                "name": "dmesg",
                                                "readOnly": true
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "fluent-bit",
                                "serviceAccountName": "fluent-bit",
                                "terminationGracePeriodSeconds": 10,
                                "tolerations": [
                                    {
                                        "effect": "NoSchedule",
                                        "key": "node-role.kubernetes.io/master",
                                        "operator": "Exists"
                                    },
                                    {
                                        "effect": "NoExecute",
                                        "operator": "Exists"
                                    },
                                    {
                                        "effect": "NoSchedule",
                                        "operator": "Exists"
                                    }
                                ],
                                "volumes": [
                                    {
                                        "hostPath": {
                                            "path": "/var/fluent-bit/state",
                                            "type": ""
                                        },
                                        "name": "fluentbitstate"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/log",
                                            "type": ""
                                        },
                                        "name": "varlog"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/lib/docker/containers",
                                            "type": ""
                                        },
                                        "name": "varlibdockercontainers"
                                    },
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "name": "fluent-bit-config"
                                        },
                                        "name": "fluent-bit-config"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/run/log/journal",
                                            "type": ""
                                        },
                                        "name": "runlogjournal"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/log/dmesg",
                                            "type": ""
                                        },
                                        "name": "dmesg"
                                    }
                                ]
                            }
                        },
                        "updateStrategy": {
                            "rollingUpdate": {
                                "maxSurge": 0,
                                "maxUnavailable": 1
                            },
                            "type": "RollingUpdate"
                        }
                    },
                    "status": {
                        "currentNumberScheduled": 0,
                        "desiredNumberScheduled": 0,
                        "numberMisscheduled": 0,
                        "numberReady": 0
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:apps/v1:Deployment::model-monitoring-deployment",
                "custom": true,
                "id": "fennel/model-monitoring",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "model-monitoring",
                        "namespace": "fennel"
                    },
                    "spec": {
                        "selector": {
                            "matchLabels": {
                                "app": "model-monitoring"
                            }
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/inject": "disabled",
                                    "prometheus.io/port": "8112",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "model-monitoring"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "--metrics_port=8112"
                                        ],
                                        "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-model-monitoring-repo-c78e5db:2380e31f-6b4de8fc-f2be-4c48-81e8-f598758bd26f",
                                        "imagePullPolicy": "Always",
                                        "name": "model-monitoring",
                                        "ports": [
                                            {
                                                "containerPort": 8112,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "1000m",
                                                "memory": "2G"
                                            },
                                            "requests": {
                                                "cpu": "200m",
                                                "memory": "500M"
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "model-monitoring",
                            "namespace": "fennel"
                        },
                        "spec": {
                            "selector": {
                                "matchLabels": {
                                    "app": "model-monitoring"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "linkerd.io/inject": "disabled",
                                        "prometheus.io/port": "8112",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "model-monitoring"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "args": [
                                                "--metrics_port=8112"
                                            ],
                                            "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-model-monitoring-repo-c78e5db:2380e31f-6b4de8fc-f2be-4c48-81e8-f598758bd26f",
                                            "imagePullPolicy": "Always",
                                            "name": "model-monitoring",
                                            "ports": [
                                                {
                                                    "containerPort": 8112,
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "resources": {
                                                "limits": {
                                                    "cpu": "1000m",
                                                    "memory": "2G"
                                                },
                                                "requests": {
                                                    "cpu": "200m",
                                                    "memory": "500M"
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "68",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"model-monitoring\",\"namespace\":\"fennel\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"model-monitoring\"}},\"template\":{\"metadata\":{\"annotations\":{\"linkerd.io/inject\":\"disabled\",\"prometheus.io/port\":\"8112\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"model-monitoring\"}},\"spec\":{\"containers\":[{\"args\":[\"--metrics_port=8112\"],\"image\":\"030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-model-monitoring-repo-c78e5db:2380e31f-6b4de8fc-f2be-4c48-81e8-f598758bd26f\",\"imagePullPolicy\":\"Always\",\"name\":\"model-monitoring\",\"ports\":[{\"containerPort\":8112,\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"2G\"},\"requests\":{\"cpu\":\"200m\",\"memory\":\"500M\"}}}]}}}}\n"
                        },
                        "creationTimestamp": "2022-08-24T19:22:23Z",
                        "generation": 68,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:progressDeadlineSeconds": {},
                                        "f:replicas": {},
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:strategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        },
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:linkerd.io/inject": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"model-monitoring\"}": {
                                                        ".": {},
                                                        "f:args": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":8112,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {}
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:terminationGracePeriodSeconds": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T19:22:23Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-09-02T07:29:34Z"
                            }
                        ],
                        "name": "model-monitoring",
                        "namespace": "fennel",
                        "resourceVersion": "61116797",
                        "uid": "f7c1f41f-5cf0-490b-bc56-7b16e1082aa7"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "model-monitoring"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "linkerd.io/inject": "disabled",
                                    "prometheus.io/port": "8112",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "model-monitoring"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "args": [
                                            "--metrics_port=8112"
                                        ],
                                        "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-model-monitoring-repo-c78e5db:2380e31f-6b4de8fc-f2be-4c48-81e8-f598758bd26f",
                                        "imagePullPolicy": "Always",
                                        "name": "model-monitoring",
                                        "ports": [
                                            {
                                                "containerPort": 8112,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "1",
                                                "memory": "2G"
                                            },
                                            "requests": {
                                                "cpu": "200m",
                                                "memory": "500M"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-08-24T19:22:24Z",
                                "lastUpdateTime": "2022-08-24T19:22:24Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2022-08-24T19:22:23Z",
                                "lastUpdateTime": "2022-09-02T07:29:34Z",
                                "message": "ReplicaSet \"model-monitoring-56dd65b9d5\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 68,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updatedReplicas": 1
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::command:local:Command::model-monitoring-img",
                    "urn:pulumi:plane-3::launchpad::aws:ecr/repository:Repository::p-3-model-monitoring-repo"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::model-monitoring-k8s-provider::40d23c85-69e6-4944-99b1-50d50a64e2af",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": [
                        "urn:pulumi:plane-3::launchpad::aws:ecr/repository:Repository::p-3-model-monitoring-repo"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:kafka::nitrous-kafka-provider-msk",
                "custom": true,
                "id": "ed1ce2d9-4caf-47d0-8e98-024db34d1d84",
                "type": "pulumi:providers:kafka",
                "inputs": {
                    "bootstrapServers": "[\"b-1.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:9096\",\"b-2.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:9096\"]",
                    "saslMechanism": "scram-sha512",
                    "saslPassword": "p-3-password",
                    "saslUsername": "p-3-username",
                    "skipTlsVerify": "false",
                    "tlsEnabled": "true",
                    "version": "3.1.2"
                },
                "outputs": {
                    "bootstrapServers": "[\"b-1.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:9096\",\"b-2.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:9096\"]",
                    "saslMechanism": "scram-sha512",
                    "saslPassword": "p-3-password",
                    "saslUsername": "p-3-username",
                    "skipTlsVerify": "false",
                    "tlsEnabled": "true",
                    "version": "3.1.2"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:msk/cluster:Cluster::msk-cluster"
                ],
                "propertyDependencies": {
                    "bootstrapServers": [
                        "urn:pulumi:plane-3::launchpad::aws:msk/cluster:Cluster::msk-cluster"
                    ],
                    "saslMechanism": null,
                    "saslPassword": [
                        "urn:pulumi:plane-3::launchpad::aws:msk/cluster:Cluster::msk-cluster"
                    ],
                    "saslUsername": [
                        "urn:pulumi:plane-3::launchpad::aws:msk/cluster:Cluster::msk-cluster"
                    ],
                    "skipTlsVerify": null,
                    "tlsEnabled": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:msk/scramSecretAssociation:ScramSecretAssociation::msk-secret-association",
                "custom": true,
                "id": "arn:aws:kafka:us-west-2:030813887342:cluster/p-3-kafka-cluster/64e46a95-9c4a-40f1-803d-e703f04db07d-10",
                "type": "aws:msk/scramSecretAssociation:ScramSecretAssociation",
                "inputs": {
                    "__defaults": [],
                    "clusterArn": "arn:aws:kafka:us-west-2:030813887342:cluster/p-3-kafka-cluster/64e46a95-9c4a-40f1-803d-e703f04db07d-10",
                    "secretArnLists": [
                        "arn:aws:secretsmanager:us-west-2:030813887342:secret:AmazonMSK_p-3-msk-secret-1chck5"
                    ]
                },
                "outputs": {
                    "clusterArn": "arn:aws:kafka:us-west-2:030813887342:cluster/p-3-kafka-cluster/64e46a95-9c4a-40f1-803d-e703f04db07d-10",
                    "id": "arn:aws:kafka:us-west-2:030813887342:cluster/p-3-kafka-cluster/64e46a95-9c4a-40f1-803d-e703f04db07d-10",
                    "secretArnLists": [
                        "arn:aws:secretsmanager:us-west-2:030813887342:secret:AmazonMSK_p-3-msk-secret-1chck5"
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:msk/cluster:Cluster::msk-cluster",
                    "urn:pulumi:plane-3::launchpad::aws:secretsmanager/secret:Secret::msk-secret",
                    "urn:pulumi:plane-3::launchpad::aws:secretsmanager/secretVersion:SecretVersion::msk-secret-version"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::msk-aws-provider::2c275936-3b8d-4d79-a0fe-28ebef6ab1d4",
                "propertyDependencies": {
                    "clusterArn": [
                        "urn:pulumi:plane-3::launchpad::aws:msk/cluster:Cluster::msk-cluster"
                    ],
                    "secretArnLists": [
                        "urn:pulumi:plane-3::launchpad::aws:secretsmanager/secret:Secret::msk-secret"
                    ]
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kafka:index/topic:Topic::topic-p-3-nitrous_log-msk",
                "custom": true,
                "id": "p_3_nitrous_log",
                "type": "kafka:index/topic:Topic",
                "inputs": {
                    "__defaults": [],
                    "config": {
                        "__defaults": []
                    },
                    "name": "p_3_nitrous_log",
                    "partitions": 10,
                    "replicationFactor": 2
                },
                "outputs": {
                    "id": "p_3_nitrous_log",
                    "name": "p_3_nitrous_log",
                    "partitions": 10,
                    "replicationFactor": 2
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kafka::nitrous-kafka-provider-msk::ed1ce2d9-4caf-47d0-8e98-024db34d1d84",
                "propertyDependencies": {
                    "config": null,
                    "name": null,
                    "partitions": null,
                    "replicationFactor": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:Secret::kafka-config-msk",
                "custom": true,
                "id": "fennel/kafka-conf-msk",
                "type": "kubernetes:core/v1:Secret",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Secret",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "kafka-conf-msk",
                        "namespace": "fennel"
                    },
                    "stringData": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABACFqqKfa6dW2jWOsO0hmMRgBDI/ktzfjKEVC4FGO5CnZ1QpnZRH66ogN8H/s8pPHnNuDiQ1AcnhK8i1q3nEEHE1iIwdw9okSCusQqC0k2MqKgHbIGJWdxrpOzm/DpdZz+a01rwg2SeRn/7kldCP547DrGhoBOJ9AHzEGSalu6t9OdvWyMrCaOsPT9tPpKJJK7Jc3qwEVpyGDCTsh6q5q9u+6b5FOYCGF25Fy+EgwgXnFZM7D7JaSfCnBHeOxcdZCk3o7r1ROH091FquDBhVWL7nOHN+zqeNakb+iKELWPCU="
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Secret",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "kafka-conf-msk",
                            "namespace": "fennel"
                        },
                        "stringData": {
                            "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                            "ciphertext": "AAABAG7ONtMHoXRDQy9/Yhvb8tBHef3YIi/SNXYEDwwNUFMUHqjHVVhBnF77tSYpv1HVsKh8syPsD7wQF8fRmVFjESaqPWSxiRmlOJnu5TNvHr0zgIb4a7FQkKc7aDKKx3JaqA+DYetU0i0ECVa256Qn2Z2NlatumiRdL/JbhYckfEEQCt/eXN2vNkiFspfU5TBDJkYL18y0wVBUPSX+TVfFKOtJMcHVGqNNOPPTAYxLV85tv8nGqmcLMkjyshYxzmmvzy/mLXrDL+ZjzCoA9bsdHMUzbGi6K8wwDNHA9NqGImg="
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABACto5adn1pEMh105SYuqaN8l9X68oo1mSSWugcVFVKViK3CDLCzRf7OFU1gz3O9K1+rTpTbjkmwO/62GjfBOJAjS/s+njHsPzzsDI81wCAGTBOmAkhkg4uh/2gMvYtSaytxiN/GEPj2LDpIPvZP0ZkjFktSUrjBS8KbXloxZ7EduMOBexbf/iLo5mJnfgN+47wN1MpvzOUJppn768Te5FhQikUzFVwM+jdP8wUCdY5mq7tHCYipzpDtBhsi+ydX3ptuFDas6F3GDiyRGlXJqbRcG6h2BX4hK6ZEBzMQ8ecdlhvMFySCYflgZb7WZ0eP6oF++luuaNZwTa7qt2eHbbtWBGnEP+H7xnjSu2sL4qXZaC8E="
                    },
                    "kind": "Secret",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "AAABAF91pAukwDkYDvl9AmFYijWJCPxB/w9kOFZzjZuWEIsqY269yptcWL70xAeJ0VEc/BtIT28RfpBtA+OygbMiumNLlmc0bqlNWnoDmIum4tBZD+ZiZa8DIVXA2WzlwslKRMS4z3L8nKSxihRyDnH7R0n4Fm5LRhobvDR5g6myikKJNmwEHM5A31gXsWyTOhGLSfPwu3tP8hhlsx+++17SDw8RfUyqQnj4YwAP5yvgrrd57/YiD+YtzKaW4U3CW3lVxmegaMpgTJSrQpMBUYJY2fl+XjC/jLGF+QHYozivcSZq2MbbK0haN1XuMNSQ2qJGiooavD/pXrdS4O3PdMbCL7DtxDxezBmmfx0Z7r6qJIk69NnvZFk40A5WiTZcbSrCTcdFSAAK0UHQNDBdekeWZzZGBhDtfiLNUMo0c2a4NQmCH5v7BZQd0yq4lfcXbZjCkfOQpuqiBcQlBGS9swVag/dYmtYNJ+FaV8iHUmO1C8sDly56o/cc3oJzr76VM4XK5ZbbXaj7mk2ivngqJOchrReOZXR6FRIUhAW5f+t2E+DNDZ1svQYPzA=="
                            }
                        },
                        "creationTimestamp": "2022-08-24T18:32:46Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:password": {},
                                        "f:servers": {},
                                        "f:username": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:type": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-24T18:32:46Z"
                            }
                        ],
                        "name": "kafka-conf-msk",
                        "namespace": "fennel",
                        "resourceVersion": "57146049",
                        "uid": "d9d7486c-a0b2-4249-8a64-f79c9cdc4013"
                    },
                    "type": "Opaque"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:msk/cluster:Cluster::msk-cluster"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::configs-k8s-provider-msk::f495a18e-46fb-4d58-929c-ce7d9df9b5d1",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "stringData": [
                        "urn:pulumi:plane-3::launchpad::aws:msk/cluster:Cluster::msk-cluster"
                    ]
                },
                "additionalSecretOutputs": [
                    "data",
                    "stringData"
                ]
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::prometheus",
                "custom": true,
                "id": "default/prometheus-zs1g1omu",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "prometheus",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "prometheus-zs1g1omu",
                    "namespace": "default",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://prometheus-community.github.io/helm-charts",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "prometheus-zs1g1omu-kube-state-metrics",
                            "prometheus-zs1g1omu-server"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "prometheus-zs1g1omu-kube-state-metrics",
                            "prometheus-zs1g1omu-server"
                        ],
                        "ConfigMap/v1": [
                            "default/prometheus-zs1g1omu-server"
                        ],
                        "Deployment.apps/apps/v1": [
                            "default/prometheus-zs1g1omu-kube-state-metrics",
                            "default/prometheus-zs1g1omu-server"
                        ],
                        "PersistentVolumeClaim/v1": [
                            "default/prometheus-zs1g1omu-server"
                        ],
                        "Service/v1": [
                            "default/prometheus-zs1g1omu-kube-state-metrics",
                            "default/prometheus-zs1g1omu-server"
                        ],
                        "ServiceAccount/v1": [
                            "default/prometheus-zs1g1omu-kube-state-metrics",
                            "default/prometheus-zs1g1omu-server"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "alertmanager": {
                            "enabled": false
                        },
                        "configmapReload": {
                            "prometheus": {
                                "enabled": false
                            }
                        },
                        "kube-state-metrics": {
                            "metricLabelsAllowlist": [
                                "nodes=[eks.amazonaws.com/capacityType,eks.amazonaws.com/nodegroup,kubernetes.io/arch]"
                            ]
                        },
                        "nodeExporter": {
                            "enabled": false
                        },
                        "pushgateway": {
                            "enabled": false
                        },
                        "server": {
                            "extraFlags": [
                                "storage.tsdb.no-lockfile"
                            ],
                            "nodeSelector": {
                                "eks.amazonaws.com/capacityType": "ON_DEMAND"
                            },
                            "retention": "60d",
                            "service": {
                                "type": "LoadBalancer"
                            }
                        },
                        "serverFiles": {
                            "prometheus.yml": {
                                "scrape_configs": [
                                    {
                                        "job_name": "kubernetes-pods",
                                        "kubernetes_sd_configs": [
                                            {
                                                "role": "pod"
                                            }
                                        ],
                                        "relabel_configs": [
                                            {
                                                "action": "keep",
                                                "regex": true,
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_annotation_prometheus_io_scrape"
                                                ]
                                            },
                                            {
                                                "action": "replace",
                                                "regex": "([^:]+)(?::d+)?;(d+)",
                                                "replacement": "$$1:$$2",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_annotation_prometheus_io_port",
                                                    "__address__"
                                                ],
                                                "target_label": "__address__"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_namespace"
                                                ],
                                                "target_label": "Namespace"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_name"
                                                ],
                                                "target_label": "PodName"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_container_name"
                                                ],
                                                "target_label": "ContainerName"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_controller_name"
                                                ],
                                                "target_label": "PodControllerName"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_controller_kind"
                                                ],
                                                "target_label": "PodControllerKind"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_phase"
                                                ],
                                                "target_label": "PodPhase"
                                            },
                                            {
                                                "action": "drop",
                                                "regex": "(linkerd-init|linkerd-proxy)",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_container_name"
                                                ]
                                            }
                                        ],
                                        "sample_limit": 10000
                                    },
                                    {
                                        "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                                        "job_name": "kubernetes-nodes-cadvisor",
                                        "kubernetes_sd_configs": [
                                            {
                                                "role": "node"
                                            }
                                        ],
                                        "metrics_path": "/metrics/cadvisor",
                                        "relabel_configs": [
                                            {
                                                "action": "labelmap",
                                                "regex": "__meta_kubernetes_node_label_(.+)"
                                            }
                                        ],
                                        "scheme": "https",
                                        "scrape_interval": "10s",
                                        "tls_config": {
                                            "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                                            "insecure_skip_verify": true
                                        }
                                    },
                                    {
                                        "job_name": "kubernetes-services",
                                        "kubernetes_sd_configs": [
                                            {
                                                "role": "service"
                                            }
                                        ],
                                        "relabel_configs": [
                                            {
                                                "action": "labelmap",
                                                "regex": "__meta_kubernetes_service_label_(.+)"
                                            },
                                            {
                                                "source_labels": [
                                                    "__meta_kubernetes_namespace"
                                                ],
                                                "target_label": "Namespace"
                                            },
                                            {
                                                "source_labels": [
                                                    "__meta_kubernetes_service_name"
                                                ],
                                                "target_label": "Service"
                                            }
                                        ]
                                    },
                                    {
                                        "job_name": "broker",
                                        "static_configs": [
                                            {
                                                "labels": {
                                                    "job": "jmx"
                                                },
                                                "targets": [
                                                    "b-1.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:11001",
                                                    "b-2.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:11001"
                                                ]
                                            },
                                            {
                                                "labels": {
                                                    "job": "node"
                                                },
                                                "targets": [
                                                    "b-1.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:11002",
                                                    "b-2.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:11002"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "serviceAccounts": {
                            "alertmanager": {
                                "create": false
                            },
                            "nodeExporter": {
                                "create": false
                            },
                            "pushgateway": {
                                "create": false
                            }
                        }
                    },
                    "verify": false,
                    "version": "",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAI+nztM76Yi92Z570AAFu8bgjxQSonPwOugEMDz3j3b7AExe+3G5Zrc54etFM7wjyluducmO20OZpdPekIKZ5p4D4B5DMB2Z2x0tPjoZg48pu5odTMlKXs3LUDzXE7maGAZpDhSIqNaAt1U/bcgBUk0csDb2LA1zHsNFSL5ZW451NIkLmfjZnAReCE3AlbH9f4n9WlVw43sWLtIvDx4pRQkQQvZRktoAiDI0pkBUuaosewPDPvmiV9Mq6O3n8XkkRQhPXqUNR5kr8C2Tpwg3hR93oVfrG5RFk8MaoO0mgyXwdoYwZQeDjmhHoVNRkCk57mvjNNxC91/ctW/hysXYRQ+16WYmxVQyz60geEuNZLBKp1R/s/YE90b+3kdQvKRpSsFNI/LlYyTh8eEBCe5WO/t1dsLIVICLcjG0iDYFpV7Tv6G79txDKOjQohJWnbt4Mzhlhs4dDt0suZK+TMlJdh2Eg12le3MWcbZdXZfyBPXUKlhROFzBCSuUXhESdCDvgH/2plMDlPC7+7IJdU8KVvtE7gg4KxmXk4qL9xIRS2IRva85ZsfNdO8fgiUVTnFiVoL6UyCanlp7NyKOpVfCx43M+5vMd30sFrv9aXOBJyFmqqSGpcOb9FWqw+pr35qzM6fVXwjGtzsWSWcZ6Lli3zadQ+Iqjk8JHU57d+Yk5wFM7qfkFuPwR9wZmBejlOOkswAIxgGEXJjPNITB/Ec/4oeq4/SCkGh3pz8MKfHo4j0Zdi8uVv97b5bpUZzqgwAVfa591PtltZuvw4rjji2os9QwqfgXLDLD4XkglhZbkKNSSHJn/W2Qi5OTdb2AISAhP+hHZYzcr+I3gUcPIXngoB6u8By0gdo567fyxrGr/+MBDVT0Mv+ORyDQhgvd+W/JbK4XDtuJBDpvAp3dBo7nxhLVDR7mmH9KdQacLCLIT6dRGJVGVsBxdaNxqOersWCUkTloAfYqkOMFs43emYD9iOFv4M9SeHqUIg3d5AoTOUru1Yg2zJA4c/KER3ej50lX8OyfTxltYkUs6uv9fFemDtg6lzbJ6tWeORVHQyObIx+ZV+VZ3PQwzcgMQ7qmsOie3EK7PPHU78du9ZzA5qUYQlpSTSczLhnESZ4vZt9Nr1oCbXf7h4rPAKzJtBF6gSFO5VWRBN+XI9ySTg6W7TyGgWcYmK43lzcDRf0/HQ5Q+8AXotCh3FiiDKODp/X5cPmo4F3NPc65t4haIYEY4CFPRrUTRfEEJa1cNK57GpedWoQfHFk2EDN/7pi+8rT53cfpjdteQBfJKY/ZOd/4kxbQ7JoaUH4EsdDmb6FFIlgBjladNFzm5dHyw81LliSOcMrfQeqoT67XNOmuTxZL0RcHB70oJ0Fivp23jh3gwKLdldAvD50IkHQZORRpYj6IYsxbAFWK3WUmMSs8/06gMCM12EoSvpMJ9ZeaT+UP/Pk6e2+S9IgpCyKRc16FPZeSJN1PySEsnSakDXWLlh3moplWI6Jneiz9LIduQKlHmnaO5w4XWiAWrRrSH6Amp5G6SKMruahw3bo23jk+SzbmPBj6BDRrxx+nZ02xt/JBYEvc9AnuDMRKeSA9WmW1xyQ32EltMJvK8vqUJ1q+Bs0HnSAwgAVnJGHVpu9v4UcktenXwBhVM5uPsVrehvAN6fIQNDJWjFgs9tGNcr3dk0Zw+MOeHwcfPMgq/fR0STVjZY4JmXv2tWwxK3NQvLy8abRtrVU7e77d+ejtuZwQc5Uixnsm+VM3fSdAjDbWUh1WpPFafi4MlGQCr9jcbQbqQTlTRfdoFgRfs9+lU3DaqtvUw7bznq2VBsuCZuktYUxvqaPVkMV4RhnN9PHS5dTADbMXQGiOPaLFMmLp9i5modz/CLQu17eZYDx4Jbtlxxek6ZcrOs9tcQLp6rgTZIeRjmkFhWzJ6z1Ymv+iPk4MjCTs2VFJSUHJJRZKI2PCQ1rYGux5NGl48ti7XFQront5m/onuYkaHywUR3x5jFE0VyEUG0IFx80pnyK/avD6JOL58hJIOsHO59vYm3QEsRgTjhARMTPN780Z5xMgevYJEA1iUxDglnUktEsCtxQa+v0JYtw+49XBXKSYstulD3XhiK2kDOvLUABOjng3bz7FNx927rwsQA1z3ruYVCkYJUZX7+WSTXJhejUOstEf3a4ibmQifLK42ZVwD52Ems8QIWtxuUTzJ6UU2KOdCLcf3l6y/Xykhkdf80rypsZWdqUXTxKOhg+bTU9znjCb63D1BWI5mFh+W9pyLTy7Bt2g/G+2kqMiXsbRwQbd9lhNFpFxiBXZHxwDd1aXHexCdp5k9h7ADGFyDSEykgKnc4Lp9oz32IUUH1NM4DguIGug/piRbzAyfGGExf83k5H+Dvv2K57Q3CI19+0KW3+9WCFY17jLcdphF1IC7jtAiw6kl0GOVQ+aLcUAPzuRJt/HdameKbN7qtb8TKx3daSmYzLitFv9lgCGC89NHhoRuPhmTZ6J85bs4d10dUD7ymM9xzG3c0fN5+rFYfmkl8Lw5m/qZTVepF6ps6Yt/7jaR0IcisGY1iHfOD9UXMpRHdYCXA3sYmDZMCis7V+jXCTfU2jWO22Xhxv6kQgaZYLQ2Hdw1etvb5qbvoAEhTpQmA8Ug/hdN/t0Cw6J1YcXMo760nIR1fPJf6bRkvWC0aeluNWgJqXiw7x49+stcvCmVy0kQTeDrIcXi6izGYCB0GY+bekcxOlnVELE6txoKrI0Saf0BhlWyYH2TQQuk22MhvLbb7NK/kir/827ROayKolEdS+XLVt1+YfPY4yW89ktrgUatCth3Els8y/hN8pCHlyG0NqZGENCwFaOqBwwsVN0c3QBTxgJeuL19G2W80/8g5Vauk774sGeyJ+eYLFk6e15rqxryJ6iqkRtEz6LcXF0WosRYEudlyuI4MrRwqGFmPxvcGkOUhU93Ohhh5tuc9Z0g6jxZP+E6VOTyRNyFzdMNAAZqJeGaboVo7PFaUVbONZLaVPZ2MqmWsPgAz4NRVfgfPRIVaWUXv6CgjvpukXRubll5k4i8klwyuTTWalr3z94r5q4AoP135IR4IuHH+KcnevTR61jvlTugA+YHqiDJvwQL+KRJGVIe7QwtJIIuT0+QZ+KNmKGgvpDrkum7QQC6u+13wBNNHzGUcQYf+zpM+OrMph4Mc+MBEPsQ/iHppQy1nsMd7X8nxjXxTc4Q58gMHANMoCfegieRjrfVlSvx2RO9jJ6NFZ1744qZyzqSfO7cJRvewxx0DiHWzjfyDuxFlAHwk7O6kLKiFsNYj9kx1cDCequ2f+0fjJanBONqD/fNwJD0tigMN1bRxCSecEWYec/PCbDLqKCTBeH1iwFtfApn4FYyHyn2He9VGY9cFQnZCfOTTCcAX4mFMwvUOTIVigssFJqjuhIuSAhGf8qTwaVYUBE1IjU3HPhq5AAI7/r59+XWIF9ak/cmPqLfnZSAE6DYjSydzSQEFrLLmtE124dxSc+eGFXNNLyAWV6GnRbDeC7ymHxxITwoMlb0XV5aveAP5tqxMzVLgSHu2Su1xOgBiKexFu3ypd7HfyBwoijMgQ/3whM9PWOZ6qlVQg+s8aMni1a3Ve9Bev78Qfbb2TeITh+GJwW9y9hERy+g63IN74nsg0hl5hrS07qsb3DZAl76BjA4/AlvvUB+wOLBj4Y9QuHadGighOQD6KYdmLD5uysDpZdmJoWQju7IZolhendNJ9/HT2BiMcn7YthixT2WdYLim2/Vk1rZa7oWcKcAdPAB8m0bBSSiUxud0uHCqBbAVRZQ028vVC4oGnBtFD8kiq6PRheBJia46CMv1DRCDIkynQRCJzbm/A1Eii6uAEyBK18dopuq5I1V2wUncwWl4aUnrils5kQ1SkV1jP+HyEnEzz3iDzr39+nrUa3XoZyiwV3PMMRMVGbUepxBWoGwbtr6aCI5oqUTA9uLsJeJ7RjbwAgvhk6Vz4ZyEtxYPb8tKakpKUeCUkK+Z8fuPdZ3bUGExoE27YFNM0YKqsOrUnTHUsr43APAbKLWFtw7T8PCWoQEQwhdinF82bxeWiwR5ibiQADLBB8wMfjHqOiT0YwYRwIcA4qnSMkfTmR7yQDQlikw/kEunSk7sXliH4l1asMYFJK+QWicBzKcUeV3LtRgTdl3HqAUuanVssykOdttZqQ3Yxe3dXtuf4NAYZt2GaHV1xVsPKExHMlWONP4q9epPicpSifpn17OsDkTFPLfXt7UZqDYJtDvqYDaFvGHV9o+kohM8abU8jusRRR6z/VRmQToSDReXGDCtSQaUz2o2wjuD0ArgaEH0azYKlFCYi+mW/E5U0E99P6UiDwgL7FJZ1DZVM2RHCjv1IwvA2fk0wJZdxQp0itSwT6J/eIJrI3KDhrRycOXSGmAXCbxQS/A1TJ3LoMdcJCkyTUMyR5l+mCzbeOoez8hoQmFZxcDSTZAWUcBzx83DBRWEGk20DmS19wNrlYW5J/ceDk9v0ShDYAjor1z24PigkKryr1BEVYh59o3Ik+EseHbVawrhRUyLJmCAV1q8+LZg9lYiY4dwJ4u5Trv2wOOIdNXbW1jRD0AdrmXfriPwYu1dZ+QBbrhV6HT5/jqDsfmeZ7P0bJRwF+Xus4Tc6r/TpiFN9d1VpRMM2F1wme26SQStLPSuAOp8GYIrVqWgXdWO80S9dEkLVArDsLNIn1n1QJGIJpStXVIBU2RORQemEjaFfh78T+cdpuD+kYdS0wWftqTrsi2iRjFUeIgU09DX2+m4ktDVKpB9KVYYOIzgselMJJdVeYpg3yg5IjhbREBh5oma1Lh54OKyr3UUcnB2x+v3jl3H1UdkZ8M0YOcSVXEnUjITMBaiLLHyGNCs2dO0Az6A/4XuTQ483mJub7GD0OcfsCCGH95tkT/ElrvxCSFoX/AUyd1m1w1kfYF2WKMivKGSFZh2zNZIE460asWQRIC2djJjKN2Dgj+p6jQ1LSqatKRCOshP0qDquq0v7Z5KRcPMH/ogfLEygVcqNpOqcWGU9fc42T+4vyZazE24f6m32u2psaqz0eOrwBf4Q21h3BuZ8QIfAEWhw8vO4HkkcKz9pZQWFr/9Tj+ShkD0K4nxfu+QFCoFVPHHJpcbmkKwQaUHvX1SGbdqKCA3k3Pg0kf6SGdp0yn1/PISWFDPpm7RqUu/eodaSpr/GGiBylfY1D2CY/NIo27CV7nE3Sa5KB61ZcpNEp0jTsLw0LxSCrQrnPfBvPm971+48YlQ4WBQYLXzJ0qJRuAD2XR0Tc7DseGGGglSxklh3BDodOQ1wKOTygFaDUsuMGWVOW4gT1nY7QLam+Fq4+4yp/sKtztSYbpjvpA8/33nfOj/Tv9VhnWrg5qRGEgYti1FPs1x/V6u/wiM+4y0nuhuctG3WcQdIWZiOWo63PzQSelaqxw2rBF/cf85Z+IGb3Dr/9VSUF1IuZ/5FgPrZ2l2wXsYjtB1e9NpOmwD5Q7GsOfZmAMojCNjERCcP9BWrqf4YixfJM4t3NNm62qEFtXuonG/enhbDhD2kV+NKrq4T/PmJKfv7iZfB13sYChK4K31rbD3NqxFqOJK7A23Vy1q5bGFxms4JgWhUZpVdFDHQnfzlDTrSJgKJf7XURKzhwDhiVITB8th/uyMCb1lCGO0AXwExrdu0+pdWduvK1w+eDl7T0kQpe0A+vOQwcQnql51aCRLAEm5t1SmJwSqV//OqXn27zE+SmJ4NnAufAquIjgQyzu8sRjnXy8XIuWO2TBb/QKftdToYx7fPzKslTeG126Uf6RBp2xXZJYi68SkmmMBsrG/GhsI98QdWRLQ/9/wCdHVLgQRRUHKk="
                    },
                    "atomic": false,
                    "chart": "prometheus",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "prometheus-zs1g1omu",
                    "namespace": "default",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://prometheus-community.github.io/helm-charts",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "prometheus-zs1g1omu-kube-state-metrics",
                            "prometheus-zs1g1omu-server"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "prometheus-zs1g1omu-kube-state-metrics",
                            "prometheus-zs1g1omu-server"
                        ],
                        "ConfigMap/v1": [
                            "default/prometheus-zs1g1omu-server"
                        ],
                        "Deployment.apps/apps/v1": [
                            "default/prometheus-zs1g1omu-kube-state-metrics",
                            "default/prometheus-zs1g1omu-server"
                        ],
                        "PersistentVolumeClaim/v1": [
                            "default/prometheus-zs1g1omu-server"
                        ],
                        "Service/v1": [
                            "default/prometheus-zs1g1omu-kube-state-metrics",
                            "default/prometheus-zs1g1omu-server"
                        ],
                        "ServiceAccount/v1": [
                            "default/prometheus-zs1g1omu-kube-state-metrics",
                            "default/prometheus-zs1g1omu-server"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "2.36.2",
                        "chart": "prometheus",
                        "name": "prometheus-zs1g1omu",
                        "namespace": "default",
                        "revision": 10,
                        "status": "deployed",
                        "version": "15.12.0"
                    },
                    "timeout": 300,
                    "values": {
                        "alertmanager": {
                            "enabled": false
                        },
                        "configmapReload": {
                            "prometheus": {
                                "enabled": false
                            }
                        },
                        "kube-state-metrics": {
                            "metricLabelsAllowlist": [
                                "nodes=[eks.amazonaws.com/capacityType,eks.amazonaws.com/nodegroup,kubernetes.io/arch]"
                            ]
                        },
                        "nodeExporter": {
                            "enabled": false
                        },
                        "pushgateway": {
                            "enabled": false
                        },
                        "server": {
                            "extraFlags": [
                                "storage.tsdb.no-lockfile"
                            ],
                            "nodeSelector": {
                                "eks.amazonaws.com/capacityType": "ON_DEMAND"
                            },
                            "retention": "60d",
                            "service": {
                                "type": "LoadBalancer"
                            }
                        },
                        "serverFiles": {
                            "prometheus.yml": {
                                "scrape_configs": [
                                    {
                                        "job_name": "kubernetes-pods",
                                        "kubernetes_sd_configs": [
                                            {
                                                "role": "pod"
                                            }
                                        ],
                                        "relabel_configs": [
                                            {
                                                "action": "keep",
                                                "regex": true,
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_annotation_prometheus_io_scrape"
                                                ]
                                            },
                                            {
                                                "action": "replace",
                                                "regex": "([^:]+)(?::d+)?;(d+)",
                                                "replacement": "$$1:$$2",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_annotation_prometheus_io_port",
                                                    "__address__"
                                                ],
                                                "target_label": "__address__"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_namespace"
                                                ],
                                                "target_label": "Namespace"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_name"
                                                ],
                                                "target_label": "PodName"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_container_name"
                                                ],
                                                "target_label": "ContainerName"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_controller_name"
                                                ],
                                                "target_label": "PodControllerName"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_controller_kind"
                                                ],
                                                "target_label": "PodControllerKind"
                                            },
                                            {
                                                "action": "replace",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_phase"
                                                ],
                                                "target_label": "PodPhase"
                                            },
                                            {
                                                "action": "drop",
                                                "regex": "(linkerd-init|linkerd-proxy)",
                                                "source_labels": [
                                                    "__meta_kubernetes_pod_container_name"
                                                ]
                                            }
                                        ],
                                        "sample_limit": 10000
                                    },
                                    {
                                        "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                                        "job_name": "kubernetes-nodes-cadvisor",
                                        "kubernetes_sd_configs": [
                                            {
                                                "role": "node"
                                            }
                                        ],
                                        "metrics_path": "/metrics/cadvisor",
                                        "relabel_configs": [
                                            {
                                                "action": "labelmap",
                                                "regex": "__meta_kubernetes_node_label_(.+)"
                                            }
                                        ],
                                        "scheme": "https",
                                        "scrape_interval": "10s",
                                        "tls_config": {
                                            "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                                            "insecure_skip_verify": true
                                        }
                                    },
                                    {
                                        "job_name": "kubernetes-services",
                                        "kubernetes_sd_configs": [
                                            {
                                                "role": "service"
                                            }
                                        ],
                                        "relabel_configs": [
                                            {
                                                "action": "labelmap",
                                                "regex": "__meta_kubernetes_service_label_(.+)"
                                            },
                                            {
                                                "source_labels": [
                                                    "__meta_kubernetes_namespace"
                                                ],
                                                "target_label": "Namespace"
                                            },
                                            {
                                                "source_labels": [
                                                    "__meta_kubernetes_service_name"
                                                ],
                                                "target_label": "Service"
                                            }
                                        ]
                                    },
                                    {
                                        "job_name": "broker",
                                        "static_configs": [
                                            {
                                                "labels": {
                                                    "job": "jmx"
                                                },
                                                "targets": [
                                                    "b-1.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:11001",
                                                    "b-2.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:11001"
                                                ]
                                            },
                                            {
                                                "labels": {
                                                    "job": "node"
                                                },
                                                "targets": [
                                                    "b-1.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:11002",
                                                    "b-2.p3kafkacluster.hv6sse.c10.kafka.us-west-2.amazonaws.com:11002"
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        },
                        "serviceAccounts": {
                            "alertmanager": {
                                "create": false
                            },
                            "nodeExporter": {
                                "create": false
                            },
                            "pushgateway": {
                                "create": false
                            }
                        }
                    },
                    "verify": false,
                    "version": "15.12.0",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::prom-k8s-provider::977dc48b-1b15-46c5-9234-a8bf9daebecf",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "repositoryOpts": null,
                    "values": null
                }
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:apps/v1:StatefulSet::nitrous-statefulset",
                "custom": true,
                "id": "fennel/nitrous",
                "type": "kubernetes:apps/v1:StatefulSet",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "StatefulSet",
                    "metadata": {
                        "labels": {
                            "app": "nitrous",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "nitrous",
                        "namespace": "fennel"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "app": "nitrous"
                            }
                        },
                        "serviceName": "nitrous",
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "config.linkerd.io/skip-outbound-ports": "3306,6379",
                                    "prometheus.io/port": "2112",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "nitrous"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "/root/nitrous",
                                            "--listen-port",
                                            "3333",
                                            "--metrics-port",
                                            "2112",
                                            "--health-port",
                                            "8082",
                                            "--plane-id",
                                            "3",
                                            "--badger_dir",
                                            "/oxide",
                                            "--badger_block_cache_mb",
                                            "512",
                                            "--ristretto_max_cost",
                                            "1073741824",
                                            "--otlp-endpoint",
                                            "otel-collector.otel-eks:4317",
                                            "--dev=false"
                                        ],
                                        "env": [
                                            {
                                                "name": "MSK_KAFKA_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "servers",
                                                        "name": "kafka-conf-msk"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MSK_KAFKA_USERNAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "username",
                                                        "name": "kafka-conf-msk"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MSK_KAFKA_PASSWORD",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "password",
                                                        "name": "kafka-conf-msk"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "GOMAXPROCS",
                                                "value": "128"
                                            },
                                            {
                                                "name": "GOMEMLIMIT",
                                                "value": "4GiB"
                                            },
                                            {
                                                "name": "OTEL_SERVICE_NAME",
                                                "value": "nitrous"
                                            },
                                            {
                                                "name": "IDENTITY",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.labels['statefulset.kubernetes.io/pod-name']"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "JE_MALLOC_CONF",
                                                "value": "background_thread:true,metadata_thp:auto"
                                            },
                                            {
                                                "name": "INSTANCE_METADATA_SERVICE_ADDR",
                                                "value": "http://169.254.169.254/latest"
                                            }
                                        ],
                                        "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-nitrous-repo-0167734:2380e31f-07e8bdaaea64910d8f86c10340f80e029a41e6f747f50e27b26389ba34780930",
                                        "imagePullPolicy": "Always",
                                        "name": "nitrous",
                                        "ports": [
                                            {
                                                "containerPort": 3333,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 2112,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 8082,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 8082
                                            },
                                            "initialDelaySeconds": 2,
                                            "periodSeconds": 2,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {
                                            "limits": {
                                                "memory": "4G"
                                            },
                                            "requests": {
                                                "cpu": "1000m",
                                                "memory": "2G"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/oxide",
                                                "name": "badgerdb"
                                            }
                                        ]
                                    }
                                ],
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "arm64",
                                    "node-group": "p-3-nitrous-ng"
                                }
                            }
                        },
                        "volumeClaimTemplates": [
                            {
                                "metadata": {
                                    "name": "badgerdb"
                                },
                                "spec": {
                                    "accessModes": [
                                        "ReadWriteOnce"
                                    ],
                                    "resources": {
                                        "requests": {
                                            "storage": "100Gi"
                                        }
                                    },
                                    "storageClassName": "nvme-ssd"
                                }
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "StatefulSet",
                        "metadata": {
                            "labels": {
                                "app": "nitrous",
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "nitrous",
                            "namespace": "fennel"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "app": "nitrous"
                                }
                            },
                            "serviceName": "nitrous",
                            "template": {
                                "metadata": {
                                    "annotations": {
                                        "config.linkerd.io/skip-outbound-ports": "3306,6379",
                                        "prometheus.io/port": "2112",
                                        "prometheus.io/scrape": "true"
                                    },
                                    "labels": {
                                        "app": "nitrous"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "command": [
                                                "/root/nitrous",
                                                "--listen-port",
                                                "3333",
                                                "--metrics-port",
                                                "2112",
                                                "--health-port",
                                                "8082",
                                                "--plane-id",
                                                "3",
                                                "--badger_dir",
                                                "/oxide",
                                                "--badger_block_cache_mb",
                                                "512",
                                                "--ristretto_max_cost",
                                                "1073741824",
                                                "--otlp-endpoint",
                                                "otel-collector.otel-eks:4317",
                                                "--dev=false"
                                            ],
                                            "env": [
                                                {
                                                    "name": "MSK_KAFKA_SERVER_ADDRESS",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "servers",
                                                            "name": "kafka-conf-msk"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MSK_KAFKA_USERNAME",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "username",
                                                            "name": "kafka-conf-msk"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "MSK_KAFKA_PASSWORD",
                                                    "valueFrom": {
                                                        "secretKeyRef": {
                                                            "key": "password",
                                                            "name": "kafka-conf-msk"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "GOMAXPROCS",
                                                    "value": "128"
                                                },
                                                {
                                                    "name": "GOMEMLIMIT",
                                                    "value": "4GiB"
                                                },
                                                {
                                                    "name": "OTEL_SERVICE_NAME",
                                                    "value": "nitrous"
                                                },
                                                {
                                                    "name": "IDENTITY",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.labels['statefulset.kubernetes.io/pod-name']"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "JE_MALLOC_CONF",
                                                    "value": "background_thread:true,metadata_thp:auto"
                                                },
                                                {
                                                    "name": "INSTANCE_METADATA_SERVICE_ADDR",
                                                    "value": "http://169.254.169.254/latest"
                                                }
                                            ],
                                            "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-nitrous-repo-0167734:2380e31f-07e8bdaaea64910d8f86c10340f80e029a41e6f747f50e27b26389ba34780930",
                                            "imagePullPolicy": "Always",
                                            "name": "nitrous",
                                            "ports": [
                                                {
                                                    "containerPort": 3333,
                                                    "protocol": "TCP"
                                                },
                                                {
                                                    "containerPort": 2112,
                                                    "protocol": "TCP"
                                                },
                                                {
                                                    "containerPort": 8082,
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "readinessProbe": {
                                                "httpGet": {
                                                    "path": "/ready",
                                                    "port": 8082
                                                },
                                                "initialDelaySeconds": 2,
                                                "periodSeconds": 2,
                                                "successThreshold": 1,
                                                "timeoutSeconds": 1
                                            },
                                            "resources": {
                                                "limits": {
                                                    "memory": "4G"
                                                },
                                                "requests": {
                                                    "cpu": "1000m",
                                                    "memory": "2G"
                                                }
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/oxide",
                                                    "name": "badgerdb"
                                                }
                                            ]
                                        }
                                    ],
                                    "nodeSelector": {
                                        "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                        "kubernetes.io/arch": "arm64",
                                        "node-group": "p-3-nitrous-ng"
                                    }
                                }
                            },
                            "volumeClaimTemplates": [
                                {
                                    "metadata": {
                                        "name": "badgerdb"
                                    },
                                    "spec": {
                                        "accessModes": [
                                            "ReadWriteOnce"
                                        ],
                                        "resources": {
                                            "requests": {
                                                "storage": "100Gi"
                                            }
                                        },
                                        "storageClassName": "nvme-ssd"
                                    }
                                }
                            ]
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "StatefulSet",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"StatefulSet\",\"metadata\":{\"labels\":{\"app\":\"nitrous\",\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"nitrous\",\"namespace\":\"fennel\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"nitrous\"}},\"serviceName\":\"nitrous\",\"template\":{\"metadata\":{\"annotations\":{\"config.linkerd.io/skip-outbound-ports\":\"3306,6379\",\"prometheus.io/port\":\"2112\",\"prometheus.io/scrape\":\"true\"},\"labels\":{\"app\":\"nitrous\"}},\"spec\":{\"containers\":[{\"command\":[\"/root/nitrous\",\"--listen-port\",\"3333\",\"--metrics-port\",\"2112\",\"--health-port\",\"8082\",\"--plane-id\",\"3\",\"--badger_dir\",\"/oxide\",\"--badger_block_cache_mb\",\"512\",\"--ristretto_max_cost\",\"1073741824\",\"--otlp-endpoint\",\"otel-collector.otel-eks:4317\",\"--dev=false\"],\"env\":[{\"name\":\"MSK_KAFKA_SERVER_ADDRESS\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"servers\",\"name\":\"kafka-conf-msk\"}}},{\"name\":\"MSK_KAFKA_USERNAME\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"username\",\"name\":\"kafka-conf-msk\"}}},{\"name\":\"MSK_KAFKA_PASSWORD\",\"valueFrom\":{\"secretKeyRef\":{\"key\":\"password\",\"name\":\"kafka-conf-msk\"}}},{\"name\":\"GOMAXPROCS\",\"value\":\"128\"},{\"name\":\"GOMEMLIMIT\",\"value\":\"4GiB\"},{\"name\":\"OTEL_SERVICE_NAME\",\"value\":\"nitrous\"},{\"name\":\"IDENTITY\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.labels['statefulset.kubernetes.io/pod-name']\"}}},{\"name\":\"JE_MALLOC_CONF\",\"value\":\"background_thread:true,metadata_thp:auto\"},{\"name\":\"INSTANCE_METADATA_SERVICE_ADDR\",\"value\":\"http://169.254.169.254/latest\"}],\"image\":\"030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-nitrous-repo-0167734:2380e31f-07e8bdaaea64910d8f86c10340f80e029a41e6f747f50e27b26389ba34780930\",\"imagePullPolicy\":\"Always\",\"name\":\"nitrous\",\"ports\":[{\"containerPort\":3333,\"protocol\":\"TCP\"},{\"containerPort\":2112,\"protocol\":\"TCP\"},{\"containerPort\":8082,\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8082},\"initialDelaySeconds\":2,\"periodSeconds\":2,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"memory\":\"4G\"},\"requests\":{\"cpu\":\"1000m\",\"memory\":\"2G\"}},\"volumeMounts\":[{\"mountPath\":\"/oxide\",\"name\":\"badgerdb\"}]}],\"nodeSelector\":{\"eks.amazonaws.com/capacityType\":\"ON_DEMAND\",\"kubernetes.io/arch\":\"arm64\",\"node-group\":\"p-3-nitrous-ng\"}}},\"volumeClaimTemplates\":[{\"metadata\":{\"name\":\"badgerdb\"},\"spec\":{\"accessModes\":[\"ReadWriteOnce\"],\"resources\":{\"requests\":{\"storage\":\"100Gi\"}},\"storageClassName\":\"nvme-ssd\"}}]}}\n"
                        },
                        "creationTimestamp": "2022-08-31T16:26:54Z",
                        "generation": 9,
                        "labels": {
                            "app": "nitrous",
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:podManagementPolicy": {},
                                        "f:replicas": {},
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:serviceName": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:annotations": {
                                                    ".": {},
                                                    "f:config.linkerd.io/skip-outbound-ports": {},
                                                    "f:prometheus.io/port": {},
                                                    "f:prometheus.io/scrape": {}
                                                },
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"nitrous\"}": {
                                                        ".": {},
                                                        "f:command": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"GOMAXPROCS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"GOMEMLIMIT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"IDENTITY\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"INSTANCE_METADATA_SERVICE_ADDR\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"JE_MALLOC_CONF\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"MSK_KAFKA_PASSWORD\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MSK_KAFKA_SERVER_ADDRESS\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"MSK_KAFKA_USERNAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:secretKeyRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"OTEL_SERVICE_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":2112,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:protocol": {}
                                                            },
                                                            "k:{\"containerPort\":3333,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:protocol": {}
                                                            },
                                                            "k:{\"containerPort\":8082,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:readinessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/oxide\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:nodeSelector": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:terminationGracePeriodSeconds": {}
                                            }
                                        },
                                        "f:updateStrategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:partition": {}
                                            },
                                            "f:type": {}
                                        },
                                        "f:volumeClaimTemplates": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-08-31T16:36:55Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:collisionCount": {},
                                        "f:currentRevision": {},
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updateRevision": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-09-02T02:54:21Z"
                            }
                        ],
                        "name": "nitrous",
                        "namespace": "fennel",
                        "resourceVersion": "61022688",
                        "uid": "0bdf4b34-f909-4e46-a42f-8328d7120a62"
                    },
                    "spec": {
                        "podManagementPolicy": "OrderedReady",
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app": "nitrous"
                            }
                        },
                        "serviceName": "nitrous",
                        "template": {
                            "metadata": {
                                "annotations": {
                                    "config.linkerd.io/skip-outbound-ports": "3306,6379",
                                    "prometheus.io/port": "2112",
                                    "prometheus.io/scrape": "true"
                                },
                                "labels": {
                                    "app": "nitrous"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "/root/nitrous",
                                            "--listen-port",
                                            "3333",
                                            "--metrics-port",
                                            "2112",
                                            "--health-port",
                                            "8082",
                                            "--plane-id",
                                            "3",
                                            "--badger_dir",
                                            "/oxide",
                                            "--badger_block_cache_mb",
                                            "512",
                                            "--ristretto_max_cost",
                                            "1073741824",
                                            "--otlp-endpoint",
                                            "otel-collector.otel-eks:4317",
                                            "--dev=false"
                                        ],
                                        "env": [
                                            {
                                                "name": "MSK_KAFKA_SERVER_ADDRESS",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "servers",
                                                        "name": "kafka-conf-msk"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MSK_KAFKA_USERNAME",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "username",
                                                        "name": "kafka-conf-msk"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "MSK_KAFKA_PASSWORD",
                                                "valueFrom": {
                                                    "secretKeyRef": {
                                                        "key": "password",
                                                        "name": "kafka-conf-msk"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "GOMAXPROCS",
                                                "value": "128"
                                            },
                                            {
                                                "name": "GOMEMLIMIT",
                                                "value": "4GiB"
                                            },
                                            {
                                                "name": "OTEL_SERVICE_NAME",
                                                "value": "nitrous"
                                            },
                                            {
                                                "name": "IDENTITY",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.labels['statefulset.kubernetes.io/pod-name']"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "JE_MALLOC_CONF",
                                                "value": "background_thread:true,metadata_thp:auto"
                                            },
                                            {
                                                "name": "INSTANCE_METADATA_SERVICE_ADDR",
                                                "value": "http://169.254.169.254/latest"
                                            }
                                        ],
                                        "image": "030813887342.dkr.ecr.us-west-2.amazonaws.com/p-3-nitrous-repo-0167734:2380e31f-07e8bdaaea64910d8f86c10340f80e029a41e6f747f50e27b26389ba34780930",
                                        "imagePullPolicy": "Always",
                                        "name": "nitrous",
                                        "ports": [
                                            {
                                                "containerPort": 3333,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 2112,
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 8082,
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "readinessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/ready",
                                                "port": 8082,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 2,
                                            "periodSeconds": 2,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "resources": {
                                            "limits": {
                                                "memory": "4G"
                                            },
                                            "requests": {
                                                "cpu": "1",
                                                "memory": "2G"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/oxide",
                                                "name": "badgerdb"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "nodeSelector": {
                                    "eks.amazonaws.com/capacityType": "ON_DEMAND",
                                    "kubernetes.io/arch": "arm64",
                                    "node-group": "p-3-nitrous-ng"
                                },
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "terminationGracePeriodSeconds": 30
                            }
                        },
                        "updateStrategy": {
                            "rollingUpdate": {
                                "partition": 0
                            },
                            "type": "RollingUpdate"
                        },
                        "volumeClaimTemplates": [
                            {
                                "apiVersion": "v1",
                                "kind": "PersistentVolumeClaim",
                                "metadata": {
                                    "name": "badgerdb"
                                },
                                "spec": {
                                    "accessModes": [
                                        "ReadWriteOnce"
                                    ],
                                    "resources": {
                                        "requests": {
                                            "storage": "100Gi"
                                        }
                                    },
                                    "storageClassName": "nvme-ssd",
                                    "volumeMode": "Filesystem"
                                },
                                "status": {
                                    "phase": "Pending"
                                }
                            }
                        ]
                    },
                    "status": {
                        "availableReplicas": 1,
                        "collisionCount": 0,
                        "currentRevision": "nitrous-7ff8c7d455",
                        "observedGeneration": 9,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "updateRevision": "nitrous-598fdbfc5c"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ecr/repository:Repository::p-3-nitrous-repo",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:Secret::kafka-config-msk",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::nitrous-k8s-provider::d40ef660-db74-45d0-94d4-f8711e540642",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": [
                        "urn:pulumi:plane-3::launchpad::aws:ecr/repository:Repository::p-3-nitrous-repo",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io2-200ops"
                    ]
                }
            }
        ]
    }
}
