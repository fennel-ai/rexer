{
    "version": 3,
    "deployment": {
        "manifest": {
            "time": "2022-06-21T06:20:51.859178-07:00",
            "magic": "f18625eb5592f6d57a3a8c5bfde984fc0808d71ce3f046fd68e1dc4a989f43a7",
            "version": "v3.30.0"
        },
        "secrets_providers": {
            "type": "service",
            "state": {
                "url": "https://api.pulumi.com",
                "owner": "fennel",
                "project": "launchpad",
                "stack": "plane-3"
            }
        },
        "resources": [
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "custom": false,
                "type": "pulumi:pulumi:Stack",
                "outputs": {
                    "confluent": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAMpgOg5tCuFGMhv1CyHf9khgDj4LftommRHyOnGGMznMn1G0CYOuDLSWa3NNPhivVOoED+QWpK4aoQsArul5niHpFuakCpYxJ8F0dFMaP8VjHESpqtX/uiuuj8lTPvEPEy0df5smbrI4+5LROUWl0kFhGEAXhpf/B/iVdmi0J0DlyULIbFt/X8zbkm+t6Hy9AqFUSItC6pY+psVPFgqDH90fobo6PsjZ0BVrwaKzv5kcRDWQM6qrRiSz3Pkqr5o9fuSi7OP00qPjjB94IerJTIa1EpbFg/tIQ4TjqOeo+2sOEgHhuZLIbHxKEuqAeaBrC8VUANTQuZ3VJEziJjaQ"
                    },
                    "db": {
                        "host": "p-3-db-20220322025721191200000002.cluster-c00d7gkxaysk.us-west-2.rds.amazonaws.com"
                    },
                    "eks": {
                        "clusterName": "p-3-eks-cluster-eksCluster-fd821aa",
                        "clusterSg": "sg-02576e409d44907ef",
                        "instanceRole": "p-3-eks-cluster-instanceRole-role-dcb5bdb",
                        "kubeconfig": {
                            "apiVersion": "v1",
                            "clusters": [
                                {
                                    "cluster": {
                                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                        "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                    },
                                    "name": "kubernetes"
                                }
                            ],
                            "contexts": [
                                {
                                    "context": {
                                        "cluster": "kubernetes",
                                        "user": "aws"
                                    },
                                    "name": "aws"
                                }
                            ],
                            "current-context": "aws",
                            "kind": "Config",
                            "users": [
                                {
                                    "name": "aws",
                                    "user": {
                                        "exec": {
                                            "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                            "args": [
                                                "eks",
                                                "get-token",
                                                "--cluster-name",
                                                "p-3-eks-cluster-eksCluster-fd821aa",
                                                "--role",
                                                "arn:aws:iam::030813887342:role/admin"
                                            ],
                                            "command": "aws"
                                        }
                                    }
                                }
                            ]
                        },
                        "oidcUrl": "oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195",
                        "storageclasses": {
                            "io1": "ebs-io1-50ops-n8o4xdjp"
                        }
                    },
                    "elasticache": {
                        "endpoint": "clustercfg.p-3-cache-cluster-b20c9a6.fbjfph.usw2.cache.amazonaws.com:6379"
                    },
                    "glue": {
                        "scriptPath": "aws_glue_parquet_transforms.py",
                        "scriptSourceBucket": "p-3-gluejob-source"
                    },
                    "milvus": {
                        "endpoint": "milvus.milvus:19530"
                    },
                    "offlineAggregateSourceFiles": {
                        "bucketName": "p-3-offline-aggregate-source",
                        "sources": {
                            "cf": "s3://p-3-offline-aggregate-source/cf.py",
                            "topk": "s3://p-3-offline-aggregate-source/topk.py"
                        }
                    },
                    "prometheus": {
                        "arn": "arn:aws:aps:us-west-2:030813887342:workspace/ws-09330607-fd6e-4e8a-8c1d-5c0bcfd1d0b0",
                        "prometheusQueryEndpoint": "https://aps-workspaces.us-west-2.amazonaws.com/workspaces/ws-09330607-fd6e-4e8a-8c1d-5c0bcfd1d0b0/api/v1/query",
                        "prometheusWriteEndpoint": "https://aps-workspaces.us-west-2.amazonaws.com/workspaces/ws-09330607-fd6e-4e8a-8c1d-5c0bcfd1d0b0/api/v1/remote_write"
                    },
                    "redis": {
                        "clusterEndPoints": [
                            "clustercfg.p-3-redis-db-57b5586.fbjfph.memorydb.us-west-2.amazonaws.com:6379"
                        ],
                        "clusterId": "p-3-redis-db-57b5586",
                        "clusterSecurityGroupIds": [
                            "sg-09e571f0713759de2"
                        ]
                    },
                    "roleArn": "arn:aws:iam::030813887342:role/admin",
                    "telemetry": {
                        "otelCollectorEndpoint": "otel-collector.otel-eks:4317",
                        "otelCollectorHttpEndpoint": "otel-collector.otel-eks:4318"
                    },
                    "trainingData": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAKr7hj6Tamf9VFgiOkGb2tnbhif10Yx5zp4tO92YFZ3wIJHNzKl9RJCDC+mNgZNmqFusAIOuI6s1TxlgmjWPqj6ckqeT6Fol0rqK5TEn5izzFE3L4NZ0EmXRxaAFzW4CcXuYszCpmZsH7Xq5rRGsaLWGeCdma3/kwjN3sFmmAJWb59j4qGiHisuG44DA4P86AgW9LVvHOJcpWeoP2Rk4Q+OORHux1tze7g=="
                    },
                    "unleashDb": {
                        "host": "p-3-unleash-db-20220529012946534800000001.cluster-c00d7gkxaysk.us-west-2.rds.amazonaws.com",
                        "port": 5432
                    },
                    "vpc": {
                        "azs": [
                            "us-west-2a",
                            "us-west-2b"
                        ],
                        "privateNacl": "acl-0233fa641a513e5e1",
                        "privateRouteTable": "rtb-0aa99465a704b99ca",
                        "privateSubnets": [
                            "subnet-0e17b2c51bb9d79f4",
                            "subnet-0615a2647b66a222c"
                        ],
                        "publicNacl": "acl-028ea53fe8d0de67a",
                        "publicRouteTable": "rtb-038eca38cb7b4d47a",
                        "publicSubnets": [
                            "subnet-06368c2eeec944c76",
                            "subnet-08382870e07aaa6a7"
                        ],
                        "vpcId": "vpc-05832a35998c34f0c"
                    }
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider",
                "custom": true,
                "id": "41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                "custom": true,
                "id": "vpc-05832a35998c34f0c",
                "type": "aws:ec2/vpc:Vpc",
                "inputs": {
                    "__defaults": [
                        "enableDnsSupport",
                        "instanceTenancy"
                    ],
                    "cidrBlock": "10.103.0.0/16",
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": {
                        "Name": "fennel-vpc",
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:vpc/vpc-05832a35998c34f0c",
                    "assignGeneratedIpv6CidrBlock": false,
                    "cidrBlock": "10.103.0.0/16",
                    "defaultNetworkAclId": "acl-07663a2bbad10c2bc",
                    "defaultRouteTableId": "rtb-06d37ab44d5bcd3fd",
                    "defaultSecurityGroupId": "sg-04c0e4e46a362dbb0",
                    "dhcpOptionsId": "dopt-03c373e451d3b5ba1",
                    "enableClassiclink": false,
                    "enableClassiclinkDnsSupport": false,
                    "enableDnsHostnames": false,
                    "enableDnsSupport": true,
                    "id": "vpc-05832a35998c34f0c",
                    "instanceTenancy": "default",
                    "ipv6AssociationId": "",
                    "ipv6CidrBlock": "",
                    "ipv6CidrBlockNetworkBorderGroup": "",
                    "ipv6IpamPoolId": "",
                    "ipv6NetmaskLength": 0,
                    "mainRouteTableId": "rtb-06d37ab44d5bcd3fd",
                    "ownerId": "030813887342",
                    "tags": {
                        "Name": "fennel-vpc",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "fennel-vpc",
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "cidrBlock": null,
                    "tags": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:ManagedNodeGroup::p-3-common-ng",
                "custom": false,
                "type": "eks:index:ManagedNodeGroup",
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider",
                "custom": true,
                "id": "258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                "custom": true,
                "id": "subnet-06368c2eeec944c76",
                "type": "aws:ec2/subnet:Subnet",
                "inputs": {
                    "__defaults": [
                        "assignIpv6AddressOnCreation",
                        "enableDns64",
                        "enableResourceNameDnsARecordOnLaunch",
                        "enableResourceNameDnsAaaaRecordOnLaunch",
                        "ipv6Native",
                        "mapPublicIpOnLaunch"
                    ],
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2a",
                    "cidrBlock": "10.103.0.0/18",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "ipv6Native": false,
                    "mapPublicIpOnLaunch": false,
                    "tags": {
                        "Name": "p-3-primary-public-subnet",
                        "__defaults": [],
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":1200000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:subnet/subnet-06368c2eeec944c76",
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2a",
                    "availabilityZoneId": "usw2-az2",
                    "cidrBlock": "10.103.0.0/18",
                    "customerOwnedIpv4Pool": "",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "id": "subnet-06368c2eeec944c76",
                    "ipv6CidrBlock": "",
                    "ipv6CidrBlockAssociationId": "",
                    "ipv6Native": false,
                    "mapCustomerOwnedIpOnLaunch": false,
                    "mapPublicIpOnLaunch": false,
                    "outpostArn": "",
                    "ownerId": "030813887342",
                    "privateDnsHostnameTypeOnLaunch": "ip-name",
                    "tags": {
                        "Name": "p-3-primary-public-subnet",
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "p-3-primary-public-subnet",
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "availabilityZone": null,
                    "cidrBlock": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-3-peering-connection",
                "custom": true,
                "id": "pcx-05cbfb0d43bf374e9",
                "type": "aws:ec2/vpcPeeringConnection:VpcPeeringConnection",
                "inputs": {
                    "__defaults": [],
                    "peerOwnerId": "030813887342",
                    "peerRegion": "us-west-2",
                    "peerVpcId": "vpc-0d9942e83f94c049c",
                    "tags": {
                        "Side": "Requester",
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":60000000000,\"delete\":60000000000,\"update\":60000000000}}",
                    "acceptStatus": "pending-acceptance",
                    "accepter": null,
                    "id": "pcx-05cbfb0d43bf374e9",
                    "peerOwnerId": "030813887342",
                    "peerRegion": "us-west-2",
                    "peerVpcId": "vpc-0d9942e83f94c049c",
                    "requester": {
                        "allowClassicLinkToRemoteVpc": false,
                        "allowRemoteVpcDnsResolution": false,
                        "allowVpcToRemoteClassicLink": false
                    },
                    "tags": {
                        "Side": "Requester",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Side": "Requester",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "peerOwnerId": null,
                    "peerRegion": null,
                    "peerVpcId": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::vpc-control-plane-provider",
                "custom": true,
                "id": "38ff4c7c-f077-4521-b724-58c60def0919",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/internetGateway:InternetGateway::p-3-internet-gateway",
                "custom": true,
                "id": "igw-0dc1cfafc5351f380",
                "type": "aws:ec2/internetGateway:InternetGateway",
                "inputs": {
                    "__defaults": [],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "arn": "arn:aws:ec2:us-west-2:030813887342:internet-gateway/igw-0dc1cfafc5351f380",
                    "id": "igw-0dc1cfafc5351f380",
                    "ownerId": "030813887342",
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                "custom": true,
                "id": "subnet-08382870e07aaa6a7",
                "type": "aws:ec2/subnet:Subnet",
                "inputs": {
                    "__defaults": [
                        "assignIpv6AddressOnCreation",
                        "enableDns64",
                        "enableResourceNameDnsARecordOnLaunch",
                        "enableResourceNameDnsAaaaRecordOnLaunch",
                        "ipv6Native",
                        "mapPublicIpOnLaunch"
                    ],
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2b",
                    "cidrBlock": "10.103.64.0/18",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "ipv6Native": false,
                    "mapPublicIpOnLaunch": false,
                    "tags": {
                        "Name": "p-3-secondary-public-subnet",
                        "__defaults": [],
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":1200000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:subnet/subnet-08382870e07aaa6a7",
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2b",
                    "availabilityZoneId": "usw2-az1",
                    "cidrBlock": "10.103.64.0/18",
                    "customerOwnedIpv4Pool": "",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "id": "subnet-08382870e07aaa6a7",
                    "ipv6CidrBlock": "",
                    "ipv6CidrBlockAssociationId": "",
                    "ipv6Native": false,
                    "mapCustomerOwnedIpOnLaunch": false,
                    "mapPublicIpOnLaunch": false,
                    "outpostArn": "",
                    "ownerId": "030813887342",
                    "privateDnsHostnameTypeOnLaunch": "ip-name",
                    "tags": {
                        "Name": "p-3-secondary-public-subnet",
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "p-3-secondary-public-subnet",
                        "kubernetes.io/role/elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "availabilityZone": null,
                    "cidrBlock": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3",
                "custom": true,
                "id": "c961a00c-e82d-41f0-8091-29a4cf93f731",
                "type": "pulumi:providers:command",
                "inputs": {
                    "version": "0.0.3"
                },
                "outputs": {
                    "version": "0.0.3"
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                "custom": true,
                "id": "rtb-038eca38cb7b4d47a",
                "type": "aws:ec2/routeTable:RouteTable",
                "inputs": {
                    "__defaults": [],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:route-table/rtb-038eca38cb7b4d47a",
                    "id": "rtb-038eca38cb7b4d47a",
                    "ownerId": "030813887342",
                    "propagatingVgws": [],
                    "routes": [],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                "custom": true,
                "id": "subnet-0615a2647b66a222c",
                "type": "aws:ec2/subnet:Subnet",
                "inputs": {
                    "__defaults": [
                        "assignIpv6AddressOnCreation",
                        "enableDns64",
                        "enableResourceNameDnsARecordOnLaunch",
                        "enableResourceNameDnsAaaaRecordOnLaunch",
                        "ipv6Native",
                        "mapPublicIpOnLaunch"
                    ],
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2b",
                    "cidrBlock": "10.103.192.0/18",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "ipv6Native": false,
                    "mapPublicIpOnLaunch": false,
                    "tags": {
                        "Name": "p-3-secondary-private-subnet",
                        "__defaults": [],
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":1200000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:subnet/subnet-0615a2647b66a222c",
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2b",
                    "availabilityZoneId": "usw2-az1",
                    "cidrBlock": "10.103.192.0/18",
                    "customerOwnedIpv4Pool": "",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "id": "subnet-0615a2647b66a222c",
                    "ipv6CidrBlock": "",
                    "ipv6CidrBlockAssociationId": "",
                    "ipv6Native": false,
                    "mapCustomerOwnedIpOnLaunch": false,
                    "mapPublicIpOnLaunch": false,
                    "outpostArn": "",
                    "ownerId": "030813887342",
                    "privateDnsHostnameTypeOnLaunch": "ip-name",
                    "tags": {
                        "Name": "p-3-secondary-private-subnet",
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "p-3-secondary-private-subnet",
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "availabilityZone": null,
                    "cidrBlock": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                "custom": true,
                "id": "subnet-0e17b2c51bb9d79f4",
                "type": "aws:ec2/subnet:Subnet",
                "inputs": {
                    "__defaults": [
                        "assignIpv6AddressOnCreation",
                        "enableDns64",
                        "enableResourceNameDnsARecordOnLaunch",
                        "enableResourceNameDnsAaaaRecordOnLaunch",
                        "ipv6Native",
                        "mapPublicIpOnLaunch"
                    ],
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2a",
                    "cidrBlock": "10.103.128.0/18",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "ipv6Native": false,
                    "mapPublicIpOnLaunch": false,
                    "tags": {
                        "Name": "p-3-primary-private-subnet",
                        "__defaults": [],
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":1200000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:subnet/subnet-0e17b2c51bb9d79f4",
                    "assignIpv6AddressOnCreation": false,
                    "availabilityZone": "us-west-2a",
                    "availabilityZoneId": "usw2-az2",
                    "cidrBlock": "10.103.128.0/18",
                    "customerOwnedIpv4Pool": "",
                    "enableDns64": false,
                    "enableResourceNameDnsARecordOnLaunch": false,
                    "enableResourceNameDnsAaaaRecordOnLaunch": false,
                    "id": "subnet-0e17b2c51bb9d79f4",
                    "ipv6CidrBlock": "",
                    "ipv6CidrBlockAssociationId": "",
                    "ipv6Native": false,
                    "mapCustomerOwnedIpOnLaunch": false,
                    "mapPublicIpOnLaunch": false,
                    "outpostArn": "",
                    "ownerId": "030813887342",
                    "privateDnsHostnameTypeOnLaunch": "ip-name",
                    "tags": {
                        "Name": "p-3-primary-private-subnet",
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "p-3-primary-private-subnet",
                        "kubernetes.io/role/internal-elb": "1",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "availabilityZone": null,
                    "cidrBlock": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/eip:Eip::p-3-eip",
                "custom": true,
                "id": "eipalloc-05334f715567272ba",
                "type": "aws:ec2/eip:Eip",
                "inputs": {
                    "__defaults": [],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"delete\":180000000000,\"read\":900000000000,\"update\":300000000000}}",
                    "allocationId": "eipalloc-05334f715567272ba",
                    "associationId": "",
                    "carrierIp": "",
                    "customerOwnedIp": "",
                    "customerOwnedIpv4Pool": "",
                    "domain": "vpc",
                    "id": "eipalloc-05334f715567272ba",
                    "instance": "",
                    "networkBorderGroup": "us-west-2",
                    "networkInterface": "",
                    "privateIp": "",
                    "publicDns": "ec2-44-228-106-241.us-west-2.compute.amazonaws.com",
                    "publicIp": "44.228.106.241",
                    "publicIpv4Pool": "amazon",
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpc": true
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "tags": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                "custom": true,
                "id": "rtb-0aa99465a704b99ca",
                "type": "aws:ec2/routeTable:RouteTable",
                "inputs": {
                    "__defaults": [],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:route-table/rtb-0aa99465a704b99ca",
                    "id": "rtb-0aa99465a704b99ca",
                    "ownerId": "030813887342",
                    "propagatingVgws": [],
                    "routes": [],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "custom": false,
                "type": "eks:index:Cluster",
                "outputs": {
                    "eksCluster": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "p-3-eks-cluster-eksCluster-fd821aa",
                        "packageVersion": "",
                        "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    },
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::p-3-unleash-aurora-aws-provider",
                "custom": true,
                "id": "fcf36285-052d-49b1-879f-e14518d7d39e",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aurora-aws-provider",
                "custom": true,
                "id": "134d52f5-7f5e-4454-b1be-748af511a354",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::cache-aws-provider",
                "custom": true,
                "id": "54ec0dc8-ad8a-4494-ba57-cb43e332ab76",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::glue-source-aws-provider",
                "custom": true,
                "id": "40273a30-d6a9-4dc6-a682-d54c3ddb7967",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::redis-aws-provider",
                "custom": true,
                "id": "5e1ff797-2ef0-488a-9b9f-7f4d89f937d2",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::milvus-aws-provider",
                "custom": true,
                "id": "a98e4333-c33d-4116-abce-a093e2ecb200",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:confluent::conf-provider",
                "custom": true,
                "id": "a04ab6f7-c710-478f-b18e-57c5f42d108e",
                "type": "pulumi:providers:confluent",
                "inputs": {
                    "password": "Mohit@Fennel",
                    "username": "mohit@fennel.ai",
                    "version": "0.2.2"
                },
                "outputs": {
                    "password": "Mohit@Fennel",
                    "username": "mohit@fennel.ai",
                    "version": "0.2.2"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "password": null,
                    "username": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::tele-aws-provider",
                "custom": true,
                "id": "8a93fbf2-2243-4c81-8798-3be31bfda4ca",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::offline-aggregate-source-aws-provider",
                "custom": true,
                "id": "739626f9-b430-4703-8282-4e46ba9b0dbd",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::connector-sink-aws-provider",
                "custom": true,
                "id": "3cc7c16b-f14f-4caf-9a2f-369ea16085f6",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/policy:Policy::p-3-lbc-policy",
                "custom": true,
                "id": "arn:aws:iam::030813887342:policy/p-3-AWSLoadBalancerControllerIAMPolicy20220322033540877800000001",
                "type": "aws:iam/policy:Policy",
                "inputs": {
                    "__defaults": [
                        "path"
                    ],
                    "namePrefix": "p-3-AWSLoadBalancerControllerIAMPolicy",
                    "path": "/",
                    "policy": "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"iam:CreateServiceLinkedRole\",\n                \"ec2:DescribeAccountAttributes\",\n                \"ec2:DescribeAddresses\",\n                \"ec2:DescribeAvailabilityZones\",\n                \"ec2:DescribeInternetGateways\",\n                \"ec2:DescribeVpcs\",\n                \"ec2:DescribeSubnets\",\n                \"ec2:DescribeSecurityGroups\",\n                \"ec2:DescribeInstances\",\n                \"ec2:DescribeNetworkInterfaces\",\n                \"ec2:DescribeTags\",\n                \"ec2:GetCoipPoolUsage\",\n                \"ec2:DescribeCoipPools\",\n                \"elasticloadbalancing:DescribeLoadBalancers\",\n                \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n                \"elasticloadbalancing:DescribeListeners\",\n                \"elasticloadbalancing:DescribeListenerCertificates\",\n                \"elasticloadbalancing:DescribeSSLPolicies\",\n                \"elasticloadbalancing:DescribeRules\",\n                \"elasticloadbalancing:DescribeTargetGroups\",\n                \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n                \"elasticloadbalancing:DescribeTargetHealth\",\n                \"elasticloadbalancing:DescribeTags\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"cognito-idp:DescribeUserPoolClient\",\n                \"acm:ListCertificates\",\n                \"acm:DescribeCertificate\",\n                \"iam:ListServerCertificates\",\n                \"iam:GetServerCertificate\",\n                \"waf-regional:GetWebACL\",\n                \"waf-regional:GetWebACLForResource\",\n                \"waf-regional:AssociateWebACL\",\n                \"waf-regional:DisassociateWebACL\",\n                \"wafv2:GetWebACL\",\n                \"wafv2:GetWebACLForResource\",\n                \"wafv2:AssociateWebACL\",\n                \"wafv2:DisassociateWebACL\",\n                \"shield:GetSubscriptionState\",\n                \"shield:DescribeProtection\",\n                \"shield:CreateProtection\",\n                \"shield:DeleteProtection\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AuthorizeSecurityGroupIngress\",\n                \"ec2:RevokeSecurityGroupIngress\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateSecurityGroup\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n            \"Condition\": {\n                \"StringEquals\": {\n                    \"ec2:CreateAction\": \"CreateSecurityGroup\"\n                },\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:CreateTags\",\n                \"ec2:DeleteTags\"\n            ],\n            \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ec2:AuthorizeSecurityGroupIngress\",\n                \"ec2:RevokeSecurityGroupIngress\",\n                \"ec2:DeleteSecurityGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:CreateLoadBalancer\",\n                \"elasticloadbalancing:CreateTargetGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:CreateListener\",\n                \"elasticloadbalancing:DeleteListener\",\n                \"elasticloadbalancing:CreateRule\",\n                \"elasticloadbalancing:DeleteRule\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:AddTags\",\n                \"elasticloadbalancing:RemoveTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n            ],\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:AddTags\",\n                \"elasticloadbalancing:RemoveTags\"\n            ],\n            \"Resource\": [\n                \"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\n                \"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"\n            ]\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n                \"elasticloadbalancing:SetIpAddressType\",\n                \"elasticloadbalancing:SetSecurityGroups\",\n                \"elasticloadbalancing:SetSubnets\",\n                \"elasticloadbalancing:DeleteLoadBalancer\",\n                \"elasticloadbalancing:ModifyTargetGroup\",\n                \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n                \"elasticloadbalancing:DeleteTargetGroup\"\n            ],\n            \"Resource\": \"*\",\n            \"Condition\": {\n                \"Null\": {\n                    \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n                }\n            }\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:RegisterTargets\",\n                \"elasticloadbalancing:DeregisterTargets\"\n            ],\n            \"Resource\": \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"\n        },\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"elasticloadbalancing:SetWebAcl\",\n                \"elasticloadbalancing:ModifyListener\",\n                \"elasticloadbalancing:AddListenerCertificates\",\n                \"elasticloadbalancing:RemoveListenerCertificates\",\n                \"elasticloadbalancing:ModifyRule\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:policy/p-3-AWSLoadBalancerControllerIAMPolicy20220322033540877800000001",
                    "description": "",
                    "id": "arn:aws:iam::030813887342:policy/p-3-AWSLoadBalancerControllerIAMPolicy20220322033540877800000001",
                    "name": "p-3-AWSLoadBalancerControllerIAMPolicy20220322033540877800000001",
                    "namePrefix": "p-3-AWSLoadBalancerControllerIAMPolicy",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"iam:CreateServiceLinkedRole\",\"ec2:DescribeAccountAttributes\",\"ec2:DescribeAddresses\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeInternetGateways\",\"ec2:DescribeVpcs\",\"ec2:DescribeSubnets\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeInstances\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeTags\",\"ec2:GetCoipPoolUsage\",\"ec2:DescribeCoipPools\",\"elasticloadbalancing:DescribeLoadBalancers\",\"elasticloadbalancing:DescribeLoadBalancerAttributes\",\"elasticloadbalancing:DescribeListeners\",\"elasticloadbalancing:DescribeListenerCertificates\",\"elasticloadbalancing:DescribeSSLPolicies\",\"elasticloadbalancing:DescribeRules\",\"elasticloadbalancing:DescribeTargetGroups\",\"elasticloadbalancing:DescribeTargetGroupAttributes\",\"elasticloadbalancing:DescribeTargetHealth\",\"elasticloadbalancing:DescribeTags\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"cognito-idp:DescribeUserPoolClient\",\"acm:ListCertificates\",\"acm:DescribeCertificate\",\"iam:ListServerCertificates\",\"iam:GetServerCertificate\",\"waf-regional:GetWebACL\",\"waf-regional:GetWebACLForResource\",\"waf-regional:AssociateWebACL\",\"waf-regional:DisassociateWebACL\",\"wafv2:GetWebACL\",\"wafv2:GetWebACLForResource\",\"wafv2:AssociateWebACL\",\"wafv2:DisassociateWebACL\",\"shield:GetSubscriptionState\",\"shield:DescribeProtection\",\"shield:CreateProtection\",\"shield:DeleteProtection\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:AuthorizeSecurityGroupIngress\",\"ec2:RevokeSecurityGroupIngress\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateSecurityGroup\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:CreateTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"ec2:CreateAction\":\"CreateSecurityGroup\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:CreateTags\",\"ec2:DeleteTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:AuthorizeSecurityGroupIngress\",\"ec2:RevokeSecurityGroupIngress\",\"ec2:DeleteSecurityGroup\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:CreateTargetGroup\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateListener\",\"elasticloadbalancing:DeleteListener\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:DeleteRule\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:AddTags\",\"elasticloadbalancing:RemoveTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:AddTags\",\"elasticloadbalancing:RemoveTags\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"]},{\"Action\":[\"elasticloadbalancing:ModifyLoadBalancerAttributes\",\"elasticloadbalancing:SetIpAddressType\",\"elasticloadbalancing:SetSecurityGroups\",\"elasticloadbalancing:SetSubnets\",\"elasticloadbalancing:DeleteLoadBalancer\",\"elasticloadbalancing:ModifyTargetGroup\",\"elasticloadbalancing:ModifyTargetGroupAttributes\",\"elasticloadbalancing:DeleteTargetGroup\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:RegisterTargets\",\"elasticloadbalancing:DeregisterTargets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"},{\"Action\":[\"elasticloadbalancing:SetWebAcl\",\"elasticloadbalancing:ModifyListener\",\"elasticloadbalancing:AddListenerCertificates\",\"elasticloadbalancing:RemoveListenerCertificates\",\"elasticloadbalancing:ModifyRule\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                    "policyId": "ANPAQOLFGTNXBR7JPRY6H",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "namePrefix": null,
                    "policy": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::prom-aws-provider",
                "custom": true,
                "id": "6ac4bcaa-972b-450a-8d15-a9ee3bbd479b",
                "type": "pulumi:providers:aws",
                "inputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "outputs": {
                    "assumeRole": "{\"roleArn\":\"arn:aws:iam::030813887342:role/admin\"}",
                    "profile": "admin",
                    "region": "us-west-2",
                    "skipCredentialsValidation": "true",
                    "skipGetEc2Platforms": "true",
                    "skipMetadataApiCheck": "true",
                    "skipRegionValidation": "true",
                    "version": "4.38.1"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "propertyDependencies": {
                    "assumeRole": null,
                    "profile": null,
                    "region": null,
                    "skipCredentialsValidation": null,
                    "skipGetEc2Platforms": null,
                    "skipMetadataApiCheck": null,
                    "skipRegionValidation": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/vpcPeeringConnectionAccepter:VpcPeeringConnectionAccepter::p-3-peering-connection-acceptor",
                "custom": true,
                "id": "pcx-05cbfb0d43bf374e9",
                "type": "aws:ec2/vpcPeeringConnectionAccepter:VpcPeeringConnectionAccepter",
                "inputs": {
                    "__defaults": [],
                    "accepter": {
                        "__defaults": [
                            "allowClassicLinkToRemoteVpc",
                            "allowVpcToRemoteClassicLink"
                        ],
                        "allowClassicLinkToRemoteVpc": false,
                        "allowRemoteVpcDnsResolution": true,
                        "allowVpcToRemoteClassicLink": false
                    },
                    "autoAccept": true,
                    "tags": {
                        "Side": "Acceptor",
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcPeeringConnectionId": "pcx-05cbfb0d43bf374e9"
                },
                "outputs": {
                    "acceptStatus": "active",
                    "accepter": {
                        "allowClassicLinkToRemoteVpc": false,
                        "allowRemoteVpcDnsResolution": true,
                        "allowVpcToRemoteClassicLink": false
                    },
                    "autoAccept": true,
                    "id": "pcx-05cbfb0d43bf374e9",
                    "peerOwnerId": "030813887342",
                    "peerRegion": "us-west-2",
                    "peerVpcId": "vpc-0d9942e83f94c049c",
                    "requester": {
                        "allowClassicLinkToRemoteVpc": false,
                        "allowRemoteVpcDnsResolution": false,
                        "allowVpcToRemoteClassicLink": false
                    },
                    "tags": {
                        "Side": "Acceptor",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Side": "Acceptor",
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c",
                    "vpcPeeringConnectionId": "pcx-05cbfb0d43bf374e9"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-3-peering-connection"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::vpc-control-plane-provider::38ff4c7c-f077-4521-b724-58c60def0919",
                "propertyDependencies": {
                    "accepter": null,
                    "autoAccept": null,
                    "tags": null,
                    "vpcPeeringConnectionId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-3-peering-connection"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/route:Route::p-3-route-to-data-plane",
                "custom": true,
                "id": "r-rtb-07afe7458db9c44792563646185",
                "type": "aws:ec2/route:Route",
                "inputs": {
                    "__defaults": [],
                    "destinationCidrBlock": "10.103.0.0/16",
                    "routeTableId": "rtb-07afe7458db9c4479",
                    "vpcPeeringConnectionId": "pcx-05cbfb0d43bf374e9"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "carrierGatewayId": "",
                    "destinationCidrBlock": "10.103.0.0/16",
                    "destinationIpv6CidrBlock": "",
                    "destinationPrefixListId": "",
                    "egressOnlyGatewayId": "",
                    "gatewayId": "",
                    "id": "r-rtb-07afe7458db9c44792563646185",
                    "instanceId": "",
                    "instanceOwnerId": "",
                    "localGatewayId": "",
                    "natGatewayId": "",
                    "networkInterfaceId": "",
                    "origin": "CreateRoute",
                    "routeTableId": "rtb-07afe7458db9c4479",
                    "state": "active",
                    "transitGatewayId": "",
                    "vpcEndpointId": "",
                    "vpcPeeringConnectionId": "pcx-05cbfb0d43bf374e9"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-3-peering-connection"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::vpc-control-plane-provider::38ff4c7c-f077-4521-b724-58c60def0919",
                "propertyDependencies": {
                    "destinationCidrBlock": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ],
                    "routeTableId": null,
                    "vpcPeeringConnectionId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-3-peering-connection"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                "custom": true,
                "id": "acl-028ea53fe8d0de67a",
                "type": "aws:ec2/networkAcl:NetworkAcl",
                "inputs": {
                    "__defaults": [],
                    "egress": [
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "protocol": "tcp",
                            "ruleNo": 100,
                            "toPort": 65535
                        }
                    ],
                    "ingress": [
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "protocol": "tcp",
                            "ruleNo": 100,
                            "toPort": 65535
                        }
                    ],
                    "subnetIds": [
                        "subnet-06368c2eeec944c76",
                        "subnet-08382870e07aaa6a7"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "arn": "arn:aws:ec2:us-west-2:030813887342:network-acl/acl-028ea53fe8d0de67a",
                    "egress": [
                        {
                            "action": "allow",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "6",
                            "ruleNo": 100,
                            "toPort": 65535
                        }
                    ],
                    "id": "acl-028ea53fe8d0de67a",
                    "ingress": [
                        {
                            "action": "allow",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "6",
                            "ruleNo": 100,
                            "toPort": 65535
                        }
                    ],
                    "ownerId": "030813887342",
                    "subnetIds": [
                        "subnet-06368c2eeec944c76",
                        "subnet-08382870e07aaa6a7"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "egress": null,
                    "ingress": null,
                    "subnetIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet"
                    ],
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::command:local:Command::root-ca",
                "custom": true,
                "id": "662807baa1d4b",
                "type": "command:local:Command",
                "inputs": {
                    "create": "step certificate create root.linkerd.cluster.local ca.crt ca.key --profile root-ca --no-password --insecure",
                    "delete": "rm -f ca.crt ca.key"
                },
                "outputs": {
                    "create": "step certificate create root.linkerd.cluster.local ca.crt ca.key --profile root-ca --no-password --insecure",
                    "delete": "rm -f ca.crt ca.key",
                    "stderr": "Your certificate has been saved in ca.crt.\nYour private key has been saved in ca.key.",
                    "stdout": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3::c961a00c-e82d-41f0-8091-29a4cf93f731",
                "propertyDependencies": {
                    "create": null,
                    "delete": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::default_3_16_0",
                "custom": true,
                "id": "aaeb9b53-84c7-4091-9473-777276f3af23",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "version": "3.16.0"
                },
                "outputs": {
                    "version": "3.16.0"
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/routeTableAssociation:RouteTableAssociation::p-3-rt-assoc-public-0",
                "custom": true,
                "id": "rtbassoc-051064ba6718bb270",
                "type": "aws:ec2/routeTableAssociation:RouteTableAssociation",
                "inputs": {
                    "__defaults": [],
                    "routeTableId": "rtb-038eca38cb7b4d47a",
                    "subnetId": "subnet-06368c2eeec944c76"
                },
                "outputs": {
                    "gatewayId": "",
                    "id": "rtbassoc-051064ba6718bb270",
                    "routeTableId": "rtb-038eca38cb7b4d47a",
                    "subnetId": "subnet-06368c2eeec944c76"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "routeTableId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ],
                    "subnetId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/routeTableAssociation:RouteTableAssociation::p-3-rt-assoc-public-1",
                "custom": true,
                "id": "rtbassoc-0c0e505da89995b66",
                "type": "aws:ec2/routeTableAssociation:RouteTableAssociation",
                "inputs": {
                    "__defaults": [],
                    "routeTableId": "rtb-038eca38cb7b4d47a",
                    "subnetId": "subnet-08382870e07aaa6a7"
                },
                "outputs": {
                    "gatewayId": "",
                    "id": "rtbassoc-0c0e505da89995b66",
                    "routeTableId": "rtb-038eca38cb7b4d47a",
                    "subnetId": "subnet-08382870e07aaa6a7"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "routeTableId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ],
                    "subnetId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-3-eks-cluster-instanceRole",
                "custom": false,
                "type": "eks:index:ServiceRole",
                "outputs": {
                    "role": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb",
                        "packageVersion": "",
                        "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-3-eks-cluster-eksRole",
                "custom": false,
                "type": "eks:index:ServiceRole",
                "outputs": {
                    "role": {
                        "4dabf18193072939515e22adb298388d": "5cf8f73096256a8f31e491e813e4eb8e",
                        "id": "p-3-eks-cluster-eksRole-role-cf34518",
                        "packageVersion": "",
                        "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-eksRole-role"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/route:Route::p-3-allow-all-public-rt",
                "custom": true,
                "id": "r-rtb-038eca38cb7b4d47a1080289494",
                "type": "aws:ec2/route:Route",
                "inputs": {
                    "__defaults": [],
                    "destinationCidrBlock": "0.0.0.0/0",
                    "gatewayId": "igw-0dc1cfafc5351f380",
                    "routeTableId": "rtb-038eca38cb7b4d47a"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "carrierGatewayId": "",
                    "destinationCidrBlock": "0.0.0.0/0",
                    "destinationIpv6CidrBlock": "",
                    "destinationPrefixListId": "",
                    "egressOnlyGatewayId": "",
                    "gatewayId": "igw-0dc1cfafc5351f380",
                    "id": "r-rtb-038eca38cb7b4d47a1080289494",
                    "instanceId": "",
                    "instanceOwnerId": "",
                    "localGatewayId": "",
                    "natGatewayId": "",
                    "networkInterfaceId": "",
                    "origin": "CreateRoute",
                    "routeTableId": "rtb-038eca38cb7b4d47a",
                    "state": "active",
                    "transitGatewayId": "",
                    "vpcEndpointId": "",
                    "vpcPeeringConnectionId": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/internetGateway:InternetGateway::p-3-internet-gateway",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "destinationCidrBlock": null,
                    "gatewayId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/internetGateway:InternetGateway::p-3-internet-gateway"
                    ],
                    "routeTableId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                "custom": true,
                "id": "acl-0233fa641a513e5e1",
                "type": "aws:ec2/networkAcl:NetworkAcl",
                "inputs": {
                    "__defaults": [],
                    "egress": [
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "protocol": "tcp",
                            "ruleNo": 100,
                            "toPort": 65535
                        },
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "10.103.0.0/16",
                            "fromPort": 0,
                            "protocol": "-1",
                            "ruleNo": 101,
                            "toPort": 0
                        }
                    ],
                    "ingress": [
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "protocol": "tcp",
                            "ruleNo": 100,
                            "toPort": 65535
                        },
                        {
                            "__defaults": [],
                            "action": "ALLOW",
                            "cidrBlock": "10.103.0.0/16",
                            "fromPort": 0,
                            "protocol": "-1",
                            "ruleNo": 101,
                            "toPort": 0
                        }
                    ],
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "arn": "arn:aws:ec2:us-west-2:030813887342:network-acl/acl-0233fa641a513e5e1",
                    "egress": [
                        {
                            "action": "allow",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "6",
                            "ruleNo": 100,
                            "toPort": 65535
                        },
                        {
                            "action": "allow",
                            "cidrBlock": "10.103.0.0/16",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "-1",
                            "ruleNo": 101,
                            "toPort": 0
                        }
                    ],
                    "id": "acl-0233fa641a513e5e1",
                    "ingress": [
                        {
                            "action": "allow",
                            "cidrBlock": "0.0.0.0/0",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "6",
                            "ruleNo": 100,
                            "toPort": 65535
                        },
                        {
                            "action": "allow",
                            "cidrBlock": "10.103.0.0/16",
                            "fromPort": 0,
                            "icmpCode": 0,
                            "icmpType": 0,
                            "ipv6CidrBlock": "",
                            "protocol": "-1",
                            "ruleNo": 101,
                            "toPort": 0
                        }
                    ],
                    "ownerId": "030813887342",
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "egress": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ],
                    "ingress": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ],
                    "subnetIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet"
                    ],
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/routeTableAssociation:RouteTableAssociation::p-3-rt-assoc-private-0",
                "custom": true,
                "id": "rtbassoc-0ece333700b369259",
                "type": "aws:ec2/routeTableAssociation:RouteTableAssociation",
                "inputs": {
                    "__defaults": [],
                    "routeTableId": "rtb-0aa99465a704b99ca",
                    "subnetId": "subnet-0e17b2c51bb9d79f4"
                },
                "outputs": {
                    "gatewayId": "",
                    "id": "rtbassoc-0ece333700b369259",
                    "routeTableId": "rtb-0aa99465a704b99ca",
                    "subnetId": "subnet-0e17b2c51bb9d79f4"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "routeTableId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt"
                    ],
                    "subnetId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/vpcEndpoint:VpcEndpoint::s3-endpoint",
                "custom": true,
                "id": "vpce-050df9f852eb103b2",
                "type": "aws:ec2/vpcEndpoint:VpcEndpoint",
                "inputs": {
                    "__defaults": [
                        "privateDnsEnabled"
                    ],
                    "privateDnsEnabled": false,
                    "routeTableIds": [
                        "rtb-0aa99465a704b99ca"
                    ],
                    "serviceName": "com.amazonaws.us-west-2.s3",
                    "tags": {
                        "Name": "p-3-s3-endpoint",
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcEndpointType": "Gateway",
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":600000000000,\"update\":600000000000}}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:vpc-endpoint/vpce-050df9f852eb103b2",
                    "cidrBlocks": [
                        "3.5.76.0/22",
                        "3.5.80.0/21",
                        "18.34.48.0/20",
                        "18.34.244.0/22",
                        "52.92.128.0/17",
                        "52.218.128.0/17"
                    ],
                    "dnsEntries": [],
                    "id": "vpce-050df9f852eb103b2",
                    "networkInterfaceIds": [],
                    "ownerId": "030813887342",
                    "policy": "{\"Statement\":[{\"Action\":\"*\",\"Effect\":\"Allow\",\"Principal\":\"*\",\"Resource\":\"*\"}],\"Version\":\"2008-10-17\"}",
                    "prefixListId": "pl-68a54001",
                    "privateDnsEnabled": false,
                    "requesterManaged": false,
                    "routeTableIds": [
                        "rtb-0aa99465a704b99ca"
                    ],
                    "securityGroupIds": [],
                    "serviceName": "com.amazonaws.us-west-2.s3",
                    "state": "available",
                    "subnetIds": [],
                    "tags": {
                        "Name": "p-3-s3-endpoint",
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "Name": "p-3-s3-endpoint",
                        "managed-by": "fennel.ai"
                    },
                    "vpcEndpointType": "Gateway",
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "routeTableIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt"
                    ],
                    "serviceName": null,
                    "tags": null,
                    "vpcEndpointType": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/routeTableAssociation:RouteTableAssociation::p-3-rt-assoc-private-1",
                "custom": true,
                "id": "rtbassoc-0ef00f932f57ed573",
                "type": "aws:ec2/routeTableAssociation:RouteTableAssociation",
                "inputs": {
                    "__defaults": [],
                    "routeTableId": "rtb-0aa99465a704b99ca",
                    "subnetId": "subnet-0615a2647b66a222c"
                },
                "outputs": {
                    "gatewayId": "",
                    "id": "rtbassoc-0ef00f932f57ed573",
                    "routeTableId": "rtb-0aa99465a704b99ca",
                    "subnetId": "subnet-0615a2647b66a222c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "routeTableId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt"
                    ],
                    "subnetId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/route:Route::p-3-route-to-control-plane-0",
                "custom": true,
                "id": "r-rtb-0aa99465a704b99ca3854007479",
                "type": "aws:ec2/route:Route",
                "inputs": {
                    "__defaults": [],
                    "destinationCidrBlock": "172.31.0.0/16",
                    "routeTableId": "rtb-0aa99465a704b99ca",
                    "vpcPeeringConnectionId": "pcx-05cbfb0d43bf374e9"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "carrierGatewayId": "",
                    "destinationCidrBlock": "172.31.0.0/16",
                    "destinationIpv6CidrBlock": "",
                    "destinationPrefixListId": "",
                    "egressOnlyGatewayId": "",
                    "gatewayId": "",
                    "id": "r-rtb-0aa99465a704b99ca3854007479",
                    "instanceId": "",
                    "instanceOwnerId": "",
                    "localGatewayId": "",
                    "natGatewayId": "",
                    "networkInterfaceId": "",
                    "origin": "CreateRoute",
                    "routeTableId": "rtb-0aa99465a704b99ca",
                    "state": "active",
                    "transitGatewayId": "",
                    "vpcEndpointId": "",
                    "vpcPeeringConnectionId": "pcx-05cbfb0d43bf374e9"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-3-peering-connection"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "destinationCidrBlock": null,
                    "routeTableId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt"
                    ],
                    "vpcPeeringConnectionId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpcPeeringConnection:VpcPeeringConnection::p-3-peering-connection"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/natGateway:NatGateway::p-3-nat-gateway",
                "custom": true,
                "id": "nat-0e88b135fcff38984",
                "type": "aws:ec2/natGateway:NatGateway",
                "inputs": {
                    "__defaults": [
                        "connectivityType"
                    ],
                    "allocationId": "eipalloc-05334f715567272ba",
                    "connectivityType": "public",
                    "subnetId": "subnet-06368c2eeec944c76",
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "allocationId": "eipalloc-05334f715567272ba",
                    "connectivityType": "public",
                    "id": "nat-0e88b135fcff38984",
                    "networkInterfaceId": "eni-0ef159d9284886802",
                    "privateIp": "10.103.34.165",
                    "publicIp": "44.228.106.241",
                    "subnetId": "subnet-06368c2eeec944c76",
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/eip:Eip::p-3-eip",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "allocationId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/eip:Eip::p-3-eip"
                    ],
                    "subnetId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet"
                    ],
                    "tags": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:elasticache/parameterGroup:ParameterGroup::p-3-cache-pg",
                "custom": true,
                "id": "p-3-cache-pg-e78f834",
                "type": "aws:elasticache/parameterGroup:ParameterGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Managed by Pulumi",
                    "family": "redis6.x",
                    "name": "p-3-cache-pg-e78f834",
                    "parameters": [
                        {
                            "__defaults": [],
                            "name": "maxmemory-policy",
                            "value": "allkeys-lru"
                        },
                        {
                            "__defaults": [],
                            "name": "cluster-enabled",
                            "value": "yes"
                        }
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:elasticache:us-west-2:030813887342:parametergroup:p-3-cache-pg-e78f834",
                    "description": "Managed by Pulumi",
                    "family": "redis6.x",
                    "id": "p-3-cache-pg-e78f834",
                    "name": "p-3-cache-pg-e78f834",
                    "parameters": [
                        {
                            "name": "cluster-enabled",
                            "value": "yes"
                        },
                        {
                            "name": "maxmemory-policy",
                            "value": "allkeys-lru"
                        }
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::cache-aws-provider::54ec0dc8-ad8a-4494-ba57-cb43e332ab76",
                "propertyDependencies": {
                    "description": null,
                    "family": null,
                    "parameters": null,
                    "tags": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::glue-source-bucket",
                "custom": true,
                "id": "p-3-gluejob-source",
                "type": "aws:s3/bucket:Bucket",
                "inputs": {
                    "__defaults": [],
                    "acl": "private",
                    "bucket": "p-3-gluejob-source",
                    "forceDestroy": true
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::p-3-gluejob-source",
                    "bucket": "p-3-gluejob-source",
                    "bucketDomainName": "p-3-gluejob-source.s3.amazonaws.com",
                    "bucketRegionalDomainName": "p-3-gluejob-source.s3.us-west-2.amazonaws.com",
                    "corsRules": [],
                    "forceDestroy": true,
                    "grants": [],
                    "hostedZoneId": "Z3BJ6K6RIION7M",
                    "id": "p-3-gluejob-source",
                    "lifecycleRules": [],
                    "loggings": [],
                    "objectLockConfiguration": null,
                    "region": "us-west-2",
                    "replicationConfiguration": null,
                    "requestPayer": "BucketOwner",
                    "serverSideEncryptionConfiguration": null,
                    "tags": {},
                    "tagsAll": {},
                    "versioning": {
                        "enabled": false,
                        "mfaDelete": false
                    },
                    "website": null
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::glue-source-aws-provider::40273a30-d6a9-4dc6-a682-d54c3ddb7967",
                "propertyDependencies": {
                    "acl": null,
                    "bucket": null,
                    "forceDestroy": null
                },
                "sequenceNumber": 2
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/user:User::milvus-p-3",
                "custom": true,
                "id": "p-3-milvus-user",
                "type": "aws:iam/user:User",
                "inputs": {
                    "__defaults": [
                        "forceDestroy",
                        "path"
                    ],
                    "forceDestroy": false,
                    "name": "p-3-milvus-user",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:user/p-3-milvus-user",
                    "forceDestroy": false,
                    "id": "p-3-milvus-user",
                    "name": "p-3-milvus-user",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AIDAQOLFGTNXJPQAMCAQ7"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::milvus-aws-provider::a98e4333-c33d-4116-abce-a093e2ecb200",
                "propertyDependencies": {
                    "name": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::confluent:index/confluentEnvironment:ConfluentEnvironment::conf-env",
                "custom": true,
                "id": "env-ry1w0",
                "type": "confluent:index/confluentEnvironment:ConfluentEnvironment",
                "inputs": {
                    "__defaults": [],
                    "name": "plane-3"
                },
                "outputs": {
                    "id": "env-ry1w0",
                    "name": "plane-3"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:confluent::conf-provider::a04ab6f7-c710-478f-b18e-57c5f42d108e",
                "propertyDependencies": {
                    "name": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/policy:Policy::p-3-otel-collector-policy",
                "custom": true,
                "id": "arn:aws:iam::030813887342:policy/p-3-AWSDistroOpenTelemetryPolicy-20220322025614485200000001",
                "type": "aws:iam/policy:Policy",
                "inputs": {
                    "__defaults": [
                        "path"
                    ],
                    "namePrefix": "p-3-AWSDistroOpenTelemetryPolicy-",
                    "path": "/",
                    "policy": "{\n        \"Version\": \"2012-10-17\",\n        \"Statement\": [\n            {\n                \"Effect\": \"Allow\",\n                \"Action\": [\n                    \"logs:PutLogEvents\",\n                    \"logs:CreateLogGroup\",\n                    \"logs:CreateLogStream\",\n                    \"logs:DescribeLogStreams\",\n                    \"logs:DescribeLogGroups\",\n                    \"cloudwatch:PutMetricData\",\n                    \"xray:PutTraceSegments\",\n                    \"xray:PutTelemetryRecords\",\n                    \"xray:GetSamplingRules\",\n                    \"xray:GetSamplingTargets\",\n                    \"xray:GetSamplingStatisticSummaries\",\n                    \"ssm:GetParameters\",\n                    \"aps:RemoteWrite\"\n                ],\n                \"Resource\": \"*\"\n            }\n        ]\n    }\n    "
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:policy/p-3-AWSDistroOpenTelemetryPolicy-20220322025614485200000001",
                    "description": "",
                    "id": "arn:aws:iam::030813887342:policy/p-3-AWSDistroOpenTelemetryPolicy-20220322025614485200000001",
                    "name": "p-3-AWSDistroOpenTelemetryPolicy-20220322025614485200000001",
                    "namePrefix": "p-3-AWSDistroOpenTelemetryPolicy-",
                    "path": "/",
                    "policy": "{\"Statement\":[{\"Action\":[\"logs:PutLogEvents\",\"logs:CreateLogGroup\",\"logs:CreateLogStream\",\"logs:DescribeLogStreams\",\"logs:DescribeLogGroups\",\"cloudwatch:PutMetricData\",\"xray:PutTraceSegments\",\"xray:PutTelemetryRecords\",\"xray:GetSamplingRules\",\"xray:GetSamplingTargets\",\"xray:GetSamplingStatisticSummaries\",\"ssm:GetParameters\",\"aps:RemoteWrite\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
                    "policyId": "ANPAQOLFGTNXKZ6NH37F5",
                    "tags": {},
                    "tagsAll": {}
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::tele-aws-provider::8a93fbf2-2243-4c81-8798-3be31bfda4ca",
                "propertyDependencies": {
                    "namePrefix": null,
                    "policy": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::p-3-offline-aggregate-source-bucket",
                "custom": true,
                "id": "p-3-offline-aggregate-source",
                "type": "aws:s3/bucket:Bucket",
                "inputs": {
                    "__defaults": [],
                    "acl": "private",
                    "bucket": "p-3-offline-aggregate-source",
                    "forceDestroy": true
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::p-3-offline-aggregate-source",
                    "bucket": "p-3-offline-aggregate-source",
                    "bucketDomainName": "p-3-offline-aggregate-source.s3.amazonaws.com",
                    "bucketRegionalDomainName": "p-3-offline-aggregate-source.s3.us-west-2.amazonaws.com",
                    "corsRules": [],
                    "forceDestroy": true,
                    "grants": [],
                    "hostedZoneId": "Z3BJ6K6RIION7M",
                    "id": "p-3-offline-aggregate-source",
                    "lifecycleRules": [],
                    "loggings": [],
                    "objectLockConfiguration": null,
                    "region": "us-west-2",
                    "replicationConfiguration": null,
                    "requestPayer": "BucketOwner",
                    "serverSideEncryptionConfiguration": null,
                    "tags": {},
                    "tagsAll": {},
                    "versioning": {
                        "enabled": false,
                        "mfaDelete": false
                    },
                    "website": null
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::offline-aggregate-source-aws-provider::739626f9-b430-4703-8282-4e46ba9b0dbd",
                "propertyDependencies": {
                    "acl": null,
                    "bucket": null,
                    "forceDestroy": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::conn-sink-bucket",
                "custom": true,
                "id": "p-3-training-data",
                "type": "aws:s3/bucket:Bucket",
                "inputs": {
                    "__defaults": [],
                    "acl": "private",
                    "bucket": "p-3-training-data",
                    "forceDestroy": true
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::p-3-training-data",
                    "bucket": "p-3-training-data",
                    "bucketDomainName": "p-3-training-data.s3.amazonaws.com",
                    "bucketRegionalDomainName": "p-3-training-data.s3.us-west-2.amazonaws.com",
                    "corsRules": [],
                    "forceDestroy": true,
                    "grants": [],
                    "hostedZoneId": "Z3BJ6K6RIION7M",
                    "id": "p-3-training-data",
                    "lifecycleRules": [],
                    "loggings": [],
                    "objectLockConfiguration": null,
                    "region": "us-west-2",
                    "replicationConfiguration": null,
                    "requestPayer": "BucketOwner",
                    "serverSideEncryptionConfiguration": null,
                    "tags": {},
                    "tagsAll": {},
                    "versioning": {
                        "enabled": false,
                        "mfaDelete": false
                    },
                    "website": null
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::connector-sink-aws-provider::3cc7c16b-f14f-4caf-9a2f-369ea16085f6",
                "propertyDependencies": {
                    "acl": null,
                    "bucket": null,
                    "forceDestroy": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:amp/workspace:Workspace::p-3-prom",
                "custom": true,
                "id": "ws-09330607-fd6e-4e8a-8c1d-5c0bcfd1d0b0",
                "type": "aws:amp/workspace:Workspace",
                "inputs": {
                    "__defaults": [],
                    "alias": "p-3-prom"
                },
                "outputs": {
                    "alias": "p-3-prom",
                    "arn": "arn:aws:aps:us-west-2:030813887342:workspace/ws-09330607-fd6e-4e8a-8c1d-5c0bcfd1d0b0",
                    "id": "ws-09330607-fd6e-4e8a-8c1d-5c0bcfd1d0b0",
                    "prometheusEndpoint": "https://aps-workspaces.us-west-2.amazonaws.com/workspaces/ws-09330607-fd6e-4e8a-8c1d-5c0bcfd1d0b0/"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::prom-aws-provider::6ac4bcaa-972b-450a-8d15-a9ee3bbd479b",
                "propertyDependencies": {
                    "alias": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::command:local:Command::waiter",
                "custom": true,
                "id": "773852404ed94",
                "type": "command:local:Command",
                "inputs": {
                    "create": "kubectl wait deploy/emissary-apiext --for condition=available -n emissary-system"
                },
                "outputs": {
                    "create": "kubectl wait deploy/emissary-apiext --for condition=available -n emissary-system",
                    "stderr": "",
                    "stdout": "deployment.apps/emissary-apiext condition met"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3::c961a00c-e82d-41f0-8091-29a4cf93f731",
                "propertyDependencies": {
                    "create": null
                },
                "customTimeouts": {
                    "create": 3600
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-ca",
                "custom": true,
                "id": "6629783873416",
                "type": "command:local:Command",
                "inputs": {
                    "create": "step certificate create identity.linkerd.cluster.local issuer.crt issuer.key --profile intermediate-ca --not-after 8760h --no-password --insecure --ca ca.crt --ca-key ca.key",
                    "delete": "rm -f issuer.crt issuer.key"
                },
                "outputs": {
                    "create": "step certificate create identity.linkerd.cluster.local issuer.crt issuer.key --profile intermediate-ca --not-after 8760h --no-password --insecure --ca ca.crt --ca-key ca.key",
                    "delete": "rm -f issuer.crt issuer.key",
                    "stderr": "Your certificate has been saved in issuer.crt.\nYour private key has been saved in issuer.key.",
                    "stdout": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::command:local:Command::root-ca"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3::c961a00c-e82d-41f0-8091-29a4cf93f731",
                "propertyDependencies": {
                    "create": null,
                    "delete": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::command:local:Command::ca-crt",
                "custom": true,
                "id": "66298b6c46dd4",
                "type": "command:local:Command",
                "inputs": {
                    "create": "cat ca.crt"
                },
                "outputs": {
                    "create": "cat ca.crt",
                    "stderr": "",
                    "stdout": "-----BEGIN CERTIFICATE-----\nMIIBjjCCATSgAwIBAgIRAMP4VJSVqJqLYSPpQUxQB6AwCgYIKoZIzj0EAwIwJTEj\nMCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjIwMzIyMDI1\nNjA5WhcNMzIwMzE5MDI1NjA5WjAlMSMwIQYDVQQDExpyb290LmxpbmtlcmQuY2x1\nc3Rlci5sb2NhbDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGsxx7FX10YFHJPQ\nUBsgx/1jhA5yZWfkP8Sf/zowxRf6nWAz3PZLO9D039CjdDNBEjJA5FGYqr3zcLM2\nI20kazSjRTBDMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMB0G\nA1UdDgQWBBQ5M4ZbuhxMs4hF24s9pkGQChf1VjAKBggqhkjOPQQDAgNIADBFAiBd\nOde13Lw77E0xCku7/O9ISfk3aG8yntozvpAsm5wQ4QIhAPpXM7Y+p37SqLyeCUqy\nqX93ThzzxRuVb5LGBENKyCIL\n-----END CERTIFICATE-----"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::command:local:Command::root-ca"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3::c961a00c-e82d-41f0-8091-29a4cf93f731",
                "propertyDependencies": {
                    "create": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                "custom": true,
                "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "name",
                        "path"
                    ],
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"ec2.amazonaws.com\"]}}]}",
                    "forceDetachPolicies": false,
                    "maxSessionDuration": 3600,
                    "name": "p-3-eks-cluster-instanceRole-role-dcb5bdb",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2022-03-22T02:56:13Z",
                    "description": "",
                    "forceDetachPolicies": false,
                    "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb",
                    "inlinePolicies": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "p-3-eks-cluster-instanceRole-role-dcb5bdb",
                    "namePrefix": "",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAQOLFGTNXG3IPYVYWL"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-3-eks-cluster-instanceRole",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "assumeRolePolicy": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-eksRole-role",
                "custom": true,
                "id": "p-3-eks-cluster-eksRole-role-cf34518",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "name",
                        "path"
                    ],
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"sts:AssumeRole\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":[\"eks.amazonaws.com\"]}}]}",
                    "description": "Allows EKS to manage clusters on your behalf.",
                    "forceDetachPolicies": false,
                    "maxSessionDuration": 3600,
                    "name": "p-3-eks-cluster-eksRole-role-cf34518",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-eksRole-role-cf34518",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}",
                    "createDate": "2022-03-22T02:56:13Z",
                    "description": "Allows EKS to manage clusters on your behalf.",
                    "forceDetachPolicies": false,
                    "id": "p-3-eks-cluster-eksRole-role-cf34518",
                    "inlinePolicies": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "p-3-eks-cluster-eksRole-role-cf34518",
                    "namePrefix": "",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAQOLFGTNXHOEDATCAQ"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-3-eks-cluster-eksRole",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "assumeRolePolicy": null,
                    "description": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup",
                "custom": true,
                "id": "sg-05b57e1a5ad5c4ea1",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Managed by Pulumi",
                    "name": "p-3-eks-cluster-eksClusterSecurityGroup-6c8b773",
                    "revokeRulesOnDelete": true,
                    "tags": {
                        "Name": "p-3-eks-cluster-eksClusterSecurityGroup",
                        "__defaults": []
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:security-group/sg-05b57e1a5ad5c4ea1",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-05b57e1a5ad5c4ea1",
                    "ingress": [],
                    "name": "p-3-eks-cluster-eksClusterSecurityGroup-6c8b773",
                    "namePrefix": "",
                    "ownerId": "030813887342",
                    "revokeRulesOnDelete": true,
                    "tags": {
                        "Name": "p-3-eks-cluster-eksClusterSecurityGroup"
                    },
                    "tagsAll": {
                        "Name": "p-3-eks-cluster-eksClusterSecurityGroup"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "description": null,
                    "revokeRulesOnDelete": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/user:User::conn-sink-user",
                "custom": true,
                "id": "p-3-conn-sink-user",
                "type": "aws:iam/user:User",
                "inputs": {
                    "__defaults": [
                        "forceDestroy"
                    ],
                    "forceDestroy": false,
                    "name": "p-3-conn-sink-user",
                    "path": "/conf_conn_user/",
                    "tags": {
                        "__defaults": [],
                        "managed_by": "fennel.ai",
                        "plane": "p-3",
                        "sink": "p-3-training-data"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:user/conf_conn_user/p-3-conn-sink-user",
                    "forceDestroy": false,
                    "id": "p-3-conn-sink-user",
                    "name": "p-3-conn-sink-user",
                    "path": "/conf_conn_user/",
                    "tags": {
                        "managed_by": "fennel.ai",
                        "plane": "p-3",
                        "sink": "p-3-training-data"
                    },
                    "tagsAll": {
                        "managed_by": "fennel.ai",
                        "plane": "p-3",
                        "sink": "p-3-training-data"
                    },
                    "uniqueId": "AIDAQOLFGTNXNHD3ZEKT4"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::conn-sink-bucket"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::connector-sink-aws-provider::3cc7c16b-f14f-4caf-9a2f-369ea16085f6",
                "propertyDependencies": {
                    "name": null,
                    "path": null,
                    "tags": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-crt",
                "custom": true,
                "id": "66310d498da71",
                "type": "command:local:Command",
                "inputs": {
                    "create": "cat issuer.crt"
                },
                "outputs": {
                    "create": "cat issuer.crt",
                    "stderr": "",
                    "stdout": "-----BEGIN CERTIFICATE-----\nMIIBszCCAVmgAwIBAgIRAPRFi+dfLDRA621jQa6ZFYcwCgYIKoZIzj0EAwIwJTEj\nMCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjIwMzIyMDI1\nNjE2WhcNMjMwMzIyMDI1NjE2WjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJk\nLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAR3kQDBgCoK\nr+aNmHDuWBltK6tmI8TdLaRe8xyJJcgOMdoI8NWUGz6D2/kKFTM/zKqTypoXX4ZM\ntQYakdtGYqJSo2YwZDAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIB\nADAdBgNVHQ4EFgQU9VKHHbGjgBNrGkKuci+IrKa1cqYwHwYDVR0jBBgwFoAUOTOG\nW7ocTLOIRduLPaZBkAoX9VYwCgYIKoZIzj0EAwIDSAAwRQIgFLrksvTzKyJcElez\n9iRVn6nz81b8k4WH2GDLKeqzkKMCIQDTAJReLM7m33FzgUkqVhWPMNvXkey2j/UC\n75jg2V7aZg==\n-----END CERTIFICATE-----"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-ca"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3::c961a00c-e82d-41f0-8091-29a4cf93f731",
                "propertyDependencies": {
                    "create": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-key",
                "custom": true,
                "id": "66311e0559142",
                "type": "command:local:Command",
                "inputs": {
                    "create": "cat issuer.key"
                },
                "outputs": {
                    "create": "cat issuer.key",
                    "stderr": "",
                    "stdout": "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIN+Kl/Av5MXRweTZmIHcSaPa15m7eGbAI/vBBdZpqKeuoAoGCCqGSM49\nAwEHoUQDQgAEd5EAwYAqCq/mjZhw7lgZbSurZiPE3S2kXvMciSXIDjHaCPDVlBs+\ng9v5ChUzP8yqk8qaF1+GTLUGGpHbRmKiUg==\n-----END EC PRIVATE KEY-----"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-ca"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3::c961a00c-e82d-41f0-8091-29a4cf93f731",
                "propertyDependencies": {
                    "create": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-3-eks-cluster-eksClusterInternetEgressRule",
                "custom": true,
                "id": "sgrule-2642216731",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "0.0.0.0/0"
                    ],
                    "description": "Allow internet access.",
                    "fromPort": 0,
                    "protocol": "-1",
                    "securityGroupId": "sg-05b57e1a5ad5c4ea1",
                    "toPort": 0,
                    "type": "egress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "0.0.0.0/0"
                    ],
                    "description": "Allow internet access.",
                    "fromPort": 0,
                    "id": "sgrule-2642216731",
                    "protocol": "-1",
                    "securityGroupId": "sg-05b57e1a5ad5c4ea1",
                    "self": false,
                    "toPort": 0,
                    "type": "egress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup"
                    ],
                    "toPort": null,
                    "type": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/accessKey:AccessKey::milvus-p-3-access-key",
                "custom": true,
                "id": "AKIAQOLFGTNXMQUOE2HK",
                "type": "aws:iam/accessKey:AccessKey",
                "inputs": {
                    "__defaults": [
                        "status"
                    ],
                    "status": "Active",
                    "user": "p-3-milvus-user"
                },
                "outputs": {
                    "createDate": "2022-06-07T07:21:08Z",
                    "id": "AKIAQOLFGTNXMQUOE2HK",
                    "secret": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABACCNfNMupCakF1PzgIk+kEQsa0hNfZ49cb2fOoURHVUEhSSpfhpalE/tBb3zlAgbF+oYhY8vbIsvAWzKiBU5nqJSabKo2f4="
                    },
                    "sesSmtpPasswordV4": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAGVpqE0AdLWehjGo6otEFgXfAuj3m7k3OJ0hSuiux2bkDD8O2+BGycaJp1dzbaP6xoEObZwCxwx/LglvJjHC4cwCjIQLQx6dkKO/"
                    },
                    "status": "Active",
                    "user": "p-3-milvus-user"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/user:User::milvus-p-3"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::milvus-aws-provider::a98e4333-c33d-4116-abce-a093e2ecb200",
                "propertyDependencies": {
                    "user": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/user:User::milvus-p-3"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-unleash-db-sg",
                "custom": true,
                "id": "sg-0176f118fb8fbbe3f",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "revokeRulesOnDelete"
                    ],
                    "description": "Managed by Pulumi",
                    "namePrefix": "p-3-unleash-db-sg-",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:security-group/sg-0176f118fb8fbbe3f",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-0176f118fb8fbbe3f",
                    "ingress": [],
                    "name": "p-3-unleash-db-sg-20220529012304276300000001",
                    "namePrefix": "p-3-unleash-db-sg-",
                    "ownerId": "030813887342",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::p-3-unleash-aurora-aws-provider::fcf36285-052d-49b1-879f-e14518d7d39e",
                "propertyDependencies": {
                    "description": null,
                    "namePrefix": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-db-sg",
                "custom": true,
                "id": "sg-05840b7dcfd0ec43f",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "revokeRulesOnDelete"
                    ],
                    "description": "Managed by Pulumi",
                    "namePrefix": "p-3-db-sg-",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:security-group/sg-05840b7dcfd0ec43f",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-05840b7dcfd0ec43f",
                    "ingress": [],
                    "name": "p-3-db-sg-20220322025716384800000001",
                    "namePrefix": "p-3-db-sg-",
                    "ownerId": "030813887342",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aurora-aws-provider::134d52f5-7f5e-4454-b1be-748af511a354",
                "propertyDependencies": {
                    "description": null,
                    "namePrefix": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::confluent:index/kafkaCluster:KafkaCluster::cluster",
                "custom": true,
                "id": "lkc-811rkq",
                "type": "confluent:index/kafkaCluster:KafkaCluster",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "availability": "LOW",
                    "environmentId": "env-ry1w0",
                    "name": "cluster-4a33703",
                    "region": "us-west-2",
                    "serviceProvider": "AWS"
                },
                "outputs": {
                    "availability": "LOW",
                    "bootstrapServers": "SASL_SSL://pkc-pgq85.us-west-2.aws.confluent.cloud:9092",
                    "environmentId": "env-ry1w0",
                    "id": "lkc-811rkq",
                    "name": "cluster-4a33703",
                    "region": "us-west-2",
                    "serviceProvider": "AWS"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::confluent:index/confluentEnvironment:ConfluentEnvironment::conf-env"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:confluent::conf-provider::a04ab6f7-c710-478f-b18e-57c5f42d108e",
                "propertyDependencies": {
                    "availability": null,
                    "environmentId": [
                        "urn:pulumi:plane-3::launchpad::confluent:index/confluentEnvironment:ConfluentEnvironment::conf-env"
                    ],
                    "region": null,
                    "serviceProvider": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-redis-sg",
                "custom": true,
                "id": "sg-09e571f0713759de2",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "revokeRulesOnDelete"
                    ],
                    "description": "Managed by Pulumi",
                    "namePrefix": "p-3-redis-sg-",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:security-group/sg-09e571f0713759de2",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-09e571f0713759de2",
                    "ingress": [],
                    "name": "p-3-redis-sg-20220322025716251800000001",
                    "namePrefix": "p-3-redis-sg-",
                    "ownerId": "030813887342",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::redis-aws-provider::5e1ff797-2ef0-488a-9b9f-7f4d89f937d2",
                "propertyDependencies": {
                    "description": null,
                    "namePrefix": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-cache-sg",
                "custom": true,
                "id": "sg-05be6e341ac459146",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "name",
                        "revokeRulesOnDelete"
                    ],
                    "description": "Managed by Pulumi",
                    "name": "p-3-cache-sg-c30b840",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:security-group/sg-05be6e341ac459146",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-05be6e341ac459146",
                    "ingress": [],
                    "name": "p-3-cache-sg-c30b840",
                    "namePrefix": "",
                    "ownerId": "030813887342",
                    "revokeRulesOnDelete": false,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::cache-aws-provider::54ec0dc8-ad8a-4494-ba57-cb43e332ab76",
                "propertyDependencies": {
                    "description": null,
                    "tags": null,
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/route:Route::p-3-allow-all-private-rt",
                "custom": true,
                "id": "r-rtb-0aa99465a704b99ca1080289494",
                "type": "aws:ec2/route:Route",
                "inputs": {
                    "__defaults": [],
                    "destinationCidrBlock": "0.0.0.0/0",
                    "natGatewayId": "nat-0e88b135fcff38984",
                    "routeTableId": "rtb-0aa99465a704b99ca"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":300000000000,\"delete\":300000000000,\"update\":120000000000}}",
                    "carrierGatewayId": "",
                    "destinationCidrBlock": "0.0.0.0/0",
                    "destinationIpv6CidrBlock": "",
                    "destinationPrefixListId": "",
                    "egressOnlyGatewayId": "",
                    "gatewayId": "",
                    "id": "r-rtb-0aa99465a704b99ca1080289494",
                    "instanceId": "",
                    "instanceOwnerId": "",
                    "localGatewayId": "",
                    "natGatewayId": "nat-0e88b135fcff38984",
                    "networkInterfaceId": "",
                    "origin": "CreateRoute",
                    "routeTableId": "rtb-0aa99465a704b99ca",
                    "state": "active",
                    "transitGatewayId": "",
                    "vpcEndpointId": "",
                    "vpcPeeringConnectionId": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/natGateway:NatGateway::p-3-nat-gateway",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aws-provider::41ab87da-68f9-40f4-86d4-e278d7bf429e",
                "propertyDependencies": {
                    "destinationCidrBlock": null,
                    "natGatewayId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/natGateway:NatGateway::p-3-nat-gateway"
                    ],
                    "routeTableId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::milvus-bucket-3",
                "custom": true,
                "id": "p-3-milvus-data",
                "type": "aws:s3/bucket:Bucket",
                "inputs": {
                    "__defaults": [
                        "acl",
                        "forceDestroy"
                    ],
                    "acl": "private",
                    "bucket": "p-3-milvus-data",
                    "forceDestroy": false,
                    "policy": "{\"Statement\":[{\"Action\":[\"s3:*\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::030813887342:user/p-3-milvus-user\"},\"Resource\":[\"arn:aws:s3:::p-3-milvus-data\",\"arn:aws:s3:::p-3-milvus-data/*\"]}],\"Version\":\"2012-10-17\"}"
                },
                "outputs": {
                    "accelerationStatus": "",
                    "acl": "private",
                    "arn": "arn:aws:s3:::p-3-milvus-data",
                    "bucket": "p-3-milvus-data",
                    "bucketDomainName": "p-3-milvus-data.s3.amazonaws.com",
                    "bucketRegionalDomainName": "p-3-milvus-data.s3.us-west-2.amazonaws.com",
                    "corsRules": [],
                    "forceDestroy": false,
                    "grants": [],
                    "hostedZoneId": "Z3BJ6K6RIION7M",
                    "id": "p-3-milvus-data",
                    "lifecycleRules": [],
                    "loggings": [],
                    "objectLockConfiguration": null,
                    "policy": "{\"Statement\":[{\"Action\":[\"s3:*\"],\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::030813887342:user/p-3-milvus-user\"},\"Resource\":[\"arn:aws:s3:::p-3-milvus-data\",\"arn:aws:s3:::p-3-milvus-data/*\"]}],\"Version\":\"2012-10-17\"}",
                    "region": "us-west-2",
                    "replicationConfiguration": null,
                    "requestPayer": "BucketOwner",
                    "serverSideEncryptionConfiguration": null,
                    "tags": {},
                    "tagsAll": {},
                    "versioning": {
                        "enabled": false,
                        "mfaDelete": false
                    },
                    "website": null
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/user:User::milvus-p-3"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::milvus-aws-provider::a98e4333-c33d-4116-abce-a093e2ecb200",
                "propertyDependencies": {
                    "bucket": null,
                    "policy": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/user:User::milvus-p-3"
                    ]
                },
                "sequenceNumber": 2
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:s3/bucketObject:BucketObject::py-source-object",
                "custom": true,
                "id": "aws_glue_parquet_transforms.py",
                "type": "aws:s3/bucketObject:BucketObject",
                "inputs": {
                    "__defaults": [
                        "acl",
                        "forceDestroy"
                    ],
                    "acl": "private",
                    "bucket": "p-3-gluejob-source",
                    "etag": "f9a60c63a556e6596847f2f225150ed8",
                    "forceDestroy": false,
                    "key": "aws_glue_parquet_transforms.py",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "18e847356f3cdab7af4fd880ae4b0bec47ce4148be8d4c1f341d39feb460663e",
                        "path": "/Users/mohitreddy/rexer/tools/aws_glue_parquet_transform.py"
                    },
                    "sourceHash": "f9a60c63a556e6596847f2f225150ed8"
                },
                "outputs": {
                    "acl": "private",
                    "bucket": "p-3-gluejob-source",
                    "bucketKeyEnabled": false,
                    "cacheControl": "",
                    "contentDisposition": "",
                    "contentEncoding": "",
                    "contentLanguage": "",
                    "contentType": "binary/octet-stream",
                    "etag": "f9a60c63a556e6596847f2f225150ed8",
                    "forceDestroy": false,
                    "id": "aws_glue_parquet_transforms.py",
                    "key": "aws_glue_parquet_transforms.py",
                    "metadata": {},
                    "objectLockLegalHoldStatus": "",
                    "objectLockMode": "",
                    "objectLockRetainUntilDate": "",
                    "serverSideEncryption": "",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "18e847356f3cdab7af4fd880ae4b0bec47ce4148be8d4c1f341d39feb460663e",
                        "path": "/Users/mohitreddy/rexer/tools/aws_glue_parquet_transform.py"
                    },
                    "sourceHash": "f9a60c63a556e6596847f2f225150ed8",
                    "storageClass": "STANDARD",
                    "tags": {},
                    "tagsAll": {},
                    "versionId": "",
                    "websiteRedirect": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::glue-source-bucket"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::glue-source-aws-provider::40273a30-d6a9-4dc6-a682-d54c3ddb7967",
                "propertyDependencies": {
                    "bucket": [
                        "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::glue-source-bucket"
                    ],
                    "etag": null,
                    "key": null,
                    "source": null,
                    "sourceHash": null
                },
                "sequenceNumber": 2
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                "custom": true,
                "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220322025618122600000004",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "outputs": {
                    "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220322025618122600000004",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-3-eks-cluster-instanceRole",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "policyArn": null,
                    "role": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                "custom": true,
                "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220322025618266400000005",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "outputs": {
                    "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220322025618266400000005",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-3-eks-cluster-instanceRole",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "policyArn": null,
                    "role": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                "custom": true,
                "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220322025618363400000006",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "outputs": {
                    "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220322025618363400000006",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-3-eks-cluster-instanceRole",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "policyArn": null,
                    "role": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-eksRole-4b490823",
                "custom": true,
                "id": "p-3-eks-cluster-eksRole-role-cf34518-20220322025617714600000002",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                    "role": "p-3-eks-cluster-eksRole-role-cf34518"
                },
                "outputs": {
                    "id": "p-3-eks-cluster-eksRole-role-cf34518-20220322025617714600000002",
                    "policyArn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
                    "role": "p-3-eks-cluster-eksRole-role-cf34518"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole::p-3-eks-cluster-eksRole",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-eksRole-role"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "policyArn": null,
                    "role": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-eksRole-role"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:s3/bucketObject:BucketObject::p-3-cf-source-object",
                "custom": true,
                "id": "cf.py",
                "type": "aws:s3/bucketObject:BucketObject",
                "inputs": {
                    "__defaults": [
                        "acl",
                        "forceDestroy"
                    ],
                    "acl": "private",
                    "bucket": "p-3-offline-aggregate-source",
                    "etag": "158baa9b9ba3d61d3a4d007e89b8bc28",
                    "forceDestroy": false,
                    "key": "cf.py",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "2389e0d8c5dfeb53b69a7d2930e03e1841f993920d7389906e979a1f47bc4cff",
                        "path": "/Users/mohitreddy/rexer/pyspark/cf.py"
                    },
                    "sourceHash": "158baa9b9ba3d61d3a4d007e89b8bc28"
                },
                "outputs": {
                    "acl": "private",
                    "bucket": "p-3-offline-aggregate-source",
                    "bucketKeyEnabled": false,
                    "cacheControl": "",
                    "contentDisposition": "",
                    "contentEncoding": "",
                    "contentLanguage": "",
                    "contentType": "binary/octet-stream",
                    "etag": "158baa9b9ba3d61d3a4d007e89b8bc28",
                    "forceDestroy": false,
                    "id": "cf.py",
                    "key": "cf.py",
                    "metadata": {},
                    "objectLockLegalHoldStatus": "",
                    "objectLockMode": "",
                    "objectLockRetainUntilDate": "",
                    "serverSideEncryption": "",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "2389e0d8c5dfeb53b69a7d2930e03e1841f993920d7389906e979a1f47bc4cff",
                        "path": "/Users/mohitreddy/rexer/pyspark/cf.py"
                    },
                    "sourceHash": "158baa9b9ba3d61d3a4d007e89b8bc28",
                    "storageClass": "STANDARD",
                    "tags": {},
                    "tagsAll": {},
                    "versionId": "",
                    "websiteRedirect": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::p-3-offline-aggregate-source-bucket"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::offline-aggregate-source-aws-provider::739626f9-b430-4703-8282-4e46ba9b0dbd",
                "propertyDependencies": {
                    "bucket": [
                        "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::p-3-offline-aggregate-source-bucket"
                    ],
                    "etag": null,
                    "key": null,
                    "source": null,
                    "sourceHash": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:s3/bucketObject:BucketObject::p-3-topk-source-object",
                "custom": true,
                "id": "topk.py",
                "type": "aws:s3/bucketObject:BucketObject",
                "inputs": {
                    "__defaults": [
                        "acl",
                        "forceDestroy"
                    ],
                    "acl": "private",
                    "bucket": "p-3-offline-aggregate-source",
                    "etag": "a31ac139f990be41295d132acdf557b8",
                    "forceDestroy": false,
                    "key": "topk.py",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "8cecc6b5e2ac1aa48483561ee9c30a2d9c1fa51dffc626013a55ad37e428709a",
                        "path": "/Users/mohitreddy/rexer/pyspark/topk.py"
                    },
                    "sourceHash": "a31ac139f990be41295d132acdf557b8"
                },
                "outputs": {
                    "acl": "private",
                    "bucket": "p-3-offline-aggregate-source",
                    "bucketKeyEnabled": false,
                    "cacheControl": "",
                    "contentDisposition": "",
                    "contentEncoding": "",
                    "contentLanguage": "",
                    "contentType": "binary/octet-stream",
                    "etag": "a31ac139f990be41295d132acdf557b8",
                    "forceDestroy": false,
                    "id": "topk.py",
                    "key": "topk.py",
                    "metadata": {},
                    "objectLockLegalHoldStatus": "",
                    "objectLockMode": "",
                    "objectLockRetainUntilDate": "",
                    "serverSideEncryption": "",
                    "source": {
                        "4dabf18193072939515e22adb298388d": "c44067f5952c0a294b673a41bacd8c17",
                        "hash": "8cecc6b5e2ac1aa48483561ee9c30a2d9c1fa51dffc626013a55ad37e428709a",
                        "path": "/Users/mohitreddy/rexer/pyspark/topk.py"
                    },
                    "sourceHash": "a31ac139f990be41295d132acdf557b8",
                    "storageClass": "STANDARD",
                    "tags": {},
                    "tagsAll": {},
                    "versionId": "",
                    "websiteRedirect": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::p-3-offline-aggregate-source-bucket"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::offline-aggregate-source-aws-provider::739626f9-b430-4703-8282-4e46ba9b0dbd",
                "propertyDependencies": {
                    "bucket": [
                        "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::p-3-offline-aggregate-source-bucket"
                    ],
                    "etag": null,
                    "key": null,
                    "source": null,
                    "sourceHash": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                "custom": true,
                "id": "p-3-eks-cluster-eksCluster-fd821aa",
                "type": "aws:eks/cluster:Cluster",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "enabledClusterLogTypes": [
                        "api",
                        "authenticator",
                        "controllerManager",
                        "scheduler"
                    ],
                    "name": "p-3-eks-cluster-eksCluster-fd821aa",
                    "roleArn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-eksRole-role-cf34518",
                    "tags": {
                        "Name": "p-3-eks-cluster-eksCluster",
                        "__defaults": []
                    },
                    "version": "1.22",
                    "vpcConfig": {
                        "__defaults": [],
                        "endpointPrivateAccess": true,
                        "endpointPublicAccess": true,
                        "securityGroupIds": [
                            "sg-05b57e1a5ad5c4ea1"
                        ],
                        "subnetIds": [
                            "subnet-06368c2eeec944c76",
                            "subnet-08382870e07aaa6a7",
                            "subnet-0e17b2c51bb9d79f4",
                            "subnet-0615a2647b66a222c"
                        ]
                    }
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":1800000000000,\"delete\":900000000000,\"update\":3600000000000}}",
                    "arn": "arn:aws:eks:us-west-2:030813887342:cluster/p-3-eks-cluster-eksCluster-fd821aa",
                    "certificateAuthority": {
                        "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
                    },
                    "createdAt": "2022-03-22 02:57:22.746 +0000 UTC",
                    "enabledClusterLogTypes": [
                        "controllerManager",
                        "scheduler",
                        "authenticator",
                        "api"
                    ],
                    "encryptionConfig": null,
                    "endpoint": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com",
                    "id": "p-3-eks-cluster-eksCluster-fd821aa",
                    "identities": [
                        {
                            "oidcs": [
                                {
                                    "issuer": "https://oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195"
                                }
                            ]
                        }
                    ],
                    "kubernetesNetworkConfig": {
                        "ipFamily": "ipv4",
                        "serviceIpv4Cidr": "172.20.0.0/16"
                    },
                    "name": "p-3-eks-cluster-eksCluster-fd821aa",
                    "platformVersion": "eks.1",
                    "roleArn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-eksRole-role-cf34518",
                    "status": "ACTIVE",
                    "tags": {
                        "Name": "p-3-eks-cluster-eksCluster"
                    },
                    "tagsAll": {
                        "Name": "p-3-eks-cluster-eksCluster"
                    },
                    "version": "1.22",
                    "vpcConfig": {
                        "clusterSecurityGroupId": "sg-02576e409d44907ef",
                        "endpointPrivateAccess": true,
                        "endpointPublicAccess": true,
                        "publicAccessCidrs": [
                            "0.0.0.0/0"
                        ],
                        "securityGroupIds": [
                            "sg-05b57e1a5ad5c4ea1"
                        ],
                        "subnetIds": [
                            "subnet-0e17b2c51bb9d79f4",
                            "subnet-06368c2eeec944c76",
                            "subnet-0615a2647b66a222c",
                            "subnet-08382870e07aaa6a7"
                        ],
                        "vpcId": "vpc-05832a35998c34f0c"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-eksRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-eksRole-4b490823"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "enabledClusterLogTypes": null,
                    "roleArn": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-eksRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-eksRole-4b490823"
                    ],
                    "tags": null,
                    "version": null,
                    "vpcConfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/userPolicy:UserPolicy::conn-sink-user-policy",
                "custom": true,
                "id": "p-3-conn-sink-user:conn-sink-user-policy-f668e72",
                "type": "aws:iam/userPolicy:UserPolicy",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "name": "conn-sink-user-policy-f668e72",
                    "policy": "{\n        \"Version\":\"2012-10-17\",\n        \"Statement\":[\n            {\n                \"Effect\":\"Allow\",\n                \"Action\": [\n                    \"s3:ListAllMyBuckets\"\n                ],\n                \"Resource\":\"arn:aws:s3:::*\"\n            },\n            {\n                \"Effect\":\"Allow\",\n                \"Action\":[\n                    \"s3:ListBucket\",\n                    \"s3:GetBucketLocation\"\n                ],\n                \"Resource\":\"arn:aws:s3:::p-3-training-data\"\n            },\n            {\n                \"Effect\":\"Allow\",\n                \"Action\":[\n                    \"s3:PutObject\",\n                    \"s3:GetObject\",\n                    \"s3:AbortMultipartUpload\",\n                    \"s3:ListMultipartUploadParts\",\n                    \"s3:ListBucketMultipartUploads\"\n                ],\n                \"Resource\":\"arn:aws:s3:::p-3-training-data/*\"\n            }\n        ]\n    }",
                    "user": "p-3-conn-sink-user"
                },
                "outputs": {
                    "id": "p-3-conn-sink-user:conn-sink-user-policy-f668e72",
                    "name": "conn-sink-user-policy-f668e72",
                    "policy": "{\n        \"Version\":\"2012-10-17\",\n        \"Statement\":[\n            {\n                \"Effect\":\"Allow\",\n                \"Action\": [\n                    \"s3:ListAllMyBuckets\"\n                ],\n                \"Resource\":\"arn:aws:s3:::*\"\n            },\n            {\n                \"Effect\":\"Allow\",\n                \"Action\":[\n                    \"s3:ListBucket\",\n                    \"s3:GetBucketLocation\"\n                ],\n                \"Resource\":\"arn:aws:s3:::p-3-training-data\"\n            },\n            {\n                \"Effect\":\"Allow\",\n                \"Action\":[\n                    \"s3:PutObject\",\n                    \"s3:GetObject\",\n                    \"s3:AbortMultipartUpload\",\n                    \"s3:ListMultipartUploadParts\",\n                    \"s3:ListBucketMultipartUploads\"\n                ],\n                \"Resource\":\"arn:aws:s3:::p-3-training-data/*\"\n            }\n        ]\n    }",
                    "user": "p-3-conn-sink-user"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/user:User::conn-sink-user"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::connector-sink-aws-provider::3cc7c16b-f14f-4caf-9a2f-369ea16085f6",
                "propertyDependencies": {
                    "policy": null,
                    "user": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/user:User::conn-sink-user"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/accessKey:AccessKey::conn-sink-access-key",
                "custom": true,
                "id": "AKIAQOLFGTNXJDEFE7LJ",
                "type": "aws:iam/accessKey:AccessKey",
                "inputs": {
                    "__defaults": [
                        "status"
                    ],
                    "status": "Active",
                    "user": "p-3-conn-sink-user"
                },
                "outputs": {
                    "createDate": "2022-04-05T13:51:26Z",
                    "id": "AKIAQOLFGTNXJDEFE7LJ",
                    "secret": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAKuOmogCMFBMsDfJSlo0jEOSlgJnplpiB5zPUARCblnsLApFlaHVc97ikphEvKS+hKrLlR5gbNDY1gaeul++y1x0dVNi3yQ="
                    },
                    "sesSmtpPasswordV4": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAHegpKOgzQAv9WXYH15+KZADR9+6nSp9hbbjN8RBZtvK5jE+lJ9anNnjonHVbuXpj/vHW0fXdbf4z64YdXzd2MrfHvx14CpcyT2v"
                    },
                    "status": "Active",
                    "user": "p-3-conn-sink-user"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/user:User::conn-sink-user"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::connector-sink-aws-provider::3cc7c16b-f14f-4caf-9a2f-369ea16085f6",
                "propertyDependencies": {
                    "user": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/user:User::conn-sink-user"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::confluent:index/apiKey:ApiKey::key",
                "custom": true,
                "id": "863346",
                "type": "confluent:index/apiKey:ApiKey",
                "inputs": {
                    "__defaults": [],
                    "clusterId": "lkc-811rkq",
                    "environmentId": "env-ry1w0"
                },
                "outputs": {
                    "clusterId": "lkc-811rkq",
                    "environmentId": "env-ry1w0",
                    "id": "863346",
                    "key": "SJLSMRYRKYALJ4Q4",
                    "secret": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAEciCPmXfJGdxE0xbaGsAKfwlrQjw9VDfasMKzo7KGvyzzbBeWJI6F3oy4rmeDi/dibInzq7hUkAm1wYKaftFg37RqQPXacMZQCWBIyHqxb7Fq6EzyfsBrnSztqR5cE="
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::confluent:index/kafkaCluster:KafkaCluster::cluster"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:confluent::conf-provider::a04ab6f7-c710-478f-b18e-57c5f42d108e",
                "propertyDependencies": {
                    "clusterId": [
                        "urn:pulumi:plane-3::launchpad::confluent:index/kafkaCluster:KafkaCluster::cluster"
                    ],
                    "environmentId": [
                        "urn:pulumi:plane-3::launchpad::confluent:index/kafkaCluster:KafkaCluster::cluster"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-unleash-aurora-allow-connected-cidr",
                "custom": true,
                "id": "sgrule-62071455",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-0176f118fb8fbbe3f",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-62071455",
                    "protocol": "tcp",
                    "securityGroupId": "sg-0176f118fb8fbbe3f",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-unleash-db-sg"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::p-3-unleash-aurora-aws-provider::fcf36285-052d-49b1-879f-e14518d7d39e",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-unleash-db-sg"
                    ],
                    "toPort": null,
                    "type": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-aurora-allow-connected-cidr",
                "custom": true,
                "id": "sgrule-2968767633",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-05840b7dcfd0ec43f",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-2968767633",
                    "protocol": "tcp",
                    "securityGroupId": "sg-05840b7dcfd0ec43f",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-db-sg"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aurora-aws-provider::134d52f5-7f5e-4454-b1be-748af511a354",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-db-sg"
                    ],
                    "toPort": null,
                    "type": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/rolePolicy:RolePolicy::t-3-s3-createbucket-rolepolicy",
                "custom": true,
                "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb:p-3-s3-createbucket-rolepolicy",
                "type": "aws:iam/rolePolicy:RolePolicy",
                "inputs": {
                    "__defaults": [],
                    "name": "p-3-s3-createbucket-rolepolicy",
                    "policy": "{\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": \"s3:CreateBucket\",\n                    \"Resource\": \"*\"\n                }\n            ]\n        }",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "outputs": {
                    "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb:p-3-s3-createbucket-rolepolicy",
                    "name": "p-3-s3-createbucket-rolepolicy",
                    "policy": "{\n            \"Version\": \"2012-10-17\",\n            \"Statement\": [\n                {\n                    \"Effect\":\"Allow\",\n                    \"Action\": \"s3:CreateBucket\",\n                    \"Resource\": \"*\"\n                }\n            ]\n        }",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "name": null,
                    "policy": null,
                    "role": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2"
                    ]
                },
                "sequenceNumber": 2
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-redis-allow-connected-cidr",
                "custom": true,
                "id": "sgrule-189653717",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-09e571f0713759de2",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-189653717",
                    "protocol": "tcp",
                    "securityGroupId": "sg-09e571f0713759de2",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-redis-sg"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::redis-aws-provider::5e1ff797-2ef0-488a-9b9f-7f4d89f937d2",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-redis-sg"
                    ],
                    "toPort": null,
                    "type": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-cache-allow-connected-cidr",
                "custom": true,
                "id": "sgrule-4232553623",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-05be6e341ac459146",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-4232553623",
                    "protocol": "tcp",
                    "securityGroupId": "sg-05be6e341ac459146",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-cache-sg"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::cache-aws-provider::54ec0dc8-ad8a-4494-ba57-cb43e332ab76",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-cache-sg"
                    ],
                    "toPort": null,
                    "type": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:elasticache/subnetGroup:SubnetGroup::p-3-cache-subnets",
                "custom": true,
                "id": "p-3-cache-subnets-b1d67d3",
                "type": "aws:elasticache/subnetGroup:SubnetGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Managed by Pulumi",
                    "name": "p-3-cache-subnets-b1d67d3",
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:elasticache:us-west-2:030813887342:subnetgroup:p-3-cache-subnets-b1d67d3",
                    "description": "Managed by Pulumi",
                    "id": "p-3-cache-subnets-b1d67d3",
                    "name": "p-3-cache-subnets-b1d67d3",
                    "subnetIds": [
                        "subnet-0615a2647b66a222c",
                        "subnet-0e17b2c51bb9d79f4"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::cache-aws-provider::54ec0dc8-ad8a-4494-ba57-cb43e332ab76",
                "propertyDependencies": {
                    "description": null,
                    "subnetIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ],
                    "tags": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:rds/subnetGroup:SubnetGroup::p-3-unleash-db-subnetgroup",
                "custom": true,
                "id": "p-3-unleash-db-subnetgroup-2d0077a",
                "type": "aws:rds/subnetGroup:SubnetGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Subnet group for unleash postgres database",
                    "name": "p-3-unleash-db-subnetgroup-2d0077a",
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:rds:us-west-2:030813887342:subgrp:p-3-unleash-db-subnetgroup-2d0077a",
                    "description": "Subnet group for unleash postgres database",
                    "id": "p-3-unleash-db-subnetgroup-2d0077a",
                    "name": "p-3-unleash-db-subnetgroup-2d0077a",
                    "subnetIds": [
                        "subnet-0615a2647b66a222c",
                        "subnet-0e17b2c51bb9d79f4"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::p-3-unleash-aurora-aws-provider::fcf36285-052d-49b1-879f-e14518d7d39e",
                "propertyDependencies": {
                    "description": null,
                    "subnetIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ],
                    "tags": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:memorydb/subnetGroup:SubnetGroup::p-3-redis-subnet-group",
                "custom": true,
                "id": "p-3-redis-subnet-group-4fc6ede",
                "type": "aws:memorydb/subnetGroup:SubnetGroup",
                "inputs": {
                    "__defaults": [
                        "description",
                        "name"
                    ],
                    "description": "Managed by Terraform",
                    "name": "p-3-redis-subnet-group-4fc6ede",
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:memorydb:us-west-2:030813887342:subnetgroup/p-3-redis-subnet-group-4fc6ede",
                    "description": "Managed by Terraform",
                    "id": "p-3-redis-subnet-group-4fc6ede",
                    "name": "p-3-redis-subnet-group-4fc6ede",
                    "namePrefix": "",
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::redis-aws-provider::5e1ff797-2ef0-488a-9b9f-7f4d89f937d2",
                "propertyDependencies": {
                    "subnetIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ],
                    "tags": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:rds/subnetGroup:SubnetGroup::p-3-db-subnetgroup",
                "custom": true,
                "id": "p-3-db-subnetgroup-ffcd8b8",
                "type": "aws:rds/subnetGroup:SubnetGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Subnet group for primary database",
                    "name": "p-3-db-subnetgroup-ffcd8b8",
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    }
                },
                "outputs": {
                    "arn": "arn:aws:rds:us-west-2:030813887342:subgrp:p-3-db-subnetgroup-ffcd8b8",
                    "description": "Subnet group for primary database",
                    "id": "p-3-db-subnetgroup-ffcd8b8",
                    "name": "p-3-db-subnetgroup-ffcd8b8",
                    "subnetIds": [
                        "subnet-0615a2647b66a222c",
                        "subnet-0e17b2c51bb9d79f4"
                    ],
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aurora-aws-provider::134d52f5-7f5e-4454-b1be-748af511a354",
                "propertyDependencies": {
                    "description": null,
                    "subnetIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ],
                    "tags": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup",
                "custom": true,
                "id": "sg-0269fa98ddd9ca37d",
                "type": "aws:ec2/securityGroup:SecurityGroup",
                "inputs": {
                    "__defaults": [
                        "name"
                    ],
                    "description": "Managed by Pulumi",
                    "name": "p-3-eks-cluster-nodeSecurityGroup-6c59794",
                    "revokeRulesOnDelete": true,
                    "tags": {
                        "Name": "p-3-eks-cluster-nodeSecurityGroup",
                        "__defaults": [],
                        "kubernetes.io/cluster/p-3-eks-cluster-eksCluster-fd821aa": "owned"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":600000000000,\"delete\":900000000000},\"schema_version\":\"1\"}",
                    "arn": "arn:aws:ec2:us-west-2:030813887342:security-group/sg-0269fa98ddd9ca37d",
                    "description": "Managed by Pulumi",
                    "egress": [],
                    "id": "sg-0269fa98ddd9ca37d",
                    "ingress": [],
                    "name": "p-3-eks-cluster-nodeSecurityGroup-6c59794",
                    "namePrefix": "",
                    "ownerId": "030813887342",
                    "revokeRulesOnDelete": true,
                    "tags": {
                        "Name": "p-3-eks-cluster-nodeSecurityGroup",
                        "kubernetes.io/cluster/p-3-eks-cluster-eksCluster-fd821aa": "owned"
                    },
                    "tagsAll": {
                        "Name": "p-3-eks-cluster-nodeSecurityGroup",
                        "kubernetes.io/cluster/p-3-eks-cluster-eksCluster-fd821aa": "owned"
                    },
                    "vpcId": "vpc-05832a35998c34f0c"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "description": null,
                    "revokeRulesOnDelete": null,
                    "tags": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ],
                    "vpcId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                "custom": true,
                "id": "arn:aws:iam::030813887342:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195",
                "type": "aws:iam/openIdConnectProvider:OpenIdConnectProvider",
                "inputs": {
                    "__defaults": [],
                    "clientIdLists": [
                        "sts.amazonaws.com"
                    ],
                    "thumbprintLists": [
                        "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
                    ],
                    "url": "https://oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195",
                    "clientIdLists": [
                        "sts.amazonaws.com"
                    ],
                    "id": "arn:aws:iam::030813887342:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195",
                    "tags": {},
                    "tagsAll": {},
                    "thumbprintLists": [
                        "9e99a48a9960b14926bb7f3b02e22da2b0ab7280"
                    ],
                    "url": "oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "clientIdLists": null,
                    "thumbprintLists": null,
                    "url": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-eks-sg-rule",
                "custom": true,
                "id": "sgrule-60827193",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "172.31.0.0/16"
                    ],
                    "fromPort": 0,
                    "id": "sgrule-60827193",
                    "protocol": "tcp",
                    "securityGroupId": "sg-02576e409d44907ef",
                    "self": false,
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ],
                    "toPort": null,
                    "type": null
                },
                "sequenceNumber": 3
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:elasticache/replicationGroup:ReplicationGroup::p-3-cache-cluster",
                "custom": true,
                "id": "p-3-cache-cluster-b20c9a6",
                "type": "aws:elasticache/replicationGroup:ReplicationGroup",
                "inputs": {
                    "__defaults": [
                        "autoMinorVersionUpgrade",
                        "multiAzEnabled",
                        "replicationGroupId"
                    ],
                    "applyImmediately": true,
                    "atRestEncryptionEnabled": true,
                    "autoMinorVersionUpgrade": true,
                    "automaticFailoverEnabled": true,
                    "clusterMode": {
                        "__defaults": [],
                        "numNodeGroups": 2,
                        "replicasPerNodeGroup": 0
                    },
                    "engine": "redis",
                    "engineVersion": "6.x",
                    "multiAzEnabled": false,
                    "nodeType": "cache.t4g.medium",
                    "parameterGroupName": "p-3-cache-pg-e78f834",
                    "replicationGroupDescription": "redis-based elastic cache",
                    "replicationGroupId": "p-3-cache-cluster-b20c9a6",
                    "securityGroupIds": [
                        "sg-05be6e341ac459146"
                    ],
                    "subnetGroupName": "p-3-cache-subnets-b1d67d3",
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "transitEncryptionEnabled": true
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":3600000000000,\"delete\":2400000000000,\"update\":2400000000000},\"schema_version\":\"1\"}",
                    "applyImmediately": true,
                    "arn": "arn:aws:elasticache:us-west-2:030813887342:replicationgroup:p-3-cache-cluster-b20c9a6",
                    "atRestEncryptionEnabled": true,
                    "authToken": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAO+xFaR3sJ8DIljGt2Xd+bEeby6be7XSnqPb4vRUvA=="
                    },
                    "autoMinorVersionUpgrade": true,
                    "automaticFailoverEnabled": true,
                    "availabilityZones": [],
                    "clusterEnabled": true,
                    "clusterMode": {
                        "numNodeGroups": 2,
                        "replicasPerNodeGroup": 0
                    },
                    "configurationEndpointAddress": "clustercfg.p-3-cache-cluster-b20c9a6.fbjfph.usw2.cache.amazonaws.com",
                    "dataTieringEnabled": false,
                    "engine": "redis",
                    "engineVersion": "6.x",
                    "engineVersionActual": "6.2.5",
                    "id": "p-3-cache-cluster-b20c9a6",
                    "kmsKeyId": "",
                    "maintenanceWindow": "sat:10:00-sat:11:00",
                    "memberClusters": [
                        "p-3-cache-cluster-b20c9a6-0001-001",
                        "p-3-cache-cluster-b20c9a6-0002-001"
                    ],
                    "multiAzEnabled": false,
                    "nodeType": "cache.t4g.medium",
                    "numberCacheClusters": 2,
                    "parameterGroupName": "p-3-cache-pg-e78f834",
                    "port": 6379,
                    "replicationGroupDescription": "redis-based elastic cache",
                    "replicationGroupId": "p-3-cache-cluster-b20c9a6",
                    "securityGroupIds": [
                        "sg-05be6e341ac459146"
                    ],
                    "securityGroupNames": [],
                    "snapshotArns": [],
                    "snapshotRetentionLimit": 0,
                    "snapshotWindow": "09:00-10:00",
                    "subnetGroupName": "p-3-cache-subnets-b1d67d3",
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "transitEncryptionEnabled": true,
                    "userGroupIds": []
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-cache-sg",
                    "urn:pulumi:plane-3::launchpad::aws:elasticache/parameterGroup:ParameterGroup::p-3-cache-pg",
                    "urn:pulumi:plane-3::launchpad::aws:elasticache/subnetGroup:SubnetGroup::p-3-cache-subnets"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::cache-aws-provider::54ec0dc8-ad8a-4494-ba57-cb43e332ab76",
                "propertyDependencies": {
                    "applyImmediately": null,
                    "atRestEncryptionEnabled": null,
                    "automaticFailoverEnabled": null,
                    "clusterMode": null,
                    "engine": null,
                    "engineVersion": null,
                    "nodeType": null,
                    "parameterGroupName": [
                        "urn:pulumi:plane-3::launchpad::aws:elasticache/parameterGroup:ParameterGroup::p-3-cache-pg"
                    ],
                    "replicationGroupDescription": null,
                    "securityGroupIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-cache-sg"
                    ],
                    "subnetGroupName": [
                        "urn:pulumi:plane-3::launchpad::aws:elasticache/subnetGroup:SubnetGroup::p-3-cache-subnets"
                    ],
                    "tags": null,
                    "transitEncryptionEnabled": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:rds/cluster:Cluster::p-3-unleash-db-instance",
                "custom": true,
                "id": "p-3-unleash-db-20220529012946534800000001",
                "type": "aws:rds/cluster:Cluster",
                "inputs": {
                    "__defaults": [
                        "backupRetentionPeriod",
                        "copyTagsToSnapshot",
                        "enableGlobalWriteForwarding",
                        "enableHttpEndpoint"
                    ],
                    "applyImmediately": true,
                    "backupRetentionPeriod": 1,
                    "clusterIdentifierPrefix": "p-3-unleash-db-",
                    "copyTagsToSnapshot": false,
                    "dbSubnetGroupName": "p-3-unleash-db-subnetgroup-2d0077a",
                    "enableGlobalWriteForwarding": false,
                    "enableHttpEndpoint": false,
                    "engine": "aurora-postgresql",
                    "engineMode": "serverless",
                    "masterPassword": "unleash1",
                    "masterUsername": "unleash",
                    "scalingConfiguration": {
                        "__defaults": [
                            "autoPause",
                            "secondsUntilAutoPause",
                            "timeoutAction"
                        ],
                        "autoPause": true,
                        "maxCapacity": 2,
                        "minCapacity": 2,
                        "secondsUntilAutoPause": 300,
                        "timeoutAction": "RollbackCapacityChange"
                    },
                    "skipFinalSnapshot": true,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcSecurityGroupIds": [
                        "sg-0176f118fb8fbbe3f"
                    ]
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":7200000000000,\"delete\":7200000000000,\"update\":7200000000000}}",
                    "applyImmediately": true,
                    "arn": "arn:aws:rds:us-west-2:030813887342:cluster:p-3-unleash-db-20220529012946534800000001",
                    "availabilityZones": [
                        "us-west-2c",
                        "us-west-2b",
                        "us-west-2a"
                    ],
                    "backtrackWindow": 0,
                    "backupRetentionPeriod": 1,
                    "clusterIdentifier": "p-3-unleash-db-20220529012946534800000001",
                    "clusterIdentifierPrefix": "p-3-unleash-db-",
                    "clusterMembers": [],
                    "clusterResourceId": "cluster-FYUHXIJF3XWFML7ZCIEDXCAB2Y",
                    "copyTagsToSnapshot": false,
                    "dbClusterParameterGroupName": "default.aurora-postgresql10",
                    "dbSubnetGroupName": "p-3-unleash-db-subnetgroup-2d0077a",
                    "deletionProtection": false,
                    "enableGlobalWriteForwarding": false,
                    "enableHttpEndpoint": false,
                    "enabledCloudwatchLogsExports": [],
                    "endpoint": "p-3-unleash-db-20220529012946534800000001.cluster-c00d7gkxaysk.us-west-2.rds.amazonaws.com",
                    "engine": "aurora-postgresql",
                    "engineMode": "serverless",
                    "engineVersion": "10.18",
                    "engineVersionActual": "10.18",
                    "globalClusterIdentifier": "",
                    "hostedZoneId": "Z1PVIF0B656C1W",
                    "iamDatabaseAuthenticationEnabled": false,
                    "iamRoles": [],
                    "id": "p-3-unleash-db-20220529012946534800000001",
                    "kmsKeyId": "arn:aws:kms:us-west-2:030813887342:key/80b2b530-50d9-4c4d-ac2c-38ab82e10c34",
                    "masterPassword": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAGc24PCwsFXlTW/WydPzjOBkS6mkY38eo5Va7/4wfx9VvJFH+5vo"
                    },
                    "masterUsername": "unleash",
                    "port": 5432,
                    "preferredBackupWindow": "07:17-07:47",
                    "preferredMaintenanceWindow": "sat:12:21-sat:12:51",
                    "readerEndpoint": "",
                    "replicationSourceIdentifier": "",
                    "restoreToPointInTime": null,
                    "s3Import": null,
                    "scalingConfiguration": {
                        "autoPause": true,
                        "maxCapacity": 2,
                        "minCapacity": 2,
                        "secondsUntilAutoPause": 300,
                        "timeoutAction": "RollbackCapacityChange"
                    },
                    "skipFinalSnapshot": true,
                    "storageEncrypted": true,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcSecurityGroupIds": [
                        "sg-0176f118fb8fbbe3f"
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-unleash-db-sg",
                    "urn:pulumi:plane-3::launchpad::aws:rds/subnetGroup:SubnetGroup::p-3-unleash-db-subnetgroup"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::p-3-unleash-aurora-aws-provider::fcf36285-052d-49b1-879f-e14518d7d39e",
                "propertyDependencies": {
                    "applyImmediately": null,
                    "clusterIdentifierPrefix": null,
                    "dbSubnetGroupName": [
                        "urn:pulumi:plane-3::launchpad::aws:rds/subnetGroup:SubnetGroup::p-3-unleash-db-subnetgroup"
                    ],
                    "engine": null,
                    "engineMode": null,
                    "masterPassword": null,
                    "masterUsername": null,
                    "scalingConfiguration": null,
                    "skipFinalSnapshot": null,
                    "tags": null,
                    "vpcSecurityGroupIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-unleash-db-sg"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-3-eks-cluster-eksExtApiServerClusterIngressRule",
                "custom": true,
                "id": "sgrule-2987946037",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane",
                    "fromPort": 443,
                    "protocol": "tcp",
                    "securityGroupId": "sg-0269fa98ddd9ca37d",
                    "sourceSecurityGroupId": "sg-05b57e1a5ad5c4ea1",
                    "toPort": 443,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "description": "Allow pods running extension API servers on port 443 to receive communication from cluster control plane",
                    "fromPort": 443,
                    "id": "sgrule-2987946037",
                    "protocol": "tcp",
                    "securityGroupId": "sg-0269fa98ddd9ca37d",
                    "self": false,
                    "sourceSecurityGroupId": "sg-05b57e1a5ad5c4ea1",
                    "toPort": 443,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup"
                    ],
                    "toPort": null,
                    "type": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-3-eks-cluster-eksClusterIngressRule",
                "custom": true,
                "id": "sgrule-634280247",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "description": "Allow pods to communicate with the cluster API Server",
                    "fromPort": 443,
                    "protocol": "tcp",
                    "securityGroupId": "sg-05b57e1a5ad5c4ea1",
                    "sourceSecurityGroupId": "sg-0269fa98ddd9ca37d",
                    "toPort": 443,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "description": "Allow pods to communicate with the cluster API Server",
                    "fromPort": 443,
                    "id": "sgrule-634280247",
                    "protocol": "tcp",
                    "securityGroupId": "sg-05b57e1a5ad5c4ea1",
                    "self": false,
                    "sourceSecurityGroupId": "sg-0269fa98ddd9ca37d",
                    "toPort": 443,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                    ],
                    "toPort": null,
                    "type": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-3-eks-cluster-eksNodeClusterIngressRule",
                "custom": true,
                "id": "sgrule-184967271",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "description": "Allow worker Kubelets and pods to receive communication from the cluster control plane",
                    "fromPort": 1025,
                    "protocol": "tcp",
                    "securityGroupId": "sg-0269fa98ddd9ca37d",
                    "sourceSecurityGroupId": "sg-05b57e1a5ad5c4ea1",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "description": "Allow worker Kubelets and pods to receive communication from the cluster control plane",
                    "fromPort": 1025,
                    "id": "sgrule-184967271",
                    "protocol": "tcp",
                    "securityGroupId": "sg-0269fa98ddd9ca37d",
                    "self": false,
                    "sourceSecurityGroupId": "sg-05b57e1a5ad5c4ea1",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-eksClusterSecurityGroup"
                    ],
                    "toPort": null,
                    "type": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-3-eks-cluster-eksNodeInternetEgressRule",
                "custom": true,
                "id": "sgrule-1623821523",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "cidrBlocks": [
                        "0.0.0.0/0"
                    ],
                    "description": "Allow internet access.",
                    "fromPort": 0,
                    "protocol": "-1",
                    "securityGroupId": "sg-0269fa98ddd9ca37d",
                    "toPort": 0,
                    "type": "egress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "cidrBlocks": [
                        "0.0.0.0/0"
                    ],
                    "description": "Allow internet access.",
                    "fromPort": 0,
                    "id": "sgrule-1623821523",
                    "protocol": "-1",
                    "securityGroupId": "sg-0269fa98ddd9ca37d",
                    "self": false,
                    "toPort": 0,
                    "type": "egress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "cidrBlocks": null,
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                    ],
                    "toPort": null,
                    "type": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroupRule:SecurityGroupRule::p-3-eks-cluster-eksNodeIngressRule",
                "custom": true,
                "id": "sgrule-862419176",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "description": "Allow nodes to communicate with each other",
                    "fromPort": 0,
                    "protocol": "-1",
                    "securityGroupId": "sg-0269fa98ddd9ca37d",
                    "self": true,
                    "toPort": 0,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "description": "Allow nodes to communicate with each other",
                    "fromPort": 0,
                    "id": "sgrule-862419176",
                    "protocol": "-1",
                    "securityGroupId": "sg-0269fa98ddd9ca37d",
                    "self": true,
                    "toPort": 0,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "description": null,
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:ec2/securityGroup:SecurityGroup::p-3-eks-cluster-nodeSecurityGroup"
                    ],
                    "self": null,
                    "toPort": null,
                    "type": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-lbc-role",
                "custom": true,
                "id": "p-3-aws-load-balancer-controller20220322034611491000000001",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "path"
                    ],
                    "assumeRolePolicy": "{\n             \"Version\": \"2012-10-17\",\n             \"Statement\": [\n               {\n                 \"Effect\": \"Allow\",\n                 \"Principal\": {\n                   \"Federated\": \"arn:aws:iam::030813887342:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195\"\n                 },\n                 \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n                 \"Condition\": {\n                   \"StringEquals\": {\n                     \"oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195:sub\": \"system:serviceaccount:kube-system:aws-load-balancer-controller\",\n                     \"oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195:aud\": \"sts.amazonaws.com\"\n                   }\n                 }\n               }\n             ]\n           }",
                    "description": "IAM role for AWS load-balancer-controller",
                    "forceDetachPolicies": false,
                    "maxSessionDuration": 3600,
                    "namePrefix": "p-3-aws-load-balancer-controller",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:role/p-3-aws-load-balancer-controller20220322034611491000000001",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::030813887342:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195:sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller\",\"oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195:aud\":\"sts.amazonaws.com\"}}}]}",
                    "createDate": "2022-03-22T03:46:11Z",
                    "description": "IAM role for AWS load-balancer-controller",
                    "forceDetachPolicies": false,
                    "id": "p-3-aws-load-balancer-controller20220322034611491000000001",
                    "inlinePolicies": [
                        {
                            "name": "",
                            "policy": ""
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "p-3-aws-load-balancer-controller20220322034611491000000001",
                    "namePrefix": "p-3-aws-load-balancer-controller",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAQOLFGTNXPB5EEJ3YW"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "assumeRolePolicy": null,
                    "description": null,
                    "namePrefix": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-autoscaler-role",
                "custom": true,
                "id": "p-3-autoscaler-role20220621013447476800000001",
                "type": "aws:iam/role:Role",
                "inputs": {
                    "__defaults": [
                        "forceDetachPolicies",
                        "maxSessionDuration",
                        "path"
                    ],
                    "assumeRolePolicy": "{\n                 \"Version\": \"2012-10-17\",\n                 \"Statement\": [\n                   {\n                     \"Effect\": \"Allow\",\n                     \"Principal\": {\n                       \"Federated\": \"arn:aws:iam::030813887342:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195\"\n                     },\n                     \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n                     \"Condition\": {\n                       \"StringEquals\": {\n                         \"oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195:sub\": \"system:serviceaccount:kube-system:cluster-autoscaler\"\n                       }\n                     }\n                   }\n                 ]\n               }",
                    "description": "IAM role for EKS cluster autoscaler",
                    "forceDetachPolicies": false,
                    "inlinePolicies": [
                        {
                            "__defaults": [],
                            "name": "eks-cluster-autoscaler-policy",
                            "policy": "{\n                    \"Version\": \"2012-10-17\",\n                    \"Statement\": [\n                        {\n                            \"Effect\": \"Allow\",\n                            \"Action\": [\n                                \"autoscaling:SetDesiredCapacity\",\n                                \"autoscaling:TerminateInstanceInAutoScalingGroup\"\n                            ],\n                            \"Resource\": \"*\",\n                            \"Condition\": {\n                                \"StringEquals\": {\n                                    \"aws:ResourceTag/k8s.io/cluster-autoscaler/p-3-eks-cluster-eksCluster-fd821aa\": \"owned\"\n                                }\n                            }\n                        },\n                        {\n                            \"Effect\": \"Allow\",\n                            \"Action\": [\n                                \"autoscaling:DescribeAutoScalingGroups\",\n                                \"autoscaling:DescribeAutoScalingInstances\",\n                                \"autoscaling:DescribeInstances\",\n                                \"autoscaling:DescribeLaunchConfigurations\",\n                                \"autoscaling:DescribeTags\",\n                                \"ec2:DescribeLaunchTemplateVersions\",\n                                \"ec2:DescribeInstanceTypes\"\n                            ],\n                            \"Resource\": \"*\"\n                        }\n                    ]\n                }"
                        }
                    ],
                    "maxSessionDuration": 3600,
                    "namePrefix": "p-3-autoscaler-role",
                    "path": "/"
                },
                "outputs": {
                    "arn": "arn:aws:iam::030813887342:role/p-3-autoscaler-role20220621013447476800000001",
                    "assumeRolePolicy": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::030813887342:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195\"},\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-west-2.amazonaws.com/id/6D137773CA2473C2DE9797609E5E2195:sub\":\"system:serviceaccount:kube-system:cluster-autoscaler\"}}}]}",
                    "createDate": "2022-06-21T01:34:47Z",
                    "description": "IAM role for EKS cluster autoscaler",
                    "forceDetachPolicies": false,
                    "id": "p-3-autoscaler-role20220621013447476800000001",
                    "inlinePolicies": [
                        {
                            "name": "eks-cluster-autoscaler-policy",
                            "policy": "{\n                    \"Version\": \"2012-10-17\",\n                    \"Statement\": [\n                        {\n                            \"Effect\": \"Allow\",\n                            \"Action\": [\n                                \"autoscaling:SetDesiredCapacity\",\n                                \"autoscaling:TerminateInstanceInAutoScalingGroup\"\n                            ],\n                            \"Resource\": \"*\",\n                            \"Condition\": {\n                                \"StringEquals\": {\n                                    \"aws:ResourceTag/k8s.io/cluster-autoscaler/p-3-eks-cluster-eksCluster-fd821aa\": \"owned\"\n                                }\n                            }\n                        },\n                        {\n                            \"Effect\": \"Allow\",\n                            \"Action\": [\n                                \"autoscaling:DescribeAutoScalingGroups\",\n                                \"autoscaling:DescribeAutoScalingInstances\",\n                                \"autoscaling:DescribeInstances\",\n                                \"autoscaling:DescribeLaunchConfigurations\",\n                                \"autoscaling:DescribeTags\",\n                                \"ec2:DescribeLaunchTemplateVersions\",\n                                \"ec2:DescribeInstanceTypes\"\n                            ],\n                            \"Resource\": \"*\"\n                        }\n                    ]\n                }"
                        }
                    ],
                    "managedPolicyArns": [],
                    "maxSessionDuration": 3600,
                    "name": "p-3-autoscaler-role20220621013447476800000001",
                    "namePrefix": "p-3-autoscaler-role",
                    "path": "/",
                    "tags": {},
                    "tagsAll": {},
                    "uniqueId": "AROAQOLFGTNXP2TO7G743"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "assumeRolePolicy": null,
                    "description": null,
                    "inlinePolicies": null,
                    "namePrefix": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-eks-k8s",
                "custom": true,
                "id": "6a9ff21e-85d1-4fe3-9de4-3e2262414e8c",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\",\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1alpha1\",\"command\":\"aws\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"]}}}]}",
                    "version": "3.16.0"
                },
                "outputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\",\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1alpha1\",\"command\":\"aws\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"]}}}]}",
                    "version": "3.16.0"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider",
                "custom": true,
                "id": "8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\",\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1alpha1\",\"command\":\"aws\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"]}}}]}",
                    "version": "3.16.0"
                },
                "outputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\",\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1alpha1\",\"command\":\"aws\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"]}}}]}",
                    "version": "3.16.0"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:memorydb/cluster:Cluster::p-3-redis-db",
                "custom": true,
                "id": "p-3-redis-db-57b5586",
                "type": "aws:memorydb/cluster:Cluster",
                "inputs": {
                    "__defaults": [
                        "description",
                        "name"
                    ],
                    "aclName": "open-access",
                    "autoMinorVersionUpgrade": true,
                    "description": "Managed by Terraform",
                    "engineVersion": "6.2",
                    "name": "p-3-redis-db-57b5586",
                    "nodeType": "db.t4g.medium",
                    "numReplicasPerShard": 0,
                    "numShards": 1,
                    "securityGroupIds": [
                        "sg-09e571f0713759de2"
                    ],
                    "subnetGroupName": "p-3-redis-subnet-group-4fc6ede",
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "tlsEnabled": true
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":7200000000000,\"delete\":7200000000000,\"update\":7200000000000}}",
                    "aclName": "open-access",
                    "arn": "arn:aws:memorydb:us-west-2:030813887342:cluster/p-3-redis-db-57b5586",
                    "autoMinorVersionUpgrade": true,
                    "clusterEndpoints": [
                        {
                            "address": "clustercfg.p-3-redis-db-57b5586.fbjfph.memorydb.us-west-2.amazonaws.com",
                            "port": 6379
                        }
                    ],
                    "description": "Managed by Terraform",
                    "enginePatchVersion": "6.2.4",
                    "engineVersion": "6.2",
                    "id": "p-3-redis-db-57b5586",
                    "kmsKeyArn": "",
                    "maintenanceWindow": "fri:06:30-fri:07:30",
                    "name": "p-3-redis-db-57b5586",
                    "namePrefix": "",
                    "nodeType": "db.t4g.medium",
                    "numReplicasPerShard": 0,
                    "numShards": 2,
                    "parameterGroupName": "default.memorydb-redis6",
                    "port": 6379,
                    "securityGroupIds": [
                        "sg-09e571f0713759de2"
                    ],
                    "shards": [
                        {
                            "name": "0001",
                            "nodes": [
                                {
                                    "availabilityZone": "us-west-2a",
                                    "createTime": "2022-03-22T03:13:36Z",
                                    "endpoints": [
                                        {
                                            "address": "p-3-redis-db-57b5586-0001-001.p-3-redis-db-57b5586.fbjfph.memorydb.us-west-2.amazonaws.com",
                                            "port": 6379
                                        }
                                    ],
                                    "name": "p-3-redis-db-57b5586-0001-001"
                                }
                            ],
                            "numNodes": 1,
                            "slots": "0-16383"
                        }
                    ],
                    "snapshotArns": null,
                    "snapshotRetentionLimit": 0,
                    "snapshotWindow": "08:30-09:30",
                    "snsTopicArn": "",
                    "subnetGroupName": "p-3-redis-subnet-group-4fc6ede",
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "tlsEnabled": true
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-redis-sg",
                    "urn:pulumi:plane-3::launchpad::aws:memorydb/subnetGroup:SubnetGroup::p-3-redis-subnet-group"
                ],
                "initErrors": [
                    "updating urn:pulumi:plane-3::launchpad::aws:memorydb/cluster:Cluster::p-3-redis-db: 1 error occurred:\n\t* error updating MemoryDB Cluster (p-3-redis-db-57b5586): InvalidClusterStateFault: Slots in the cluster are uniformly distributed. No action to perform.\n\n"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::redis-aws-provider::5e1ff797-2ef0-488a-9b9f-7f4d89f937d2",
                "propertyDependencies": {
                    "aclName": null,
                    "autoMinorVersionUpgrade": null,
                    "engineVersion": null,
                    "nodeType": null,
                    "numReplicasPerShard": null,
                    "numShards": null,
                    "securityGroupIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-redis-sg"
                    ],
                    "subnetGroupName": [
                        "urn:pulumi:plane-3::launchpad::aws:memorydb/subnetGroup:SubnetGroup::p-3-redis-subnet-group"
                    ],
                    "tags": null,
                    "tlsEnabled": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:rds/cluster:Cluster::db-instance",
                "custom": true,
                "id": "p-3-db-20220322025721191200000002",
                "type": "aws:rds/cluster:Cluster",
                "inputs": {
                    "__defaults": [
                        "backupRetentionPeriod",
                        "copyTagsToSnapshot",
                        "enableGlobalWriteForwarding",
                        "enableHttpEndpoint"
                    ],
                    "applyImmediately": true,
                    "backupRetentionPeriod": 1,
                    "clusterIdentifierPrefix": "p-3-db-",
                    "copyTagsToSnapshot": false,
                    "dbSubnetGroupName": "p-3-db-subnetgroup-ffcd8b8",
                    "enableGlobalWriteForwarding": false,
                    "enableHttpEndpoint": false,
                    "engine": "aurora-mysql",
                    "engineMode": "serverless",
                    "engineVersion": "5.7.mysql_aurora.2.07.1",
                    "finalSnapshotIdentifier": "p-3-a879df9d-187f-4c2e-9dc6-9a6526bba570",
                    "masterPassword": "foundationdb",
                    "masterUsername": "admin",
                    "scalingConfiguration": {
                        "__defaults": [
                            "autoPause",
                            "secondsUntilAutoPause",
                            "timeoutAction"
                        ],
                        "autoPause": true,
                        "maxCapacity": 4,
                        "minCapacity": 1,
                        "secondsUntilAutoPause": 300,
                        "timeoutAction": "RollbackCapacityChange"
                    },
                    "skipFinalSnapshot": true,
                    "tags": {
                        "__defaults": [],
                        "managed-by": "fennel.ai"
                    },
                    "vpcSecurityGroupIds": [
                        "sg-05840b7dcfd0ec43f"
                    ]
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":7200000000000,\"delete\":7200000000000,\"update\":7200000000000}}",
                    "applyImmediately": true,
                    "arn": "arn:aws:rds:us-west-2:030813887342:cluster:p-3-db-20220322025721191200000002",
                    "availabilityZones": [
                        "us-west-2c",
                        "us-west-2b",
                        "us-west-2a"
                    ],
                    "backtrackWindow": 0,
                    "backupRetentionPeriod": 1,
                    "clusterIdentifier": "p-3-db-20220322025721191200000002",
                    "clusterIdentifierPrefix": "p-3-db-",
                    "clusterMembers": [],
                    "clusterResourceId": "cluster-C34XOKF4PO6EWD6BVDRMHZPLFI",
                    "copyTagsToSnapshot": false,
                    "dbClusterParameterGroupName": "default.aurora-mysql5.7",
                    "dbSubnetGroupName": "p-3-db-subnetgroup-ffcd8b8",
                    "deletionProtection": false,
                    "enableGlobalWriteForwarding": false,
                    "enableHttpEndpoint": false,
                    "enabledCloudwatchLogsExports": [],
                    "endpoint": "p-3-db-20220322025721191200000002.cluster-c00d7gkxaysk.us-west-2.rds.amazonaws.com",
                    "engine": "aurora-mysql",
                    "engineMode": "serverless",
                    "engineVersion": "5.7.mysql_aurora.2.07.1",
                    "engineVersionActual": "5.7.mysql_aurora.2.07.1",
                    "finalSnapshotIdentifier": "p-3-a879df9d-187f-4c2e-9dc6-9a6526bba570",
                    "globalClusterIdentifier": "",
                    "hostedZoneId": "Z1PVIF0B656C1W",
                    "iamDatabaseAuthenticationEnabled": false,
                    "iamRoles": [],
                    "id": "p-3-db-20220322025721191200000002",
                    "kmsKeyId": "arn:aws:kms:us-west-2:030813887342:key/80b2b530-50d9-4c4d-ac2c-38ab82e10c34",
                    "masterPassword": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAKxbO3ocpIrOXe6XXIUuUn3YSeaZisoUG0/DhVf3TH40gflXix2L7HZITA=="
                    },
                    "masterUsername": "admin",
                    "port": 3306,
                    "preferredBackupWindow": "06:46-07:16",
                    "preferredMaintenanceWindow": "wed:06:05-wed:06:35",
                    "readerEndpoint": "",
                    "replicationSourceIdentifier": "",
                    "restoreToPointInTime": null,
                    "s3Import": null,
                    "scalingConfiguration": {
                        "autoPause": true,
                        "maxCapacity": 4,
                        "minCapacity": 1,
                        "secondsUntilAutoPause": 300,
                        "timeoutAction": "RollbackCapacityChange"
                    },
                    "skipFinalSnapshot": true,
                    "storageEncrypted": true,
                    "tags": {
                        "managed-by": "fennel.ai"
                    },
                    "tagsAll": {
                        "managed-by": "fennel.ai"
                    },
                    "vpcSecurityGroupIds": [
                        "sg-05840b7dcfd0ec43f"
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "protect": true,
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:rds/subnetGroup:SubnetGroup::p-3-db-subnetgroup",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-db-sg"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aurora-aws-provider::134d52f5-7f5e-4454-b1be-748af511a354",
                "propertyDependencies": {
                    "applyImmediately": null,
                    "clusterIdentifierPrefix": null,
                    "dbSubnetGroupName": [
                        "urn:pulumi:plane-3::launchpad::aws:rds/subnetGroup:SubnetGroup::p-3-db-subnetgroup"
                    ],
                    "engine": null,
                    "engineMode": null,
                    "engineVersion": null,
                    "finalSnapshotIdentifier": null,
                    "masterPassword": null,
                    "masterUsername": null,
                    "scalingConfiguration": null,
                    "skipFinalSnapshot": null,
                    "tags": null,
                    "vpcSecurityGroupIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-db-sg"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:eks::default",
                "custom": true,
                "id": "1da20d10-d4ee-446a-b946-89f9f58ee49f",
                "type": "pulumi:providers:eks",
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-attach-lbc-policy",
                "custom": true,
                "id": "p-3-aws-load-balancer-controller20220322034611491000000001-20220322043213882400000001",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::030813887342:policy/p-3-AWSLoadBalancerControllerIAMPolicy20220322033540877800000001",
                    "role": "p-3-aws-load-balancer-controller20220322034611491000000001"
                },
                "outputs": {
                    "id": "p-3-aws-load-balancer-controller20220322034611491000000001-20220322043213882400000001",
                    "policyArn": "arn:aws:iam::030813887342:policy/p-3-AWSLoadBalancerControllerIAMPolicy20220322033540877800000001",
                    "role": "p-3-aws-load-balancer-controller20220322034611491000000001"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/policy:Policy::p-3-lbc-policy",
                    "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-lbc-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "policyArn": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/policy:Policy::p-3-lbc-policy"
                    ],
                    "role": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-lbc-role"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$kubernetes:core/v1:ConfigMap::p-3-eks-cluster-nodeAccess",
                "custom": true,
                "id": "kube-system/aws-auth",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "mapRoles": "- rolearn: 'arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb'\n  username: 'system:node:{{EC2PrivateDNSName}}'\n  groups:\n    - 'system:bootstrappers'\n    - 'system:nodes'\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "aws-auth",
                        "namespace": "kube-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "mapRoles": "- rolearn: 'arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb'\n  username: 'system:node:{{EC2PrivateDNSName}}'\n  groups:\n    - 'system:bootstrappers'\n    - 'system:nodes'\n"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "aws-auth",
                            "namespace": "kube-system"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "mapRoles": "- rolearn: 'arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb'\n  username: 'system:node:{{EC2PrivateDNSName}}'\n  groups:\n    - 'system:bootstrappers'\n    - 'system:nodes'\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"mapRoles\":\"- rolearn: 'arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb'\\n  username: 'system:node:{{EC2PrivateDNSName}}'\\n  groups:\\n    - 'system:bootstrappers'\\n    - 'system:nodes'\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"aws-auth\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2022-03-22T03:10:02Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:mapRoles": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T03:10:02Z"
                            }
                        ],
                        "name": "aws-auth",
                        "namespace": "kube-system",
                        "resourceVersion": "1071",
                        "uid": "7fb40716-a7a9-441b-8e71-d92882cbbca1"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-eks-k8s::6a9ff21e-85d1-4fe3-9de4-3e2262414e8c",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2"
                    ],
                    "kind": null,
                    "metadata": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:VpcCni::p-3-eks-cluster-vpc-cni",
                "custom": true,
                "id": "1171d44f53c5e67f",
                "type": "eks:index:VpcCni",
                "inputs": {
                    "kubeconfig": "{\"apiVersion\":\"v1\",\"clusters\":[{\"cluster\":{\"server\":\"https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com\",\"certificate-authority-data\":\"LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"},\"name\":\"kubernetes\"}],\"contexts\":[{\"context\":{\"cluster\":\"kubernetes\",\"user\":\"aws\"},\"name\":\"aws\"}],\"current-context\":\"aws\",\"kind\":\"Config\",\"users\":[{\"name\":\"aws\",\"user\":{\"exec\":{\"apiVersion\":\"client.authentication.k8s.io/v1alpha1\",\"command\":\"aws\",\"args\":[\"eks\",\"get-token\",\"--cluster-name\",\"p-3-eks-cluster-eksCluster-fd821aa\",\"--role\",\"arn:aws:iam::030813887342:role/admin\"]}}}]}"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:Cluster::p-3-eks-cluster",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:eks::default::1da20d10-d4ee-446a-b946-89f9f58ee49f",
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:ServiceAccount::lbc-ac",
                "custom": true,
                "id": "kube-system/aws-load-balancer-controller",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "automountServiceAccountToken": true,
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "eks.amazonaws.com/role-arn": "arn:aws:iam::030813887342:role/p-3-aws-load-balancer-controller20220322034611491000000001"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "aws-load-balancer-controller",
                        "namespace": "kube-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "automountServiceAccountToken": true,
                        "kind": "ServiceAccount",
                        "metadata": {
                            "annotations": {
                                "eks.amazonaws.com/role-arn": "arn:aws:iam::030813887342:role/p-3-aws-load-balancer-controller20220322034611491000000001"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "aws-load-balancer-controller",
                            "namespace": "kube-system"
                        }
                    },
                    "apiVersion": "v1",
                    "automountServiceAccountToken": true,
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "eks.amazonaws.com/role-arn": "arn:aws:iam::030813887342:role/p-3-aws-load-balancer-controller20220322034611491000000001",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"automountServiceAccountToken\":true,\"kind\":\"ServiceAccount\",\"metadata\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::030813887342:role/p-3-aws-load-balancer-controller20220322034611491000000001\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"aws-load-balancer-controller\",\"namespace\":\"kube-system\"}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:32:17Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"aws-load-balancer-controller-token-hhnkl\"}": {
                                            ".": {},
                                            "f:name": {}
                                        }
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-03-22T04:32:17Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:automountServiceAccountToken": {},
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:eks.amazonaws.com/role-arn": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:32:17Z"
                            }
                        ],
                        "name": "aws-load-balancer-controller",
                        "namespace": "kube-system",
                        "resourceVersion": "14637",
                        "uid": "a2fff673-817c-4dbe-b3db-7abb3bf89b3d"
                    },
                    "secrets": [
                        {
                            "name": "aws-load-balancer-controller-token-hhnkl"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-lbc-role"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "automountServiceAccountToken": null,
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/role:Role::p-3-lbc-role"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::linkerd",
                "custom": true,
                "id": "default/linkerd-yfggbag5",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "linkerd2",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "linkerd-yfggbag5",
                    "namespace": "default",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://helm.linkerd.io/stable",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd-heartbeat",
                            "linkerd-linkerd-destination",
                            "linkerd-linkerd-identity",
                            "linkerd-linkerd-proxy-injector",
                            "linkerd-policy"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd-destination-policy",
                            "linkerd-heartbeat",
                            "linkerd-linkerd-destination",
                            "linkerd-linkerd-identity",
                            "linkerd-linkerd-proxy-injector"
                        ],
                        "ConfigMap/v1": [
                            "linkerd/linkerd-config",
                            "linkerd/linkerd-identity-trust-roots"
                        ],
                        "CronJob.batch/batch/v1beta1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "CustomResourceDefinition.apiextensions.k8s.io/apiextensions.k8s.io/v1": [
                            "serverauthorizations.policy.linkerd.io",
                            "servers.policy.linkerd.io",
                            "serviceprofiles.linkerd.io",
                            "trafficsplits.split.smi-spec.io"
                        ],
                        "Deployment.apps/apps/v1": [
                            "linkerd/linkerd-destination",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-proxy-injector"
                        ],
                        "MutatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "linkerd-proxy-injector-webhook-config"
                        ],
                        "Namespace/v1": [
                            "linkerd"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "Secret/v1": [
                            "linkerd/linkerd-identity-issuer",
                            "linkerd/linkerd-policy-validator-k8s-tls",
                            "linkerd/linkerd-proxy-injector-k8s-tls",
                            "linkerd/linkerd-sp-validator-k8s-tls"
                        ],
                        "Service/v1": [
                            "linkerd/linkerd-dst",
                            "linkerd/linkerd-dst-headless",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-identity-headless",
                            "linkerd/linkerd-policy",
                            "linkerd/linkerd-policy-validator",
                            "linkerd/linkerd-proxy-injector",
                            "linkerd/linkerd-sp-validator"
                        ],
                        "ServiceAccount/v1": [
                            "linkerd/linkerd-destination",
                            "linkerd/linkerd-heartbeat",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-proxy-injector"
                        ],
                        "ValidatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "linkerd-policy-validator-webhook-config",
                            "linkerd-sp-validator-webhook-config"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "identity": {
                            "issuer": {
                                "tls": {
                                    "crtPEM": "-----BEGIN CERTIFICATE-----\nMIIBszCCAVmgAwIBAgIRAPRFi+dfLDRA621jQa6ZFYcwCgYIKoZIzj0EAwIwJTEj\nMCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjIwMzIyMDI1\nNjE2WhcNMjMwMzIyMDI1NjE2WjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJk\nLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAR3kQDBgCoK\nr+aNmHDuWBltK6tmI8TdLaRe8xyJJcgOMdoI8NWUGz6D2/kKFTM/zKqTypoXX4ZM\ntQYakdtGYqJSo2YwZDAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIB\nADAdBgNVHQ4EFgQU9VKHHbGjgBNrGkKuci+IrKa1cqYwHwYDVR0jBBgwFoAUOTOG\nW7ocTLOIRduLPaZBkAoX9VYwCgYIKoZIzj0EAwIDSAAwRQIgFLrksvTzKyJcElez\n9iRVn6nz81b8k4WH2GDLKeqzkKMCIQDTAJReLM7m33FzgUkqVhWPMNvXkey2j/UC\n75jg2V7aZg==\n-----END CERTIFICATE-----",
                                    "keyPEM": "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIN+Kl/Av5MXRweTZmIHcSaPa15m7eGbAI/vBBdZpqKeuoAoGCCqGSM49\nAwEHoUQDQgAEd5EAwYAqCq/mjZhw7lgZbSurZiPE3S2kXvMciSXIDjHaCPDVlBs+\ng9v5ChUzP8yqk8qaF1+GTLUGGpHbRmKiUg==\n-----END EC PRIVATE KEY-----"
                                }
                            }
                        },
                        "identityTrustAnchorsPEM": "-----BEGIN CERTIFICATE-----\nMIIBjjCCATSgAwIBAgIRAMP4VJSVqJqLYSPpQUxQB6AwCgYIKoZIzj0EAwIwJTEj\nMCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjIwMzIyMDI1\nNjA5WhcNMzIwMzE5MDI1NjA5WjAlMSMwIQYDVQQDExpyb290LmxpbmtlcmQuY2x1\nc3Rlci5sb2NhbDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGsxx7FX10YFHJPQ\nUBsgx/1jhA5yZWfkP8Sf/zowxRf6nWAz3PZLO9D039CjdDNBEjJA5FGYqr3zcLM2\nI20kazSjRTBDMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMB0G\nA1UdDgQWBBQ5M4ZbuhxMs4hF24s9pkGQChf1VjAKBggqhkjOPQQDAgNIADBFAiBd\nOde13Lw77E0xCku7/O9ISfk3aG8yntozvpAsm5wQ4QIhAPpXM7Y+p37SqLyeCUqy\nqX93ThzzxRuVb5LGBENKyCIL\n-----END CERTIFICATE-----"
                    },
                    "verify": false,
                    "version": "2.11",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAJapneCKsnQ3KCnBJGc15bQEVOWQD8S2cF8z5zCbxwC4dMU8CBxIN/qNq9UVkD4gchukAk9jNicfZNAR+C6bC7pcnn6u4QWmtsdHUmt/YcqFngg/u6rtObj7B8FwphX5JJJRQdP5fIoPvR4TCXKQnc6+dqJpf3LTeTdkWAse4kTeaBQ1HPoKK7+Yl7ugl7Ye1/6WAk2bqYuHhQs6eNmpSdcI8OxePgME5loYtx+RTmjKkKCiYM5/jhIi5bcQnHW9/iXdrJSZEyUOYMnfE4dkXWD7ihj7Ve5yLFs9/iMvlDBe3tr9i5UA9Q1pMkA72Kr58ClI+CTJUFa8IasDnBYktJr7PrJbrfQia9XMJ/dLfUmQ0x7ndn9S9riqygYFGqLlCMg4Avs6VfI0V+Io2flcKMsycEWYedpElficeAkJ5iBlLYX01gjmsWDOgqmpnb0W7miFilkgVe5qo9PZYEFM1razGXbH9xoKExrhjY9DaYhKJOn6pyrbpJIxLKOTMqCs0m5Pxl36TAn+J38BFEkx/D9xL/Kw6x+nB4JA78ukY2USlpq/nqS1LjVhZTS0X0sPyJYX3QWsypmAudiQQ1mLmVl6c5WYh23nqfqs9ik7BtwV/pbcxjneRrohV9UgbZUMOdYyUGOC4rCK+ACoNg6jgJaTAMQJ1J9H0QuIIo2fdaQs3vaeQlZyzFPTT7Xj5FNg/OTaeNzAlmvCKlMftdFbh9tIqUQVeeXHbHFAm1W+nfY4vqf4Are6KKMF+f+ZVaM5P5NX5HJgL95weX9Ugj3hMpiEJEAjYb26JMqcqODVvAsttejiYybpyaRyzaMQJ4hOyKZJkwgfUhKKo016B+5iCi8glYMQn5MtLja/J/4c1rOjVxCqufLI2VfVFsP4Vo7jYOqVLOafESToGeHOH9ufSCMgVZ7/qamJEAzS60x97/VZ961iuafYp284Xu6BLyy2tiAETjBLFSJc1mlA8Rc4BfHVOrk1cRjdo+tpOKRmMFXwLku2/c6/8iwnewaOHTt8YtVh9x2FmDq5cR89oM5M6mSM3qg7n9pATxmh82jci4bPQaBjOj5O/G8lHzeFo3VVQnU34smrcaazf64gle1Z+qExohefzeYP1A7B5+YqnaLpCfwozxOe1PJQpqrzZ4RyuwGdI8d2XZJda7wwIVL41VIqIJIghgPPpynpLANazbyuiJaqjMlgSEWKqRqY6K6hWoIGtc0Q9mKxdyJPwvfkveRy77ABHBl0HxnUxGs80m4l03rbr0LxPXFbscuUUWgFM3eohbBwtcmple0jopyf0QoGOT8Ym+v8sLrvxMijSfeaH7nwWRL7VWa2cHBz/YPKcKgicQda9QURZBjdBPt3sdmi+MXmTq8Hcfnrf9Bh1fpWKPp78J0+FVok3py3YK10txk0B4yMhTy72AMZp5W4tyeJgVJ4eY4tcPB15gP8Cvf8AobtV6JSSbyKJp/6AcN4+adw71arzCYI/RwAyQkcWJ4NZgSaXQDBCJt3AF/EDqpSIRkIw7Jk9FhAS9UsK+N/1925Uo+K7tGFec6qH2Ik1ott7VmcgRbk5eynqBkR6+rWYPSeKiFEtxyutTo/WCQQs1kEtGilSQFp/TVVBvx+d0agX5H1BQ8da+8262koCX4Yh9mmxAx93zOZKmuU9Q6cl+Jw6Nf5FZyl8yjpKi54h0HFsMe6Yl9x4sZ2gzkgk2GzkdVN9Yow+/Mo0QOpHWU04UzkeoSl27URWnqQ11pnr0OpHsu/jQdlW2SgRCZDUy0xAHPjGJ7yEYMtfofJI7pNzA3K1aRVO/d3Ftq6KFJ+LdB5oBF42CotXbsPyeV0VnBqJPt13kqHodxZKa+MdaELuuapwk7SRisQH0F7YImj9EyNEeqnp0+X1GsLQfdMfttOcZ+ZDtk73TE1HyflQNUKw3rPyaSsiNG/f4oVXJ38u86hAwFY+IjktOMz6G3zqroKZseXXT7NTWGHgw2UVJttcNifxc/3A3FGr4y93MGE974NJrEYz9Z/fP6B13TWemOf5A5fTlnoD8c/VA03GSGRHd3vUvGaWsxWQ9pJY9g6m/LkgV3qbUFRc9r+9pN5D5MxVQsoeuo/JBOvO0Q9fnzz1TE5Jfr8M7ThZ3+QjFali8Jf5vgBVTLwSqoZKcCcPoAkYcK/4M6DpYHlYg+hGSMGsVGB5De/pK7y7KG03p9/tDtyltRyiOCt/rSnBQOdSkE7ClHkRbt6dFvntPEG66FRl+IimDKEnAhOS8lnpN0OeWXvltgzOgnoQDP9KVBTUJgOVpqgfbDyl0B4KZiLTtgyEK0edeK+vSL4nJ8X+/HStwaE+C+gBO8aRbrYfPSvaCQJCmMrnpJrC/pXnTc6uJw0wkUYuK4yQB1kyVX0u2E5gNntymGctz98mhYXCwDRYx7iaK60iNB48tEOtKA+LOI4QDHxLhhlDHciSJ4fe7O7Rf60BzOkySyuD3zn3uKQD6Q7YP+byjeBLc7KKuzuHNfC1n97E9hmObfkj9VQWeHXu31QOOX7cGao/2xuFu4ZRrw2z7gTvE0BsPle1y5uWC2/pP8mruT3nutGnDk8wSOYDVKHIw9osX0Gwh//9JmSD4v5SAhfDqVSZZ0QHfA8N+i/mcAJfs0O8zu7wMPzwutjxrPugU8zJ0KUvbDKkCn9oNrJFcy0a5mn19XmyHVNVW36tciOslWPfVRMO8+3e6u0i6b07aS29a5vLYJ8lZACYXaAGpE+i8MNLcsTePb8kQTnESj8ARsTP2GFdrvOndksElR64KtoPdNyvfNTlUjKwhEypTX7rdh0rabc5UJZQMMhgSC2BRrMwN+aLo33fuM9tev9WdW0/h0jcI91cezUQ5sg38gQ34jTnfcp0QK+XJRPVvho7creTZpC8ekAPvK14uHnAhXZKTrNJDbUUZAl7OYsmDqIQVcqOx81J/7tKxCI74kBtXSsmMRkeZgSvISIJap1NrI9+HYU1iTkRnPx00bfLKghlewMtrWCbiVQ1HYmFd1AgElTyEyBTsISqAtJqCNkm0g5sbKISkfxkN4xHSmwhIq31hjJcB5JEQpj7VUTN4wjiF9px6aq7g67icU5PA+h9BwpcihljDkFXGBR4rS43Ii+P31GJ7Ko27dBeI2JLOsTEkC+H/C7Ve6gY6OQiocXTPOVjkZ/oENj7zq7pFAKDiofxDK4QwcFehSSJhnbP66P6Jxjr0cDnTQJIZEZiU4jP8gRw2aBFIErMUD8EqNiA9zDsPi2jyJJf+fcZQV00N/O/YKEQX56PwJKTWMMLaH7R0lXiUbxcFV0F03uB/pItCnVrPuNE+Hdft1JpUvQ9/aOsUzVPshHR1+p9aupCo/Ejx2INzCngRphFRso/oZDmMynwMPhBcRTpk4NauGZ+Bqvv02t48c6WvDu6ULloJz+ovvlUS9UhnuWrouefzMwAS+VXbdiBFESn5CSN5tG8+V1M5A0wFUlTCbXj2Jl51CpcnW1ePUVeLzlMoDjyEjCir7NTFNK8InBmzcxFgjtI1RDtHPSKaCcTTotA1Nb9VLc6e/mPw/FDq+w4lS/ogiaWWdwB39D8P3e2m4j3HK1gG7cKWu3l9W2/tysc8FkjxmJBrbyZ6Ggu0DJWkBdT1OjJtLoHlYFUK38qQAqw/OEhimmq1xfYp88RPpjhCQlcJc5okaB+n/nSYpdsfozO+7enoVkNUxWzYWSdrzWM8QfKzSuyIS5wiibmM4MMWCcl+H0UiyZJ512Rv1n6lgJgl7pxiu626qynQHtIwFK0QgHhLHqVZeT/d2CUqb2knUEkWOR2EY7x+uQvYqj2qHPRz80fTe6MMnQeia6q9MIRggEgtuN46MRhdmtak7MrJjm2P3uFX33mBZbRFLWA4AGSs9SMoO0ZaV/Xga7ZPu/lHe6SSa/9S37h4EotSBxp0/JjhTSJ/TivrVDhFTLJc8V9N1jCqtqo+cPjUl3/i/FYRHvjChDtaINgvmRKrvLnisqANJUFoGTmT6GBc2si9RVN6RTQ14PWAQU4w6tGQO/0iElrKKyzvNpoyewXerT1aemk4UoXUoAxUD9DSPdTgqoPZIxdoHli7eHj2+Vy4gxfooeVOso+sJy6NJ3CYRC5Rk+KO0Ty/XpxrXRrj9+avIVmns0Pwq2at8pbwH8ySFmsdxwpSKlxXAAsrEH6ooilejQetmw1dC2hsjx94TCM+gRwyRx3/so7+FmjyyWTr4HUs+GhV/ID0+Y/Mm8mZ92+dDqJXKJhLFGZqKRLGCwh5aMwn2dCKlxvtQpJg9b5/VIz7VRygZNGC9B/Mg0civgvq3vNlKAAvSHXqWiL7Ms9AmkKz9S/6gJxfZNm9I243kxWFV+v8mPXi/zSp+b0xPi4PVx+KHCt6yCjxqQlnPFS/IAErIg94U8uDS/x3qOBG6SITBPHpIPO7zp2btbGKVxk8TlKCEWnVlpwi+n4rRN0HF9HANU+6qkdXkJdLlsUbNmPp4EiA7wHgF6yUa64Wb59IO7q9c2uQh2JolbyA1ItgENiRNt3KnTR4s89A6e0DkyoZDy/7/KrhfddOJniapxlzqW5fhgX+kC74C/7xgELo0nGFtWY2XIsVn0w7JuQ6TklmlWzfCY5tKGe6p0OAYBe+gOtK9oagMjcXyaP8+VGbnvY51SvEmKTOY1uTcZSSlvQK8H4wHcpUwzw6+ksJ343dZZmlmbWD1spTyBm7K+TYxanbyK/rWq/Ld/hb5Vv1FRTSoIfizAnK5Giqdt4uw0bQi/qv9rPz/RnZTBkGXU/l12t1Q2IZKTOuoxIAJ7G4OOQMjYzj0F81/ZsKfmYNhKERNDl+rlM/dfhAyOrZca7mnCjk1VBWIX/SSGSvpZ5Iy43NzpbZjbBKWHcHzXQEyhxWmn1VDSPsC5yq0U6sUaE5E0mtX5XoXYguaWZ6/Wfo979EKV+JZFRQ8RAehdHCX68uIa0AfH4FB6ZNqbX1uvoZ4Ip86CV0V/6dwT1IldI0M0zHyxaO0MlX5QqBtSV5r8lZ00dlI1L5lrUXi+txlV3hkA7oQY13FOVS8sXpO9bND6n3nC6jS4Z4p+3wsCU+evGB0yKVPT2PSEVX9RmFYFm3g4PITOXWLevqmgbfsZEgRNfSBmE6/LDo2w6zHFkoF/fM835RBJ8bVX24tJRtUYYWvwuhWg4wYhh7k+nctaUnSLc82jJEm+HEWn1V6UBZMFgfCtK8lzj8iXdVOelHN7M2Bhi1E9GAfwnh5JOYp3uQ8+qw+lN1QscrWrQX4ocibZ9pFTSk36cFIJV/w2mSkcy3gWaW763ijFo8rP+9e2ZMfhUK87cW/uGfS9cy5SDxHJmaiEFpnWX9x2eebPtiqnGnw0/IO+zrEgvhoJ3ox4sdsYVrlIm37noE9fAEs9cPJ6KkxbSnwC9ULUlKcasawrgNn+e9rpwD/lXZXbl2pTQ1ABBvZ1uREqM1hI+OOS5C0sflka3L3eBHnu0DKs1v2wAK7rAJdwvCcbB5Mwe92ZoxDQKIi+tu5Xj0P+EZPJBj6JyMHNuxdz2MAPglVvz3051lMyGhbIVksRyzUNck/JBsNCJKdCtyqtWDlXDWQHPeRI51uaHV0I4QORMt9fg3DclwPmlkT7GOVHWsq1mdqMCk4AjIFK2cnhaRFCROoO+hrrShJAdGBHyPARp3lZr0vnlJZAczYLazJrZllK3tY3S1Ib1H9hTgRG7Jk="
                    },
                    "atomic": false,
                    "chart": "linkerd2",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "linkerd-yfggbag5",
                    "namespace": "default",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://helm.linkerd.io/stable",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd-heartbeat",
                            "linkerd-linkerd-destination",
                            "linkerd-linkerd-identity",
                            "linkerd-linkerd-proxy-injector",
                            "linkerd-policy"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd-destination-policy",
                            "linkerd-heartbeat",
                            "linkerd-linkerd-destination",
                            "linkerd-linkerd-identity",
                            "linkerd-linkerd-proxy-injector"
                        ],
                        "ConfigMap/v1": [
                            "linkerd/linkerd-config",
                            "linkerd/linkerd-identity-trust-roots"
                        ],
                        "CronJob.batch/batch/v1beta1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "CustomResourceDefinition.apiextensions.k8s.io/apiextensions.k8s.io/v1": [
                            "serverauthorizations.policy.linkerd.io",
                            "servers.policy.linkerd.io",
                            "serviceprofiles.linkerd.io",
                            "trafficsplits.split.smi-spec.io"
                        ],
                        "Deployment.apps/apps/v1": [
                            "linkerd/linkerd-destination",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-proxy-injector"
                        ],
                        "MutatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "linkerd-proxy-injector-webhook-config"
                        ],
                        "Namespace/v1": [
                            "linkerd"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "linkerd/linkerd-heartbeat"
                        ],
                        "Secret/v1": [
                            "linkerd/linkerd-identity-issuer",
                            "linkerd/linkerd-policy-validator-k8s-tls",
                            "linkerd/linkerd-proxy-injector-k8s-tls",
                            "linkerd/linkerd-sp-validator-k8s-tls"
                        ],
                        "Service/v1": [
                            "linkerd/linkerd-dst",
                            "linkerd/linkerd-dst-headless",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-identity-headless",
                            "linkerd/linkerd-policy",
                            "linkerd/linkerd-policy-validator",
                            "linkerd/linkerd-proxy-injector",
                            "linkerd/linkerd-sp-validator"
                        ],
                        "ServiceAccount/v1": [
                            "linkerd/linkerd-destination",
                            "linkerd/linkerd-heartbeat",
                            "linkerd/linkerd-identity",
                            "linkerd/linkerd-proxy-injector"
                        ],
                        "ValidatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "linkerd-policy-validator-webhook-config",
                            "linkerd-sp-validator-webhook-config"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "stable-2.11.2",
                        "chart": "linkerd2",
                        "name": "linkerd-yfggbag5",
                        "namespace": "default",
                        "revision": 3,
                        "status": "deployed",
                        "version": "2.11.2"
                    },
                    "timeout": 300,
                    "values": {
                        "identity": {
                            "issuer": {
                                "tls": {
                                    "crtPEM": "-----BEGIN CERTIFICATE-----\nMIIBszCCAVmgAwIBAgIRAPRFi+dfLDRA621jQa6ZFYcwCgYIKoZIzj0EAwIwJTEj\nMCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjIwMzIyMDI1\nNjE2WhcNMjMwMzIyMDI1NjE2WjApMScwJQYDVQQDEx5pZGVudGl0eS5saW5rZXJk\nLmNsdXN0ZXIubG9jYWwwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAR3kQDBgCoK\nr+aNmHDuWBltK6tmI8TdLaRe8xyJJcgOMdoI8NWUGz6D2/kKFTM/zKqTypoXX4ZM\ntQYakdtGYqJSo2YwZDAOBgNVHQ8BAf8EBAMCAQYwEgYDVR0TAQH/BAgwBgEB/wIB\nADAdBgNVHQ4EFgQU9VKHHbGjgBNrGkKuci+IrKa1cqYwHwYDVR0jBBgwFoAUOTOG\nW7ocTLOIRduLPaZBkAoX9VYwCgYIKoZIzj0EAwIDSAAwRQIgFLrksvTzKyJcElez\n9iRVn6nz81b8k4WH2GDLKeqzkKMCIQDTAJReLM7m33FzgUkqVhWPMNvXkey2j/UC\n75jg2V7aZg==\n-----END CERTIFICATE-----",
                                    "keyPEM": "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIN+Kl/Av5MXRweTZmIHcSaPa15m7eGbAI/vBBdZpqKeuoAoGCCqGSM49\nAwEHoUQDQgAEd5EAwYAqCq/mjZhw7lgZbSurZiPE3S2kXvMciSXIDjHaCPDVlBs+\ng9v5ChUzP8yqk8qaF1+GTLUGGpHbRmKiUg==\n-----END EC PRIVATE KEY-----"
                                }
                            }
                        },
                        "identityTrustAnchorsPEM": "-----BEGIN CERTIFICATE-----\nMIIBjjCCATSgAwIBAgIRAMP4VJSVqJqLYSPpQUxQB6AwCgYIKoZIzj0EAwIwJTEj\nMCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjIwMzIyMDI1\nNjA5WhcNMzIwMzE5MDI1NjA5WjAlMSMwIQYDVQQDExpyb290LmxpbmtlcmQuY2x1\nc3Rlci5sb2NhbDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGsxx7FX10YFHJPQ\nUBsgx/1jhA5yZWfkP8Sf/zowxRf6nWAz3PZLO9D039CjdDNBEjJA5FGYqr3zcLM2\nI20kazSjRTBDMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMB0G\nA1UdDgQWBBQ5M4ZbuhxMs4hF24s9pkGQChf1VjAKBggqhkjOPQQDAgNIADBFAiBd\nOde13Lw77E0xCku7/O9ISfk3aG8yntozvpAsm5wQ4QIhAPpXM7Y+p37SqLyeCUqy\nqX93ThzzxRuVb5LGBENKyCIL\n-----END CERTIFICATE-----"
                    },
                    "verify": false,
                    "version": "2.11.2",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::command:local:Command::ca-crt",
                    "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-crt",
                    "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-key"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "repositoryOpts": null,
                    "values": [
                        "urn:pulumi:plane-3::launchpad::command:local:Command::ca-crt",
                        "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-crt",
                        "urn:pulumi:plane-3::launchpad::command:local:Command::issuer-key"
                    ],
                    "version": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:getambassador.io/v3alpha1:Module::l5d-amb-config",
                "custom": true,
                "id": "default/ambassador",
                "type": "kubernetes:getambassador.io/v3alpha1:Module",
                "inputs": {
                    "apiVersion": "getambassador.io/v3alpha1",
                    "kind": "Module",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "ambassador",
                        "namespace": "default"
                    },
                    "spec": {
                        "config": {
                            "add_linkerd_headers": true,
                            "circuit_breakers": {
                                "max_connections": 3072,
                                "max_pending_requests": 1024,
                                "max_requests": 3072
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "getambassador.io/v3alpha1",
                    "__inputs": {
                        "apiVersion": "getambassador.io/v3alpha1",
                        "kind": "Module",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "ambassador",
                            "namespace": "default"
                        },
                        "spec": {
                            "config": {
                                "add_linkerd_headers": true,
                                "circuit_breakers": {
                                    "max_connections": 3072,
                                    "max_pending_requests": 1024,
                                    "max_requests": 3072
                                }
                            }
                        }
                    },
                    "apiVersion": "getambassador.io/v3alpha1",
                    "kind": "Module",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"getambassador.io/v3alpha1\",\"kind\":\"Module\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"ambassador\",\"namespace\":\"default\"},\"spec\":{\"config\":{\"add_linkerd_headers\":true,\"circuit_breakers\":{\"max_connections\":3072,\"max_pending_requests\":1024,\"max_requests\":3072}}}}\n"
                        },
                        "creationTimestamp": "2022-04-10T23:34:48Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "getambassador.io/v3alpha1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        ".": {},
                                        "f:config": {
                                            ".": {},
                                            "f:add_linkerd_headers": {},
                                            "f:circuit_breakers": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-04-10T23:34:48Z"
                            }
                        ],
                        "name": "ambassador",
                        "namespace": "default",
                        "resourceVersion": "5307136",
                        "uid": "97306543-604d-4ddf-ba8d-0ef1eaf243b1"
                    },
                    "spec": {
                        "ambassador_id": [
                            "default"
                        ],
                        "config": {
                            "add_linkerd_headers": true,
                            "circuit_breakers": {
                                "max_connections": 3072,
                                "max_pending_requests": 1024,
                                "max_requests": 3072
                            }
                        }
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::command:local:Command::waiter"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops",
                "custom": true,
                "id": "ebs-io1-50ops-n8o4xdjp",
                "type": "kubernetes:storage.k8s.io/v1:StorageClass",
                "inputs": {
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "pulumi.com/autonamed": "true"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "ebs-io1-50ops-n8o4xdjp"
                    },
                    "parameters": {
                        "encrypted": "true",
                        "fsType": "ext4",
                        "iopsPerGB": "50",
                        "type": "io1"
                    },
                    "provisioner": "kubernetes.io/aws-ebs",
                    "reclaimPolicy": "Delete",
                    "volumeBindingMode": "WaitForFirstConsumer"
                },
                "outputs": {
                    "__initialApiVersion": "storage.k8s.io/v1",
                    "__inputs": {
                        "allowVolumeExpansion": true,
                        "apiVersion": "storage.k8s.io/v1",
                        "kind": "StorageClass",
                        "metadata": {
                            "annotations": {
                                "pulumi.com/autonamed": "true"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "ebs-io1-50ops-n8o4xdjp"
                        },
                        "parameters": {
                            "encrypted": "true",
                            "fsType": "ext4",
                            "iopsPerGB": "50",
                            "type": "io1"
                        },
                        "provisioner": "kubernetes.io/aws-ebs",
                        "reclaimPolicy": "Delete",
                        "volumeBindingMode": "WaitForFirstConsumer"
                    },
                    "allowVolumeExpansion": true,
                    "apiVersion": "storage.k8s.io/v1",
                    "kind": "StorageClass",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"allowVolumeExpansion\":true,\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"pulumi.com/autonamed\":\"true\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"ebs-io1-50ops-n8o4xdjp\"},\"parameters\":{\"encrypted\":\"true\",\"fsType\":\"ext4\",\"iopsPerGB\":\"50\",\"type\":\"io1\"},\"provisioner\":\"kubernetes.io/aws-ebs\",\"reclaimPolicy\":\"Delete\",\"volumeBindingMode\":\"WaitForFirstConsumer\"}\n",
                            "pulumi.com/autonamed": "true"
                        },
                        "creationTimestamp": "2022-06-05T16:51:37Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "storage.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:allowVolumeExpansion": {},
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {},
                                            "f:pulumi.com/autonamed": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:parameters": {
                                        ".": {},
                                        "f:encrypted": {},
                                        "f:fsType": {},
                                        "f:iopsPerGB": {},
                                        "f:type": {}
                                    },
                                    "f:provisioner": {},
                                    "f:reclaimPolicy": {},
                                    "f:volumeBindingMode": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-05T16:51:37Z"
                            }
                        ],
                        "name": "ebs-io1-50ops-n8o4xdjp",
                        "resourceVersion": "22857692",
                        "uid": "aaae534b-5cfe-4c1d-89be-513ccddce2e3"
                    },
                    "parameters": {
                        "encrypted": "true",
                        "fsType": "ext4",
                        "iopsPerGB": "50",
                        "type": "io1"
                    },
                    "provisioner": "kubernetes.io/aws-ebs",
                    "reclaimPolicy": "Delete",
                    "volumeBindingMode": "WaitForFirstConsumer"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "allowVolumeExpansion": null,
                    "apiVersion": null,
                    "kind": null,
                    "parameters": null,
                    "provisioner": null,
                    "reclaimPolicy": null,
                    "volumeBindingMode": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::p-3-metrics-server",
                "custom": true,
                "id": "kube-system/p-3-metrics-server-8d1jnsa5",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "metrics-server",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "p-3-metrics-server-8d1jnsa5",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes-sigs.github.io/metrics-server/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "APIService.apiregistration.k8s.io/apiregistration.k8s.io/v1": [
                            "v1beta1.metrics.k8s.io"
                        ],
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "system:metrics-server-aggregated-reader",
                            "system:p-3-metrics-server"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-3-metrics-server:system:auth-delegator",
                            "system:p-3-metrics-server"
                        ],
                        "Deployment.apps/apps/v1": [
                            "p-3-metrics-server"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-3-metrics-server-auth-reader"
                        ],
                        "Service/v1": [
                            "p-3-metrics-server"
                        ],
                        "ServiceAccount/v1": [
                            "p-3-metrics-server"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "fullnameOverride": "p-3-metrics-server"
                    },
                    "verify": false,
                    "version": "",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAJ7DeO0xIj3A/V789X9tdmrCheVrLujBsrwKOl6tY0CHMnDu2+tnlyYWQZ1s94iiBHBA4GVGTrt9PDJgNVTVHHLUYL+v6wNkgYdxAq4N/qbKVirqEhCfFSJ22Ur+wVtDng1yw/u1DZdt9HRVMvjuE6XQRfT7PGMnlTwQrLYtp/Y8AkCZy8US6re6agHYQXFNG/sflvdbCF70EP9KFKMhT8t81yt8LH1t/x9Jxwz0pfwvfVaaAO2hR9pcs0gMtR1IVYbx0xz6nB/51dme/NCue/3Pg0X5JJqpFcwX41URF/wvPepoxbytydEgoFj5PQ7G+sCfgOuOx7nWgf/GU1zGDPTLRI2Bnqf55S/5mvk0IttFsAmZ9v++Npd31Z0ms0EBcdvy80AnBsjtOlDlQJxLvTP7JM2EpXhzX+G3FXYayqpGQVeuiPFmPAMtV6hP1VP3vdouJR8NLQUTYWAfBFdgBUeYumi3QE7wJV5B7XIKvI/xrDV74lh8iB8eqTCdcygubA+t2qnbO1rQoeH4ScSVqEt8ry/7dQ+Vuq853wk5bZ21q0gPmaMhyxRg7SUU+8M2A5u3U597lZbobfLAnXmKJ6QQR557Sk8FyofErWCfUm0mc1OtnSUwgJvfI2PoI4Q87QU5rMVE6XhXwT32qluh6jsvkqOzrdkgBSfirY6YotmfojXVHze+I40Quv6hmVjs3yxnmp4oDW5p/ST0YfY1bIPP8Vh/r1XUPiO7tI9O6S9zfC53UwCksI3y0GnyxjNS6veHkROUoFmm1bf3Zf7H4GS+aCJ396Ym5qv+jfBEV6o4rf1g2OvL4i9faT/H3167oPD3bHzwNuSDVsqtFAfGUaXeA2+FV/6Ugg/YaDaNoiQXHKnN8NcBJkYdbq+vjhNvDJTXqspjBqjRSuhs5Yqxeq9iuT85k9BQC9hXl9aDZvzSCdNVxWWupanRTqKsNu4bL8z+HfBx1WzrzRgmE7+wQFx4i/s9WPFwYBQXvTUxrgBWhKj8ybwf4cRaGdRlqdeNeM6zbCfOoEhy5ETLs9o0fsRBjeE7zMqvZHLCNQNf9jhxHCguuQw4vOL11nlezo1MQ5cHekP0PcJYHoPT91Nf71pAaJ+lyPjqzWqu3/VtdtQBCy/fsYEA71lFtG6RTmBUtQTaQzn+67pomAgLVTuygCcS+WdrXZMj7EqOKC+VboegDwDRD7FWrBrG5O+N6BpVniimbyw5whxY3rPEOP80TQpN/EXvQk1IdxVSS/sgQDyG0Mn5JlKqkm6fKWKThWxPCwn6WE7wd+e8ze3Yb3Cxho+uDBUWvJDl0CLzh4C/An8mK/goZoSDv4nPtOtPZbMt6x0FsTwNqjA9aNhucGMGMeZ3IIDJzNtCbMFoOBD5FQmin75g4bZ4nXoqH7P2hlLRkbsYVYpc3h42UzV5sr1YIzi7MHcPIx5OWhLlOrVn5hnQzvi268rIF+Bgp2tMAeXOJb2USwCzvJmK4okgzwC2DliaeTQkjAUpPdQGojDVno7azlwJJxpvBUccDyct+imjAxgU4bAWuBmmYGVs61I+1GrfH9eetjhsiC04QCTnDMhE0AAyhPocGgfGxdnxX8/8gVd4PuF3Ms6Yfkbdp14j2ZUFk4I/Ea2QyU7QnUbXZ3dp1NKDMh0P7j7FkFna8xOU0kXR24izZvl+639SsJCQ9JAKdqKOUamdnx8Nj2RCqJ03/IKYiythtjpoCjcvsPjnfUmAijDwex4QEOrbwL2Le7wrBA37K/O3zZyObHsfe+htTlnIxKJ2z871QqXA1GsEd88k/YWocnUR5YX76bUFQkZH9mKXPPOwgs4+SOuMUFca+5R45+tRjI3TmVygir28DyTWX4dYTZGjj1GOxYGAhms8E7G6nhis1w=="
                    },
                    "atomic": false,
                    "chart": "metrics-server",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "p-3-metrics-server-8d1jnsa5",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes-sigs.github.io/metrics-server/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "APIService.apiregistration.k8s.io/apiregistration.k8s.io/v1": [
                            "v1beta1.metrics.k8s.io"
                        ],
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "system:metrics-server-aggregated-reader",
                            "system:p-3-metrics-server"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-3-metrics-server:system:auth-delegator",
                            "system:p-3-metrics-server"
                        ],
                        "Deployment.apps/apps/v1": [
                            "p-3-metrics-server"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-3-metrics-server-auth-reader"
                        ],
                        "Service/v1": [
                            "p-3-metrics-server"
                        ],
                        "ServiceAccount/v1": [
                            "p-3-metrics-server"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "0.6.1",
                        "chart": "metrics-server",
                        "name": "p-3-metrics-server-8d1jnsa5",
                        "namespace": "kube-system",
                        "revision": 1,
                        "status": "deployed",
                        "version": "3.8.2"
                    },
                    "timeout": 300,
                    "values": {
                        "fullnameOverride": "p-3-metrics-server"
                    },
                    "verify": false,
                    "version": "3.8.2",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "namespace": null,
                    "repositoryOpts": null,
                    "values": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::p-3-cluster-autoscaler",
                "custom": true,
                "id": "kube-system/p-3-cluster-autoscaler-0bwdl99s",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "cluster-autoscaler",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "p-3-cluster-autoscaler-0bwdl99s",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes.github.io/autoscaler",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-3-cluster-autoscaler"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-3-cluster-autoscaler"
                        ],
                        "Deployment.apps/apps/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "PodDisruptionBudget.policy/policy/v1beta1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "Service/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "ServiceAccount/v1": [
                            "kube-system/cluster-autoscaler"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "autoDiscovery": {
                            "clusterName": "p-3-eks-cluster-eksCluster-fd821aa"
                        },
                        "awsRegion": "us-west-2",
                        "cloudProvider": "aws",
                        "fullnameOverride": "p-3-cluster-autoscaler",
                        "podAnnotations": {
                            "prometheus.io/port": "8085",
                            "prometheus.io/scrape": "true"
                        },
                        "rbac": {
                            "serviceAccount": {
                                "annotations": {
                                    "eks.amazonaws.com/role-arn": "arn:aws:iam::030813887342:role/p-3-autoscaler-role20220621013447476800000001"
                                },
                                "name": "cluster-autoscaler"
                            }
                        },
                        "replicaCount": 1
                    },
                    "verify": false,
                    "version": "",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAHmASQAm098XJx8rFBj6sDW2fLDh02AFmK+g53QbHXNbqXEcA+hAlBCbD8Kk42WbWg5tSrOX0bhyQUsJ6zpc7tTIZEnEWXmn8S/Sr9bHxMGpR74TnbgHVt0st0YGHkcsWbIHM2jTY+yyxoVcXepfKHqUHuaIIj5kqtS4yZoc1m1eRn2s67yDHMRZkTvFEoO95EIEff8bwX2TkcumdgDGoyVF+fl/fS4zsDOXbnbxqRXi1YcMHkZVkiA1EDgdxd7De3S2ADkztOapYcLY3FdS5hTnX/Qxj2pQFsnxrcdils2Uq9hhzQOOf/oK2lcNV6VwHjgrLL9ecKu+THzrWoW/iMEocZMrLm++stDnFPsTr3bER0Vv+ZB+mVz8pZYBwlduHTpcBRXNWudCXOCwWwdoiSkjaDtVRlXJ/UdpWs1y1YVYGL5SzS3PxARCgHnOfUV97VSVDW5qjUBhmPVbxldS2Gk0HoB5++h53BERvrC+m0QVoIW0RQZdXXAGv5xW71BTv594X6BP5dMRaLz+ZP47v1A25X5QtkaxeKasCAMXu0UUX5/wcP+/ryiSxpnQOlOKcu5tV8RlQ99r9vvBWXfSJ+Tg/LZ4KUxBStWAxc58Wy/pFg+dPw/An5pYvqYYFMs0/kSaB/qqkE8Rh6vbOJJTw3ViahrxXRDfRwu18tVXnZFXbJhbJduffhwLAEQMi7ZjsCBAKXDDwSMDcowO+AdHn1qVgumFcwW5wQEc2g25xKcfGRAUj8cjI2g+jZpPIQFa3RYqJ7k9ddpRxuadlZOeTN2bii8Tpj3h36YnzzH59AoqfrvSJR6cVYbooFq4TZCHzOXeUaBSRPZjmzAqgi93hPSbxpY0TXWaL6LWPDRfO/Q86GAWXezWh+aJidAgayIr7pOhBf1i9aUokqNURT7GvM6SvHMBtD+62aOWhRE1RdY41uhcudDMwXUeQOzB6c8OnPeH1ruOIEjXUgN1v2PnA/i203LYV2a44Ni5mlGQBqyVtEnxY9zaFrkllS1ecb7Ez2roem4QdJM2HVkfzs19a5mw7zs/sp8EYzTlAIAqNekLRNBb7g4G4BkF8BL6O1Yvds8R5VDOHE5H0EJ2e0zVs6UvPhgZS5EwUYWghyce8hKRVDmUA1RlW8+r6flrekJ2HR4xsQMgSkmtpKkedDVRpbACvUvs7eiOu5w7Vdb1xsAp/frC9Wek36wrDhr38CFAjbPBxUNH1sRuMERZLRd9jFUZ/HCnEOzi5IdLavTgSyNZ03ifMNRNfKNzpnySBCQ6ccTHKEN5CmXICanRfHKAFMDxHsSSMB7/2F/zKRmsR4ybJsZe9sEYVCj6RrWDeyMDU0+eJMVfq2+jwZtweviC5SHkIgL2EpWL59grPDUN0Qb1xs+VQVWzG/+kqZRtFAJhpDBavbwyUB34Pfmsp41NlWYdqRixmp7tvHo6pMja2A+vBleX5WOGxQK7NF9wCP3YFwYnTi5qzXXcS7yE7MxTk84CTh/mH1nsm+7lyA1rA7boMt6fhBbI0YPC9ZT8vZHvgzcMJQnRK1qSLTSWd/StTA+IOd0HCqJPbataW1tIeRSLS2GJe1o+L4ZaDtCdtgrJ5hE5IZIpZ7QgMOaJghgewim6Ibtg2ahfb5TGcPC58mHX0N7cFIGyA93FbrvdhYXTAUpRPOQ5TioSZCkOrWdihDVZY9RFiH7xj6UWoKamcdjHSOPAeHCX5gbdxyL1we9KUW75EAZtQMOgc0ghamIkp6Qky6PexGNR0oXwZP9QtMPQxZTrKmbdNmILfxxVsLR11CyoBBuN29hZ7xBSbWvCU5SCrEnWt7spiM8nf1D+C5dr9xSYTmX1Zx12MvIIeiLPfoigm+E+mCEgTJGwlLZzWXHPvyaiO7foZ+3Dj/22MJpYnlUcd2dvLx30Pi6jZqFhE1gR9BElHnYkm7ceYG0bFahlxKzdql6lkMN1+mqHfd4NyWYVwL4GaYR5JKIFIxSATVZrTphSDy1KtaLRY0bvw9tLCYVEGhiA+skArE7GeeatmjPfvg/thYSlRIrghS1wte2e/I3Xr2s4eZUdf7XhzDabax8qqOkrAzshAqLIvFGcA1X17elNKcrh64UAVTcbe4t0WE7+JFPS2dr025kxdotd9OZd5uqzT0IBLnU1COUpHRRoEIpQ6gI+WN8Q22KHd2S6noOqPSjQl4rBM6N4zcy8obWjWGefSTEEDF4k9c5XzquFxqongq+s83vdEfozG9ILNzAn0mA0P0sQ/t/dzZYvOAbH+LQB/KBgn0vr6u5zjSSFG1gkH/MswjvMI5H+BuN0HOr+5sBKS1gjYqn278QMK0+PCOQt7Psl+2/2JhtBhxkcvPFfPhifbxuGQTbqWRWTYHEkutAAVDGsMhEeAHgdDD62dDEAfc7p7Cu6bAdlFJFlTX19cCNAMhShKJ224zivKeaAcdidDEAwlkvIjHOeGIfJCsBn"
                    },
                    "atomic": false,
                    "chart": "cluster-autoscaler",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "p-3-cluster-autoscaler-0bwdl99s",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes.github.io/autoscaler",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-3-cluster-autoscaler"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "p-3-cluster-autoscaler"
                        ],
                        "Deployment.apps/apps/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "PodDisruptionBudget.policy/policy/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "Service/v1": [
                            "kube-system/p-3-cluster-autoscaler"
                        ],
                        "ServiceAccount/v1": [
                            "kube-system/cluster-autoscaler"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "1.23.0",
                        "chart": "cluster-autoscaler",
                        "name": "p-3-cluster-autoscaler-0bwdl99s",
                        "namespace": "kube-system",
                        "revision": 1,
                        "status": "deployed",
                        "version": "9.19.1"
                    },
                    "timeout": 300,
                    "values": {
                        "autoDiscovery": {
                            "clusterName": "p-3-eks-cluster-eksCluster-fd821aa"
                        },
                        "awsRegion": "us-west-2",
                        "cloudProvider": "aws",
                        "fullnameOverride": "p-3-cluster-autoscaler",
                        "podAnnotations": {
                            "prometheus.io/port": "8085",
                            "prometheus.io/scrape": "true"
                        },
                        "rbac": {
                            "serviceAccount": {
                                "annotations": {
                                    "eks.amazonaws.com/role-arn": "arn:aws:iam::030813887342:role/p-3-autoscaler-role20220621013447476800000001"
                                },
                                "name": "cluster-autoscaler"
                            }
                        },
                        "replicaCount": 1
                    },
                    "verify": false,
                    "version": "9.19.1",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "namespace": null,
                    "repositoryOpts": null,
                    "values": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:Namespace::fennel-ns",
                "custom": true,
                "id": "fennel",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "linkerd.io/inject": "enabled"
                        },
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "fennel"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "annotations": {
                                "linkerd.io/inject": "enabled"
                            },
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "fennel"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"annotations\":{\"linkerd.io/inject\":\"enabled\"},\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"fennel\"}}\n",
                            "linkerd.io/inject": "enabled"
                        },
                        "creationTimestamp": "2022-03-22T03:11:03Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "fennel"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {},
                                            "f:linkerd.io/inject": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:kubernetes.io/metadata.name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T03:11:03Z"
                            }
                        ],
                        "name": "fennel",
                        "resourceVersion": "1275",
                        "uid": "aeeab0a3-9472-4ff9-8094-187b45a77fd1"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::descheduler",
                "custom": true,
                "id": "kube-system/descheduler-ho5tf1yr",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "descheduler",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "descheduler-ho5tf1yr",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes-sigs.github.io/descheduler/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "descheduler-ho5tf1yr"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "descheduler-ho5tf1yr"
                        ],
                        "ConfigMap/v1": [
                            "kube-system/descheduler-ho5tf1yr"
                        ],
                        "CronJob.batch/batch/v1": [
                            "kube-system/descheduler-ho5tf1yr"
                        ],
                        "Pod/v1": [
                            "kube-system/descheduler-test-pod"
                        ],
                        "PodSecurityPolicy.policy/policy/v1beta1": [
                            "kube-system/descheduler-ho5tf1yr"
                        ],
                        "ServiceAccount/v1": [
                            "kube-system/descheduler-ho5tf1yr"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "schedule": "*/30 * * * *"
                    },
                    "verify": false,
                    "version": "",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAPQqQDQfn+IvO0dK/6fw7oU8ZAysPSvTKDCifPFHSF/gDAaDUfkjaEcNuqV4d5wpnMsqIC54T9qLLJ/K2vW6UNS/UmWquD2g1Fb5e5u7fQcGVObPXrpbYstsGuyd0ez/Exssq+TK5PbBd0kADPYUnNrx0UfWGMj6MO0v/Laec6exJbeyyiGsLx8/ZZ3957Rw0jAp+K+Xe3wXaII/S+352Gr3H6PqLmWfxQPhXy/HD5InjbR6j6naFkxAnvZyhVRZv8802UE/Mql8m2yH0zVOj6g1jMfYJLke4MPV17SMtau4fhs44TQ1Z7dWDebV/c9AgKpNH6YKER56s3DebBoDUt+imkWQDeboZTQJiy1NMB6k/0d2QYuA+4fLxylG0sE89qPuxCxCvvTIOWsKiyzE/1etGiTdDX0Sgy0wLt8hS7KQQuQyMC+g9jTYCMTuNGrKibl2Kz4CPslkbU/EboBR2auQUwKvVBd6aWJP1FScRhoQX56LdsvakxHgYwnJzQBLzwLly0EoMDKCuZVlxWcPCWmePtJpanmcwZVwKrSCNh56SLfdXNPV79lD+vnNTPGW2e+3F90n4xQRpqTcJvQdmueo3uVK2uDSCkxEOfkwylaE4/i9eAT8eGdH8YQrDLbVzQwuybygcaURj0l0b0civET8rNa8R/TdPzYp+yxmFiDJK0CpZrOyymhEcz3NPPnO+YaItpfyXI73BtW97ky+EizmwovtyVvb8CMSe+waSEj5DChuaDPxbY3Kwq7rGsDZl9/hk+3Wn1kUpL2wIeeZ7jefyAgOwW63vTJ4OxCyyNGjGjfOURF2dElav3DAxV6j29skmuK2EeLDRqscUoT5fyQam0wjs31uoGfM8spIIACZbXjtKa1yTN/bI8WSYx/HVWEtIq1vbG+Y0TtFsJ5f+n76c3Xn37ys5fb1fs6SWAI88cMqJ1DTi5EqZcCy0t0NhyyaNa8oxSqTUMl1ASxtRY0UODNshyw6YxIxcRmCvzHjp0c6c68BazQWr5a5Ye4naN/45v16B8OV+Pjj45V0TwRieHPvhc7HQbIzOc2aUXeBioXf5GQUte5C1eNWKuKJyb7FCMk0KecRcAQhdqLlG3UmnH9cyY5k+Yc8G3lLOEt1LleqFSCSu8S3OSd/lA+QqLMd9mwMjB2kRkkZIRavYb9eCGFoPkuwSSLp1z9nos9XjdhXTEDxQ3624Q6fwDVCDmzxRTbudVNrTGe225PvKsgtvj75NLWDa8HEXdPPg9y2K9442i21J5CAD1N1+yJITxA4tL7VTRCel+0fe6ECrNQYw9T/xQRI3yq92Ui6kcU7Xz/WtnHmK45gZIu0ZLb9QbO2cYwLxpFsh+AfJc0/GxrHj+wAZO3bW/YGCFhcjouhfD0z5OlIlOfuLw61msvdJfC9y47UX928FvGR0Hs1LQyDS3uXLrCGgrZiAx9VBBV43NPzIyaFyDWVe71XL2fQO5D6QKXH9YtQR+R59gFU+Gfd6pVjvGVH2NCtivW6EcRVyCO5CbOE5nfbCiAtjHmIt9ljnBvmQ5dyHuZ2xIE5MipifkYTYdhJsrIKJUoFBGahs8Uuk1KZZ66XqtjO0xSVccgxA1rUeTgDU+nO2te5tpg7/oucfNqGEduoAGS/xqHjcD+ov4VstSletyQdSQ6u5ks00BnXYsOXUQ=="
                    },
                    "atomic": false,
                    "chart": "descheduler",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "descheduler-ho5tf1yr",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://kubernetes-sigs.github.io/descheduler/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "descheduler-ho5tf1yr"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "descheduler-ho5tf1yr"
                        ],
                        "ConfigMap/v1": [
                            "kube-system/descheduler-ho5tf1yr"
                        ],
                        "CronJob.batch/batch/v1": [
                            "kube-system/descheduler-ho5tf1yr"
                        ],
                        "PodSecurityPolicy.policy/policy/v1beta1": [
                            "kube-system/descheduler-ho5tf1yr"
                        ],
                        "ServiceAccount/v1": [
                            "kube-system/descheduler-ho5tf1yr"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "0.24.0",
                        "chart": "descheduler",
                        "name": "descheduler-ho5tf1yr",
                        "namespace": "kube-system",
                        "revision": 2,
                        "status": "deployed",
                        "version": "0.24.0"
                    },
                    "timeout": 300,
                    "values": {
                        "schedule": "*/30 * * * *"
                    },
                    "verify": false,
                    "version": "0.24.0",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "namespace": null,
                    "repositoryOpts": null,
                    "values": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc",
                "custom": true,
                "id": "kube-system/aws-lbc-07dqh0no",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "aws-load-balancer-controller",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "aws-lbc-07dqh0no",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://aws.github.io/eks-charts",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "aws-lbc-07dqh0no-aws-load-balancer-controller-role"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "aws-lbc-07dqh0no-aws-load-balancer-controller-rolebinding"
                        ],
                        "CustomResourceDefinition.apiextensions.k8s.io/apiextensions.k8s.io/v1": [
                            "ingressclassparams.elbv2.k8s.aws",
                            "targetgroupbindings.elbv2.k8s.aws"
                        ],
                        "Deployment.apps/apps/v1": [
                            "kube-system/aws-lbc-07dqh0no-aws-load-balancer-controller"
                        ],
                        "IngressClass.networking.k8s.io/networking.k8s.io/v1": [
                            "alb"
                        ],
                        "IngressClassParams.elbv2.k8s.aws/elbv2.k8s.aws/v1beta1": [
                            "alb"
                        ],
                        "MutatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "aws-load-balancer-webhook"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/aws-lbc-07dqh0no-aws-load-balancer-controller-leader-election-role"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/aws-lbc-07dqh0no-aws-load-balancer-controller-leader-election-rolebinding"
                        ],
                        "Secret/v1": [
                            "kube-system/aws-load-balancer-tls"
                        ],
                        "Service/v1": [
                            "kube-system/aws-load-balancer-webhook-service"
                        ],
                        "ValidatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "aws-load-balancer-webhook"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "clusterName": "p-3-eks-cluster-eksCluster-fd821aa",
                        "serviceAccount": {
                            "create": false,
                            "name": "aws-load-balancer-controller"
                        }
                    },
                    "verify": false,
                    "version": "",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAEAWImJJZj1cI2Oe9oPKqxzltHJBX7tTKXElK4l3G/o8S9U/Qu/P3g+cmuzO/zQWa1UdEsAmWTsZz7S5RZD0iQb3pwN+LapoyoyD7Dgd9mFf7dEYvufsNQCS1XLEciiRIhIo3UB293WBN/1AryNblrsmJfeR3XCoRLirWCtb8sMl2i6FEFd12xuURUoPY/yhKfUyu2qrLxZG4DztqBUEvyKZJ+fWl8BrtenCpEwHGTbqEjCuY6j9ySroU8vJ855mUuGBBh1UW2PMYx41K8XlVFDTxCFkBEGI7ecRyXlgv45szjwgS7Zb+yd2rDi1B8H2M+ZbQ5Sw9fvWA3IYzDPYWY00uniDuLZyL7CR0UOiNcH2GnLvHDVeVz24wik7ZA+6reC0QYbBA3CuEADXAzjFcSwGC1ZncVN+FJxWYGQm03HsmKbJNW8zcSG+erlJOPdx+m6Hhg6Zlu+vrCvP8OLWMalp9k+x3aaZNvBv7uEpNnLngHIpPausCssQqXflzx9y88Q2sM/FvPw2WotbpX0T7KJwV/pLsw4i3/Ek3KT+FmUZ3G2BkUZkqmQTyJiB5MoI7fSLLhenQAJmvaC3KkIFCCb66FdnjUI3eaUTuVtitvFSo+fabZAaANBL5e8oV+u7oOL6brO1iy9vDpXTdTEa359wCvjM0cQIXvDLuE/GAR5IFvYlRBRN6P4MCoxTjEENAEVee7lVkmgv1/7aOfcUJ6Qz1THzw+/cWrrL024v04C97xwHo8gOsZdlIlXEnZp7/1PC28ER/Lw/OUuIWh2JeAgecZXwD3WtNfpx/qxU0EUUC3b4Ohq+BG0tlF1mcuwBlywAoCMpeuK1L5j2Dg4EQQtHQ3hcARgcGb6HpDiqOYbO0bXIf+nNp7yac7e+CfaGDflPVKWa2kcJpO1B9K34w5VkJjATqMmBlSnpdEFt7x74sym6LEt0vj0IL7+nD794GkXrpKgoGc0Wv0wwQFokA7/3SH7KsXue8x6BDkn/5OmRqur9lZYQI+GKibpC/lqSKIXCfRk9x9UYK0mrAdkdTaJ9oJopySwvIivh0FDwb8I+EiU1xh57eCw8MAx8IN030SNPbS4ayiE65/jOnae9/+hYnx0cXnT3oEsbCWB6+1bfxc2tkgw5tld4hD9nZRoeFHKa57pMq/3Y0JRj6fX7MLIU5hryaBTrFpqPYId6bWo6FW6ga2EAPk+3gfiCOnIIQByFk7yzYsJfTYQeQeOY7b5nTzPBoZE1rUnnaajnCfMLxNVpDUgrbarkfeNBPRT/74XeCs+c9YmuPWhiWnPKmYSoUQX1rqUnF4trIOl4b7xhjFyf0Q5i9lHwBb55EI6SeXXKfyZlGBulKgbqbcneGdg443fjHDuTykfyTEAS0OMzm+YwZt2M1bMMzXtulOsMoMbblAMQbZPoc9R5PAbFhitzUBJjlniNn0iijjma76pogZVFpIsE/R6Y64JsXT9AXY065QFcVEhx32q/yYRhL35IzgiId99zwYMkVjUr/rYCo2SOOflUfrSj/IwrGQw1JuFMOdTJ4Vm0VaDrFz+JZFSjelnR9dVbSoaW9pSlC572C4/BSrkKWR5v5+w9L5LenW7FMeVwxv/SRmKRC/K/AWispufORCU6xo8s2r45yZKvMBqD0OyEvei87jmChoz1v8j8OxEUBc8oRzTEU8ynaLwag7BduXH5A/dcLdm07ZVxqZhuYroaMDeCwJuxKPCI9Gx/AD9b3nrdZCgb40Q0OEG5rqubObm+qOGZ1eEv2LD/PHDW29LjYlCVsb2Qtx5jZ5HRkwimfN5arqPrZAGGuz8/hE6qfLgAncdmvJL+79LUiQopbozIo5L99kIoCF3vJ/Ug8MMWr8GiNfxNQILwu+ngt26bgoRvbCA39Tig3rJSaCSEzi3x3HXAlBkugpdc/FkD+PmHm3gsrl44U8FdSSJQMnUtMAdGAOpvbr8+vXPQGOq14m5GqpNY0cQElEmMeFzNe+7v2OEeMTSPXT/BWL1a/TKLJkGefmi0EAj1THCV+rtlVOOxe3jrcyx2biM3z74q2aDRwNSlanKImYmavPsu4PzO+J4CmykS2o5ieU9L4dGB9CAk+L8WvIHgtPo9FFBepNgCcu78FXuLkCwUaznJmS8Y56iH2BcirOHi9AL7NKnrRp1hKAq68RSP6Qhds/zFR3f+8fzNIzOyinxUvCUprR6GROgpQ1qUjRJ10rzig+CybR2+KBxsixKaI5b5xA0rPSSH0SpCLNQaYunkkfrId853masuhN51E3UwllUSJ2chWSGeGcmzrq83nDRac5DDlnE4L7wmkrhNiRcwdO8xIdx1Di1p9HVN2dtcLKfsKINhRqMC1DN8Lp5hkttP2e1AXtPqgsZB1Znyzdd5MWYQVz/2E8WM4bgJRt5wRsjM2fEhyQtJqlNYmaCaBUFI3EK8FwXN4524idEY4sp1I0pQfV8axqS7w8wkAM37ZFbSp8meEJcot+D5d5qxOH6Ns53oyQRw5whQbQD+x9FQIaNEIQMvYlcFoTa1C4+NPjmpY8mBvcfelWA+w0dM73+0Ng+q29wMDu3UxucUvtNu9uJAGoBfN8aLVTjP8z4nR7N08MSNMcVv+bSqyt/7IBYfzH9ScJLpfeOrjkkpsIfzymF1JP7IfMwTbtDsJ74fHdVqwcepI98SmmknI1ZTCQ6WmPEqCa/zFFomAJl2bisIOlsSzKeZt2NjsXHgfkVSNvOsMjg0p+JWRX/V5up97Y3XZoVp/7e6LUqKL69DAheXWAPh0fCCERfoRA7RFbqV6blrFgwiU7bTxgZjA9WrUMWMmFGkhQPLhmSMmxfCeklQFonz1ivgbvR8/K3uHXcpEUKnQ7Ih"
                    },
                    "atomic": false,
                    "chart": "aws-load-balancer-controller",
                    "cleanupOnFail": false,
                    "createNamespace": false,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "aws-lbc-07dqh0no",
                    "namespace": "kube-system",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://aws.github.io/eks-charts",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ClusterRole.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "aws-lbc-07dqh0no-aws-load-balancer-controller-role"
                        ],
                        "ClusterRoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "aws-lbc-07dqh0no-aws-load-balancer-controller-rolebinding"
                        ],
                        "Deployment.apps/apps/v1": [
                            "kube-system/aws-lbc-07dqh0no-aws-load-balancer-controller"
                        ],
                        "IngressClass.networking.k8s.io/networking.k8s.io/v1": [
                            "alb"
                        ],
                        "IngressClassParams.elbv2.k8s.aws/elbv2.k8s.aws/v1beta1": [
                            "alb"
                        ],
                        "MutatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "aws-load-balancer-webhook"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/aws-lbc-07dqh0no-aws-load-balancer-controller-leader-election-role"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "kube-system/aws-lbc-07dqh0no-aws-load-balancer-controller-leader-election-rolebinding"
                        ],
                        "Secret/v1": [
                            "kube-system/aws-load-balancer-tls"
                        ],
                        "Service/v1": [
                            "kube-system/aws-load-balancer-webhook-service"
                        ],
                        "ValidatingWebhookConfiguration.admissionregistration.k8s.io/admissionregistration.k8s.io/v1": [
                            "aws-load-balancer-webhook"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "v2.4.1",
                        "chart": "aws-load-balancer-controller",
                        "name": "aws-lbc-07dqh0no",
                        "namespace": "kube-system",
                        "revision": 1,
                        "status": "deployed",
                        "version": "1.4.1"
                    },
                    "timeout": 300,
                    "values": {
                        "clusterName": "p-3-eks-cluster-eksCluster-fd821aa",
                        "serviceAccount": {
                            "create": false,
                            "name": "aws-load-balancer-controller"
                        }
                    },
                    "verify": false,
                    "version": "1.4.1",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-attach-lbc-policy",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "namespace": null,
                    "repositoryOpts": null,
                    "values": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::eks:index:ManagedNodeGroup$aws:eks/nodeGroup:NodeGroup::p-3-common-ng",
                "custom": true,
                "id": "p-3-eks-cluster-eksCluster-fd821aa:p-3-common-ng20220526000048387200000001",
                "type": "aws:eks/nodeGroup:NodeGroup",
                "inputs": {
                    "__defaults": [],
                    "clusterName": "p-3-eks-cluster-eksCluster-fd821aa",
                    "instanceTypes": [
                        "c6i.2xlarge"
                    ],
                    "nodeGroupNamePrefix": "p-3-common-ng",
                    "nodeRoleArn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb",
                    "scalingConfig": {
                        "__defaults": [],
                        "desiredSize": 4,
                        "maxSize": 6,
                        "minSize": 4
                    },
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ]
                },
                "outputs": {
                    "__meta": "{\"e2bfb730-ecaa-11e6-8f88-34363bc7c4c0\":{\"create\":3600000000000,\"delete\":3600000000000,\"update\":3600000000000}}",
                    "amiType": "AL2_x86_64",
                    "arn": "arn:aws:eks:us-west-2:030813887342:nodegroup/p-3-eks-cluster-eksCluster-fd821aa/p-3-common-ng20220526000048387200000001/a4c07ed5-3b0c-c4c2-4d9b-42d751ca0113",
                    "capacityType": "ON_DEMAND",
                    "clusterName": "p-3-eks-cluster-eksCluster-fd821aa",
                    "diskSize": 20,
                    "id": "p-3-eks-cluster-eksCluster-fd821aa:p-3-common-ng20220526000048387200000001",
                    "instanceTypes": [
                        "c6i.2xlarge"
                    ],
                    "labels": {},
                    "launchTemplate": null,
                    "nodeGroupName": "p-3-common-ng20220526000048387200000001",
                    "nodeGroupNamePrefix": "p-3-common-ng",
                    "nodeRoleArn": "arn:aws:iam::030813887342:role/p-3-eks-cluster-instanceRole-role-dcb5bdb",
                    "releaseVersion": "1.22.6-20220523",
                    "remoteAccess": null,
                    "resources": [
                        {
                            "autoscalingGroups": [
                                {
                                    "name": "eks-p-3-common-ng20220526000048387200000001-a4c07ed5-3b0c-c4c2-4d9b-42d751ca0113"
                                }
                            ],
                            "remoteAccessSecurityGroupId": ""
                        }
                    ],
                    "scalingConfig": {
                        "desiredSize": 4,
                        "maxSize": 6,
                        "minSize": 4
                    },
                    "status": "ACTIVE",
                    "subnetIds": [
                        "subnet-0e17b2c51bb9d79f4",
                        "subnet-0615a2647b66a222c"
                    ],
                    "tags": {},
                    "tagsAll": {},
                    "taints": [],
                    "updateConfig": {
                        "maxUnavailable": 1,
                        "maxUnavailablePercentage": 0
                    },
                    "version": "1.22"
                },
                "parent": "urn:pulumi:plane-3::launchpad::eks:index:ManagedNodeGroup::p-3-common-ng",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                    "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$kubernetes:core/v1:ConfigMap::p-3-eks-cluster-nodeAccess"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::eks-aws-provider::258ba2bb-4e7f-4f82-9bd7-ee78dbe25167",
                "propertyDependencies": {
                    "clusterName": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster"
                    ],
                    "instanceTypes": null,
                    "nodeGroupNamePrefix": null,
                    "nodeRoleArn": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2"
                    ],
                    "scalingConfig": null,
                    "subnetIds": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/vpc:Vpc::p-3-vpc",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-public-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-primary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/subnet:Subnet::p-3-secondary-private-subnet",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-private-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/networkAcl:NetworkAcl::p-3-public-nacl",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-private-rt",
                        "urn:pulumi:plane-3::launchpad::aws:ec2/routeTable:RouteTable::p-3-public-rt"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::command:local:Command::cleanup",
                "custom": true,
                "id": "669654ea96c97",
                "type": "command:local:Command",
                "inputs": {
                    "create": "rm -f ca.crt ca.key issuer.crt issuer.key"
                },
                "outputs": {
                    "create": "rm -f ca.crt ca.key issuer.crt issuer.key",
                    "stderr": "",
                    "stdout": ""
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::linkerd"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:command::default_0_0_3::c961a00c-e82d-41f0-8091-29a4cf93f731",
                "propertyDependencies": {
                    "create": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-ec-allow-eks",
                "custom": true,
                "id": "sgrule-272554803",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-05be6e341ac459146",
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "fromPort": 0,
                    "id": "sgrule-272554803",
                    "protocol": "tcp",
                    "securityGroupId": "sg-05be6e341ac459146",
                    "self": false,
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-cache-sg",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::cache-aws-provider::54ec0dc8-ad8a-4494-ba57-cb43e332ab76",
                "propertyDependencies": {
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-cache-sg"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops"
                    ],
                    "toPort": null,
                    "type": null
                },
                "sequenceNumber": 3
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-redis-allow-eks",
                "custom": true,
                "id": "sgrule-131264971",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-09e571f0713759de2",
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "fromPort": 0,
                    "id": "sgrule-131264971",
                    "protocol": "tcp",
                    "securityGroupId": "sg-09e571f0713759de2",
                    "self": false,
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-redis-sg",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::redis-aws-provider::5e1ff797-2ef0-488a-9b9f-7f4d89f937d2",
                "propertyDependencies": {
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-redis-sg"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops"
                    ],
                    "toPort": null,
                    "type": null
                },
                "sequenceNumber": 3
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "custom": false,
                "type": "kubernetes:yaml:ConfigFile",
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-otel-instance",
                "custom": true,
                "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220322031058314400000001",
                "type": "aws:iam/rolePolicyAttachment:RolePolicyAttachment",
                "inputs": {
                    "__defaults": [],
                    "policyArn": "arn:aws:iam::030813887342:policy/p-3-AWSDistroOpenTelemetryPolicy-20220322025614485200000001",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "outputs": {
                    "id": "p-3-eks-cluster-instanceRole-role-dcb5bdb-20220322031058314400000001",
                    "policyArn": "arn:aws:iam::030813887342:policy/p-3-AWSDistroOpenTelemetryPolicy-20220322025614485200000001",
                    "role": "p-3-eks-cluster-instanceRole-role-dcb5bdb"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/policy:Policy::p-3-otel-collector-policy",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::tele-aws-provider::8a93fbf2-2243-4c81-8798-3be31bfda4ca",
                "propertyDependencies": {
                    "policyArn": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/policy:Policy::p-3-otel-collector-policy"
                    ],
                    "role": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-unleash-allow-eks",
                "custom": true,
                "id": "sgrule-1819968461",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-0176f118fb8fbbe3f",
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "fromPort": 0,
                    "id": "sgrule-1819968461",
                    "protocol": "tcp",
                    "securityGroupId": "sg-0176f118fb8fbbe3f",
                    "self": false,
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-unleash-db-sg",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::p-3-unleash-aurora-aws-provider::fcf36285-052d-49b1-879f-e14518d7d39e",
                "propertyDependencies": {
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-unleash-db-sg"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops"
                    ],
                    "toPort": null,
                    "type": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider",
                "custom": true,
                "id": "06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.16.0"
                },
                "outputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.16.0"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::prom-k8s-provider",
                "custom": true,
                "id": "2755aa29-271f-4f1f-8be3-4860108333ad",
                "type": "pulumi:providers:kubernetes",
                "inputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.16.0"
                },
                "outputs": {
                    "kubeconfig": {
                        "apiVersion": "v1",
                        "clusters": [
                            {
                                "cluster": {
                                    "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1ETXlNakF6TURNek4xb1hEVE15TURNeE9UQXpNRE16TjFvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTmVSCnF1S3ZNWGFIdnhabkxmQWtnamFYbHJJZVgvMDVJQ1hheGJBaHh4eVoxclM2OEhMWVdFQU5VMGozN1hjQTlycHkKTHFYYnRMV2dyV2FvY09kakw3UWhTMnRGRi9PZExJMDJQeDdCV3Z5ZzdyRXZpWjFyWVR3TE43cFFPMFpqVXlGQQplSXB1VnF3ZStGVnBBdzJvRkZiVWFOejVaQm1CN2t6bnFUMXl6RkNuYnlYMGZCNkpTRjgvcEJ0YisyRU5ZcGZ2CjVZT25jRmVoc2Qwd0Y1L1NieVgyRW0rcE5kSmhjSUpQTUx5TjdMRWZzV2EvQ2hUaFRMd0UwazJxNCtTN2dsNzYKTjRWVjFLa2Z1MmRaL1VzRWRJN3o5cTQwbVQvNTg2anZnSXZnTXVMOGFQa0lhakxRaDdieGRSZ3N6eCsvcDQ3cwp5dXdJT0l2WnRJRnlpa3VxMDQ4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZQUlZMdjhxYmFleCtmOWtaZHV0cDZvTWd4UmlNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCdUdZWHY1V0Y4UUM5ZEtvTGs3WURNR202YUV4NVJ6L29GeFN2cUJQdlZGV2doOVZKagpuaCtnNVZ1d21Ya3BKd05aQ2haMFRyTjhYc0xVbE1BeWFWZzVpL2plNFhGaXdNL2dlR002VkNWTkhrbENhVDdSCmdoc016aURVbER6RzFSWFU0LzRkWmRtMjF5WGwrQ2VqeGozc3dmNUpaZ0E0UG1SS3AzVDFvVDVLYjMxWUlpM04KNjlSRjFSb0NtbUZqdGRyZ3NycGN0V3pCU1RRdTJHZGova3ovblZyRmlCZStuQzVLd1FyUHZqMldzdFo0eHV5SApYMGh2QmE1SS9ZWlI0eGRrd1RoTDdMTlRJbWVQQUt6UkdGRVBVWTlvSlZ3akE2S1dDQlBESkFxVUJTeXUybUE4CkRJeVlmNEY5L2h6dEFyS1NodFluMXJxSlJkZnEyTzBDSEdEQwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                    "server": "https://6D137773CA2473C2DE9797609E5E2195.gr7.us-west-2.eks.amazonaws.com"
                                },
                                "name": "kubernetes"
                            }
                        ],
                        "contexts": [
                            {
                                "context": {
                                    "cluster": "kubernetes",
                                    "user": "aws"
                                },
                                "name": "aws"
                            }
                        ],
                        "current-context": "aws",
                        "kind": "Config",
                        "users": [
                            {
                                "name": "aws",
                                "user": {
                                    "exec": {
                                        "apiVersion": "client.authentication.k8s.io/v1alpha1",
                                        "args": [
                                            "eks",
                                            "get-token",
                                            "--cluster-name",
                                            "p-3-eks-cluster-eksCluster-fd821aa",
                                            "--role",
                                            "arn:aws:iam::030813887342:role/admin"
                                        ],
                                        "command": "aws"
                                    }
                                }
                            }
                        ]
                    },
                    "version": "3.16.0"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops"
                ],
                "propertyDependencies": {
                    "kubeconfig": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroupRule:SecurityGroupRule::p-3-allow-eks",
                "custom": true,
                "id": "sgrule-1917858845",
                "type": "aws:ec2/securityGroupRule:SecurityGroupRule",
                "inputs": {
                    "__defaults": [],
                    "fromPort": 0,
                    "protocol": "tcp",
                    "securityGroupId": "sg-05840b7dcfd0ec43f",
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "outputs": {
                    "__meta": "{\"schema_version\":\"2\"}",
                    "fromPort": 0,
                    "id": "sgrule-1917858845",
                    "protocol": "tcp",
                    "securityGroupId": "sg-05840b7dcfd0ec43f",
                    "self": false,
                    "sourceSecurityGroupId": "sg-02576e409d44907ef",
                    "toPort": 65535,
                    "type": "ingress"
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-db-sg",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:aws::aurora-aws-provider::134d52f5-7f5e-4454-b1be-748af511a354",
                "propertyDependencies": {
                    "fromPort": null,
                    "protocol": null,
                    "securityGroupId": [
                        "urn:pulumi:plane-3::launchpad::aws:ec2/securityGroup:SecurityGroup::p-3-db-sg"
                    ],
                    "sourceSecurityGroupId": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops"
                    ],
                    "toPort": null,
                    "type": null
                },
                "sequenceNumber": 3
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "custom": false,
                "type": "kubernetes:yaml:ConfigFile",
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::aws-lbc"
                ],
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:Namespace::cloudwatch-ns",
                "custom": true,
                "id": "amazon-cloudwatch",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "name": "amazon-cloudwatch"
                        },
                        "name": "amazon-cloudwatch"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "name": "amazon-cloudwatch"
                            },
                            "name": "amazon-cloudwatch"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"name\":\"amazon-cloudwatch\"},\"name\":\"amazon-cloudwatch\"}}\n"
                        },
                        "creationTimestamp": "2022-03-22T03:11:03Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "amazon-cloudwatch",
                            "name": "amazon-cloudwatch"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:kubernetes.io/metadata.name": {},
                                            "f:name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T03:11:03Z"
                            }
                        ],
                        "name": "amazon-cloudwatch",
                        "resourceVersion": "1282",
                        "uid": "d666e7d4-fb9e-4f78-834b-20bc9ea895bf"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ServiceAccount::otel-eks/otel-collector-account",
                "custom": true,
                "id": "otel-eks/otel-collector-account",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "otel-collector-account",
                        "namespace": "otel-eks"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "otel-collector-account",
                            "namespace": "otel-eks"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"otel-collector-account\",\"namespace\":\"otel-eks\"}}\n"
                        },
                        "creationTimestamp": "2022-03-22T03:11:03Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"otel-collector-account-token-t2cn6\"}": {
                                            ".": {},
                                            "f:name": {}
                                        }
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-03-22T03:11:03Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T03:11:03Z"
                            }
                        ],
                        "name": "otel-collector-account",
                        "namespace": "otel-eks",
                        "resourceVersion": "1294",
                        "uid": "744bef9b-7836-4c4b-9f37-3b109fdabfdf"
                    },
                    "secrets": [
                        {
                            "name": "otel-collector-account-token-t2cn6"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::aoc-agent-role",
                "custom": true,
                "id": "aoc-agent-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "aoc-agent-role"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes",
                                "nodes/proxy",
                                "nodes/metrics",
                                "services",
                                "endpoints",
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes/stats",
                                "configmaps",
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "otel-container-insight-clusterleader"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "ingresses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "replicasets"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "jobs"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "nonResourceURLs": [
                                "/metrics"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "aoc-agent-role"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes",
                                    "nodes/proxy",
                                    "nodes/metrics",
                                    "services",
                                    "endpoints",
                                    "pods"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "nodes/stats",
                                    "configmaps",
                                    "events"
                                ],
                                "verbs": [
                                    "create",
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "otel-container-insight-clusterleader"
                                ],
                                "resources": [
                                    "configmaps"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "extensions"
                                ],
                                "resources": [
                                    "ingresses"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apps"
                                ],
                                "resources": [
                                    "replicasets"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "batch"
                                ],
                                "resources": [
                                    "jobs"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "nonResourceURLs": [
                                    "/metrics"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"aoc-agent-role\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\",\"nodes/proxy\",\"nodes/metrics\",\"services\",\"endpoints\",\"pods\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes/stats\",\"configmaps\",\"events\"],\"verbs\":[\"create\",\"get\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"otel-container-insight-clusterleader\"],\"resources\":[\"configmaps\"],\"verbs\":[\"get\",\"update\"]},{\"apiGroups\":[\"extensions\"],\"resources\":[\"ingresses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"replicasets\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"batch\"],\"resources\":[\"jobs\"],\"verbs\":[\"list\",\"watch\"]},{\"nonResourceURLs\":[\"/metrics\"],\"verbs\":[\"get\"]}]}\n"
                        },
                        "creationTimestamp": "2022-03-22T03:11:04Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T03:11:04Z"
                            }
                        ],
                        "name": "aoc-agent-role",
                        "resourceVersion": "1339",
                        "uid": "cf6ea45e-413d-4f32-993a-ee4d62db65e9"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes",
                                "nodes/proxy",
                                "nodes/metrics",
                                "services",
                                "endpoints",
                                "pods"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "nodes/stats",
                                "configmaps",
                                "events"
                            ],
                            "verbs": [
                                "create",
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "otel-container-insight-clusterleader"
                            ],
                            "resources": [
                                "configmaps"
                            ],
                            "verbs": [
                                "get",
                                "update"
                            ]
                        },
                        {
                            "apiGroups": [
                                "extensions"
                            ],
                            "resources": [
                                "ingresses"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apps"
                            ],
                            "resources": [
                                "replicasets"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "batch"
                            ],
                            "resources": [
                                "jobs"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "nonResourceURLs": [
                                "/metrics"
                            ],
                            "verbs": [
                                "get"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:Namespace::otel-eks",
                "custom": true,
                "id": "otel-eks",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "name": "otel-eks"
                        },
                        "name": "otel-eks"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "name": "otel-eks"
                            },
                            "name": "otel-eks"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"name\":\"otel-eks\"},\"name\":\"otel-eks\"}}\n"
                        },
                        "creationTimestamp": "2022-03-22T03:11:03Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "otel-eks",
                            "name": "otel-eks"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:kubernetes.io/metadata.name": {},
                                            "f:name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T03:11:03Z"
                            }
                        ],
                        "name": "otel-eks",
                        "resourceVersion": "1281",
                        "uid": "b3117743-46b8-43d9-9185-3f0771dde6bf"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ConfigMap::otel-eks/otel-agent-conf",
                "custom": true,
                "id": "otel-eks/otel-agent-conf",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "otel-agent-config": "extensions:\n  health_check:\n  pprof:\n  zpages:\n\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:4318\n  awscontainerinsightreceiver:\n  prometheus:\n    config:\n      global:\n        scrape_interval: 1m\n        scrape_timeout: 10s\n      scrape_configs:\n        - job_name: 'kubernetes-pods'\n          sample_limit: 10000\n          kubernetes_sd_configs:\n          - role: pod\n          relabel_configs:\n          - action: keep\n            regex: true\n            source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n          - action: replace\n            source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n            regex: ([^:]+)(?::\\d+)?;(\\d+)\n            replacement: $$1:$$2\n            target_label: __address__\n          - action: replace\n            source_labels: [__meta_kubernetes_namespace]\n            target_label: Namespace\n          - action: replace\n            source_labels: [__meta_kubernetes_pod_name]\n            target_label: PodName\n          - action: drop\n            source_labels: [__meta_kubernetes_pod_container_name]\n            regex: (linkerd-init|linkerd-proxy)\n          - action: replace\n            source_labels: [__meta_kubernetes_pod_container_name]\n            target_label: ContainerName\n          - action: replace\n            source_labels: [__meta_kubernetes_pod_controller_name]\n            target_label: PodControllerName\n          - action: replace\n            source_labels: [__meta_kubernetes_pod_controller_kind]\n            target_label: PodControllerKind\n          - action: replace\n            source_labels: [__meta_kubernetes_pod_phase]\n            target_label: PodPhase\n          # Exclude high cardinality metrics\n          metric_relabel_configs:\n          - action: drop\n            source_labels: [__name__]\n            regex: 'go_gc_duration_seconds.*'\n\n        - job_name: 'kubernetes-service'\n          kubernetes_sd_configs:\n          - role: service\n          relabel_configs:\n          - action: replace\n            source_labels: [__meta_kubernetes_namespace]\n            target_label: Namespace\n          - action: replace\n            source_labels: [__meta_kubernetes_service_name]\n            target_label: Service\n\n        - job_name: 'kubernetes-cadvisor'\n          sample_limit: 10000\n          # Default to scraping over https. If required, just disable this or change to\n          # `http`.\n          scheme: https\n          metrics_path: /metrics/cadvisor\n          \n          kubernetes_sd_configs:\n          - role: node\n          tls_config:\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n            insecure_skip_verify: true\n          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n          \n          relabel_configs:\n          - action: labelmap\n            regex: __meta_kubernetes_node_label_(.+)\n\nprocessors:\n  # increase the timeout (time after which a batch is sent regardless), defaults to 200ms to maximizing\n  # the number of spans sent collectively to the destination (cloudwatch xray).\n  # rest of the values are set to default `end_batch_size (default = 8192)` and `send_batch_max_size (default = 0)`\n  batch/traces:\n    timeout: 10s\n  batch/metrics:\n    timeout: 60s\n  resourcedetection:\n    detectors:\n      - env\n      - system\n      - ec2\n      - eks\n    timeout: 10s\n    override: false\n  resource:\n    attributes:\n      - key: TaskId\n        from_attribute: job\n        action: insert\n      - key: receiver\n        value: \"prometheus\"\n        action: insert\n\nexporters:\n  awsxray:\n    region: \"us-west-2\"\n  awsemf/containerinsights:\n    namespace: ContainerInsights\n    log_group_name: '/aws/containerinsights/plane-3/{ClusterName}/performance'\n    log_stream_name: '{NodeName}'\n    resource_to_telemetry_conversion:\n      enabled: true\n    dimension_rollup_option: NoDimensionRollup\n    parse_json_encoded_attr_values: [Sources, kubernetes]\n    metric_declarations:\n      # node metrics\n      - metric_name_selectors:\n          - node_cpu_utilization\n          - node_memory_utilization\n          - node_cpu_reserved_capacity\n          - node_memory_reserved_capacity\n        dimensions: [[NodeName, InstanceId, ClusterName]]\n      - metric_name_selectors:\n          - node_cpu_usage_total\n          - node_cpu_limit\n          - node_memory_working_set\n          - node_memory_limit\n        dimensions: [[ClusterName]]\n      # pod metrics\n      - metric_name_selectors:\n          - pod_cpu_utilization\n          - pod_memory_utilization\n          - pod_cpu_utilization_over_pod_limit\n          - pod_memory_utilization_over_pod_limit\n          - pod_cpu_reserved_capacity\n          - pod_memory_reserved_capacity\n          - pod_number_of_container_restarts\n        dimensions: [[PodName, Namespace, ClusterName]]\n      # cluster metrics\n      - metric_name_selectors:\n          - cluster_node_count\n          - cluster_failed_node_count\n        dimensions: [[ClusterName]]\n\n  awsprometheusremotewrite:\n    # This should be replaced before it is used for deployment\n    endpoint: \"https://aps-workspaces.us-west-2.amazonaws.com/workspaces/ws-09330607-fd6e-4e8a-8c1d-5c0bcfd1d0b0/api/v1/remote_write\"\n    aws_auth:\n      service: \"aps\"\n      region: \"us-west-2\"\n\nservice:\n  telemetry:\n    logs:\n      level: \"debug\"\n  extensions:\n    - health_check\n    - pprof\n    - zpages\n  pipelines:\n    traces:\n      receivers:\n        - otlp\n      processors:\n        - batch/traces\n      exporters:\n        - awsxray\n    metrics/containerinsights:\n      receivers:\n        - awscontainerinsightreceiver\n      processors:\n        - resourcedetection\n        - resource\n        - batch/metrics\n      exporters:\n        - awsemf/containerinsights\n    metrics/prometheus:\n      receivers:\n        - prometheus\n      processors:\n        - resourcedetection\n        - resource\n        - batch/metrics\n      exporters:\n        - awsprometheusremotewrite\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app": "opentelemetry",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "component": "otel-agent-conf"
                        },
                        "name": "otel-agent-conf",
                        "namespace": "otel-eks"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "otel-agent-config": "extensions:\n  health_check:\n  pprof:\n  zpages:\n\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:4318\n  awscontainerinsightreceiver:\n  prometheus:\n    config:\n      global:\n        scrape_interval: 1m\n        scrape_timeout: 10s\n      scrape_configs:\n        - job_name: 'kubernetes-pods'\n          sample_limit: 10000\n          kubernetes_sd_configs:\n          - role: pod\n          relabel_configs:\n          - action: keep\n            regex: true\n            source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n          - action: replace\n            source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n            regex: ([^:]+)(?::\\d+)?;(\\d+)\n            replacement: $$1:$$2\n            target_label: __address__\n          - action: replace\n            source_labels: [__meta_kubernetes_namespace]\n            target_label: Namespace\n          - action: replace\n            source_labels: [__meta_kubernetes_pod_name]\n            target_label: PodName\n          - action: drop\n            source_labels: [__meta_kubernetes_pod_container_name]\n            regex: (linkerd-init|linkerd-proxy)\n          - action: replace\n            source_labels: [__meta_kubernetes_pod_container_name]\n            target_label: ContainerName\n          - action: replace\n            source_labels: [__meta_kubernetes_pod_controller_name]\n            target_label: PodControllerName\n          - action: replace\n            source_labels: [__meta_kubernetes_pod_controller_kind]\n            target_label: PodControllerKind\n          - action: replace\n            source_labels: [__meta_kubernetes_pod_phase]\n            target_label: PodPhase\n          # Exclude high cardinality metrics\n          metric_relabel_configs:\n          - action: drop\n            source_labels: [__name__]\n            regex: 'go_gc_duration_seconds.*'\n\n        - job_name: 'kubernetes-service'\n          kubernetes_sd_configs:\n          - role: service\n          relabel_configs:\n          - action: replace\n            source_labels: [__meta_kubernetes_namespace]\n            target_label: Namespace\n          - action: replace\n            source_labels: [__meta_kubernetes_service_name]\n            target_label: Service\n\n        - job_name: 'kubernetes-cadvisor'\n          sample_limit: 10000\n          # Default to scraping over https. If required, just disable this or change to\n          # `http`.\n          scheme: https\n          metrics_path: /metrics/cadvisor\n          \n          kubernetes_sd_configs:\n          - role: node\n          tls_config:\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n            insecure_skip_verify: true\n          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n          \n          relabel_configs:\n          - action: labelmap\n            regex: __meta_kubernetes_node_label_(.+)\n\nprocessors:\n  # increase the timeout (time after which a batch is sent regardless), defaults to 200ms to maximizing\n  # the number of spans sent collectively to the destination (cloudwatch xray).\n  # rest of the values are set to default `end_batch_size (default = 8192)` and `send_batch_max_size (default = 0)`\n  batch/traces:\n    timeout: 10s\n  batch/metrics:\n    timeout: 60s\n  resourcedetection:\n    detectors:\n      - env\n      - system\n      - ec2\n      - eks\n    timeout: 10s\n    override: false\n  resource:\n    attributes:\n      - key: TaskId\n        from_attribute: job\n        action: insert\n      - key: receiver\n        value: \"prometheus\"\n        action: insert\n\nexporters:\n  awsxray:\n    region: \"us-west-2\"\n  awsemf/containerinsights:\n    namespace: ContainerInsights\n    log_group_name: '/aws/containerinsights/plane-3/{ClusterName}/performance'\n    log_stream_name: '{NodeName}'\n    resource_to_telemetry_conversion:\n      enabled: true\n    dimension_rollup_option: NoDimensionRollup\n    parse_json_encoded_attr_values: [Sources, kubernetes]\n    metric_declarations:\n      # node metrics\n      - metric_name_selectors:\n          - node_cpu_utilization\n          - node_memory_utilization\n          - node_cpu_reserved_capacity\n          - node_memory_reserved_capacity\n        dimensions: [[NodeName, InstanceId, ClusterName]]\n      - metric_name_selectors:\n          - node_cpu_usage_total\n          - node_cpu_limit\n          - node_memory_working_set\n          - node_memory_limit\n        dimensions: [[ClusterName]]\n      # pod metrics\n      - metric_name_selectors:\n          - pod_cpu_utilization\n          - pod_memory_utilization\n          - pod_cpu_utilization_over_pod_limit\n          - pod_memory_utilization_over_pod_limit\n          - pod_cpu_reserved_capacity\n          - pod_memory_reserved_capacity\n          - pod_number_of_container_restarts\n        dimensions: [[PodName, Namespace, ClusterName]]\n      # cluster metrics\n      - metric_name_selectors:\n          - cluster_node_count\n          - cluster_failed_node_count\n        dimensions: [[ClusterName]]\n\n  awsprometheusremotewrite:\n    # This should be replaced before it is used for deployment\n    endpoint: \"https://aps-workspaces.us-west-2.amazonaws.com/workspaces/ws-09330607-fd6e-4e8a-8c1d-5c0bcfd1d0b0/api/v1/remote_write\"\n    aws_auth:\n      service: \"aps\"\n      region: \"us-west-2\"\n\nservice:\n  telemetry:\n    logs:\n      level: \"debug\"\n  extensions:\n    - health_check\n    - pprof\n    - zpages\n  pipelines:\n    traces:\n      receivers:\n        - otlp\n      processors:\n        - batch/traces\n      exporters:\n        - awsxray\n    metrics/containerinsights:\n      receivers:\n        - awscontainerinsightreceiver\n      processors:\n        - resourcedetection\n        - resource\n        - batch/metrics\n      exporters:\n        - awsemf/containerinsights\n    metrics/prometheus:\n      receivers:\n        - prometheus\n      processors:\n        - resourcedetection\n        - resource\n        - batch/metrics\n      exporters:\n        - awsprometheusremotewrite\n"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app": "opentelemetry",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "component": "otel-agent-conf"
                            },
                            "name": "otel-agent-conf",
                            "namespace": "otel-eks"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "otel-agent-config": "extensions:\n  health_check:\n  pprof:\n  zpages:\n\nreceivers:\n  otlp:\n    protocols:\n      grpc:\n        endpoint: 0.0.0.0:4317\n      http:\n        endpoint: 0.0.0.0:4318\n  awscontainerinsightreceiver:\n  prometheus:\n    config:\n      global:\n        scrape_interval: 1m\n        scrape_timeout: 10s\n      scrape_configs:\n        - job_name: 'kubernetes-pods'\n          sample_limit: 10000\n          kubernetes_sd_configs:\n          - role: pod\n          relabel_configs:\n          - action: keep\n            regex: true\n            source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\n          - action: replace\n            source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\n            regex: ([^:]+)(?::\\d+)?;(\\d+)\n            replacement: $$1:$$2\n            target_label: __address__\n          - action: replace\n            source_labels: [__meta_kubernetes_namespace]\n            target_label: Namespace\n          - action: replace\n            source_labels: [__meta_kubernetes_pod_name]\n            target_label: PodName\n          - action: drop\n            source_labels: [__meta_kubernetes_pod_container_name]\n            regex: (linkerd-init|linkerd-proxy)\n          - action: replace\n            source_labels: [__meta_kubernetes_pod_container_name]\n            target_label: ContainerName\n          - action: replace\n            source_labels: [__meta_kubernetes_pod_controller_name]\n            target_label: PodControllerName\n          - action: replace\n            source_labels: [__meta_kubernetes_pod_controller_kind]\n            target_label: PodControllerKind\n          - action: replace\n            source_labels: [__meta_kubernetes_pod_phase]\n            target_label: PodPhase\n          # Exclude high cardinality metrics\n          metric_relabel_configs:\n          - action: drop\n            source_labels: [__name__]\n            regex: 'go_gc_duration_seconds.*'\n\n        - job_name: 'kubernetes-service'\n          kubernetes_sd_configs:\n          - role: service\n          relabel_configs:\n          - action: replace\n            source_labels: [__meta_kubernetes_namespace]\n            target_label: Namespace\n          - action: replace\n            source_labels: [__meta_kubernetes_service_name]\n            target_label: Service\n\n        - job_name: 'kubernetes-cadvisor'\n          sample_limit: 10000\n          # Default to scraping over https. If required, just disable this or change to\n          # `http`.\n          scheme: https\n          metrics_path: /metrics/cadvisor\n          \n          kubernetes_sd_configs:\n          - role: node\n          tls_config:\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n            insecure_skip_verify: true\n          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n          \n          relabel_configs:\n          - action: labelmap\n            regex: __meta_kubernetes_node_label_(.+)\n\nprocessors:\n  # increase the timeout (time after which a batch is sent regardless), defaults to 200ms to maximizing\n  # the number of spans sent collectively to the destination (cloudwatch xray).\n  # rest of the values are set to default `end_batch_size (default = 8192)` and `send_batch_max_size (default = 0)`\n  batch/traces:\n    timeout: 10s\n  batch/metrics:\n    timeout: 60s\n  resourcedetection:\n    detectors:\n      - env\n      - system\n      - ec2\n      - eks\n    timeout: 10s\n    override: false\n  resource:\n    attributes:\n      - key: TaskId\n        from_attribute: job\n        action: insert\n      - key: receiver\n        value: \"prometheus\"\n        action: insert\n\nexporters:\n  awsxray:\n    region: \"us-west-2\"\n  awsemf/containerinsights:\n    namespace: ContainerInsights\n    log_group_name: '/aws/containerinsights/plane-3/{ClusterName}/performance'\n    log_stream_name: '{NodeName}'\n    resource_to_telemetry_conversion:\n      enabled: true\n    dimension_rollup_option: NoDimensionRollup\n    parse_json_encoded_attr_values: [Sources, kubernetes]\n    metric_declarations:\n      # node metrics\n      - metric_name_selectors:\n          - node_cpu_utilization\n          - node_memory_utilization\n          - node_cpu_reserved_capacity\n          - node_memory_reserved_capacity\n        dimensions: [[NodeName, InstanceId, ClusterName]]\n      - metric_name_selectors:\n          - node_cpu_usage_total\n          - node_cpu_limit\n          - node_memory_working_set\n          - node_memory_limit\n        dimensions: [[ClusterName]]\n      # pod metrics\n      - metric_name_selectors:\n          - pod_cpu_utilization\n          - pod_memory_utilization\n          - pod_cpu_utilization_over_pod_limit\n          - pod_memory_utilization_over_pod_limit\n          - pod_cpu_reserved_capacity\n          - pod_memory_reserved_capacity\n          - pod_number_of_container_restarts\n        dimensions: [[PodName, Namespace, ClusterName]]\n      # cluster metrics\n      - metric_name_selectors:\n          - cluster_node_count\n          - cluster_failed_node_count\n        dimensions: [[ClusterName]]\n\n  awsprometheusremotewrite:\n    # This should be replaced before it is used for deployment\n    endpoint: \"https://aps-workspaces.us-west-2.amazonaws.com/workspaces/ws-09330607-fd6e-4e8a-8c1d-5c0bcfd1d0b0/api/v1/remote_write\"\n    aws_auth:\n      service: \"aps\"\n      region: \"us-west-2\"\n\nservice:\n  telemetry:\n    logs:\n      level: \"debug\"\n  extensions:\n    - health_check\n    - pprof\n    - zpages\n  pipelines:\n    traces:\n      receivers:\n        - otlp\n      processors:\n        - batch/traces\n      exporters:\n        - awsxray\n    metrics/containerinsights:\n      receivers:\n        - awscontainerinsightreceiver\n      processors:\n        - resourcedetection\n        - resource\n        - batch/metrics\n      exporters:\n        - awsemf/containerinsights\n    metrics/prometheus:\n      receivers:\n        - prometheus\n      processors:\n        - resourcedetection\n        - resource\n        - batch/metrics\n      exporters:\n        - awsprometheusremotewrite\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"otel-agent-config\":\"extensions:\\n  health_check:\\n  pprof:\\n  zpages:\\n\\nreceivers:\\n  otlp:\\n    protocols:\\n      grpc:\\n        endpoint: 0.0.0.0:4317\\n      http:\\n        endpoint: 0.0.0.0:4318\\n  awscontainerinsightreceiver:\\n  prometheus:\\n    config:\\n      global:\\n        scrape_interval: 1m\\n        scrape_timeout: 10s\\n      scrape_configs:\\n        - job_name: 'kubernetes-pods'\\n          sample_limit: 10000\\n          kubernetes_sd_configs:\\n          - role: pod\\n          relabel_configs:\\n          - action: keep\\n            regex: true\\n            source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\\n          - action: replace\\n            source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]\\n            regex: ([^:]+)(?::\\\\d+)?;(\\\\d+)\\n            replacement: $$1:$$2\\n            target_label: __address__\\n          - action: replace\\n            source_labels: [__meta_kubernetes_namespace]\\n            target_label: Namespace\\n          - action: replace\\n            source_labels: [__meta_kubernetes_pod_name]\\n            target_label: PodName\\n          - action: drop\\n            source_labels: [__meta_kubernetes_pod_container_name]\\n            regex: (linkerd-init|linkerd-proxy)\\n          - action: replace\\n            source_labels: [__meta_kubernetes_pod_container_name]\\n            target_label: ContainerName\\n          - action: replace\\n            source_labels: [__meta_kubernetes_pod_controller_name]\\n            target_label: PodControllerName\\n          - action: replace\\n            source_labels: [__meta_kubernetes_pod_controller_kind]\\n            target_label: PodControllerKind\\n          - action: replace\\n            source_labels: [__meta_kubernetes_pod_phase]\\n            target_label: PodPhase\\n          # Exclude high cardinality metrics\\n          metric_relabel_configs:\\n          - action: drop\\n            source_labels: [__name__]\\n            regex: 'go_gc_duration_seconds.*'\\n\\n        - job_name: 'kubernetes-service'\\n          kubernetes_sd_configs:\\n          - role: service\\n          relabel_configs:\\n          - action: replace\\n            source_labels: [__meta_kubernetes_namespace]\\n            target_label: Namespace\\n          - action: replace\\n            source_labels: [__meta_kubernetes_service_name]\\n            target_label: Service\\n\\n        - job_name: 'kubernetes-cadvisor'\\n          sample_limit: 10000\\n          # Default to scraping over https. If required, just disable this or change to\\n          # `http`.\\n          scheme: https\\n          metrics_path: /metrics/cadvisor\\n          \\n          kubernetes_sd_configs:\\n          - role: node\\n          tls_config:\\n            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\\n            insecure_skip_verify: true\\n          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\\n          \\n          relabel_configs:\\n          - action: labelmap\\n            regex: __meta_kubernetes_node_label_(.+)\\n\\nprocessors:\\n  # increase the timeout (time after which a batch is sent regardless), defaults to 200ms to maximizing\\n  # the number of spans sent collectively to the destination (cloudwatch xray).\\n  # rest of the values are set to default `end_batch_size (default = 8192)` and `send_batch_max_size (default = 0)`\\n  batch/traces:\\n    timeout: 10s\\n  batch/metrics:\\n    timeout: 60s\\n  resourcedetection:\\n    detectors:\\n      - env\\n      - system\\n      - ec2\\n      - eks\\n    timeout: 10s\\n    override: false\\n  resource:\\n    attributes:\\n      - key: TaskId\\n        from_attribute: job\\n        action: insert\\n      - key: receiver\\n        value: \\\"prometheus\\\"\\n        action: insert\\n\\nexporters:\\n  awsxray:\\n    region: \\\"us-west-2\\\"\\n  awsemf/containerinsights:\\n    namespace: ContainerInsights\\n    log_group_name: '/aws/containerinsights/plane-3/{ClusterName}/performance'\\n    log_stream_name: '{NodeName}'\\n    resource_to_telemetry_conversion:\\n      enabled: true\\n    dimension_rollup_option: NoDimensionRollup\\n    parse_json_encoded_attr_values: [Sources, kubernetes]\\n    metric_declarations:\\n      # node metrics\\n      - metric_name_selectors:\\n          - node_cpu_utilization\\n          - node_memory_utilization\\n          - node_cpu_reserved_capacity\\n          - node_memory_reserved_capacity\\n        dimensions: [[NodeName, InstanceId, ClusterName]]\\n      - metric_name_selectors:\\n          - node_cpu_usage_total\\n          - node_cpu_limit\\n          - node_memory_working_set\\n          - node_memory_limit\\n        dimensions: [[ClusterName]]\\n      # pod metrics\\n      - metric_name_selectors:\\n          - pod_cpu_utilization\\n          - pod_memory_utilization\\n          - pod_cpu_utilization_over_pod_limit\\n          - pod_memory_utilization_over_pod_limit\\n          - pod_cpu_reserved_capacity\\n          - pod_memory_reserved_capacity\\n          - pod_number_of_container_restarts\\n        dimensions: [[PodName, Namespace, ClusterName]]\\n      # cluster metrics\\n      - metric_name_selectors:\\n          - cluster_node_count\\n          - cluster_failed_node_count\\n        dimensions: [[ClusterName]]\\n\\n  awsprometheusremotewrite:\\n    # This should be replaced before it is used for deployment\\n    endpoint: \\\"https://aps-workspaces.us-west-2.amazonaws.com/workspaces/ws-09330607-fd6e-4e8a-8c1d-5c0bcfd1d0b0/api/v1/remote_write\\\"\\n    aws_auth:\\n      service: \\\"aps\\\"\\n      region: \\\"us-west-2\\\"\\n\\nservice:\\n  telemetry:\\n    logs:\\n      level: \\\"debug\\\"\\n  extensions:\\n    - health_check\\n    - pprof\\n    - zpages\\n  pipelines:\\n    traces:\\n      receivers:\\n        - otlp\\n      processors:\\n        - batch/traces\\n      exporters:\\n        - awsxray\\n    metrics/containerinsights:\\n      receivers:\\n        - awscontainerinsightreceiver\\n      processors:\\n        - resourcedetection\\n        - resource\\n        - batch/metrics\\n      exporters:\\n        - awsemf/containerinsights\\n    metrics/prometheus:\\n      receivers:\\n        - prometheus\\n      processors:\\n        - resourcedetection\\n        - resource\\n        - batch/metrics\\n      exporters:\\n        - awsprometheusremotewrite\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app\":\"opentelemetry\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"component\":\"otel-agent-conf\"},\"name\":\"otel-agent-conf\",\"namespace\":\"otel-eks\"}}\n"
                        },
                        "creationTimestamp": "2022-06-19T06:03:49Z",
                        "labels": {
                            "app": "opentelemetry",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "component": "otel-agent-conf"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:otel-agent-config": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:component": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-19T06:03:49Z"
                            }
                        ],
                        "name": "otel-agent-conf",
                        "namespace": "otel-eks",
                        "resourceVersion": "27294741",
                        "uid": "31a4603b-eeca-4938-8c95-a6e557937d45"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                },
                "sequenceNumber": 19
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::aoc-agent-role-binding",
                "custom": true,
                "id": "aoc-agent-role-binding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "aoc-agent-role-binding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "aoc-agent-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "otel-collector-account",
                            "namespace": "otel-eks"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "aoc-agent-role-binding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "aoc-agent-role"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "otel-collector-account",
                                "namespace": "otel-eks"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"aoc-agent-role-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"aoc-agent-role\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"otel-collector-account\",\"namespace\":\"otel-eks\"}]}\n"
                        },
                        "creationTimestamp": "2022-03-22T03:11:03Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:roleRef": {
                                        "f:apiGroup": {},
                                        "f:kind": {},
                                        "f:name": {}
                                    },
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T03:11:03Z"
                            }
                        ],
                        "name": "aoc-agent-role-binding",
                        "resourceVersion": "1280",
                        "uid": "07ba514f-b696-4840-ae76-9aa3581a653c"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "aoc-agent-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "otel-collector-account",
                            "namespace": "otel-eks"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:Service::otel-eks/otel-collector",
                "custom": true,
                "id": "otel-eks/otel-collector",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "otel-collector",
                        "namespace": "otel-eks"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "otlp",
                                "port": 4317,
                                "protocol": "TCP",
                                "targetPort": "otlp"
                            },
                            {
                                "name": "otlp-http",
                                "port": 4318,
                                "protocol": "TCP",
                                "targetPort": "otlp-http"
                            }
                        ],
                        "selector": {
                            "name": "otel-collector"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "otel-collector",
                            "namespace": "otel-eks"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "otlp",
                                    "port": 4317,
                                    "protocol": "TCP",
                                    "targetPort": "otlp"
                                },
                                {
                                    "name": "otlp-http",
                                    "port": 4318,
                                    "protocol": "TCP",
                                    "targetPort": "otlp-http"
                                }
                            ],
                            "selector": {
                                "name": "otel-collector"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"otel-collector\",\"namespace\":\"otel-eks\"},\"spec\":{\"ports\":[{\"name\":\"otlp\",\"port\":4317,\"protocol\":\"TCP\",\"targetPort\":\"otlp\"},{\"name\":\"otlp-http\",\"port\":4318,\"protocol\":\"TCP\",\"targetPort\":\"otlp-http\"}],\"selector\":{\"name\":\"otel-collector\"},\"type\":\"ClusterIP\"}}\n"
                        },
                        "creationTimestamp": "2022-05-30T19:32:10Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:internalTrafficPolicy": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"port\":4317,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            },
                                            "k:{\"port\":4318,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {},
                                        "f:sessionAffinity": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-05-30T19:32:10Z"
                            }
                        ],
                        "name": "otel-collector",
                        "namespace": "otel-eks",
                        "resourceVersion": "20938020",
                        "uid": "21ce9f05-fb23-43b1-a748-ca4d061d3d45"
                    },
                    "spec": {
                        "clusterIP": "172.20.249.66",
                        "clusterIPs": [
                            "172.20.249.66"
                        ],
                        "internalTrafficPolicy": "Cluster",
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "otlp",
                                "port": 4317,
                                "protocol": "TCP",
                                "targetPort": "otlp"
                            },
                            {
                                "name": "otlp-http",
                                "port": 4318,
                                "protocol": "TCP",
                                "targetPort": "otlp-http"
                            }
                        ],
                        "selector": {
                            "name": "otel-collector"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apps/v1:Deployment::otel-eks/otel-collector",
                "custom": true,
                "id": "otel-eks/otel-collector",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "otel-collector",
                        "namespace": "otel-eks"
                    },
                    "spec": {
                        "replicas": 1,
                        "selector": {
                            "matchLabels": {
                                "name": "otel-collector"
                            }
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "name": "otel-collector"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "/otelcontribcol",
                                            "--config=/conf/otel-agent-config.yaml"
                                        ],
                                        "env": [
                                            {
                                                "name": "K8S_NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_IP",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "status.hostIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "K8S_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "AWS_REGION",
                                                "value": "us-west-2"
                                            },
                                            {
                                                "name": "OTEL_RESOURCE_ATTRIBUTES",
                                                "value": "ClusterName=p-3-eks-cluster-eksCluster-fd821aa,FileHash=770a6649299d4ab421cdb5e6624acee6"
                                            }
                                        ],
                                        "image": "otel/opentelemetry-collector-contrib:latest",
                                        "imagePullPolicy": "Always",
                                        "name": "otel-collector",
                                        "ports": [
                                            {
                                                "containerPort": 4317,
                                                "name": "otlp",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 4318,
                                                "name": "otlp-http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "512m",
                                                "memory": "512Mi"
                                            },
                                            "requests": {
                                                "cpu": "128m",
                                                "memory": "128Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/rootfs",
                                                "name": "rootfs",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/run/docker.sock",
                                                "name": "dockersock",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/lib/docker",
                                                "name": "varlibdocker",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/sys",
                                                "name": "sys",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/dev/disk",
                                                "name": "devdisk",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/conf",
                                                "name": "otel-agent-config-vol"
                                            }
                                        ]
                                    }
                                ],
                                "serviceAccountName": "otel-collector-account",
                                "volumes": [
                                    {
                                        "configMap": {
                                            "items": [
                                                {
                                                    "key": "otel-agent-config",
                                                    "path": "otel-agent-config.yaml"
                                                }
                                            ],
                                            "name": "otel-agent-conf"
                                        },
                                        "name": "otel-agent-config-vol"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/"
                                        },
                                        "name": "rootfs"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/run/docker.sock"
                                        },
                                        "name": "dockersock"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/lib/docker"
                                        },
                                        "name": "varlibdocker"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/sys"
                                        },
                                        "name": "sys"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/dev/disk/"
                                        },
                                        "name": "devdisk"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "otel-collector",
                            "namespace": "otel-eks"
                        },
                        "spec": {
                            "replicas": 1,
                            "selector": {
                                "matchLabels": {
                                    "name": "otel-collector"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "name": "otel-collector"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "command": [
                                                "/otelcontribcol",
                                                "--config=/conf/otel-agent-config.yaml"
                                            ],
                                            "env": [
                                                {
                                                    "name": "K8S_NODE_NAME",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.nodeName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "HOST_IP",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "status.hostIP"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "HOST_NAME",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.nodeName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "K8S_NAMESPACE",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "metadata.namespace"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "AWS_REGION",
                                                    "value": "us-west-2"
                                                },
                                                {
                                                    "name": "OTEL_RESOURCE_ATTRIBUTES",
                                                    "value": "ClusterName=p-3-eks-cluster-eksCluster-fd821aa,FileHash=770a6649299d4ab421cdb5e6624acee6"
                                                }
                                            ],
                                            "image": "otel/opentelemetry-collector-contrib:latest",
                                            "imagePullPolicy": "Always",
                                            "name": "otel-collector",
                                            "ports": [
                                                {
                                                    "containerPort": 4317,
                                                    "name": "otlp",
                                                    "protocol": "TCP"
                                                },
                                                {
                                                    "containerPort": 4318,
                                                    "name": "otlp-http",
                                                    "protocol": "TCP"
                                                }
                                            ],
                                            "resources": {
                                                "limits": {
                                                    "cpu": "512m",
                                                    "memory": "512Mi"
                                                },
                                                "requests": {
                                                    "cpu": "128m",
                                                    "memory": "128Mi"
                                                }
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/rootfs",
                                                    "name": "rootfs",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/var/run/docker.sock",
                                                    "name": "dockersock",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/var/lib/docker",
                                                    "name": "varlibdocker",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/sys",
                                                    "name": "sys",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/dev/disk",
                                                    "name": "devdisk",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/conf",
                                                    "name": "otel-agent-config-vol"
                                                }
                                            ]
                                        }
                                    ],
                                    "serviceAccountName": "otel-collector-account",
                                    "volumes": [
                                        {
                                            "configMap": {
                                                "items": [
                                                    {
                                                        "key": "otel-agent-config",
                                                        "path": "otel-agent-config.yaml"
                                                    }
                                                ],
                                                "name": "otel-agent-conf"
                                            },
                                            "name": "otel-agent-config-vol"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/"
                                            },
                                            "name": "rootfs"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/run/docker.sock"
                                            },
                                            "name": "dockersock"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/lib/docker"
                                            },
                                            "name": "varlibdocker"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/sys"
                                            },
                                            "name": "sys"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/dev/disk/"
                                            },
                                            "name": "devdisk"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "19",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"otel-collector\",\"namespace\":\"otel-eks\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"name\":\"otel-collector\"}},\"template\":{\"metadata\":{\"labels\":{\"name\":\"otel-collector\"}},\"spec\":{\"containers\":[{\"command\":[\"/otelcontribcol\",\"--config=/conf/otel-agent-config.yaml\"],\"env\":[{\"name\":\"K8S_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"HOST_IP\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"status.hostIP\"}}},{\"name\":\"HOST_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"K8S_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}},{\"name\":\"AWS_REGION\",\"value\":\"us-west-2\"},{\"name\":\"OTEL_RESOURCE_ATTRIBUTES\",\"value\":\"ClusterName=p-3-eks-cluster-eksCluster-fd821aa,FileHash=770a6649299d4ab421cdb5e6624acee6\"}],\"image\":\"otel/opentelemetry-collector-contrib:latest\",\"imagePullPolicy\":\"Always\",\"name\":\"otel-collector\",\"ports\":[{\"containerPort\":4317,\"name\":\"otlp\",\"protocol\":\"TCP\"},{\"containerPort\":4318,\"name\":\"otlp-http\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"cpu\":\"512m\",\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"128m\",\"memory\":\"128Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/rootfs\",\"name\":\"rootfs\",\"readOnly\":true},{\"mountPath\":\"/var/run/docker.sock\",\"name\":\"dockersock\",\"readOnly\":true},{\"mountPath\":\"/var/lib/docker\",\"name\":\"varlibdocker\",\"readOnly\":true},{\"mountPath\":\"/sys\",\"name\":\"sys\",\"readOnly\":true},{\"mountPath\":\"/dev/disk\",\"name\":\"devdisk\",\"readOnly\":true},{\"mountPath\":\"/conf\",\"name\":\"otel-agent-config-vol\"}]}],\"serviceAccountName\":\"otel-collector-account\",\"volumes\":[{\"configMap\":{\"items\":[{\"key\":\"otel-agent-config\",\"path\":\"otel-agent-config.yaml\"}],\"name\":\"otel-agent-conf\"},\"name\":\"otel-agent-config-vol\"},{\"hostPath\":{\"path\":\"/\"},\"name\":\"rootfs\"},{\"hostPath\":{\"path\":\"/var/run/docker.sock\"},\"name\":\"dockersock\"},{\"hostPath\":{\"path\":\"/var/lib/docker\"},\"name\":\"varlibdocker\"},{\"hostPath\":{\"path\":\"/sys\"},\"name\":\"sys\"},{\"hostPath\":{\"path\":\"/dev/disk/\"},\"name\":\"devdisk\"}]}}}}\n"
                        },
                        "creationTimestamp": "2022-03-22T03:11:03Z",
                        "generation": 19,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-04-20T04:23:15Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:progressDeadlineSeconds": {},
                                        "f:replicas": {},
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:strategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        },
                                        "f:template": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    ".": {},
                                                    "f:name": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"otel-collector\"}": {
                                                        ".": {},
                                                        "f:command": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"AWS_REGION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"HOST_IP\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"HOST_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"K8S_NAMESPACE\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"K8S_NODE_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {}
                                                                }
                                                            },
                                                            "k:{\"name\":\"OTEL_RESOURCE_ATTRIBUTES\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":4317,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            },
                                                            "k:{\"containerPort\":4318,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/conf\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/dev/disk\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/rootfs\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/sys\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/lib/docker\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/run/docker.sock\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"devdisk\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"dockersock\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"otel-agent-config-vol\"}": {
                                                        ".": {},
                                                        "f:configMap": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:items": {},
                                                            "f:name": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"rootfs\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"sys\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"varlibdocker\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-05-30T19:32:10Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            "k:{\"type\":\"Available\"}": {
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:unavailableReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "subresource": "status",
                                "time": "2022-06-19T06:03:48Z"
                            }
                        ],
                        "name": "otel-collector",
                        "namespace": "otel-eks",
                        "resourceVersion": "27294730",
                        "uid": "805af8bb-732a-48aa-bc46-aa259a94f2ce"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 1,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "name": "otel-collector"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "name": "otel-collector"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "/otelcontribcol",
                                            "--config=/conf/otel-agent-config.yaml"
                                        ],
                                        "env": [
                                            {
                                                "name": "K8S_NODE_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_IP",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "status.hostIP"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "K8S_NAMESPACE",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "metadata.namespace"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "AWS_REGION",
                                                "value": "us-west-2"
                                            },
                                            {
                                                "name": "OTEL_RESOURCE_ATTRIBUTES",
                                                "value": "ClusterName=p-3-eks-cluster-eksCluster-fd821aa,FileHash=770a6649299d4ab421cdb5e6624acee6"
                                            }
                                        ],
                                        "image": "otel/opentelemetry-collector-contrib:latest",
                                        "imagePullPolicy": "Always",
                                        "name": "otel-collector",
                                        "ports": [
                                            {
                                                "containerPort": 4317,
                                                "name": "otlp",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 4318,
                                                "name": "otlp-http",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {
                                            "limits": {
                                                "cpu": "512m",
                                                "memory": "512Mi"
                                            },
                                            "requests": {
                                                "cpu": "128m",
                                                "memory": "128Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/rootfs",
                                                "name": "rootfs",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/run/docker.sock",
                                                "name": "dockersock",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/lib/docker",
                                                "name": "varlibdocker",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/sys",
                                                "name": "sys",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/dev/disk",
                                                "name": "devdisk",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/conf",
                                                "name": "otel-agent-config-vol"
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "otel-collector-account",
                                "serviceAccountName": "otel-collector-account",
                                "terminationGracePeriodSeconds": 30,
                                "volumes": [
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "items": [
                                                {
                                                    "key": "otel-agent-config",
                                                    "path": "otel-agent-config.yaml"
                                                }
                                            ],
                                            "name": "otel-agent-conf"
                                        },
                                        "name": "otel-agent-config-vol"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/",
                                            "type": ""
                                        },
                                        "name": "rootfs"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/run/docker.sock",
                                            "type": ""
                                        },
                                        "name": "dockersock"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/lib/docker",
                                            "type": ""
                                        },
                                        "name": "varlibdocker"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/sys",
                                            "type": ""
                                        },
                                        "name": "sys"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/dev/disk/",
                                            "type": ""
                                        },
                                        "name": "devdisk"
                                    }
                                ]
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 1,
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-06-19T04:59:09Z",
                                "lastUpdateTime": "2022-06-19T04:59:09Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2022-03-22T03:11:03Z",
                                "lastUpdateTime": "2022-06-19T05:05:51Z",
                                "message": "ReplicaSet \"otel-collector-5589f4d45c\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 19,
                        "readyReplicas": 1,
                        "replicas": 1,
                        "unavailableReplicas": 1
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::adot-collector",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:helm.sh/v3:Release::milvus",
                "custom": true,
                "id": "milvus/milvus",
                "type": "kubernetes:helm.sh/v3:Release",
                "inputs": {
                    "atomic": false,
                    "chart": "milvus",
                    "cleanupOnFail": false,
                    "createNamespace": true,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "milvus",
                    "namespace": "milvus",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://milvus-io.github.io/milvus-helm/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ConfigMap/v1": [
                            "milvus",
                            "milvus/milvus-pulsar-bookie",
                            "milvus/milvus-pulsar-broker",
                            "milvus/milvus-pulsar-proxy",
                            "milvus/milvus-pulsar-recovery",
                            "milvus/milvus-pulsar-zookeeper"
                        ],
                        "Deployment.apps/apps/v1": [
                            "milvus-attu",
                            "milvus-datacoord",
                            "milvus-datanode",
                            "milvus-indexcoord",
                            "milvus-indexnode",
                            "milvus-proxy",
                            "milvus-querycoord",
                            "milvus-querynode",
                            "milvus-rootcoord"
                        ],
                        "Job.batch/batch/v1": [
                            "milvus/milvus-pulsar-bookie-init",
                            "milvus/milvus-pulsar-pulsar-init"
                        ],
                        "PodDisruptionBudget.policy/policy/v1beta1": [
                            "milvus/milvus-pulsar-bookie",
                            "milvus/milvus-pulsar-broker",
                            "milvus/milvus-pulsar-proxy",
                            "milvus/milvus-pulsar-zookeeper"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "milvus-pulsar-broker-role"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "milvus-pulsar-broker-rolebinding"
                        ],
                        "Service/v1": [
                            "milvus",
                            "milvus-attu",
                            "milvus-datacoord",
                            "milvus-indexcoord",
                            "milvus-querycoord",
                            "milvus-rootcoord",
                            "milvus/milvus-etcd",
                            "milvus/milvus-etcd-headless",
                            "milvus/milvus-pulsar-bookie",
                            "milvus/milvus-pulsar-broker",
                            "milvus/milvus-pulsar-proxy",
                            "milvus/milvus-pulsar-recovery",
                            "milvus/milvus-pulsar-zookeeper"
                        ],
                        "ServiceAccount/v1": [
                            "milvus/milvus-pulsar-broker-acct"
                        ],
                        "StatefulSet.apps/apps/v1": [
                            "milvus/milvus-etcd",
                            "milvus/milvus-pulsar-bookie",
                            "milvus/milvus-pulsar-broker",
                            "milvus/milvus-pulsar-proxy",
                            "milvus/milvus-pulsar-recovery",
                            "milvus/milvus-pulsar-zookeeper"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "timeout": 300,
                    "values": {
                        "attu": {
                            "enabled": true,
                            "ingress": {
                                "enabled": false
                            }
                        },
                        "cluster": {
                            "enabled": true
                        },
                        "etcd": {
                            "image": {
                                "pullPolicy": "IfNotPresent",
                                "tag": "3.5.1"
                            }
                        },
                        "externalS3": {
                            "accessKey": "AKIAQOLFGTNXMQUOE2HK",
                            "bucketName": "p-3-milvus-data",
                            "enabled": true,
                            "host": "s3.us-west-2.amazonaws.com",
                            "post": 80,
                            "secretKey": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "AAABACTxBs6i8uYmyD14yv9w2dXUhYxDiGX/sdZ6hYW4HvGxHcfSNoj4btsf6rkyAAbSq3eYgS0bYXawYESJn23k2ptg+u2aVvA="
                            }
                        },
                        "metrics": {
                            "enabled": false
                        },
                        "minio": {
                            "enabled": false
                        },
                        "service": {
                            "annotations": {
                                "service.beta.kubernetes.io/aws-load-balancer-nlb-target-type": "instance",
                                "service.beta.kubernetes.io/aws-load-balancer-scheme": "internal",
                                "service.beta.kubernetes.io/aws-load-balancer-type": "external"
                            },
                            "type": "LoadBalancer"
                        }
                    },
                    "verify": false,
                    "version": "",
                    "waitForJobs": false
                },
                "outputs": {
                    "__inputs": {
                        "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                        "ciphertext": "AAABAABALi4aL2W884/aX7LyRb8QilEDrkszK3e0xLDYfRwsbGimVzBrEDr6TXLGrBYDh3CL+apTPJjZ8vn0i4XVHefbs8aKvI1ihuqaOmfRFUxRGQbLenftRQY375/3BU8IHP+irhT0rsP3CdEveLnN6qxKkRRXRthR/v8j4a7zwBDUBL3aoRtneS69BLyoH2cYWXUXYeI/DxTEiaOwR/SFg9mcei/+eqZ4GgCAubA1n2dtMX3vcuIxL2FKwD6bkK0fzIU7zz0v9FxkPSTvBZXdy6g77MqI/Q0pTFRwz0rPBnUGzvQxaEEWnDAXrU7diV1kHMi+4qHx2qT+N5dJzQ7DRbT8CC2xGshW/jgS9MVL3p2/8lC1WxmBYzVL5NnRouRJms3WIgYVcC9dxbkGhXQiarcx58O2NMAFa2/KpbtEb3QdnxOdBj/FIVPXduqeT6VTDgz8aGCqfpPHQnAVtikyoRZTAvdOp7K/nsWKuZxJUNOPamrXSvO9gbj0tY18WVTPePZcwcvYsRPGZQ3iFu9olWj0JuZP/34eBWFHE0GI49afn9ZGXJ3GNHT38inSNhAvNlXGtEfAeVwjYOLOv0cnPFerKOiAyo2Yk0rQsJ2yjCkhV3SNmHJTShI7/e5+HOZt48iTIilOz0gr7KJCHnlaxhZxL/Ddy7a01ynvmETJM/j3/rGZYv9XVVk4N8hyojVl2t6byFUvWDoxu+KmEYgGh73/x6Ldkz5yisTYbQOm4OMaHzH7iWufVKklcexZoqXw44dHhYcDtmiURt+vInab/zJIDpQxRSVtFi/ybH2n1kUYtfZXebkFlO9oXxqk+comlLS+c1OapKaGtcabVxmLNrPIlbiS/VEOW/3PW7qUbIE+QoWLHrMmJv9fGUeCfYVBiwTE43YvZg5t/XdnurW4R25xLoS7JJKhDwjIfceNsi+a562wKyRCBbFtmLEk3kx74PAn8SNRhl8uNfNQ2f2vXECjrPlVj/y0uIBtMpuS/iCrsT0MVSUwQpdIbvPWmbNDpv8QeO1qzMgrZcFK1mJGjg6kEKMxgl/unYb+ljTWpdsA3bdto2S+nWH1COQ33Mxbb95V448AB2Ln3T7sVsw0U3AGcCA5YvXIev9Cm69qKWxggV1NvCboBps9SITlT6Kucaap5Y2xgY+M+HL360Dq0acbDeUz3w3e/9QqYqg5mx7bksOB1f184AqMSpJz80lJBSIMGqp+bHNdrJCtA3R3GMwX1PxASzP4Hb6POK9+pm8HJ1tCl6q54NT4YlWT+Rxsw7DgLmF8Wza+PQPITTGX4KQBuAl2dE/Tqx8U1FCy0V8CaF05OWC609YrKvDMbWKZ3AOxSCjXw+6vUqPxmqxF0sATZky9BNL/gm3vCQPc+XbkIFmV+KMBNN6cHPs+KurFgubkLCgXyjr13uENzRVwrrJty3HUQOR8G6P6ZK6CuEbyzPr2Da7/4DPzt95NMNTIzUqE0W8+DEdZKkveNgHp0Lg2BNiieyL/iMdiCjBWdabHv1VRQ5dqeaghvVK2h+X6V8gIfe8t3pywjAcAM1Tg6E4H6mZnlC9ToXB0WXaWju7dso7VeOZFmJCBqo/LRGKBGj1OnXS6D8NEIj83Xlb5PVQ+aIpVsb4sG6XTZ3BlRNx61Qzz+atyndyCn8MQHpHOauBWxHvsVEpI9am6WGgiabpSIl8BVCdn+0Da6McR3UIFqANF+6FXDnbTacZdpzWUjKv1RNjAp/8yMmDIdulTs2BSJAI9LKGV2laY3FdxTWKUsYLMGHK/PRhXT3uaM8BbG8x+lMkWNss4wNsCZ+nbnkLAv5OfHCV+ZBnShTs5Ly0sOwoW9yWw9g6v+8noJ1ufaasU4eEObWs/PxVa+eSjnj5VMrDEZEZtKxbeKS1v318Jr+iS33jg29zGOmZbclp6415SVFFv7Cf8rNgi8VLzXE8tUknUUQk3dIzKJRv6MxIqCqUTYGr5kA34zv309J5J39HlQRVMH+mOX6tYMeZ9RC/wPW/y36ciKgOi58r6X0SCGJa/CscDPuw8lFyJsR3Z7n0FZqVOBxBYmROQaNBc56fuveTb61Wf35GW9AEjh149Tng5KBAgzgQIf3RfFX+vDon23M98CmyD9w8o7ByfXmKc3ZJBqvL/4Rm0CPuk3CNbgu2J04tl+pfRth5W/UJQaWx4gGKcnN95gpPDuJvh5P534RgRADN9WMHdhIGDhnzkS5rsOv6NY9Jl3g1qv3WpZeg4y0BliOI3tshBzrL2Z99EYKdd0vqE1JMFu0eWM5xyv3FDAaRLq5z/bFS63jBQMCdYKJcq4XhyIHslzx8pLHMMPa3UuU6KqalNVuYPDyKhJ6r3hvXp0QFdc402CozfEKcdn9NGBnMX4P55dFzNPqFoIOoHHd+gq0YFvsQns8k09x4GChbpoy3KUsSatnF0RS6NqqEtotagtf4gAFP7l4QAa6Q9KdGt7f/IMOviGSWzfrGLd6/svbIVLOuvNtvpGMi4/kTvMXaOG+wsvEhoqc0Uutvxhm1Iv7rlbqYwn/LXdi5tNUQK3MEHjz2jQ4LfXsRUombwCcPDwo9UewXxxwvFG4Bf1rxBOS4bNR+r4XG5UI3WSWz7Tmojmc24BKzHfstQsAmCZAJroeP3BLFlLtrx8Xk2U647MgIUxncCHkkl/z0lC9w1VX3Gn/CtARQkzRLKzaoyaXYf71H8rYuKGSbdg9Q5sx/6Vr1TUaToOH/BHlrBTOIuwdNf3/zkBg5vOrC6kJO8WM2eQBOpmw6hHh5MvXL1eSp1ELw6UcIcIp9KsI6LNb0vrWKC4ucagf3YmvESe+BQGQG7rHbF8oKUgPSUUXJoA8eANJhHEsCj97bzgnXRxTWOm3YXDrec9z2n8nLfuyfXJQbD7mSnDiidtYlt532nz67Q60/ai5kS9ZmpaG06DeaI1f23mlrDIwksgcvdsB/IcD9nZxVjb+flqPP4cGTSmFt4XaOIy1Akydvs+hRk7bn5FZ+tT13VeXsTayv7FpzVaIRySnxquqawLMqtvBGbWfW1Z2jCI0V0InVDVrKt8QRDMtQ2Ce+klspXj7xNi0wo1c3dsouMAGO7ZmUa0Sui+Ch2ijLnM89cLimYFiTwh5TkSz/Lx70q7lhHIa8CBp3yP+8TP1bLg3jyLxnJ9C1vNSRvwVvPITGYudfu4MFQE4mRoI9ybMP294QGEWB7GLAsX3rSHOnJ5rBWxRVSVwUjNNhAfGsvmXfWySg394Mw1Fs/BixVCFkmKnt9VbGdJcb/f3CNezL7nwU1Bcc7SnX8cO0gR6xobUaUlVBfVtRs2zNJsY4BRfLvkZs7Ts8a85gVQkh2YM3rDB5bVuGLrP1QHqfvTs8KJFqLR7eLc6eemiK00SZ/afSl0J3/SxNbC43HrpUrbkcT0bjuEi4J8vwqrATf+zujZKXK8VNNL90vBN68J71Z4yNywpg8TVHqv7aTPhHR/iU/UBpERH2NZ3xF93Rb5LMgO0IwksWX2o4bwKfTpW4/wWI0FNjeHQgsLzHjwD0i/XLbBVaLX7DNhsmtJ32YAPoRHH6UQEF/CBgyPI5EGrO3RU1N40vrsKrN4MRRasv89VBF9n/G1C6Xp9nGyIt2XMvSfw65mQOC4KVKHhKghy7HJrtMI2cN0e1FdId+Lb+TzIjXGSzd2nWN6Tkr9OoDr8QbLQiTGjOMKNY6IRD2fV5ogSMjhkie/Dko1sG4bLCeQI4pmu+6qrq1DuS9uLK2zRjCd8FAGyJzDIShZWeR7WSfgFmCZaVy7KSVQbWVfvtIfLCqLmkanb4rTXr5sQ=="
                    },
                    "atomic": false,
                    "chart": "milvus",
                    "cleanupOnFail": false,
                    "createNamespace": true,
                    "dependencyUpdate": false,
                    "description": "",
                    "devel": false,
                    "disableCRDHooks": false,
                    "disableOpenapiValidation": false,
                    "disableWebhooks": false,
                    "forceUpdate": false,
                    "keyring": "",
                    "lint": false,
                    "name": "milvus",
                    "namespace": "milvus",
                    "postrender": "",
                    "recreatePods": false,
                    "renderSubchartNotes": false,
                    "replace": false,
                    "repositoryOpts": {
                        "caFile": "",
                        "certFile": "",
                        "keyFile": "",
                        "password": "",
                        "repo": "https://milvus-io.github.io/milvus-helm/",
                        "username": ""
                    },
                    "resetValues": false,
                    "resourceNames": {
                        "ConfigMap/v1": [
                            "milvus",
                            "milvus/milvus-pulsar-bookie",
                            "milvus/milvus-pulsar-broker",
                            "milvus/milvus-pulsar-proxy",
                            "milvus/milvus-pulsar-recovery",
                            "milvus/milvus-pulsar-zookeeper"
                        ],
                        "Deployment.apps/apps/v1": [
                            "milvus-attu",
                            "milvus-datacoord",
                            "milvus-datanode",
                            "milvus-indexcoord",
                            "milvus-indexnode",
                            "milvus-proxy",
                            "milvus-querycoord",
                            "milvus-querynode",
                            "milvus-rootcoord"
                        ],
                        "PodDisruptionBudget.policy/policy/v1beta1": [
                            "milvus/milvus-pulsar-bookie",
                            "milvus/milvus-pulsar-broker",
                            "milvus/milvus-pulsar-proxy",
                            "milvus/milvus-pulsar-zookeeper"
                        ],
                        "Role.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "milvus-pulsar-broker-role"
                        ],
                        "RoleBinding.rbac.authorization.k8s.io/rbac.authorization.k8s.io/v1": [
                            "milvus-pulsar-broker-rolebinding"
                        ],
                        "Service/v1": [
                            "milvus",
                            "milvus-attu",
                            "milvus-datacoord",
                            "milvus-indexcoord",
                            "milvus-querycoord",
                            "milvus-rootcoord",
                            "milvus/milvus-etcd",
                            "milvus/milvus-etcd-headless",
                            "milvus/milvus-pulsar-bookie",
                            "milvus/milvus-pulsar-broker",
                            "milvus/milvus-pulsar-proxy",
                            "milvus/milvus-pulsar-recovery",
                            "milvus/milvus-pulsar-zookeeper"
                        ],
                        "ServiceAccount/v1": [
                            "milvus/milvus-pulsar-broker-acct"
                        ],
                        "StatefulSet.apps/apps/v1": [
                            "milvus/milvus-etcd",
                            "milvus/milvus-pulsar-bookie",
                            "milvus/milvus-pulsar-broker",
                            "milvus/milvus-pulsar-proxy",
                            "milvus/milvus-pulsar-recovery",
                            "milvus/milvus-pulsar-zookeeper"
                        ]
                    },
                    "reuseValues": false,
                    "skipAwait": false,
                    "skipCrds": false,
                    "status": {
                        "appVersion": "2.0.2",
                        "chart": "milvus",
                        "name": "milvus",
                        "namespace": "milvus",
                        "revision": 4,
                        "status": "deployed",
                        "version": "3.0.24"
                    },
                    "timeout": 300,
                    "values": {
                        "attu": {
                            "enabled": true,
                            "ingress": {
                                "enabled": false
                            }
                        },
                        "cluster": {
                            "enabled": true
                        },
                        "etcd": {
                            "image": {
                                "pullPolicy": "IfNotPresent",
                                "tag": "3.5.1"
                            }
                        },
                        "externalS3": {
                            "accessKey": "AKIAQOLFGTNXMQUOE2HK",
                            "bucketName": "p-3-milvus-data",
                            "enabled": true,
                            "host": "s3.us-west-2.amazonaws.com",
                            "post": 80,
                            "secretKey": {
                                "4dabf18193072939515e22adb298388d": "1b47061264138c4ac30d75fd1eb44270",
                                "ciphertext": "AAABAORwKo1pzCK31iLDhukzbkqHD3nnShMoDcadr6ZyVVRV9oXpAJwXJcX/o4TSm7brn7dGd7Xg4/JX8CJEj55fl694UdHO0UA="
                            }
                        },
                        "metrics": {
                            "enabled": false
                        },
                        "minio": {
                            "enabled": false
                        },
                        "service": {
                            "annotations": {
                                "service.beta.kubernetes.io/aws-load-balancer-nlb-target-type": "instance",
                                "service.beta.kubernetes.io/aws-load-balancer-scheme": "internal",
                                "service.beta.kubernetes.io/aws-load-balancer-type": "external"
                            },
                            "type": "LoadBalancer"
                        }
                    },
                    "verify": false,
                    "version": "3.0.24",
                    "waitForJobs": false
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::aws:iam/accessKey:AccessKey::milvus-p-3-access-key",
                    "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::milvus-bucket-3"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::prom-k8s-provider::2755aa29-271f-4f1f-8be3-4860108333ad",
                "propertyDependencies": {
                    "chart": null,
                    "compat": null,
                    "createNamespace": null,
                    "name": null,
                    "namespace": null,
                    "repositoryOpts": null,
                    "values": [
                        "urn:pulumi:plane-3::launchpad::aws:iam/accessKey:AccessKey::milvus-p-3-access-key",
                        "urn:pulumi:plane-3::launchpad::aws:s3/bucket:Bucket::milvus-bucket-3"
                    ]
                },
                "sequenceNumber": 3
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:Namespace::emissary-system",
                "custom": true,
                "id": "emissary-system",
                "type": "kubernetes:core/v1:Namespace",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "emissary-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Namespace",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "emissary-system"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Namespace",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"emissary-system\"}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:32:46Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "kubernetes.io/metadata.name": "emissary-system"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:kubernetes.io/metadata.name": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:32:46Z"
                            }
                        ],
                        "name": "emissary-system",
                        "resourceVersion": "14776",
                        "uid": "aa454683-fa4a-4948-bae8-69913a6b907e"
                    },
                    "spec": {
                        "finalizers": [
                            "kubernetes"
                        ]
                    },
                    "status": {
                        "phase": "Active"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ServiceAccount::emissary-system/emissary-apiext",
                "custom": true,
                "id": "emissary-system/emissary-apiext",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext",
                        "namespace": "emissary-system"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:32:46Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"emissary-apiext-token-q4f9g\"}": {
                                            ".": {},
                                            "f:name": {}
                                        }
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-03-22T04:32:46Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:32:46Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "namespace": "emissary-system",
                        "resourceVersion": "14789",
                        "uid": "ed3a87ac-7fa4-414f-8bbe-4f135e642865"
                    },
                    "secrets": [
                        {
                            "name": "emissary-apiext-token-q4f9g"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:Service::emissary-system/emissary-apiext",
                "custom": true,
                "id": "emissary-system/emissary-apiext",
                "type": "kubernetes:core/v1:Service",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext",
                        "namespace": "emissary-system"
                    },
                    "spec": {
                        "ports": [
                            {
                                "name": "https",
                                "port": 443,
                                "targetPort": "https"
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "type": "ClusterIP"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "Service",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        },
                        "spec": {
                            "ports": [
                                {
                                    "name": "https",
                                    "port": 443,
                                    "targetPort": "https"
                                }
                            ],
                            "selector": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "type": "ClusterIP"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "Service",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"},\"spec\":{\"ports\":[{\"name\":\"https\",\"port\":443,\"targetPort\":\"https\"}],\"selector\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"type\":\"ClusterIP\"}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:32:46Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"port\":443,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:port": {},
                                                "f:protocol": {},
                                                "f:targetPort": {}
                                            }
                                        },
                                        "f:selector": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        },
                                        "f:sessionAffinity": {},
                                        "f:type": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:32:46Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "namespace": "emissary-system",
                        "resourceVersion": "14788",
                        "uid": "ebedc404-f3ab-4e9c-9719-2883dfaeaa41"
                    },
                    "spec": {
                        "clusterIP": "172.20.81.164",
                        "clusterIPs": [
                            "172.20.81.164"
                        ],
                        "ipFamilies": [
                            "IPv4"
                        ],
                        "ipFamilyPolicy": "SingleStack",
                        "ports": [
                            {
                                "name": "https",
                                "port": 443,
                                "protocol": "TCP",
                                "targetPort": "https"
                            }
                        ],
                        "selector": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "sessionAffinity": "None",
                        "type": "ClusterIP"
                    },
                    "status": {
                        "loadBalancer": {}
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::listeners.getambassador.io",
                "custom": true,
                "id": "listeners.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "listeners.getambassador.io"
                    },
                    "spec": {
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Listener",
                            "listKind": "ListenerList",
                            "plural": "listeners",
                            "singular": "listener"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.port",
                                        "name": "Port",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.protocol",
                                        "name": "Protocol",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.protocolStack",
                                        "name": "Stack",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.statsPrefix",
                                        "name": "StatsPrefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.securityModel",
                                        "name": "Security",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.l7Depth",
                                        "name": "L7Depth",
                                        "type": "string"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Listener is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ListenerSpec defines the desired state of this Port",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hostBinding": {
                                                        "description": "HostBinding allows restricting which Hosts will be used for this Listener.",
                                                        "properties": {
                                                            "namespace": {
                                                                "description": "NamespaceBindingType defines we we specify which namespaces to look for Hosts in.",
                                                                "properties": {
                                                                    "from": {
                                                                        "description": "NamespaceFromType defines how we evaluate a NamespaceBindingType.",
                                                                        "enum": [
                                                                            "SELF",
                                                                            "ALL",
                                                                            "SELECTOR"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "selector": {
                                                                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                                "properties": {
                                                                    "matchExpressions": {
                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                        "items": {
                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                    "type": "string"
                                                                                },
                                                                                "values": {
                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "key",
                                                                                "operator"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "matchLabels": {
                                                                        "additionalProperties": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "l7Depth": {
                                                        "description": "L7Depth specifies how many layer 7 load balancers are between us and the edge of the network.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "port": {
                                                        "description": "Port is the network port. Only one Listener can use a given port.",
                                                        "format": "int32",
                                                        "maximum": 65535,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "protocol": {
                                                        "description": "Protocol is a shorthand for certain predefined stacks. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                        "enum": [
                                                            "HTTP",
                                                            "HTTPS",
                                                            "HTTPPROXY",
                                                            "HTTPSPROXY",
                                                            "TCP",
                                                            "TLS",
                                                            "UDP"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocolStack": {
                                                        "description": "ProtocolStack explicitly specifies the protocol stack to set up. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                        "items": {
                                                            "description": "ProtocolStackElement defines specific layers that may be combined in a protocol stack for processing connections to a port.",
                                                            "enum": [
                                                                "HTTP",
                                                                "PROXY",
                                                                "TLS",
                                                                "TCP",
                                                                "UDP"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "securityModel": {
                                                        "description": "SecurityModel specifies how to determine whether connections to this port are secure or insecure.",
                                                        "enum": [
                                                            "XFP",
                                                            "SECURE",
                                                            "INSECURE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "statsPrefix": {
                                                        "description": "StatsPrefix specifies the prefix for statistics sent by Envoy about this Listener. The default depends on the protocol: \"ingress-http\", \"ingress-https\", \"ingress-tls-$port\", or \"ingress-$port\".",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "hostBinding",
                                                    "port",
                                                    "securityModel"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {}
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "listeners.getambassador.io"
                        },
                        "spec": {
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "Listener",
                                "listKind": "ListenerList",
                                "plural": "listeners",
                                "singular": "listener"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "additionalPrinterColumns": [
                                        {
                                            "jsonPath": ".spec.port",
                                            "name": "Port",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.protocol",
                                            "name": "Protocol",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.protocolStack",
                                            "name": "Stack",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.statsPrefix",
                                            "name": "StatsPrefix",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.securityModel",
                                            "name": "Security",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.l7Depth",
                                            "name": "L7Depth",
                                            "type": "string"
                                        }
                                    ],
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Listener is the Schema for the hosts API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "ListenerSpec defines the desired state of this Port",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "hostBinding": {
                                                            "description": "HostBinding allows restricting which Hosts will be used for this Listener.",
                                                            "properties": {
                                                                "namespace": {
                                                                    "description": "NamespaceBindingType defines we we specify which namespaces to look for Hosts in.",
                                                                    "properties": {
                                                                        "from": {
                                                                            "description": "NamespaceFromType defines how we evaluate a NamespaceBindingType.",
                                                                            "enum": [
                                                                                "SELF",
                                                                                "ALL",
                                                                                "SELECTOR"
                                                                            ],
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "selector": {
                                                                    "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                                    "properties": {
                                                                        "matchExpressions": {
                                                                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                            "items": {
                                                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "key is the label key that the selector applies to.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "operator": {
                                                                                        "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "values": {
                                                                                        "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key",
                                                                                    "operator"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "matchLabels": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "l7Depth": {
                                                            "description": "L7Depth specifies how many layer 7 load balancers are between us and the edge of the network.",
                                                            "format": "int32",
                                                            "type": "integer"
                                                        },
                                                        "port": {
                                                            "description": "Port is the network port. Only one Listener can use a given port.",
                                                            "format": "int32",
                                                            "maximum": 65535,
                                                            "minimum": 1,
                                                            "type": "integer"
                                                        },
                                                        "protocol": {
                                                            "description": "Protocol is a shorthand for certain predefined stacks. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                            "enum": [
                                                                "HTTP",
                                                                "HTTPS",
                                                                "HTTPPROXY",
                                                                "HTTPSPROXY",
                                                                "TCP",
                                                                "TLS",
                                                                "UDP"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "protocolStack": {
                                                            "description": "ProtocolStack explicitly specifies the protocol stack to set up. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                            "items": {
                                                                "description": "ProtocolStackElement defines specific layers that may be combined in a protocol stack for processing connections to a port.",
                                                                "enum": [
                                                                    "HTTP",
                                                                    "PROXY",
                                                                    "TLS",
                                                                    "TCP",
                                                                    "UDP"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "securityModel": {
                                                            "description": "SecurityModel specifies how to determine whether connections to this port are secure or insecure.",
                                                            "enum": [
                                                                "XFP",
                                                                "SECURE",
                                                                "INSECURE"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "statsPrefix": {
                                                            "description": "StatsPrefix specifies the prefix for statistics sent by Envoy about this Listener. The default depends on the protocol: \"ingress-http\", \"ingress-https\", \"ingress-tls-$port\", or \"ingress-$port\".",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "hostBinding",
                                                        "port",
                                                        "securityModel"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {}
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"listeners.getambassador.io\"},\"spec\":{\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"Listener\",\"listKind\":\"ListenerList\",\"plural\":\"listeners\",\"singular\":\"listener\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".spec.port\",\"name\":\"Port\",\"type\":\"string\"},{\"jsonPath\":\".spec.protocol\",\"name\":\"Protocol\",\"type\":\"string\"},{\"jsonPath\":\".spec.protocolStack\",\"name\":\"Stack\",\"type\":\"string\"},{\"jsonPath\":\".spec.statsPrefix\",\"name\":\"StatsPrefix\",\"type\":\"string\"},{\"jsonPath\":\".spec.securityModel\",\"name\":\"Security\",\"type\":\"string\"},{\"jsonPath\":\".spec.l7Depth\",\"name\":\"L7Depth\",\"type\":\"string\"}],\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Listener is the Schema for the hosts API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"ListenerSpec defines the desired state of this Port\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"hostBinding\":{\"description\":\"HostBinding allows restricting which Hosts will be used for this Listener.\",\"properties\":{\"namespace\":{\"description\":\"NamespaceBindingType defines we we specify which namespaces to look for Hosts in.\",\"properties\":{\"from\":{\"description\":\"NamespaceFromType defines how we evaluate a NamespaceBindingType.\",\"enum\":[\"SELF\",\"ALL\",\"SELECTOR\"],\"type\":\"string\"}},\"type\":\"object\"},\"selector\":{\"description\":\"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.\",\"properties\":{\"matchExpressions\":{\"description\":\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\"items\":{\"description\":\"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\"properties\":{\"key\":{\"description\":\"key is the label key that the selector applies to.\",\"type\":\"string\"},\"operator\":{\"description\":\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\"type\":\"string\"},\"values\":{\"description\":\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"key\",\"operator\"],\"type\":\"object\"},\"type\":\"array\"},\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"},\"l7Depth\":{\"description\":\"L7Depth specifies how many layer 7 load balancers are between us and the edge of the network.\",\"format\":\"int32\",\"type\":\"integer\"},\"port\":{\"description\":\"Port is the network port. Only one Listener can use a given port.\",\"format\":\"int32\",\"maximum\":65535,\"minimum\":1,\"type\":\"integer\"},\"protocol\":{\"description\":\"Protocol is a shorthand for certain predefined stacks. Exactly one of Protocol or ProtocolStack must be supplied.\",\"enum\":[\"HTTP\",\"HTTPS\",\"HTTPPROXY\",\"HTTPSPROXY\",\"TCP\",\"TLS\",\"UDP\"],\"type\":\"string\"},\"protocolStack\":{\"description\":\"ProtocolStack explicitly specifies the protocol stack to set up. Exactly one of Protocol or ProtocolStack must be supplied.\",\"items\":{\"description\":\"ProtocolStackElement defines specific layers that may be combined in a protocol stack for processing connections to a port.\",\"enum\":[\"HTTP\",\"PROXY\",\"TLS\",\"TCP\",\"UDP\"],\"type\":\"string\"},\"type\":\"array\"},\"securityModel\":{\"description\":\"SecurityModel specifies how to determine whether connections to this port are secure or insecure.\",\"enum\":[\"XFP\",\"SECURE\",\"INSECURE\"],\"type\":\"string\"},\"statsPrefix\":{\"description\":\"StatsPrefix specifies the prefix for statistics sent by Envoy about this Listener. The default depends on the protocol: \\\"ingress-http\\\", \\\"ingress-https\\\", \\\"ingress-tls-$port\\\", or \\\"ingress-$port\\\".\",\"type\":\"string\"}},\"required\":[\"hostBinding\",\"port\",\"securityModel\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{}}]}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:32:46Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-03-22T04:32:46Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {}
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:32:46Z"
                            }
                        ],
                        "name": "listeners.getambassador.io",
                        "resourceVersion": "14790",
                        "uid": "bd6f2d10-a120-49a3-b545-b1538359cc1b"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "None"
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Listener",
                            "listKind": "ListenerList",
                            "plural": "listeners",
                            "singular": "listener"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.port",
                                        "name": "Port",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.protocol",
                                        "name": "Protocol",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.protocolStack",
                                        "name": "Stack",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.statsPrefix",
                                        "name": "StatsPrefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.securityModel",
                                        "name": "Security",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.l7Depth",
                                        "name": "L7Depth",
                                        "type": "string"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Listener is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ListenerSpec defines the desired state of this Port",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hostBinding": {
                                                        "description": "HostBinding allows restricting which Hosts will be used for this Listener.",
                                                        "properties": {
                                                            "namespace": {
                                                                "description": "NamespaceBindingType defines we we specify which namespaces to look for Hosts in.",
                                                                "properties": {
                                                                    "from": {
                                                                        "description": "NamespaceFromType defines how we evaluate a NamespaceBindingType.",
                                                                        "enum": [
                                                                            "SELF",
                                                                            "ALL",
                                                                            "SELECTOR"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "selector": {
                                                                "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
                                                                "properties": {
                                                                    "matchExpressions": {
                                                                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                        "items": {
                                                                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                            "properties": {
                                                                                "key": {
                                                                                    "description": "key is the label key that the selector applies to.",
                                                                                    "type": "string"
                                                                                },
                                                                                "operator": {
                                                                                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                    "type": "string"
                                                                                },
                                                                                "values": {
                                                                                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                    "items": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "type": "array"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "key",
                                                                                "operator"
                                                                            ],
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "matchLabels": {
                                                                        "additionalProperties": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "l7Depth": {
                                                        "description": "L7Depth specifies how many layer 7 load balancers are between us and the edge of the network.",
                                                        "format": "int32",
                                                        "type": "integer"
                                                    },
                                                    "port": {
                                                        "description": "Port is the network port. Only one Listener can use a given port.",
                                                        "format": "int32",
                                                        "maximum": 65535,
                                                        "minimum": 1,
                                                        "type": "integer"
                                                    },
                                                    "protocol": {
                                                        "description": "Protocol is a shorthand for certain predefined stacks. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                        "enum": [
                                                            "HTTP",
                                                            "HTTPS",
                                                            "HTTPPROXY",
                                                            "HTTPSPROXY",
                                                            "TCP",
                                                            "TLS",
                                                            "UDP"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocolStack": {
                                                        "description": "ProtocolStack explicitly specifies the protocol stack to set up. Exactly one of Protocol or ProtocolStack must be supplied.",
                                                        "items": {
                                                            "description": "ProtocolStackElement defines specific layers that may be combined in a protocol stack for processing connections to a port.",
                                                            "enum": [
                                                                "HTTP",
                                                                "PROXY",
                                                                "TLS",
                                                                "TCP",
                                                                "UDP"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "securityModel": {
                                                        "description": "SecurityModel specifies how to determine whether connections to this port are secure or insecure.",
                                                        "enum": [
                                                            "XFP",
                                                            "SECURE",
                                                            "INSECURE"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "statsPrefix": {
                                                        "description": "StatsPrefix specifies the prefix for statistics sent by Envoy about this Listener. The default depends on the protocol: \"ingress-http\", \"ingress-https\", \"ingress-tls-$port\", or \"ingress-$port\".",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "hostBinding",
                                                    "port",
                                                    "securityModel"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {}
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Listener",
                            "listKind": "ListenerList",
                            "plural": "listeners",
                            "singular": "listener"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-03-22T04:32:46Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-03-22T04:32:46Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v3alpha1"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::tlscontexts.getambassador.io",
                "custom": true,
                "id": "tlscontexts.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "tlscontexts.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TLSContext",
                            "listKind": "TLSContextList",
                            "plural": "tlscontexts",
                            "singular": "tlscontext"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TLSContextSpec defines the desired state of TLSContext",
                                                "properties": {
                                                    "alpn_protocols": {
                                                        "type": "string"
                                                    },
                                                    "ca_secret": {
                                                        "type": "string"
                                                    },
                                                    "cacert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_required": {
                                                        "type": "boolean"
                                                    },
                                                    "cipher_suites": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ecdh_curves": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hosts": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "max_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "min_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "private_key_file": {
                                                        "type": "string"
                                                    },
                                                    "redirect_cleartext_from": {
                                                        "type": "integer"
                                                    },
                                                    "secret": {
                                                        "type": "string"
                                                    },
                                                    "secret_namespacing": {
                                                        "type": "boolean"
                                                    },
                                                    "sni": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TLSContextSpec defines the desired state of TLSContext",
                                                "properties": {
                                                    "alpn_protocols": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ca_secret": {
                                                        "type": "string"
                                                    },
                                                    "cacert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_required": {
                                                        "type": "boolean"
                                                    },
                                                    "cipher_suites": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ecdh_curves": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hosts": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "max_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "min_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "private_key_file": {
                                                        "type": "string"
                                                    },
                                                    "redirect_cleartext_from": {
                                                        "type": "integer"
                                                    },
                                                    "secret": {
                                                        "type": "string"
                                                    },
                                                    "secret_namespacing": {
                                                        "type": "boolean"
                                                    },
                                                    "sni": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "tlscontexts.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "TLSContext",
                                "listKind": "TLSContextList",
                                "plural": "tlscontexts",
                                "singular": "tlscontext"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TLSContext is the Schema for the tlscontexts API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TLSContextSpec defines the desired state of TLSContext",
                                                    "properties": {
                                                        "alpn_protocols": {
                                                            "type": "string"
                                                        },
                                                        "ca_secret": {
                                                            "type": "string"
                                                        },
                                                        "cacert_chain_file": {
                                                            "type": "string"
                                                        },
                                                        "cert_chain_file": {
                                                            "type": "string"
                                                        },
                                                        "cert_required": {
                                                            "type": "boolean"
                                                        },
                                                        "cipher_suites": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "ecdh_curves": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "hosts": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "max_tls_version": {
                                                            "enum": [
                                                                "v1.0",
                                                                "v1.1",
                                                                "v1.2",
                                                                "v1.3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "min_tls_version": {
                                                            "enum": [
                                                                "v1.0",
                                                                "v1.1",
                                                                "v1.2",
                                                                "v1.3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "private_key_file": {
                                                            "type": "string"
                                                        },
                                                        "redirect_cleartext_from": {
                                                            "type": "integer"
                                                        },
                                                        "secret": {
                                                            "type": "string"
                                                        },
                                                        "secret_namespacing": {
                                                            "type": "boolean"
                                                        },
                                                        "sni": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TLSContext is the Schema for the tlscontexts API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TLSContextSpec defines the desired state of TLSContext",
                                                    "properties": {
                                                        "alpn_protocols": {
                                                            "type": "string"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "ca_secret": {
                                                            "type": "string"
                                                        },
                                                        "cacert_chain_file": {
                                                            "type": "string"
                                                        },
                                                        "cert_chain_file": {
                                                            "type": "string"
                                                        },
                                                        "cert_required": {
                                                            "type": "boolean"
                                                        },
                                                        "cipher_suites": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "ecdh_curves": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "hosts": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "max_tls_version": {
                                                            "enum": [
                                                                "v1.0",
                                                                "v1.1",
                                                                "v1.2",
                                                                "v1.3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "min_tls_version": {
                                                            "enum": [
                                                                "v1.0",
                                                                "v1.1",
                                                                "v1.2",
                                                                "v1.3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "private_key_file": {
                                                            "type": "string"
                                                        },
                                                        "redirect_cleartext_from": {
                                                            "type": "integer"
                                                        },
                                                        "secret": {
                                                            "type": "string"
                                                        },
                                                        "secret_namespacing": {
                                                            "type": "boolean"
                                                        },
                                                        "sni": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TLSContext is the Schema for the tlscontexts API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"tlscontexts.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"TLSContext\",\"listKind\":\"TLSContextList\",\"plural\":\"tlscontexts\",\"singular\":\"tlscontext\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TLSContext is the Schema for the tlscontexts API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TLSContextSpec defines the desired state of TLSContext\",\"properties\":{\"alpn_protocols\":{\"type\":\"string\"},\"ca_secret\":{\"type\":\"string\"},\"cacert_chain_file\":{\"type\":\"string\"},\"cert_chain_file\":{\"type\":\"string\"},\"cert_required\":{\"type\":\"boolean\"},\"cipher_suites\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ecdh_curves\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"hosts\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"max_tls_version\":{\"enum\":[\"v1.0\",\"v1.1\",\"v1.2\",\"v1.3\"],\"type\":\"string\"},\"min_tls_version\":{\"enum\":[\"v1.0\",\"v1.1\",\"v1.2\",\"v1.3\"],\"type\":\"string\"},\"private_key_file\":{\"type\":\"string\"},\"redirect_cleartext_from\":{\"type\":\"integer\"},\"secret\":{\"type\":\"string\"},\"secret_namespacing\":{\"type\":\"boolean\"},\"sni\":{\"type\":\"string\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TLSContext is the Schema for the tlscontexts API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TLSContextSpec defines the desired state of TLSContext\",\"properties\":{\"alpn_protocols\":{\"type\":\"string\"},\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ca_secret\":{\"type\":\"string\"},\"cacert_chain_file\":{\"type\":\"string\"},\"cert_chain_file\":{\"type\":\"string\"},\"cert_required\":{\"type\":\"boolean\"},\"cipher_suites\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ecdh_curves\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"hosts\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"max_tls_version\":{\"enum\":[\"v1.0\",\"v1.1\",\"v1.2\",\"v1.3\"],\"type\":\"string\"},\"min_tls_version\":{\"enum\":[\"v1.0\",\"v1.1\",\"v1.2\",\"v1.3\"],\"type\":\"string\"},\"private_key_file\":{\"type\":\"string\"},\"redirect_cleartext_from\":{\"type\":\"integer\"},\"secret\":{\"type\":\"string\"},\"secret_namespacing\":{\"type\":\"boolean\"},\"sni\":{\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TLSContext is the Schema for the tlscontexts API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:32:46Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-03-22T04:32:46Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:32:46Z"
                            }
                        ],
                        "name": "tlscontexts.getambassador.io",
                        "resourceVersion": "14780",
                        "uid": "a947c771-9837-4f50-a218-dae606331695"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TLSContext",
                            "listKind": "TLSContextList",
                            "plural": "tlscontexts",
                            "singular": "tlscontext"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TLSContextSpec defines the desired state of TLSContext",
                                                "properties": {
                                                    "alpn_protocols": {
                                                        "type": "string"
                                                    },
                                                    "ca_secret": {
                                                        "type": "string"
                                                    },
                                                    "cacert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_required": {
                                                        "type": "boolean"
                                                    },
                                                    "cipher_suites": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ecdh_curves": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hosts": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "max_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "min_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "private_key_file": {
                                                        "type": "string"
                                                    },
                                                    "redirect_cleartext_from": {
                                                        "type": "integer"
                                                    },
                                                    "secret": {
                                                        "type": "string"
                                                    },
                                                    "secret_namespacing": {
                                                        "type": "boolean"
                                                    },
                                                    "sni": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TLSContextSpec defines the desired state of TLSContext",
                                                "properties": {
                                                    "alpn_protocols": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ca_secret": {
                                                        "type": "string"
                                                    },
                                                    "cacert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_chain_file": {
                                                        "type": "string"
                                                    },
                                                    "cert_required": {
                                                        "type": "boolean"
                                                    },
                                                    "cipher_suites": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ecdh_curves": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hosts": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "max_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "min_tls_version": {
                                                        "enum": [
                                                            "v1.0",
                                                            "v1.1",
                                                            "v1.2",
                                                            "v1.3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "private_key_file": {
                                                        "type": "string"
                                                    },
                                                    "redirect_cleartext_from": {
                                                        "type": "integer"
                                                    },
                                                    "secret": {
                                                        "type": "string"
                                                    },
                                                    "secret_namespacing": {
                                                        "type": "boolean"
                                                    },
                                                    "sni": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TLSContext is the Schema for the tlscontexts API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TLSContext",
                            "listKind": "TLSContextList",
                            "plural": "tlscontexts",
                            "singular": "tlscontext"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-03-22T04:32:46Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-03-22T04:32:46Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::authservices.getambassador.io",
                "custom": true,
                "id": "authservices.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "authservices.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "AuthService",
                            "listKind": "AuthServiceList",
                            "plural": "authservices",
                            "singular": "authservice"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "AuthServiceSpec defines the desired state of AuthService",
                                                "properties": {
                                                    "add_auth_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "allow_request_body": {
                                                        "type": "boolean"
                                                    },
                                                    "allowed_authorization_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "allowed_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_service": {
                                                        "type": "string"
                                                    },
                                                    "failure_mode_allow": {
                                                        "type": "boolean"
                                                    },
                                                    "include_body": {
                                                        "properties": {
                                                            "allow_partial": {
                                                                "type": "boolean"
                                                            },
                                                            "max_bytes": {
                                                                "description": "These aren't pointer types because they are required.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "allow_partial",
                                                            "max_bytes"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "path_prefix": {
                                                        "type": "string"
                                                    },
                                                    "proto": {
                                                        "enum": [
                                                            "http",
                                                            "grpc"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "status_on_error": {
                                                        "description": "Why isn't this just an int??",
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "v3CircuitBreakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "auth_service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "AuthServiceSpec defines the desired state of AuthService",
                                                "properties": {
                                                    "add_auth_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "allow_request_body": {
                                                        "type": "boolean"
                                                    },
                                                    "allowed_authorization_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "allowed_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_service": {
                                                        "description": "TODO(lukeshu): In v3alpha2, consider renameing `auth_service` to just `service`, for consistency with the other resource types.",
                                                        "type": "string"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "failure_mode_allow": {
                                                        "type": "boolean"
                                                    },
                                                    "include_body": {
                                                        "properties": {
                                                            "allow_partial": {
                                                                "type": "boolean"
                                                            },
                                                            "max_bytes": {
                                                                "description": "These aren't pointer types because they are required.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "allow_partial",
                                                            "max_bytes"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "path_prefix": {
                                                        "type": "string"
                                                    },
                                                    "proto": {
                                                        "enum": [
                                                            "http",
                                                            "grpc"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "status_on_error": {
                                                        "description": "TODO(lukeshu): In v3alpha2, consider getting rid of this struct type in favor of just using an int (i.e. `statusOnError: 500` instead of the current `statusOnError: { code: 500 }`).",
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "auth_service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "authservices.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "AuthService",
                                "listKind": "AuthServiceList",
                                "plural": "authservices",
                                "singular": "authservice"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "AuthService is the Schema for the authservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "AuthServiceSpec defines the desired state of AuthService",
                                                    "properties": {
                                                        "add_auth_headers": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "add_linkerd_headers": {
                                                            "type": "boolean"
                                                        },
                                                        "allow_request_body": {
                                                            "type": "boolean"
                                                        },
                                                        "allowed_authorization_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "allowed_request_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "auth_service": {
                                                            "type": "string"
                                                        },
                                                        "failure_mode_allow": {
                                                            "type": "boolean"
                                                        },
                                                        "include_body": {
                                                            "properties": {
                                                                "allow_partial": {
                                                                    "type": "boolean"
                                                                },
                                                                "max_bytes": {
                                                                    "description": "These aren't pointer types because they are required.",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "allow_partial",
                                                                "max_bytes"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "path_prefix": {
                                                            "type": "string"
                                                        },
                                                        "proto": {
                                                            "enum": [
                                                                "http",
                                                                "grpc"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "protocol_version": {
                                                            "enum": [
                                                                "v2",
                                                                "v3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "status_on_error": {
                                                            "description": "Why isn't this just an int??",
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "timeout_ms": {
                                                            "type": "integer"
                                                        },
                                                        "v3CircuitBreakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "auth_service"
                                                    ],
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "AuthService is the Schema for the authservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "AuthServiceSpec defines the desired state of AuthService",
                                                    "properties": {
                                                        "add_auth_headers": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "add_linkerd_headers": {
                                                            "type": "boolean"
                                                        },
                                                        "allow_request_body": {
                                                            "type": "boolean"
                                                        },
                                                        "allowed_authorization_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "allowed_request_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "auth_service": {
                                                            "description": "TODO(lukeshu): In v3alpha2, consider renameing `auth_service` to just `service`, for consistency with the other resource types.",
                                                            "type": "string"
                                                        },
                                                        "circuit_breakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "failure_mode_allow": {
                                                            "type": "boolean"
                                                        },
                                                        "include_body": {
                                                            "properties": {
                                                                "allow_partial": {
                                                                    "type": "boolean"
                                                                },
                                                                "max_bytes": {
                                                                    "description": "These aren't pointer types because they are required.",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "allow_partial",
                                                                "max_bytes"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "path_prefix": {
                                                            "type": "string"
                                                        },
                                                        "proto": {
                                                            "enum": [
                                                                "http",
                                                                "grpc"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "protocol_version": {
                                                            "enum": [
                                                                "v2",
                                                                "v3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        },
                                                        "status_on_error": {
                                                            "description": "TODO(lukeshu): In v3alpha2, consider getting rid of this struct type in favor of just using an int (i.e. `statusOnError: 500` instead of the current `statusOnError: { code: 500 }`).",
                                                            "properties": {
                                                                "code": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "timeout_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "tls": {
                                                            "type": "string"
                                                        },
                                                        "v2ExplicitTLS": {
                                                            "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                            "properties": {
                                                                "serviceScheme": {
                                                                    "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                    "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                    "type": "string"
                                                                },
                                                                "tls": {
                                                                    "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                    "enum": [
                                                                        "",
                                                                        "null",
                                                                        "bool:true",
                                                                        "bool:false",
                                                                        "string"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "auth_service"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "AuthService is the Schema for the authservices API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"authservices.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"AuthService\",\"listKind\":\"AuthServiceList\",\"plural\":\"authservices\",\"singular\":\"authservice\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"AuthService is the Schema for the authservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"AuthServiceSpec defines the desired state of AuthService\",\"properties\":{\"add_auth_headers\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"add_linkerd_headers\":{\"type\":\"boolean\"},\"allow_request_body\":{\"type\":\"boolean\"},\"allowed_authorization_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"allowed_request_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"auth_service\":{\"type\":\"string\"},\"failure_mode_allow\":{\"type\":\"boolean\"},\"include_body\":{\"properties\":{\"allow_partial\":{\"type\":\"boolean\"},\"max_bytes\":{\"description\":\"These aren't pointer types because they are required.\",\"type\":\"integer\"}},\"required\":[\"allow_partial\",\"max_bytes\"],\"type\":\"object\"},\"path_prefix\":{\"type\":\"string\"},\"proto\":{\"enum\":[\"http\",\"grpc\"],\"type\":\"string\"},\"protocol_version\":{\"enum\":[\"v2\",\"v3\"],\"type\":\"string\"},\"status_on_error\":{\"description\":\"Why isn't this just an int??\",\"properties\":{\"code\":{\"type\":\"integer\"}},\"type\":\"object\"},\"timeout_ms\":{\"type\":\"integer\"},\"v3CircuitBreakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"v3StatsName\":{\"type\":\"string\"}},\"required\":[\"auth_service\"],\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"AuthService is the Schema for the authservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"AuthServiceSpec defines the desired state of AuthService\",\"properties\":{\"add_auth_headers\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"add_linkerd_headers\":{\"type\":\"boolean\"},\"allow_request_body\":{\"type\":\"boolean\"},\"allowed_authorization_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"allowed_request_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"auth_service\":{\"description\":\"TODO(lukeshu): In v3alpha2, consider renameing `auth_service` to just `service`, for consistency with the other resource types.\",\"type\":\"string\"},\"circuit_breakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"failure_mode_allow\":{\"type\":\"boolean\"},\"include_body\":{\"properties\":{\"allow_partial\":{\"type\":\"boolean\"},\"max_bytes\":{\"description\":\"These aren't pointer types because they are required.\",\"type\":\"integer\"}},\"required\":[\"allow_partial\",\"max_bytes\"],\"type\":\"object\"},\"path_prefix\":{\"type\":\"string\"},\"proto\":{\"enum\":[\"http\",\"grpc\"],\"type\":\"string\"},\"protocol_version\":{\"enum\":[\"v2\",\"v3\"],\"type\":\"string\"},\"stats_name\":{\"type\":\"string\"},\"status_on_error\":{\"description\":\"TODO(lukeshu): In v3alpha2, consider getting rid of this struct type in favor of just using an int (i.e. `statusOnError: 500` instead of the current `statusOnError: { code: 500 }`).\",\"properties\":{\"code\":{\"type\":\"integer\"}},\"type\":\"object\"},\"timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"tls\":{\"type\":\"string\"},\"v2ExplicitTLS\":{\"description\":\"V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.\",\"properties\":{\"serviceScheme\":{\"description\":\"ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \\n Acceptable values are \\\"http://\\\" (case-insensitive), \\\"https://\\\" (case-insensitive), or \\\"\\\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.\",\"pattern\":\"^([hH][tT][tT][pP][sS]?://)?$\",\"type\":\"string\"},\"tls\":{\"description\":\"TLS controls whether and how to represent the \\\"tls\\\" field when its value could be implied by the \\\"service\\\" field.  In v2, there were a lot of different ways to spell an \\\"empty\\\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \\n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \\\"\\\"           | omit the field                        | defer to service (no TLSContext)   |  | \\\"null\\\"       | store an explicit \\\"null\\\" in the field | defer to service (no TLSContext)   |  | \\\"string\\\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \\\"bool:false\\\" | store a Boolean \\\"false\\\" in the field  | defer to service (no TLSContext)   |  | \\\"bool:true\\\"  | store a Boolean \\\"true\\\" in the field   | originate TLS (no TLSContext)      | \\n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \\\"bool:true\\\" if TLS is not to be originated), then this field is ignored.\",\"enum\":[\"\",\"null\",\"bool:true\",\"bool:false\",\"string\"],\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"auth_service\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"AuthService is the Schema for the authservices API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:33:08Z",
                        "generation": 2,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:08Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:08Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:conversion": {
                                            "f:webhook": {
                                                "f:clientConfig": {
                                                    "f:caBundle": {},
                                                    "f:service": {
                                                        "f:path": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "apiext",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:10Z"
                            }
                        ],
                        "name": "authservices.getambassador.io",
                        "resourceVersion": "14972",
                        "uid": "fbc64fd6-49dc-4c74-8897-b2cf61aded52"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZJRENDQXdpZ0F3SUJBZ0lSQUwrTWhSTkZpYmV0ampjLzlHZDZJMUl3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUI0WERUSXlNRE15TWpBME16TXhNRm9YRFRJegpNRE15TWpBME16TXhNRm93R2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUlJQ0lqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBbVFTWThHM2VEZkxYSjcyelp5a0tSVXZjeVlRME41T1UKeTVMaHZGd043ank5SFM2U0xPbGE1Q3NZYWpQdHFMbnhzSmdwazhFLzF3bmtCakJNUEFKbitCN2RQZmFqNFlnagoweW45Z2hXa1pyMFFBcWtHQm9OWnltRjc5OXN0eHkrSXRCVVhSWEtDckNBbDNCTmxJb2lqQUM5OEJTMEloSFQ4CjRkVmxqQ01sOTZjOVhudkdBdzU3WlY3L2gvZXJGMHlBWERLTVk4dVZ0dXdnYlJoUVJjVlNrSWhiMUpBdHlGUWMKVVA3QkFDUTltbFZSWUZYQUE2SWFBVUdmcTMyZ2ViVDN0YnZlN044MDFudm82aWp3Qm52REN0ZmluNXZ1OWRtbgpOMmZzV1duNVk2SWVKRHlzaWNDL1Q3Q044ekUzNWFUK1NZZk9TVGJiUU9McWF4Q3lWODdaV0lOM215MW5OU0lYClFBUC9jclhWTHFsNWd6bDNUa1BwNGV1MGdBR3BUSW14ZTIyWWtBUWpZUlZSWENjZ2JYZCtjdVlDUG5sK200ZXQKTXh2WDRnMDhZYWRlY3plNUhlL1dsb2k1R2xMMHJHVEFIOUFPdFlmWFEyMXJ6MVJ6SGtqbGV3azVhL1hRUjIzdgpCVnJTZEErMi9XVkJLZEV1Tmc4RFN2UXMwV25tVmx3SEhYVEJrYnh5S2lrd2NTRnY1SGdqbTZMUjFTU01aNFVmCjV0MFJ1ejc1ZzZOMUd3SzhmdmhlUUtORmJmV0s1cWVTbHFicWJKT0gxMEFsR2l1UjQ3a29vbkt2N0ZqSXl0WE8KUVpiaDBSWHE2ekFIZGROUVpFZVFNb1IxVnVRWFZjRk9sVVZUbmpRS3FVNitxN2EvMkJ4bkxPTlJVWnYvYUFYMQpLbUlCZGVpeG8vRUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLRU1CMEdBMVVkSlFRV01CUUdDQ3NHCkFRVUZCd01DQmdnckJnRUZCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRSnhNZkMKQ0VJeDU0V3FYNDFycjVIb2IrL3Y0akFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBRlB6cVVoazNXbnNzTUIzdwp3WWlWRVl4amZFcE9qNWtla3lXODhTd2ViRVBuYm03UHp1QXQyelhpQUN4MzlvM01PYy9KSmxCSWQvUSsvYmRICmtEK05YdUVxQVh4Qk9yaVoyaEpVVVBUSGtZS0dzWXNtZzN2LzIvcVpUeVVnKzVXZWxDaWRJMmRWZHZUWGtYK1YKRis3ZmVDeWNqbUozNUkvek42ZDdZOXd1TklMRDVrS2FhZXdBY0dLbVdqb3g3Q0pkb25Od05Xc3dmYTY0bFBlbApQYm8vZnpJZzQ2aUY4MGhualltVWQzUStDWTRodXBiV3VMUkZ1Z3ZDd1B3MWlTYThJb2s0YjhCa0xaTDBIZXpTCjJSZ2JlcVZRRHFOMWZaOERYVlVwM3dlem1GVk5IOUZLUGZmTTFlNXMyWjBkVHdDZ3pKRjUzcFJ4N0VWc2pITVAKZUN6YXROcDViZUJnN0E0QjFLRFdiVmpjNkdKR1RXb1FoQ2NZTUlWMXd1RWh4US9QMlo0OXE5WDBKK00rdy9zSwpNWVZhLzVTbUxTK0RHM0dleUQvMnd2T25MR1FZT1RtMzIvUmdDc1lMNG9RSURTaUpiQnQrcVlva0t6TUdGMytQCjh4UDI1cFBzWHFxYzZKeW1aYTRINTVDOWkzNHl0dEcyb0dQYTdRMVZhaTBUQTFRTTFaNUdFUVFNY3o2RHZ1Z2MKYXpObHZacEROaXVrT3hJek50M1BkUjFzaUtNWnY5Y1o3MC9oTFVxRWl2OWxuN3VheWZwREV3c09EckxRSjBhSQozK1EzUnBjUnZXbjg5N3ZGRytkcTRvcUFSSU9zWEF4TEdZdWp1NWV3U1BDNUQzQXhSZ2xXU1NaaHhBYmJuK2Z0CjBBQ3RGV0Ntc1IvNkY0Nnhjakt6S29wUG51az0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "path": "/webhooks/crd-convert",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "AuthService",
                            "listKind": "AuthServiceList",
                            "plural": "authservices",
                            "singular": "authservice"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "AuthServiceSpec defines the desired state of AuthService",
                                                "properties": {
                                                    "add_auth_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "allow_request_body": {
                                                        "type": "boolean"
                                                    },
                                                    "allowed_authorization_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "allowed_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_service": {
                                                        "type": "string"
                                                    },
                                                    "failure_mode_allow": {
                                                        "type": "boolean"
                                                    },
                                                    "include_body": {
                                                        "properties": {
                                                            "allow_partial": {
                                                                "type": "boolean"
                                                            },
                                                            "max_bytes": {
                                                                "description": "These aren't pointer types because they are required.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "allow_partial",
                                                            "max_bytes"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "path_prefix": {
                                                        "type": "string"
                                                    },
                                                    "proto": {
                                                        "enum": [
                                                            "http",
                                                            "grpc"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "status_on_error": {
                                                        "description": "Why isn't this just an int??",
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "v3CircuitBreakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "auth_service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "AuthServiceSpec defines the desired state of AuthService",
                                                "properties": {
                                                    "add_auth_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "allow_request_body": {
                                                        "type": "boolean"
                                                    },
                                                    "allowed_authorization_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "allowed_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_service": {
                                                        "description": "TODO(lukeshu): In v3alpha2, consider renameing `auth_service` to just `service`, for consistency with the other resource types.",
                                                        "type": "string"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "failure_mode_allow": {
                                                        "type": "boolean"
                                                    },
                                                    "include_body": {
                                                        "properties": {
                                                            "allow_partial": {
                                                                "type": "boolean"
                                                            },
                                                            "max_bytes": {
                                                                "description": "These aren't pointer types because they are required.",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "allow_partial",
                                                            "max_bytes"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "path_prefix": {
                                                        "type": "string"
                                                    },
                                                    "proto": {
                                                        "enum": [
                                                            "http",
                                                            "grpc"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "status_on_error": {
                                                        "description": "TODO(lukeshu): In v3alpha2, consider getting rid of this struct type in favor of just using an int (i.e. `statusOnError: 500` instead of the current `statusOnError: { code: 500 }`).",
                                                        "properties": {
                                                            "code": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "auth_service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "AuthService is the Schema for the authservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "AuthService",
                            "listKind": "AuthServiceList",
                            "plural": "authservices",
                            "singular": "authservice"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-03-22T04:33:08Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-03-22T04:33:08Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::tracingservices.getambassador.io",
                "custom": true,
                "id": "tracingservices.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "tracingservices.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TracingService",
                            "listKind": "TracingServiceList",
                            "plural": "tracingservices",
                            "singular": "tracingservice"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TracingServiceSpec defines the desired state of TracingService",
                                                "properties": {
                                                    "config": {
                                                        "properties": {
                                                            "access_token_file": {
                                                                "type": "string"
                                                            },
                                                            "collector_cluster": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint_version": {
                                                                "enum": [
                                                                    "HTTP_JSON_V1",
                                                                    "HTTP_JSON",
                                                                    "HTTP_PROTO"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "collector_hostname": {
                                                                "type": "string"
                                                            },
                                                            "service_name": {
                                                                "type": "string"
                                                            },
                                                            "shared_span_context": {
                                                                "type": "boolean"
                                                            },
                                                            "trace_id_128bit": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "lightstep",
                                                            "zipkin",
                                                            "datadog"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "sampling": {
                                                        "properties": {
                                                            "client": {
                                                                "type": "integer"
                                                            },
                                                            "overall": {
                                                                "type": "integer"
                                                            },
                                                            "random": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "tag_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "driver",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TracingServiceSpec defines the desired state of TracingService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "config": {
                                                        "properties": {
                                                            "access_token_file": {
                                                                "type": "string"
                                                            },
                                                            "collector_cluster": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint_version": {
                                                                "enum": [
                                                                    "HTTP_JSON_V1",
                                                                    "HTTP_JSON",
                                                                    "HTTP_PROTO"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "collector_hostname": {
                                                                "type": "string"
                                                            },
                                                            "service_name": {
                                                                "type": "string"
                                                            },
                                                            "shared_span_context": {
                                                                "type": "boolean"
                                                            },
                                                            "trace_id_128bit": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "lightstep",
                                                            "zipkin",
                                                            "datadog"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "sampling": {
                                                        "properties": {
                                                            "client": {
                                                                "type": "integer"
                                                            },
                                                            "overall": {
                                                                "type": "integer"
                                                            },
                                                            "random": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "tag_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "driver",
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "tracingservices.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "TracingService",
                                "listKind": "TracingServiceList",
                                "plural": "tracingservices",
                                "singular": "tracingservice"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TracingService is the Schema for the tracingservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TracingServiceSpec defines the desired state of TracingService",
                                                    "properties": {
                                                        "config": {
                                                            "properties": {
                                                                "access_token_file": {
                                                                    "type": "string"
                                                                },
                                                                "collector_cluster": {
                                                                    "type": "string"
                                                                },
                                                                "collector_endpoint": {
                                                                    "type": "string"
                                                                },
                                                                "collector_endpoint_version": {
                                                                    "enum": [
                                                                        "HTTP_JSON_V1",
                                                                        "HTTP_JSON",
                                                                        "HTTP_PROTO"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "collector_hostname": {
                                                                    "type": "string"
                                                                },
                                                                "service_name": {
                                                                    "type": "string"
                                                                },
                                                                "shared_span_context": {
                                                                    "type": "boolean"
                                                                },
                                                                "trace_id_128bit": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "driver": {
                                                            "enum": [
                                                                "lightstep",
                                                                "zipkin",
                                                                "datadog"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "sampling": {
                                                            "properties": {
                                                                "client": {
                                                                    "type": "integer"
                                                                },
                                                                "overall": {
                                                                    "type": "integer"
                                                                },
                                                                "random": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "tag_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "driver",
                                                        "service"
                                                    ],
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TracingService is the Schema for the tracingservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TracingServiceSpec defines the desired state of TracingService",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "config": {
                                                            "properties": {
                                                                "access_token_file": {
                                                                    "type": "string"
                                                                },
                                                                "collector_cluster": {
                                                                    "type": "string"
                                                                },
                                                                "collector_endpoint": {
                                                                    "type": "string"
                                                                },
                                                                "collector_endpoint_version": {
                                                                    "enum": [
                                                                        "HTTP_JSON_V1",
                                                                        "HTTP_JSON",
                                                                        "HTTP_PROTO"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "collector_hostname": {
                                                                    "type": "string"
                                                                },
                                                                "service_name": {
                                                                    "type": "string"
                                                                },
                                                                "shared_span_context": {
                                                                    "type": "boolean"
                                                                },
                                                                "trace_id_128bit": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "driver": {
                                                            "enum": [
                                                                "lightstep",
                                                                "zipkin",
                                                                "datadog"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "sampling": {
                                                            "properties": {
                                                                "client": {
                                                                    "type": "integer"
                                                                },
                                                                "overall": {
                                                                    "type": "integer"
                                                                },
                                                                "random": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        },
                                                        "tag_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "required": [
                                                        "driver",
                                                        "service"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TracingService is the Schema for the tracingservices API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"tracingservices.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"TracingService\",\"listKind\":\"TracingServiceList\",\"plural\":\"tracingservices\",\"singular\":\"tracingservice\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TracingService is the Schema for the tracingservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TracingServiceSpec defines the desired state of TracingService\",\"properties\":{\"config\":{\"properties\":{\"access_token_file\":{\"type\":\"string\"},\"collector_cluster\":{\"type\":\"string\"},\"collector_endpoint\":{\"type\":\"string\"},\"collector_endpoint_version\":{\"enum\":[\"HTTP_JSON_V1\",\"HTTP_JSON\",\"HTTP_PROTO\"],\"type\":\"string\"},\"collector_hostname\":{\"type\":\"string\"},\"service_name\":{\"type\":\"string\"},\"shared_span_context\":{\"type\":\"boolean\"},\"trace_id_128bit\":{\"type\":\"boolean\"}},\"type\":\"object\"},\"driver\":{\"enum\":[\"lightstep\",\"zipkin\",\"datadog\"],\"type\":\"string\"},\"sampling\":{\"properties\":{\"client\":{\"type\":\"integer\"},\"overall\":{\"type\":\"integer\"},\"random\":{\"type\":\"integer\"}},\"type\":\"object\"},\"service\":{\"type\":\"string\"},\"tag_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"v3StatsName\":{\"type\":\"string\"}},\"required\":[\"driver\",\"service\"],\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TracingService is the Schema for the tracingservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TracingServiceSpec defines the desired state of TracingService\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"config\":{\"properties\":{\"access_token_file\":{\"type\":\"string\"},\"collector_cluster\":{\"type\":\"string\"},\"collector_endpoint\":{\"type\":\"string\"},\"collector_endpoint_version\":{\"enum\":[\"HTTP_JSON_V1\",\"HTTP_JSON\",\"HTTP_PROTO\"],\"type\":\"string\"},\"collector_hostname\":{\"type\":\"string\"},\"service_name\":{\"type\":\"string\"},\"shared_span_context\":{\"type\":\"boolean\"},\"trace_id_128bit\":{\"type\":\"boolean\"}},\"type\":\"object\"},\"driver\":{\"enum\":[\"lightstep\",\"zipkin\",\"datadog\"],\"type\":\"string\"},\"sampling\":{\"properties\":{\"client\":{\"type\":\"integer\"},\"overall\":{\"type\":\"integer\"},\"random\":{\"type\":\"integer\"}},\"type\":\"object\"},\"service\":{\"type\":\"string\"},\"stats_name\":{\"type\":\"string\"},\"tag_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"driver\",\"service\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TracingService is the Schema for the tracingservices API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:33:08Z",
                        "generation": 2,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:08Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:08Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:conversion": {
                                            "f:webhook": {
                                                "f:clientConfig": {
                                                    "f:caBundle": {},
                                                    "f:service": {
                                                        "f:path": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "apiext",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:11Z"
                            }
                        ],
                        "name": "tracingservices.getambassador.io",
                        "resourceVersion": "14997",
                        "uid": "095f2250-8181-4769-9c1a-f18d90df0946"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZJRENDQXdpZ0F3SUJBZ0lSQUwrTWhSTkZpYmV0ampjLzlHZDZJMUl3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUI0WERUSXlNRE15TWpBME16TXhNRm9YRFRJegpNRE15TWpBME16TXhNRm93R2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUlJQ0lqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBbVFTWThHM2VEZkxYSjcyelp5a0tSVXZjeVlRME41T1UKeTVMaHZGd043ank5SFM2U0xPbGE1Q3NZYWpQdHFMbnhzSmdwazhFLzF3bmtCakJNUEFKbitCN2RQZmFqNFlnagoweW45Z2hXa1pyMFFBcWtHQm9OWnltRjc5OXN0eHkrSXRCVVhSWEtDckNBbDNCTmxJb2lqQUM5OEJTMEloSFQ4CjRkVmxqQ01sOTZjOVhudkdBdzU3WlY3L2gvZXJGMHlBWERLTVk4dVZ0dXdnYlJoUVJjVlNrSWhiMUpBdHlGUWMKVVA3QkFDUTltbFZSWUZYQUE2SWFBVUdmcTMyZ2ViVDN0YnZlN044MDFudm82aWp3Qm52REN0ZmluNXZ1OWRtbgpOMmZzV1duNVk2SWVKRHlzaWNDL1Q3Q044ekUzNWFUK1NZZk9TVGJiUU9McWF4Q3lWODdaV0lOM215MW5OU0lYClFBUC9jclhWTHFsNWd6bDNUa1BwNGV1MGdBR3BUSW14ZTIyWWtBUWpZUlZSWENjZ2JYZCtjdVlDUG5sK200ZXQKTXh2WDRnMDhZYWRlY3plNUhlL1dsb2k1R2xMMHJHVEFIOUFPdFlmWFEyMXJ6MVJ6SGtqbGV3azVhL1hRUjIzdgpCVnJTZEErMi9XVkJLZEV1Tmc4RFN2UXMwV25tVmx3SEhYVEJrYnh5S2lrd2NTRnY1SGdqbTZMUjFTU01aNFVmCjV0MFJ1ejc1ZzZOMUd3SzhmdmhlUUtORmJmV0s1cWVTbHFicWJKT0gxMEFsR2l1UjQ3a29vbkt2N0ZqSXl0WE8KUVpiaDBSWHE2ekFIZGROUVpFZVFNb1IxVnVRWFZjRk9sVVZUbmpRS3FVNitxN2EvMkJ4bkxPTlJVWnYvYUFYMQpLbUlCZGVpeG8vRUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLRU1CMEdBMVVkSlFRV01CUUdDQ3NHCkFRVUZCd01DQmdnckJnRUZCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRSnhNZkMKQ0VJeDU0V3FYNDFycjVIb2IrL3Y0akFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBRlB6cVVoazNXbnNzTUIzdwp3WWlWRVl4amZFcE9qNWtla3lXODhTd2ViRVBuYm03UHp1QXQyelhpQUN4MzlvM01PYy9KSmxCSWQvUSsvYmRICmtEK05YdUVxQVh4Qk9yaVoyaEpVVVBUSGtZS0dzWXNtZzN2LzIvcVpUeVVnKzVXZWxDaWRJMmRWZHZUWGtYK1YKRis3ZmVDeWNqbUozNUkvek42ZDdZOXd1TklMRDVrS2FhZXdBY0dLbVdqb3g3Q0pkb25Od05Xc3dmYTY0bFBlbApQYm8vZnpJZzQ2aUY4MGhualltVWQzUStDWTRodXBiV3VMUkZ1Z3ZDd1B3MWlTYThJb2s0YjhCa0xaTDBIZXpTCjJSZ2JlcVZRRHFOMWZaOERYVlVwM3dlem1GVk5IOUZLUGZmTTFlNXMyWjBkVHdDZ3pKRjUzcFJ4N0VWc2pITVAKZUN6YXROcDViZUJnN0E0QjFLRFdiVmpjNkdKR1RXb1FoQ2NZTUlWMXd1RWh4US9QMlo0OXE5WDBKK00rdy9zSwpNWVZhLzVTbUxTK0RHM0dleUQvMnd2T25MR1FZT1RtMzIvUmdDc1lMNG9RSURTaUpiQnQrcVlva0t6TUdGMytQCjh4UDI1cFBzWHFxYzZKeW1aYTRINTVDOWkzNHl0dEcyb0dQYTdRMVZhaTBUQTFRTTFaNUdFUVFNY3o2RHZ1Z2MKYXpObHZacEROaXVrT3hJek50M1BkUjFzaUtNWnY5Y1o3MC9oTFVxRWl2OWxuN3VheWZwREV3c09EckxRSjBhSQozK1EzUnBjUnZXbjg5N3ZGRytkcTRvcUFSSU9zWEF4TEdZdWp1NWV3U1BDNUQzQXhSZ2xXU1NaaHhBYmJuK2Z0CjBBQ3RGV0Ntc1IvNkY0Nnhjakt6S29wUG51az0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "path": "/webhooks/crd-convert",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TracingService",
                            "listKind": "TracingServiceList",
                            "plural": "tracingservices",
                            "singular": "tracingservice"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TracingServiceSpec defines the desired state of TracingService",
                                                "properties": {
                                                    "config": {
                                                        "properties": {
                                                            "access_token_file": {
                                                                "type": "string"
                                                            },
                                                            "collector_cluster": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint_version": {
                                                                "enum": [
                                                                    "HTTP_JSON_V1",
                                                                    "HTTP_JSON",
                                                                    "HTTP_PROTO"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "collector_hostname": {
                                                                "type": "string"
                                                            },
                                                            "service_name": {
                                                                "type": "string"
                                                            },
                                                            "shared_span_context": {
                                                                "type": "boolean"
                                                            },
                                                            "trace_id_128bit": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "lightstep",
                                                            "zipkin",
                                                            "datadog"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "sampling": {
                                                        "properties": {
                                                            "client": {
                                                                "type": "integer"
                                                            },
                                                            "overall": {
                                                                "type": "integer"
                                                            },
                                                            "random": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "tag_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "driver",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TracingServiceSpec defines the desired state of TracingService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "config": {
                                                        "properties": {
                                                            "access_token_file": {
                                                                "type": "string"
                                                            },
                                                            "collector_cluster": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint": {
                                                                "type": "string"
                                                            },
                                                            "collector_endpoint_version": {
                                                                "enum": [
                                                                    "HTTP_JSON_V1",
                                                                    "HTTP_JSON",
                                                                    "HTTP_PROTO"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "collector_hostname": {
                                                                "type": "string"
                                                            },
                                                            "service_name": {
                                                                "type": "string"
                                                            },
                                                            "shared_span_context": {
                                                                "type": "boolean"
                                                            },
                                                            "trace_id_128bit": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "lightstep",
                                                            "zipkin",
                                                            "datadog"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "sampling": {
                                                        "properties": {
                                                            "client": {
                                                                "type": "integer"
                                                            },
                                                            "overall": {
                                                                "type": "integer"
                                                            },
                                                            "random": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "tag_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "driver",
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TracingService is the Schema for the tracingservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TracingService",
                            "listKind": "TracingServiceList",
                            "plural": "tracingservices",
                            "singular": "tracingservice"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-03-22T04:33:08Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-03-22T04:33:08Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::emissary-apiext",
                "custom": true,
                "id": "emissary-apiext",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "apiextensions.k8s.io"
                            ],
                            "resources": [
                                "customresourcedefinitions"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apiextensions.k8s.io"
                            ],
                            "resourceNames": [
                                "authservices.getambassador.io",
                                "consulresolvers.getambassador.io",
                                "devportals.getambassador.io",
                                "hosts.getambassador.io",
                                "kubernetesendpointresolvers.getambassador.io",
                                "kubernetesserviceresolvers.getambassador.io",
                                "listeners.getambassador.io",
                                "logservices.getambassador.io",
                                "mappings.getambassador.io",
                                "modules.getambassador.io",
                                "ratelimitservices.getambassador.io",
                                "tcpmappings.getambassador.io",
                                "tlscontexts.getambassador.io",
                                "tracingservices.getambassador.io"
                            ],
                            "resources": [
                                "customresourcedefinitions"
                            ],
                            "verbs": [
                                "update"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    "apiextensions.k8s.io"
                                ],
                                "resources": [
                                    "customresourcedefinitions"
                                ],
                                "verbs": [
                                    "list",
                                    "watch"
                                ]
                            },
                            {
                                "apiGroups": [
                                    "apiextensions.k8s.io"
                                ],
                                "resourceNames": [
                                    "authservices.getambassador.io",
                                    "consulresolvers.getambassador.io",
                                    "devportals.getambassador.io",
                                    "hosts.getambassador.io",
                                    "kubernetesendpointresolvers.getambassador.io",
                                    "kubernetesserviceresolvers.getambassador.io",
                                    "listeners.getambassador.io",
                                    "logservices.getambassador.io",
                                    "mappings.getambassador.io",
                                    "modules.getambassador.io",
                                    "ratelimitservices.getambassador.io",
                                    "tcpmappings.getambassador.io",
                                    "tlscontexts.getambassador.io",
                                    "tracingservices.getambassador.io"
                                ],
                                "resources": [
                                    "customresourcedefinitions"
                                ],
                                "verbs": [
                                    "update"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\"},\"rules\":[{\"apiGroups\":[\"apiextensions.k8s.io\"],\"resources\":[\"customresourcedefinitions\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"apiextensions.k8s.io\"],\"resourceNames\":[\"authservices.getambassador.io\",\"consulresolvers.getambassador.io\",\"devportals.getambassador.io\",\"hosts.getambassador.io\",\"kubernetesendpointresolvers.getambassador.io\",\"kubernetesserviceresolvers.getambassador.io\",\"listeners.getambassador.io\",\"logservices.getambassador.io\",\"mappings.getambassador.io\",\"modules.getambassador.io\",\"ratelimitservices.getambassador.io\",\"tcpmappings.getambassador.io\",\"tlscontexts.getambassador.io\",\"tracingservices.getambassador.io\"],\"resources\":[\"customresourcedefinitions\"],\"verbs\":[\"update\"]}]}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:33:09Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:09Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "resourceVersion": "14954",
                        "uid": "a0906cc9-e6d0-468c-b64d-c0f76965759d"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                "apiextensions.k8s.io"
                            ],
                            "resources": [
                                "customresourcedefinitions"
                            ],
                            "verbs": [
                                "list",
                                "watch"
                            ]
                        },
                        {
                            "apiGroups": [
                                "apiextensions.k8s.io"
                            ],
                            "resourceNames": [
                                "authservices.getambassador.io",
                                "consulresolvers.getambassador.io",
                                "devportals.getambassador.io",
                                "hosts.getambassador.io",
                                "kubernetesendpointresolvers.getambassador.io",
                                "kubernetesserviceresolvers.getambassador.io",
                                "listeners.getambassador.io",
                                "logservices.getambassador.io",
                                "mappings.getambassador.io",
                                "modules.getambassador.io",
                                "ratelimitservices.getambassador.io",
                                "tcpmappings.getambassador.io",
                                "tlscontexts.getambassador.io",
                                "tracingservices.getambassador.io"
                            ],
                            "resources": [
                                "customresourcedefinitions"
                            ],
                            "verbs": [
                                "update"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::emissary-apiext",
                "custom": true,
                "id": "emissary-apiext",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "emissary-apiext"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "emissary-apiext"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "emissary-apiext",
                                "namespace": "emissary-system"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"emissary-apiext\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}]}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:33:07Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:roleRef": {
                                        "f:apiGroup": {},
                                        "f:kind": {},
                                        "f:name": {}
                                    },
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:07Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "resourceVersion": "14884",
                        "uid": "43e1d185-d264-48a2-992f-b31fb241b606"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "emissary-apiext"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::ratelimitservices.getambassador.io",
                "custom": true,
                "id": "ratelimitservices.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "ratelimitservices.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "RateLimitService",
                            "listKind": "RateLimitServiceList",
                            "plural": "ratelimitservices",
                            "singular": "ratelimitservice"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                "properties": {
                                                    "domain": {
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "Common to all Ambassador objects.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "domain": {
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "ratelimitservices.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "RateLimitService",
                                "listKind": "RateLimitServiceList",
                                "plural": "ratelimitservices",
                                "singular": "ratelimitservice"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "RateLimitService is the Schema for the ratelimitservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                    "properties": {
                                                        "domain": {
                                                            "type": "string"
                                                        },
                                                        "protocol_version": {
                                                            "enum": [
                                                                "v2",
                                                                "v3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "timeout_ms": {
                                                            "type": "integer"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "service"
                                                    ],
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "RateLimitService is the Schema for the ratelimitservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "Common to all Ambassador objects.",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "domain": {
                                                            "type": "string"
                                                        },
                                                        "protocol_version": {
                                                            "enum": [
                                                                "v2",
                                                                "v3"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        },
                                                        "timeout_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "tls": {
                                                            "type": "string"
                                                        },
                                                        "v2ExplicitTLS": {
                                                            "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                            "properties": {
                                                                "serviceScheme": {
                                                                    "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                    "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                    "type": "string"
                                                                },
                                                                "tls": {
                                                                    "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                    "enum": [
                                                                        "",
                                                                        "null",
                                                                        "bool:true",
                                                                        "bool:false",
                                                                        "string"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "required": [
                                                        "service"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "RateLimitService is the Schema for the ratelimitservices API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"ratelimitservices.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"RateLimitService\",\"listKind\":\"RateLimitServiceList\",\"plural\":\"ratelimitservices\",\"singular\":\"ratelimitservice\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"RateLimitService is the Schema for the ratelimitservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"RateLimitServiceSpec defines the desired state of RateLimitService\",\"properties\":{\"domain\":{\"type\":\"string\"},\"protocol_version\":{\"enum\":[\"v2\",\"v3\"],\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"timeout_ms\":{\"type\":\"integer\"},\"v3StatsName\":{\"type\":\"string\"}},\"required\":[\"service\"],\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"RateLimitService is the Schema for the ratelimitservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"RateLimitServiceSpec defines the desired state of RateLimitService\",\"properties\":{\"ambassador_id\":{\"description\":\"Common to all Ambassador objects.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"domain\":{\"type\":\"string\"},\"protocol_version\":{\"enum\":[\"v2\",\"v3\"],\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"stats_name\":{\"type\":\"string\"},\"timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"tls\":{\"type\":\"string\"},\"v2ExplicitTLS\":{\"description\":\"V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.\",\"properties\":{\"serviceScheme\":{\"description\":\"ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \\n Acceptable values are \\\"http://\\\" (case-insensitive), \\\"https://\\\" (case-insensitive), or \\\"\\\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.\",\"pattern\":\"^([hH][tT][tT][pP][sS]?://)?$\",\"type\":\"string\"},\"tls\":{\"description\":\"TLS controls whether and how to represent the \\\"tls\\\" field when its value could be implied by the \\\"service\\\" field.  In v2, there were a lot of different ways to spell an \\\"empty\\\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \\n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \\\"\\\"           | omit the field                        | defer to service (no TLSContext)   |  | \\\"null\\\"       | store an explicit \\\"null\\\" in the field | defer to service (no TLSContext)   |  | \\\"string\\\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \\\"bool:false\\\" | store a Boolean \\\"false\\\" in the field  | defer to service (no TLSContext)   |  | \\\"bool:true\\\"  | store a Boolean \\\"true\\\" in the field   | originate TLS (no TLSContext)      | \\n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \\\"bool:true\\\" if TLS is not to be originated), then this field is ignored.\",\"enum\":[\"\",\"null\",\"bool:true\",\"bool:false\",\"string\"],\"type\":\"string\"}},\"type\":\"object\"}},\"required\":[\"service\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"RateLimitService is the Schema for the ratelimitservices API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:33:08Z",
                        "generation": 2,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:08Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:08Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:conversion": {
                                            "f:webhook": {
                                                "f:clientConfig": {
                                                    "f:caBundle": {},
                                                    "f:service": {
                                                        "f:path": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "apiext",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:11Z"
                            }
                        ],
                        "name": "ratelimitservices.getambassador.io",
                        "resourceVersion": "14994",
                        "uid": "509b13c3-66f8-4a81-b2b8-3ae04a8f8a33"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZJRENDQXdpZ0F3SUJBZ0lSQUwrTWhSTkZpYmV0ampjLzlHZDZJMUl3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUI0WERUSXlNRE15TWpBME16TXhNRm9YRFRJegpNRE15TWpBME16TXhNRm93R2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUlJQ0lqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBbVFTWThHM2VEZkxYSjcyelp5a0tSVXZjeVlRME41T1UKeTVMaHZGd043ank5SFM2U0xPbGE1Q3NZYWpQdHFMbnhzSmdwazhFLzF3bmtCakJNUEFKbitCN2RQZmFqNFlnagoweW45Z2hXa1pyMFFBcWtHQm9OWnltRjc5OXN0eHkrSXRCVVhSWEtDckNBbDNCTmxJb2lqQUM5OEJTMEloSFQ4CjRkVmxqQ01sOTZjOVhudkdBdzU3WlY3L2gvZXJGMHlBWERLTVk4dVZ0dXdnYlJoUVJjVlNrSWhiMUpBdHlGUWMKVVA3QkFDUTltbFZSWUZYQUE2SWFBVUdmcTMyZ2ViVDN0YnZlN044MDFudm82aWp3Qm52REN0ZmluNXZ1OWRtbgpOMmZzV1duNVk2SWVKRHlzaWNDL1Q3Q044ekUzNWFUK1NZZk9TVGJiUU9McWF4Q3lWODdaV0lOM215MW5OU0lYClFBUC9jclhWTHFsNWd6bDNUa1BwNGV1MGdBR3BUSW14ZTIyWWtBUWpZUlZSWENjZ2JYZCtjdVlDUG5sK200ZXQKTXh2WDRnMDhZYWRlY3plNUhlL1dsb2k1R2xMMHJHVEFIOUFPdFlmWFEyMXJ6MVJ6SGtqbGV3azVhL1hRUjIzdgpCVnJTZEErMi9XVkJLZEV1Tmc4RFN2UXMwV25tVmx3SEhYVEJrYnh5S2lrd2NTRnY1SGdqbTZMUjFTU01aNFVmCjV0MFJ1ejc1ZzZOMUd3SzhmdmhlUUtORmJmV0s1cWVTbHFicWJKT0gxMEFsR2l1UjQ3a29vbkt2N0ZqSXl0WE8KUVpiaDBSWHE2ekFIZGROUVpFZVFNb1IxVnVRWFZjRk9sVVZUbmpRS3FVNitxN2EvMkJ4bkxPTlJVWnYvYUFYMQpLbUlCZGVpeG8vRUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLRU1CMEdBMVVkSlFRV01CUUdDQ3NHCkFRVUZCd01DQmdnckJnRUZCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRSnhNZkMKQ0VJeDU0V3FYNDFycjVIb2IrL3Y0akFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBRlB6cVVoazNXbnNzTUIzdwp3WWlWRVl4amZFcE9qNWtla3lXODhTd2ViRVBuYm03UHp1QXQyelhpQUN4MzlvM01PYy9KSmxCSWQvUSsvYmRICmtEK05YdUVxQVh4Qk9yaVoyaEpVVVBUSGtZS0dzWXNtZzN2LzIvcVpUeVVnKzVXZWxDaWRJMmRWZHZUWGtYK1YKRis3ZmVDeWNqbUozNUkvek42ZDdZOXd1TklMRDVrS2FhZXdBY0dLbVdqb3g3Q0pkb25Od05Xc3dmYTY0bFBlbApQYm8vZnpJZzQ2aUY4MGhualltVWQzUStDWTRodXBiV3VMUkZ1Z3ZDd1B3MWlTYThJb2s0YjhCa0xaTDBIZXpTCjJSZ2JlcVZRRHFOMWZaOERYVlVwM3dlem1GVk5IOUZLUGZmTTFlNXMyWjBkVHdDZ3pKRjUzcFJ4N0VWc2pITVAKZUN6YXROcDViZUJnN0E0QjFLRFdiVmpjNkdKR1RXb1FoQ2NZTUlWMXd1RWh4US9QMlo0OXE5WDBKK00rdy9zSwpNWVZhLzVTbUxTK0RHM0dleUQvMnd2T25MR1FZT1RtMzIvUmdDc1lMNG9RSURTaUpiQnQrcVlva0t6TUdGMytQCjh4UDI1cFBzWHFxYzZKeW1aYTRINTVDOWkzNHl0dEcyb0dQYTdRMVZhaTBUQTFRTTFaNUdFUVFNY3o2RHZ1Z2MKYXpObHZacEROaXVrT3hJek50M1BkUjFzaUtNWnY5Y1o3MC9oTFVxRWl2OWxuN3VheWZwREV3c09EckxRSjBhSQozK1EzUnBjUnZXbjg5N3ZGRytkcTRvcUFSSU9zWEF4TEdZdWp1NWV3U1BDNUQzQXhSZ2xXU1NaaHhBYmJuK2Z0CjBBQ3RGV0Ntc1IvNkY0Nnhjakt6S29wUG51az0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "path": "/webhooks/crd-convert",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "RateLimitService",
                            "listKind": "RateLimitServiceList",
                            "plural": "ratelimitservices",
                            "singular": "ratelimitservice"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                "properties": {
                                                    "domain": {
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "RateLimitServiceSpec defines the desired state of RateLimitService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "Common to all Ambassador objects.",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "domain": {
                                                        "type": "string"
                                                    },
                                                    "protocol_version": {
                                                        "enum": [
                                                            "v2",
                                                            "v3"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "required": [
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "RateLimitService is the Schema for the ratelimitservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "RateLimitService",
                            "listKind": "RateLimitServiceList",
                            "plural": "ratelimitservices",
                            "singular": "ratelimitservice"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-03-22T04:33:08Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-03-22T04:33:08Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:Role::emissary-system/emissary-apiext",
                "custom": true,
                "id": "emissary-system/emissary-apiext",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:Role",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext",
                        "namespace": "emissary-system"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "emissary-ingress-webhook-ca"
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "get",
                                "update"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "Role",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        },
                        "rules": [
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "secrets"
                                ],
                                "verbs": [
                                    "create"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resourceNames": [
                                    "emissary-ingress-webhook-ca"
                                ],
                                "resources": [
                                    "secrets"
                                ],
                                "verbs": [
                                    "get",
                                    "update"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "Role",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"secrets\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"\"],\"resourceNames\":[\"emissary-ingress-webhook-ca\"],\"resources\":[\"secrets\"],\"verbs\":[\"get\",\"update\"]}]}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:33:08Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:08Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "namespace": "emissary-system",
                        "resourceVersion": "14911",
                        "uid": "b1d3e880-1304-411d-9388-ca121309b05a"
                    },
                    "rules": [
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "create"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resourceNames": [
                                "emissary-ingress-webhook-ca"
                            ],
                            "resources": [
                                "secrets"
                            ],
                            "verbs": [
                                "get",
                                "update"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::modules.getambassador.io",
                "custom": true,
                "id": "modules.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "modules.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Module",
                            "listKind": "ModuleList",
                            "plural": "modules",
                            "singular": "module"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "properties": {
                                                    "config": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "config": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    }
                                                },
                                                "required": [
                                                    "config"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\".",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "modules.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "Module",
                                "listKind": "ModuleList",
                                "plural": "modules",
                                "singular": "module"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "properties": {
                                                        "config": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "config": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        }
                                                    },
                                                    "required": [
                                                        "config"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\".",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"modules.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"Module\",\"listKind\":\"ModuleList\",\"plural\":\"modules\",\"singular\":\"module\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \\\"ambassador\\\" or \\\"tls\\\". \\n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"properties\":{\"config\":{\"description\":\"UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \\\"ambassador\\\" or \\\"tls\\\". \\n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"config\":{\"description\":\"UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"required\":[\"config\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \\\"ambassador\\\" or \\\"tls\\\".\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:32:57Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-03-22T04:32:57Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:32:57Z"
                            }
                        ],
                        "name": "modules.getambassador.io",
                        "resourceVersion": "14846",
                        "uid": "b81d2678-6cc2-4f6a-8887-b79ecb88c025"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Module",
                            "listKind": "ModuleList",
                            "plural": "modules",
                            "singular": "module"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "properties": {
                                                    "config": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\". \n https://www.getambassador.io/docs/edge-stack/latest/topics/running/ambassador/#the-ambassador-module https://www.getambassador.io/docs/edge-stack/latest/topics/running/tls/#tls-module-deprecated",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "config": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    }
                                                },
                                                "required": [
                                                    "config"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "A Module defines system-wide configuration.  The type of module is controlled by the .metadata.name; valid names are \"ambassador\" or \"tls\".",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Module",
                            "listKind": "ModuleList",
                            "plural": "modules",
                            "singular": "module"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-03-22T04:32:57Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-03-22T04:32:57Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:RoleBinding::emissary-system/emissary-apiext",
                "custom": true,
                "id": "emissary-system/emissary-apiext",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:RoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext",
                        "namespace": "emissary-system"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "emissary-apiext"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "RoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "Role",
                            "name": "emissary-apiext"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "emissary-apiext",
                                "namespace": "emissary-system"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "RoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"Role\",\"name\":\"emissary-apiext\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}]}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:33:07Z",
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:roleRef": {
                                        "f:apiGroup": {},
                                        "f:kind": {},
                                        "f:name": {}
                                    },
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:07Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "namespace": "emissary-system",
                        "resourceVersion": "14883",
                        "uid": "0f397428-3702-4eda-ad4b-1e8745f2d0e7"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "Role",
                        "name": "emissary-apiext"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::consulresolvers.getambassador.io",
                "custom": true,
                "id": "consulresolvers.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "consulresolvers.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "ConsulResolver",
                            "listKind": "ConsulResolverList",
                            "plural": "consulresolvers",
                            "singular": "consulresolver"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "datacenter": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "datacenter": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "consulresolvers.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "ConsulResolver",
                                "listKind": "ConsulResolverList",
                                "plural": "consulresolvers",
                                "singular": "consulresolver"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "datacenter": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "datacenter": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"consulresolvers.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"ConsulResolver\",\"listKind\":\"ConsulResolverList\",\"plural\":\"consulresolvers\",\"singular\":\"consulresolver\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"ConsulResolver is the Schema for the ConsulResolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.\",\"properties\":{\"address\":{\"type\":\"string\"},\"datacenter\":{\"type\":\"string\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"ConsulResolver is the Schema for the ConsulResolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.\",\"properties\":{\"address\":{\"type\":\"string\"},\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"datacenter\":{\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"ConsulResolver is the Schema for the ConsulResolver API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:33:08Z",
                        "generation": 2,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:08Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:08Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:conversion": {
                                            "f:webhook": {
                                                "f:clientConfig": {
                                                    "f:caBundle": {},
                                                    "f:service": {
                                                        "f:path": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "apiext",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:10Z"
                            }
                        ],
                        "name": "consulresolvers.getambassador.io",
                        "resourceVersion": "14974",
                        "uid": "742f2b91-57a1-42a2-840d-c1a37c0c6441"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZJRENDQXdpZ0F3SUJBZ0lSQUwrTWhSTkZpYmV0ampjLzlHZDZJMUl3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUI0WERUSXlNRE15TWpBME16TXhNRm9YRFRJegpNRE15TWpBME16TXhNRm93R2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUlJQ0lqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBbVFTWThHM2VEZkxYSjcyelp5a0tSVXZjeVlRME41T1UKeTVMaHZGd043ank5SFM2U0xPbGE1Q3NZYWpQdHFMbnhzSmdwazhFLzF3bmtCakJNUEFKbitCN2RQZmFqNFlnagoweW45Z2hXa1pyMFFBcWtHQm9OWnltRjc5OXN0eHkrSXRCVVhSWEtDckNBbDNCTmxJb2lqQUM5OEJTMEloSFQ4CjRkVmxqQ01sOTZjOVhudkdBdzU3WlY3L2gvZXJGMHlBWERLTVk4dVZ0dXdnYlJoUVJjVlNrSWhiMUpBdHlGUWMKVVA3QkFDUTltbFZSWUZYQUE2SWFBVUdmcTMyZ2ViVDN0YnZlN044MDFudm82aWp3Qm52REN0ZmluNXZ1OWRtbgpOMmZzV1duNVk2SWVKRHlzaWNDL1Q3Q044ekUzNWFUK1NZZk9TVGJiUU9McWF4Q3lWODdaV0lOM215MW5OU0lYClFBUC9jclhWTHFsNWd6bDNUa1BwNGV1MGdBR3BUSW14ZTIyWWtBUWpZUlZSWENjZ2JYZCtjdVlDUG5sK200ZXQKTXh2WDRnMDhZYWRlY3plNUhlL1dsb2k1R2xMMHJHVEFIOUFPdFlmWFEyMXJ6MVJ6SGtqbGV3azVhL1hRUjIzdgpCVnJTZEErMi9XVkJLZEV1Tmc4RFN2UXMwV25tVmx3SEhYVEJrYnh5S2lrd2NTRnY1SGdqbTZMUjFTU01aNFVmCjV0MFJ1ejc1ZzZOMUd3SzhmdmhlUUtORmJmV0s1cWVTbHFicWJKT0gxMEFsR2l1UjQ3a29vbkt2N0ZqSXl0WE8KUVpiaDBSWHE2ekFIZGROUVpFZVFNb1IxVnVRWFZjRk9sVVZUbmpRS3FVNitxN2EvMkJ4bkxPTlJVWnYvYUFYMQpLbUlCZGVpeG8vRUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLRU1CMEdBMVVkSlFRV01CUUdDQ3NHCkFRVUZCd01DQmdnckJnRUZCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRSnhNZkMKQ0VJeDU0V3FYNDFycjVIb2IrL3Y0akFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBRlB6cVVoazNXbnNzTUIzdwp3WWlWRVl4amZFcE9qNWtla3lXODhTd2ViRVBuYm03UHp1QXQyelhpQUN4MzlvM01PYy9KSmxCSWQvUSsvYmRICmtEK05YdUVxQVh4Qk9yaVoyaEpVVVBUSGtZS0dzWXNtZzN2LzIvcVpUeVVnKzVXZWxDaWRJMmRWZHZUWGtYK1YKRis3ZmVDeWNqbUozNUkvek42ZDdZOXd1TklMRDVrS2FhZXdBY0dLbVdqb3g3Q0pkb25Od05Xc3dmYTY0bFBlbApQYm8vZnpJZzQ2aUY4MGhualltVWQzUStDWTRodXBiV3VMUkZ1Z3ZDd1B3MWlTYThJb2s0YjhCa0xaTDBIZXpTCjJSZ2JlcVZRRHFOMWZaOERYVlVwM3dlem1GVk5IOUZLUGZmTTFlNXMyWjBkVHdDZ3pKRjUzcFJ4N0VWc2pITVAKZUN6YXROcDViZUJnN0E0QjFLRFdiVmpjNkdKR1RXb1FoQ2NZTUlWMXd1RWh4US9QMlo0OXE5WDBKK00rdy9zSwpNWVZhLzVTbUxTK0RHM0dleUQvMnd2T25MR1FZT1RtMzIvUmdDc1lMNG9RSURTaUpiQnQrcVlva0t6TUdGMytQCjh4UDI1cFBzWHFxYzZKeW1aYTRINTVDOWkzNHl0dEcyb0dQYTdRMVZhaTBUQTFRTTFaNUdFUVFNY3o2RHZ1Z2MKYXpObHZacEROaXVrT3hJek50M1BkUjFzaUtNWnY5Y1o3MC9oTFVxRWl2OWxuN3VheWZwREV3c09EckxRSjBhSQozK1EzUnBjUnZXbjg5N3ZGRytkcTRvcUFSSU9zWEF4TEdZdWp1NWV3U1BDNUQzQXhSZ2xXU1NaaHhBYmJuK2Z0CjBBQ3RGV0Ntc1IvNkY0Nnhjakt6S29wUG51az0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "path": "/webhooks/crd-convert",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "ConsulResolver",
                            "listKind": "ConsulResolverList",
                            "plural": "consulresolvers",
                            "singular": "consulresolver"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "datacenter": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "ConsulResolver tells Ambassador to use Consul to resolve services. In addition to the AmbassadorID, it needs information about which Consul server and DC to use.",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "datacenter": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "ConsulResolver is the Schema for the ConsulResolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "ConsulResolver",
                            "listKind": "ConsulResolverList",
                            "plural": "consulresolvers",
                            "singular": "consulresolver"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-03-22T04:33:08Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-03-22T04:33:08Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apps/v1:Deployment::emissary-system/emissary-apiext",
                "custom": true,
                "id": "emissary-system/emissary-apiext",
                "type": "kubernetes:apps/v1:Deployment",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "emissary-apiext",
                        "namespace": "emissary-system"
                    },
                    "spec": {
                        "replicas": 3,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            }
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "app.kubernetes.io/instance": "emissary-apiext",
                                    "app.kubernetes.io/managed-by": "kubectl_apply_-f_emissary-apiext.yaml",
                                    "app.kubernetes.io/name": "emissary-apiext",
                                    "app.kubernetes.io/part-of": "emissary-apiext"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "apiext",
                                            "emissary-apiext"
                                        ],
                                        "image": "docker.io/emissaryingress/emissary:2.2.1",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/probes/live",
                                                "port": 8080,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 5,
                                            "periodSeconds": 3
                                        },
                                        "name": "emissary-apiext",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "name": "http"
                                            },
                                            {
                                                "containerPort": 8443,
                                                "name": "https"
                                            }
                                        ]
                                    }
                                ],
                                "serviceAccountName": "emissary-apiext"
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "emissary-apiext",
                            "namespace": "emissary-system"
                        },
                        "spec": {
                            "replicas": 3,
                            "selector": {
                                "matchLabels": {
                                    "app.kubernetes.io/instance": "emissary-apiext",
                                    "app.kubernetes.io/name": "emissary-apiext",
                                    "app.kubernetes.io/part-of": "emissary-apiext"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "app.kubernetes.io/instance": "emissary-apiext",
                                        "app.kubernetes.io/managed-by": "kubectl_apply_-f_emissary-apiext.yaml",
                                        "app.kubernetes.io/name": "emissary-apiext",
                                        "app.kubernetes.io/part-of": "emissary-apiext"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "command": [
                                                "apiext",
                                                "emissary-apiext"
                                            ],
                                            "image": "docker.io/emissaryingress/emissary:2.2.1",
                                            "imagePullPolicy": "IfNotPresent",
                                            "livenessProbe": {
                                                "failureThreshold": 3,
                                                "httpGet": {
                                                    "path": "/probes/live",
                                                    "port": 8080,
                                                    "scheme": "HTTP"
                                                },
                                                "initialDelaySeconds": 5,
                                                "periodSeconds": 3
                                            },
                                            "name": "emissary-apiext",
                                            "ports": [
                                                {
                                                    "containerPort": 8080,
                                                    "name": "http"
                                                },
                                                {
                                                    "containerPort": 8443,
                                                    "name": "https"
                                                }
                                            ]
                                        }
                                    ],
                                    "serviceAccountName": "emissary-apiext"
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "Deployment",
                    "metadata": {
                        "annotations": {
                            "deployment.kubernetes.io/revision": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"},\"spec\":{\"replicas\":3,\"selector\":{\"matchLabels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"}},\"template\":{\"metadata\":{\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"kubectl_apply_-f_emissary-apiext.yaml\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"}},\"spec\":{\"containers\":[{\"command\":[\"apiext\",\"emissary-apiext\"],\"image\":\"docker.io/emissaryingress/emissary:2.2.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/probes/live\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":5,\"periodSeconds\":3},\"name\":\"emissary-apiext\",\"ports\":[{\"containerPort\":8080,\"name\":\"http\"},{\"containerPort\":8443,\"name\":\"https\"}]}],\"serviceAccountName\":\"emissary-apiext\"}}}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:33:07Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:progressDeadlineSeconds": {},
                                        "f:replicas": {},
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:strategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        },
                                        "f:template": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    ".": {},
                                                    "f:app.kubernetes.io/instance": {},
                                                    "f:app.kubernetes.io/managed-by": {},
                                                    "f:app.kubernetes.io/name": {},
                                                    "f:app.kubernetes.io/part-of": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"emissary-apiext\"}": {
                                                        ".": {},
                                                        "f:command": {},
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:livenessProbe": {
                                                            ".": {},
                                                            "f:failureThreshold": {},
                                                            "f:httpGet": {
                                                                ".": {},
                                                                "f:path": {},
                                                                "f:port": {},
                                                                "f:scheme": {}
                                                            },
                                                            "f:initialDelaySeconds": {},
                                                            "f:periodSeconds": {},
                                                            "f:successThreshold": {},
                                                            "f:timeoutSeconds": {}
                                                        },
                                                        "f:name": {},
                                                        "f:ports": {
                                                            ".": {},
                                                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            },
                                                            "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                                ".": {},
                                                                "f:containerPort": {},
                                                                "f:name": {},
                                                                "f:protocol": {}
                                                            }
                                                        },
                                                        "f:resources": {},
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {}
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:07Z"
                            },
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:deployment.kubernetes.io/revision": {}
                                        }
                                    },
                                    "f:status": {
                                        "f:availableReplicas": {},
                                        "f:conditions": {
                                            ".": {},
                                            "k:{\"type\":\"Available\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"Progressing\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:lastUpdateTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        },
                                        "f:observedGeneration": {},
                                        "f:readyReplicas": {},
                                        "f:replicas": {},
                                        "f:updatedReplicas": {}
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:11Z"
                            }
                        ],
                        "name": "emissary-apiext",
                        "namespace": "emissary-system",
                        "resourceVersion": "14986",
                        "uid": "cf5398fe-8877-49d4-900e-80ec0d0e6815"
                    },
                    "spec": {
                        "progressDeadlineSeconds": 600,
                        "replicas": 3,
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            }
                        },
                        "strategy": {
                            "rollingUpdate": {
                                "maxSurge": "25%",
                                "maxUnavailable": "25%"
                            },
                            "type": "RollingUpdate"
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "app.kubernetes.io/instance": "emissary-apiext",
                                    "app.kubernetes.io/managed-by": "kubectl_apply_-f_emissary-apiext.yaml",
                                    "app.kubernetes.io/name": "emissary-apiext",
                                    "app.kubernetes.io/part-of": "emissary-apiext"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "command": [
                                            "apiext",
                                            "emissary-apiext"
                                        ],
                                        "image": "docker.io/emissaryingress/emissary:2.2.1",
                                        "imagePullPolicy": "IfNotPresent",
                                        "livenessProbe": {
                                            "failureThreshold": 3,
                                            "httpGet": {
                                                "path": "/probes/live",
                                                "port": 8080,
                                                "scheme": "HTTP"
                                            },
                                            "initialDelaySeconds": 5,
                                            "periodSeconds": 3,
                                            "successThreshold": 1,
                                            "timeoutSeconds": 1
                                        },
                                        "name": "emissary-apiext",
                                        "ports": [
                                            {
                                                "containerPort": 8080,
                                                "name": "http",
                                                "protocol": "TCP"
                                            },
                                            {
                                                "containerPort": 8443,
                                                "name": "https",
                                                "protocol": "TCP"
                                            }
                                        ],
                                        "resources": {},
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File"
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "emissary-apiext",
                                "serviceAccountName": "emissary-apiext",
                                "terminationGracePeriodSeconds": 30
                            }
                        }
                    },
                    "status": {
                        "availableReplicas": 3,
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-03-22T04:33:11Z",
                                "lastUpdateTime": "2022-03-22T04:33:11Z",
                                "message": "Deployment has minimum availability.",
                                "reason": "MinimumReplicasAvailable",
                                "status": "True",
                                "type": "Available"
                            },
                            {
                                "lastTransitionTime": "2022-03-22T04:33:07Z",
                                "lastUpdateTime": "2022-03-22T04:33:11Z",
                                "message": "ReplicaSet \"emissary-apiext-74b67c9fdc\" has successfully progressed.",
                                "reason": "NewReplicaSetAvailable",
                                "status": "True",
                                "type": "Progressing"
                            }
                        ],
                        "observedGeneration": 1,
                        "readyReplicas": 3,
                        "replicas": 3,
                        "updatedReplicas": 3
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::kubernetesendpointresolvers.getambassador.io",
                "custom": true,
                "id": "kubernetesendpointresolvers.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "kubernetesendpointresolvers.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesEndpointResolver",
                            "listKind": "KubernetesEndpointResolverList",
                            "plural": "kubernetesendpointresolvers",
                            "singular": "kubernetesendpointresolver"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "kubernetesendpointresolvers.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "KubernetesEndpointResolver",
                                "listKind": "KubernetesEndpointResolverList",
                                "plural": "kubernetesendpointresolvers",
                                "singular": "kubernetesendpointresolver"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"kubernetesendpointresolvers.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"KubernetesEndpointResolver\",\"listKind\":\"KubernetesEndpointResolverList\",\"plural\":\"kubernetesendpointresolvers\",\"singular\":\"kubernetesendpointresolver\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:33:07Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:07Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:07Z"
                            }
                        ],
                        "name": "kubernetesendpointresolvers.getambassador.io",
                        "resourceVersion": "14896",
                        "uid": "100ae959-17be-4269-a9a8-1b3d7db39a1b"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesEndpointResolver",
                            "listKind": "KubernetesEndpointResolverList",
                            "plural": "kubernetesendpointresolvers",
                            "singular": "kubernetesendpointresolver"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesEndpointResolver tells Ambassador to use Kubernetes Endpoints resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesEndpointResolver is the Schema for the kubernetesendpointresolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesEndpointResolver",
                            "listKind": "KubernetesEndpointResolverList",
                            "plural": "kubernetesendpointresolvers",
                            "singular": "kubernetesendpointresolver"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-03-22T04:33:07Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-03-22T04:33:07Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::kubernetesserviceresolvers.getambassador.io",
                "custom": true,
                "id": "kubernetesserviceresolvers.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "kubernetesserviceresolvers.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesServiceResolver",
                            "listKind": "KubernetesServiceResolverList",
                            "plural": "kubernetesserviceresolvers",
                            "singular": "kubernetesserviceresolver"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "kubernetesserviceresolvers.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "KubernetesServiceResolver",
                                "listKind": "KubernetesServiceResolverList",
                                "plural": "kubernetesserviceresolvers",
                                "singular": "kubernetesserviceresolver"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"kubernetesserviceresolvers.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"KubernetesServiceResolver\",\"listKind\":\"KubernetesServiceResolverList\",\"plural\":\"kubernetesserviceresolvers\",\"singular\":\"kubernetesserviceresolver\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:33:07Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:07Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:07Z"
                            }
                        ],
                        "name": "kubernetesserviceresolvers.getambassador.io",
                        "resourceVersion": "14888",
                        "uid": "acb03fca-834e-4d3d-bbaf-313bef6276cb"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesServiceResolver",
                            "listKind": "KubernetesServiceResolverList",
                            "plural": "kubernetesserviceresolvers",
                            "singular": "kubernetesserviceresolver"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "KubernetesServiceResolver tells Ambassador to use Kubernetes Service resources to resolve services. It actually has no spec other than the AmbassadorID.",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "KubernetesServiceResolver is the Schema for the kubernetesserviceresolver API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "KubernetesServiceResolver",
                            "listKind": "KubernetesServiceResolverList",
                            "plural": "kubernetesserviceresolvers",
                            "singular": "kubernetesserviceresolver"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-03-22T04:33:07Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-03-22T04:33:07Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::tcpmappings.getambassador.io",
                "custom": true,
                "id": "tcpmappings.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "tcpmappings.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TCPMapping",
                            "listKind": "TCPMappingList",
                            "plural": "tcpmappings",
                            "singular": "tcpmapping"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                        "type": "string"
                                                    },
                                                    "port": {
                                                        "description": "Port isn't a pointer because it's required.",
                                                        "type": "integer"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "port",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                        "type": "string"
                                                    },
                                                    "port": {
                                                        "description": "Port isn't a pointer because it's required.",
                                                        "type": "integer"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "port",
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "tcpmappings.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "TCPMapping",
                                "listKind": "TCPMappingList",
                                "plural": "tcpmappings",
                                "singular": "tcpmapping"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TCPMapping is the Schema for the tcpmappings API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "circuit_breakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "cluster_tag": {
                                                            "type": "string"
                                                        },
                                                        "enable_ipv4": {
                                                            "type": "boolean"
                                                        },
                                                        "enable_ipv6": {
                                                            "type": "boolean"
                                                        },
                                                        "host": {
                                                            "type": "string"
                                                        },
                                                        "idle_timeout_ms": {
                                                            "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                            "type": "string"
                                                        },
                                                        "port": {
                                                            "description": "Port isn't a pointer because it's required.",
                                                            "type": "integer"
                                                        },
                                                        "resolver": {
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        },
                                                        "weight": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "port",
                                                        "service"
                                                    ],
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TCPMapping is the Schema for the tcpmappings API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                    "properties": {
                                                        "address": {
                                                            "type": "string"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "circuit_breakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "cluster_tag": {
                                                            "type": "string"
                                                        },
                                                        "enable_ipv4": {
                                                            "type": "boolean"
                                                        },
                                                        "enable_ipv6": {
                                                            "type": "boolean"
                                                        },
                                                        "host": {
                                                            "type": "string"
                                                        },
                                                        "idle_timeout_ms": {
                                                            "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                            "type": "string"
                                                        },
                                                        "port": {
                                                            "description": "Port isn't a pointer because it's required.",
                                                            "type": "integer"
                                                        },
                                                        "resolver": {
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        },
                                                        "tls": {
                                                            "type": "string"
                                                        },
                                                        "v2ExplicitTLS": {
                                                            "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                            "properties": {
                                                                "serviceScheme": {
                                                                    "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                    "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                    "type": "string"
                                                                },
                                                                "tls": {
                                                                    "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                    "enum": [
                                                                        "",
                                                                        "null",
                                                                        "bool:true",
                                                                        "bool:false",
                                                                        "string"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "weight": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "port",
                                                        "service"
                                                    ],
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "TCPMapping is the Schema for the tcpmappings API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"tcpmappings.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"TCPMapping\",\"listKind\":\"TCPMappingList\",\"plural\":\"tcpmappings\",\"singular\":\"tcpmapping\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TCPMapping is the Schema for the tcpmappings API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TCPMappingSpec defines the desired state of TCPMapping\",\"properties\":{\"address\":{\"type\":\"string\"},\"circuit_breakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"cluster_tag\":{\"type\":\"string\"},\"enable_ipv4\":{\"type\":\"boolean\"},\"enable_ipv6\":{\"type\":\"boolean\"},\"host\":{\"type\":\"string\"},\"idle_timeout_ms\":{\"description\":\"FIXME(lukeshu): Surely this should be an 'int'?\",\"type\":\"string\"},\"port\":{\"description\":\"Port isn't a pointer because it's required.\",\"type\":\"integer\"},\"resolver\":{\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"v3StatsName\":{\"type\":\"string\"},\"weight\":{\"type\":\"integer\"}},\"required\":[\"port\",\"service\"],\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TCPMapping is the Schema for the tcpmappings API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"TCPMappingSpec defines the desired state of TCPMapping\",\"properties\":{\"address\":{\"type\":\"string\"},\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"circuit_breakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"cluster_tag\":{\"type\":\"string\"},\"enable_ipv4\":{\"type\":\"boolean\"},\"enable_ipv6\":{\"type\":\"boolean\"},\"host\":{\"type\":\"string\"},\"idle_timeout_ms\":{\"description\":\"FIXME(lukeshu): Surely this should be an 'int'?\",\"type\":\"string\"},\"port\":{\"description\":\"Port isn't a pointer because it's required.\",\"type\":\"integer\"},\"resolver\":{\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"stats_name\":{\"type\":\"string\"},\"tls\":{\"type\":\"string\"},\"v2ExplicitTLS\":{\"description\":\"V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.\",\"properties\":{\"serviceScheme\":{\"description\":\"ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \\n Acceptable values are \\\"http://\\\" (case-insensitive), \\\"https://\\\" (case-insensitive), or \\\"\\\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.\",\"pattern\":\"^([hH][tT][tT][pP][sS]?://)?$\",\"type\":\"string\"},\"tls\":{\"description\":\"TLS controls whether and how to represent the \\\"tls\\\" field when its value could be implied by the \\\"service\\\" field.  In v2, there were a lot of different ways to spell an \\\"empty\\\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \\n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \\\"\\\"           | omit the field                        | defer to service (no TLSContext)   |  | \\\"null\\\"       | store an explicit \\\"null\\\" in the field | defer to service (no TLSContext)   |  | \\\"string\\\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \\\"bool:false\\\" | store a Boolean \\\"false\\\" in the field  | defer to service (no TLSContext)   |  | \\\"bool:true\\\"  | store a Boolean \\\"true\\\" in the field   | originate TLS (no TLSContext)      | \\n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \\\"bool:true\\\" if TLS is not to be originated), then this field is ignored.\",\"enum\":[\"\",\"null\",\"bool:true\",\"bool:false\",\"string\"],\"type\":\"string\"}},\"type\":\"object\"},\"weight\":{\"type\":\"integer\"}},\"required\":[\"port\",\"service\"],\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"TCPMapping is the Schema for the tcpmappings API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:33:07Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:07Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:08Z"
                            }
                        ],
                        "name": "tcpmappings.getambassador.io",
                        "resourceVersion": "14914",
                        "uid": "f361c664-4833-419d-9a58-c7b9c52971a2"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TCPMapping",
                            "listKind": "TCPMappingList",
                            "plural": "tcpmappings",
                            "singular": "tcpmapping"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                        "type": "string"
                                                    },
                                                    "port": {
                                                        "description": "Port isn't a pointer because it's required.",
                                                        "type": "integer"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "port",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "TCPMappingSpec defines the desired state of TCPMapping",
                                                "properties": {
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "FIXME(lukeshu): Surely this should be an 'int'?",
                                                        "type": "string"
                                                    },
                                                    "port": {
                                                        "description": "Port isn't a pointer because it's required.",
                                                        "type": "integer"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "port",
                                                    "service"
                                                ],
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "TCPMapping is the Schema for the tcpmappings API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "TCPMapping",
                            "listKind": "TCPMappingList",
                            "plural": "tcpmappings",
                            "singular": "tcpmapping"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-03-22T04:33:08Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-03-22T04:33:08Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::logservices.getambassador.io",
                "custom": true,
                "id": "logservices.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "logservices.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "LogService",
                            "listKind": "LogServiceList",
                            "plural": "logservices",
                            "singular": "logservice"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "LogServiceSpec defines the desired state of LogService",
                                                "properties": {
                                                    "driver": {
                                                        "enum": [
                                                            "tcp",
                                                            "http"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "driver_config": {
                                                        "properties": {
                                                            "additional_log_headers": {
                                                                "items": {
                                                                    "properties": {
                                                                        "during_request": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_response": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_trailer": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "header_name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "flush_interval_byte_size": {
                                                        "type": "integer"
                                                    },
                                                    "flush_interval_time": {
                                                        "type": "integer"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "LogServiceSpec defines the desired state of LogService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "tcp",
                                                            "http"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "driver_config": {
                                                        "properties": {
                                                            "additional_log_headers": {
                                                                "items": {
                                                                    "properties": {
                                                                        "during_request": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_response": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_trailer": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "header_name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "flush_interval_byte_size": {
                                                        "type": "integer"
                                                    },
                                                    "flush_interval_time": {
                                                        "type": "integer"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "logservices.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "LogService",
                                "listKind": "LogServiceList",
                                "plural": "logservices",
                                "singular": "logservice"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "LogService is the Schema for the logservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "LogServiceSpec defines the desired state of LogService",
                                                    "properties": {
                                                        "driver": {
                                                            "enum": [
                                                                "tcp",
                                                                "http"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "driver_config": {
                                                            "properties": {
                                                                "additional_log_headers": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "during_request": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "during_response": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "during_trailer": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "header_name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "flush_interval_byte_size": {
                                                            "type": "integer"
                                                        },
                                                        "flush_interval_time": {
                                                            "type": "integer"
                                                        },
                                                        "grpc": {
                                                            "type": "boolean"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "LogService is the Schema for the logservices API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "LogServiceSpec defines the desired state of LogService",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "driver": {
                                                            "enum": [
                                                                "tcp",
                                                                "http"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "driver_config": {
                                                            "properties": {
                                                                "additional_log_headers": {
                                                                    "items": {
                                                                        "properties": {
                                                                            "during_request": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "during_response": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "during_trailer": {
                                                                                "type": "boolean"
                                                                            },
                                                                            "header_name": {
                                                                                "type": "string"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "flush_interval_byte_size": {
                                                            "type": "integer"
                                                        },
                                                        "flush_interval_time": {
                                                            "type": "integer"
                                                        },
                                                        "grpc": {
                                                            "type": "boolean"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "LogService is the Schema for the logservices API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"logservices.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"LogService\",\"listKind\":\"LogServiceList\",\"plural\":\"logservices\",\"singular\":\"logservice\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"LogService is the Schema for the logservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"LogServiceSpec defines the desired state of LogService\",\"properties\":{\"driver\":{\"enum\":[\"tcp\",\"http\"],\"type\":\"string\"},\"driver_config\":{\"properties\":{\"additional_log_headers\":{\"items\":{\"properties\":{\"during_request\":{\"type\":\"boolean\"},\"during_response\":{\"type\":\"boolean\"},\"during_trailer\":{\"type\":\"boolean\"},\"header_name\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"},\"flush_interval_byte_size\":{\"type\":\"integer\"},\"flush_interval_time\":{\"type\":\"integer\"},\"grpc\":{\"type\":\"boolean\"},\"service\":{\"type\":\"string\"},\"v3StatsName\":{\"type\":\"string\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"LogService is the Schema for the logservices API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"LogServiceSpec defines the desired state of LogService\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"driver\":{\"enum\":[\"tcp\",\"http\"],\"type\":\"string\"},\"driver_config\":{\"properties\":{\"additional_log_headers\":{\"items\":{\"properties\":{\"during_request\":{\"type\":\"boolean\"},\"during_response\":{\"type\":\"boolean\"},\"during_trailer\":{\"type\":\"boolean\"},\"header_name\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"}},\"type\":\"object\"},\"flush_interval_byte_size\":{\"type\":\"integer\"},\"flush_interval_time\":{\"type\":\"integer\"},\"grpc\":{\"type\":\"boolean\"},\"service\":{\"type\":\"string\"},\"stats_name\":{\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"LogService is the Schema for the logservices API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:33:08Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:08Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:08Z"
                            }
                        ],
                        "name": "logservices.getambassador.io",
                        "resourceVersion": "14919",
                        "uid": "dd224778-43ae-49bc-bdbf-aaba958e4cbd"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "LogService",
                            "listKind": "LogServiceList",
                            "plural": "logservices",
                            "singular": "logservice"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "LogServiceSpec defines the desired state of LogService",
                                                "properties": {
                                                    "driver": {
                                                        "enum": [
                                                            "tcp",
                                                            "http"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "driver_config": {
                                                        "properties": {
                                                            "additional_log_headers": {
                                                                "items": {
                                                                    "properties": {
                                                                        "during_request": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_response": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_trailer": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "header_name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "flush_interval_byte_size": {
                                                        "type": "integer"
                                                    },
                                                    "flush_interval_time": {
                                                        "type": "integer"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "LogServiceSpec defines the desired state of LogService",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "driver": {
                                                        "enum": [
                                                            "tcp",
                                                            "http"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "driver_config": {
                                                        "properties": {
                                                            "additional_log_headers": {
                                                                "items": {
                                                                    "properties": {
                                                                        "during_request": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_response": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "during_trailer": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "header_name": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "flush_interval_byte_size": {
                                                        "type": "integer"
                                                    },
                                                    "flush_interval_time": {
                                                        "type": "integer"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "LogService is the Schema for the logservices API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "LogService",
                            "listKind": "LogServiceList",
                            "plural": "logservices",
                            "singular": "logservice"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-03-22T04:33:08Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-03-22T04:33:08Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::devportals.getambassador.io",
                "custom": true,
                "id": "devportals.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "devportals.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "DevPortal",
                            "listKind": "DevPortalList",
                            "plural": "devportals",
                            "singular": "devportal"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "DevPortalSpec defines the desired state of DevPortal",
                                                "properties": {
                                                    "content": {
                                                        "description": "Content specifies where the content shown in the DevPortal come from",
                                                        "properties": {
                                                            "branch": {
                                                                "type": "string"
                                                            },
                                                            "dir": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "default": {
                                                        "description": "Default must be true when this is the default DevPortal",
                                                        "type": "boolean"
                                                    },
                                                    "docs": {
                                                        "description": "Docs is a static docs definition",
                                                        "items": {
                                                            "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                            "properties": {
                                                                "service": {
                                                                    "description": "Service is the service being documented",
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "description": "URL is the URL used for obtaining docs",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "naming_scheme": {
                                                        "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                        "enum": [
                                                            "namespace.name",
                                                            "name.prefix"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "preserve_servers": {
                                                        "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                        "type": "boolean"
                                                    },
                                                    "search": {
                                                        "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                        "properties": {
                                                            "enabled": {
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                "enum": [
                                                                    "title-only",
                                                                    "all-content"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector is used for choosing what is shown in the DevPortal",
                                                        "properties": {
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                "type": "object"
                                                            },
                                                            "matchNamespaces": {
                                                                "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "DevPortalSpec defines the desired state of DevPortal",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "content": {
                                                        "description": "Content specifies where the content shown in the DevPortal come from",
                                                        "properties": {
                                                            "branch": {
                                                                "type": "string"
                                                            },
                                                            "dir": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "default": {
                                                        "description": "Default must be true when this is the default DevPortal",
                                                        "type": "boolean"
                                                    },
                                                    "docs": {
                                                        "description": "Docs is a static docs definition",
                                                        "items": {
                                                            "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                            "properties": {
                                                                "service": {
                                                                    "description": "Service is the service being documented",
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "description": "URL is the URL used for obtaining docs",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "naming_scheme": {
                                                        "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                        "enum": [
                                                            "namespace.name",
                                                            "name.prefix"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "preserve_servers": {
                                                        "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                        "type": "boolean"
                                                    },
                                                    "search": {
                                                        "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                        "properties": {
                                                            "enabled": {
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                "enum": [
                                                                    "title-only",
                                                                    "all-content"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector is used for choosing what is shown in the DevPortal",
                                                        "properties": {
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                "type": "object"
                                                            },
                                                            "matchNamespaces": {
                                                                "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "devportals.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "DevPortal",
                                "listKind": "DevPortalList",
                                "plural": "devportals",
                                "singular": "devportal"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "DevPortalSpec defines the desired state of DevPortal",
                                                    "properties": {
                                                        "content": {
                                                            "description": "Content specifies where the content shown in the DevPortal come from",
                                                            "properties": {
                                                                "branch": {
                                                                    "type": "string"
                                                                },
                                                                "dir": {
                                                                    "type": "string"
                                                                },
                                                                "url": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "default": {
                                                            "description": "Default must be true when this is the default DevPortal",
                                                            "type": "boolean"
                                                        },
                                                        "docs": {
                                                            "description": "Docs is a static docs definition",
                                                            "items": {
                                                                "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                                "properties": {
                                                                    "service": {
                                                                        "description": "Service is the service being documented",
                                                                        "type": "string"
                                                                    },
                                                                    "timeout_ms": {
                                                                        "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                        "type": "integer"
                                                                    },
                                                                    "url": {
                                                                        "description": "URL is the URL used for obtaining docs",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "naming_scheme": {
                                                            "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                            "enum": [
                                                                "namespace.name",
                                                                "name.prefix"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "preserve_servers": {
                                                            "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                            "type": "boolean"
                                                        },
                                                        "search": {
                                                            "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                            "properties": {
                                                                "enabled": {
                                                                    "type": "boolean"
                                                                },
                                                                "type": {
                                                                    "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                    "enum": [
                                                                        "title-only",
                                                                        "all-content"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "selector": {
                                                            "description": "Selector is used for choosing what is shown in the DevPortal",
                                                            "properties": {
                                                                "matchLabels": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                    "type": "object"
                                                                },
                                                                "matchNamespaces": {
                                                                    "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true
                                },
                                {
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "DevPortalSpec defines the desired state of DevPortal",
                                                    "properties": {
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "content": {
                                                            "description": "Content specifies where the content shown in the DevPortal come from",
                                                            "properties": {
                                                                "branch": {
                                                                    "type": "string"
                                                                },
                                                                "dir": {
                                                                    "type": "string"
                                                                },
                                                                "url": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "default": {
                                                            "description": "Default must be true when this is the default DevPortal",
                                                            "type": "boolean"
                                                        },
                                                        "docs": {
                                                            "description": "Docs is a static docs definition",
                                                            "items": {
                                                                "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                                "properties": {
                                                                    "service": {
                                                                        "description": "Service is the service being documented",
                                                                        "type": "string"
                                                                    },
                                                                    "timeout_ms": {
                                                                        "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                        "type": "integer"
                                                                    },
                                                                    "url": {
                                                                        "description": "URL is the URL used for obtaining docs",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "naming_scheme": {
                                                            "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                            "enum": [
                                                                "namespace.name",
                                                                "name.prefix"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "preserve_servers": {
                                                            "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                            "type": "boolean"
                                                        },
                                                        "search": {
                                                            "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                            "properties": {
                                                                "enabled": {
                                                                    "type": "boolean"
                                                                },
                                                                "type": {
                                                                    "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                    "enum": [
                                                                        "title-only",
                                                                        "all-content"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "selector": {
                                                            "description": "Selector is used for choosing what is shown in the DevPortal",
                                                            "properties": {
                                                                "matchLabels": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                    "type": "object"
                                                                },
                                                                "matchNamespaces": {
                                                                    "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "DevPortal is the Schema for the DevPortals API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"devportals.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"DevPortal\",\"listKind\":\"DevPortalList\",\"plural\":\"devportals\",\"singular\":\"devportal\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"DevPortal is the Schema for the DevPortals API \\n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \\n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \\n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"DevPortalSpec defines the desired state of DevPortal\",\"properties\":{\"content\":{\"description\":\"Content specifies where the content shown in the DevPortal come from\",\"properties\":{\"branch\":{\"type\":\"string\"},\"dir\":{\"type\":\"string\"},\"url\":{\"type\":\"string\"}},\"type\":\"object\"},\"default\":{\"description\":\"Default must be true when this is the default DevPortal\",\"type\":\"boolean\"},\"docs\":{\"description\":\"Docs is a static docs definition\",\"items\":{\"description\":\"DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \\u003cservice\\u003e:\\u003cURL\\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.\",\"properties\":{\"service\":{\"description\":\"Service is the service being documented\",\"type\":\"string\"},\"timeout_ms\":{\"description\":\"Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back\",\"type\":\"integer\"},\"url\":{\"description\":\"URL is the URL used for obtaining docs\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"naming_scheme\":{\"description\":\"Describes how to display \\\"services\\\" in the DevPortal. Default namespace.name\",\"enum\":[\"namespace.name\",\"name.prefix\"],\"type\":\"string\"},\"preserve_servers\":{\"description\":\"Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.\",\"type\":\"boolean\"},\"search\":{\"description\":\"DevPortalSearchSpec allows configuration over search functionality for the DevPortal\",\"properties\":{\"enabled\":{\"type\":\"boolean\"},\"type\":{\"description\":\"Type of search. \\\"title-only\\\" does a fuzzy search over openapi and page titles \\\"all-content\\\" will fuzzy search over all openapi and page content. \\\"title-only\\\" is the default. warning:  using all-content may incur a larger memory footprint\",\"enum\":[\"title-only\",\"all-content\"],\"type\":\"string\"}},\"type\":\"object\"},\"selector\":{\"description\":\"Selector is used for choosing what is shown in the DevPortal\",\"properties\":{\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.\",\"type\":\"object\"},\"matchNamespaces\":{\"description\":\"MatchNamespaces is a list of namespaces that will be included in this DevPortal.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"type\":\"object\"}},\"served\":true,\"storage\":true},{\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"DevPortal is the Schema for the DevPortals API \\n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \\n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \\n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"DevPortalSpec defines the desired state of DevPortal\",\"properties\":{\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"content\":{\"description\":\"Content specifies where the content shown in the DevPortal come from\",\"properties\":{\"branch\":{\"type\":\"string\"},\"dir\":{\"type\":\"string\"},\"url\":{\"type\":\"string\"}},\"type\":\"object\"},\"default\":{\"description\":\"Default must be true when this is the default DevPortal\",\"type\":\"boolean\"},\"docs\":{\"description\":\"Docs is a static docs definition\",\"items\":{\"description\":\"DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \\u003cservice\\u003e:\\u003cURL\\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.\",\"properties\":{\"service\":{\"description\":\"Service is the service being documented\",\"type\":\"string\"},\"timeout_ms\":{\"description\":\"Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back\",\"type\":\"integer\"},\"url\":{\"description\":\"URL is the URL used for obtaining docs\",\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"naming_scheme\":{\"description\":\"Describes how to display \\\"services\\\" in the DevPortal. Default namespace.name\",\"enum\":[\"namespace.name\",\"name.prefix\"],\"type\":\"string\"},\"preserve_servers\":{\"description\":\"Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.\",\"type\":\"boolean\"},\"search\":{\"description\":\"DevPortalSearchSpec allows configuration over search functionality for the DevPortal\",\"properties\":{\"enabled\":{\"type\":\"boolean\"},\"type\":{\"description\":\"Type of search. \\\"title-only\\\" does a fuzzy search over openapi and page titles \\\"all-content\\\" will fuzzy search over all openapi and page content. \\\"title-only\\\" is the default. warning:  using all-content may incur a larger memory footprint\",\"enum\":[\"title-only\",\"all-content\"],\"type\":\"string\"}},\"type\":\"object\"},\"selector\":{\"description\":\"Selector is used for choosing what is shown in the DevPortal\",\"properties\":{\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.\",\"type\":\"object\"},\"matchNamespaces\":{\"description\":\"MatchNamespaces is a list of namespaces that will be included in this DevPortal.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"DevPortal is the Schema for the DevPortals API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:32:57Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-03-22T04:32:57Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:32:57Z"
                            }
                        ],
                        "name": "devportals.getambassador.io",
                        "resourceVersion": "14849",
                        "uid": "971cd36b-4004-42db-bdcd-750db48e730e"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "DevPortal",
                            "listKind": "DevPortalList",
                            "plural": "devportals",
                            "singular": "devportal"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "DevPortalSpec defines the desired state of DevPortal",
                                                "properties": {
                                                    "content": {
                                                        "description": "Content specifies where the content shown in the DevPortal come from",
                                                        "properties": {
                                                            "branch": {
                                                                "type": "string"
                                                            },
                                                            "dir": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "default": {
                                                        "description": "Default must be true when this is the default DevPortal",
                                                        "type": "boolean"
                                                    },
                                                    "docs": {
                                                        "description": "Docs is a static docs definition",
                                                        "items": {
                                                            "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                            "properties": {
                                                                "service": {
                                                                    "description": "Service is the service being documented",
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "description": "URL is the URL used for obtaining docs",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "naming_scheme": {
                                                        "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                        "enum": [
                                                            "namespace.name",
                                                            "name.prefix"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "preserve_servers": {
                                                        "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                        "type": "boolean"
                                                    },
                                                    "search": {
                                                        "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                        "properties": {
                                                            "enabled": {
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                "enum": [
                                                                    "title-only",
                                                                    "all-content"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector is used for choosing what is shown in the DevPortal",
                                                        "properties": {
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                "type": "object"
                                                            },
                                                            "matchNamespaces": {
                                                                "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true
                            },
                            {
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API \n DevPortal resources specify the `what` and `how` is shown in a DevPortal: \n * `what` is in a DevPortal can be controlled with   - a `selector`, that can be used for filtering `Mappings`.   - a `docs` listing of (services, url) * `how` is a pointer to some `contents` (a checkout of a Git repository   with go-templates/markdown/css). \n Multiple `DevPortal`s can exist in the cluster, and the Dev Portal server will show them at different endpoints. A `DevPortal` resource with a special name, `ambassador`, will be used for configuring the default Dev Portal (served at `/docs/` by default).",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "DevPortalSpec defines the desired state of DevPortal",
                                                "properties": {
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "content": {
                                                        "description": "Content specifies where the content shown in the DevPortal come from",
                                                        "properties": {
                                                            "branch": {
                                                                "type": "string"
                                                            },
                                                            "dir": {
                                                                "type": "string"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "default": {
                                                        "description": "Default must be true when this is the default DevPortal",
                                                        "type": "boolean"
                                                    },
                                                    "docs": {
                                                        "description": "Docs is a static docs definition",
                                                        "items": {
                                                            "description": "DevPortalDocsSpec is a static documentation definition: instead of using a Selector for finding documentation for services, users can provide a static list of \u003cservice\u003e:\u003cURL\u003e tuples. These services will be shown in the Dev Portal with the documentation obtained from this URL.",
                                                            "properties": {
                                                                "service": {
                                                                    "description": "Service is the service being documented",
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "description": "Timeout specifies the amount of time devportal will wait for the downstream service to report an openapi spec back",
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "description": "URL is the URL used for obtaining docs",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "naming_scheme": {
                                                        "description": "Describes how to display \"services\" in the DevPortal. Default namespace.name",
                                                        "enum": [
                                                            "namespace.name",
                                                            "name.prefix"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "preserve_servers": {
                                                        "description": "Configures this DevPortal to use server definitions from the openAPI doc instead of rewriting them based on the url used for the connection.",
                                                        "type": "boolean"
                                                    },
                                                    "search": {
                                                        "description": "DevPortalSearchSpec allows configuration over search functionality for the DevPortal",
                                                        "properties": {
                                                            "enabled": {
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "Type of search. \"title-only\" does a fuzzy search over openapi and page titles \"all-content\" will fuzzy search over all openapi and page content. \"title-only\" is the default. warning:  using all-content may incur a larger memory footprint",
                                                                "enum": [
                                                                    "title-only",
                                                                    "all-content"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector is used for choosing what is shown in the DevPortal",
                                                        "properties": {
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "MatchLabels specifies the list of labels that must be present in Mappings for being present in this DevPortal.",
                                                                "type": "object"
                                                            },
                                                            "matchNamespaces": {
                                                                "description": "MatchNamespaces is a list of namespaces that will be included in this DevPortal.",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "DevPortal is the Schema for the DevPortals API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "DevPortal",
                            "listKind": "DevPortalList",
                            "plural": "devportals",
                            "singular": "devportal"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-03-22T04:32:57Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-03-22T04:32:57Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::hosts.getambassador.io",
                "custom": true,
                "id": "hosts.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "hosts.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Host",
                            "listKind": "HostList",
                            "plural": "hosts",
                            "singular": "host"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.hostname",
                                        "name": "Hostname",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phaseCompleted",
                                        "name": "Phase Completed",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phasePending",
                                        "name": "Phase Pending",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".metadata.creationTimestamp",
                                        "name": "Age",
                                        "type": "date"
                                    }
                                ],
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Host is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "HostSpec defines the desired state of Host",
                                                "properties": {
                                                    "acmeProvider": {
                                                        "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                        "properties": {
                                                            "authority": {
                                                                "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "privateKeySecret": {
                                                                "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "registration": {
                                                                "description": "This is normally set automatically",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname by which the Ambassador can be reached.",
                                                        "type": "string"
                                                    },
                                                    "previewUrl": {
                                                        "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                        "properties": {
                                                            "enabled": {
                                                                "description": "Is the Preview URL feature enabled?",
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "What type of Preview URL is allowed?",
                                                                "enum": [
                                                                    "Path"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "requestPolicy": {
                                                        "description": "Request policy definition.",
                                                        "properties": {
                                                            "insecure": {
                                                                "properties": {
                                                                    "action": {
                                                                        "enum": [
                                                                            "Redirect",
                                                                            "Reject",
                                                                            "Route"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "additionalPort": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector by which we can find further configuration. Defaults to hostname=$hostname",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                        "properties": {
                                                            "alpn_protocols": {
                                                                "type": "string"
                                                            },
                                                            "ca_secret": {
                                                                "type": "string"
                                                            },
                                                            "cacert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_required": {
                                                                "type": "boolean"
                                                            },
                                                            "cipher_suites": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "ecdh_curves": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "min_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "private_key_file": {
                                                                "type": "string"
                                                            },
                                                            "redirect_cleartext_from": {
                                                                "type": "integer"
                                                            },
                                                            "sni": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsContext": {
                                                        "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSecret": {
                                                        "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "status": {
                                                "description": "HostStatus defines the observed state of Host",
                                                "properties": {
                                                    "errorBackoff": {
                                                        "type": "string"
                                                    },
                                                    "errorReason": {
                                                        "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                        "type": "string"
                                                    },
                                                    "errorTimestamp": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "phaseCompleted": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "phasePending": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                        "enum": [
                                                            "Initial",
                                                            "Pending",
                                                            "Ready",
                                                            "Error"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "tlsCertificateSource": {
                                                        "enum": [
                                                            "Unknown",
                                                            "None",
                                                            "Other",
                                                            "ACME"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.hostname",
                                        "name": "Hostname",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phaseCompleted",
                                        "name": "Phase Completed",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phasePending",
                                        "name": "Phase Pending",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".metadata.creationTimestamp",
                                        "name": "Age",
                                        "type": "date"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Host is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "HostSpec defines the desired state of Host",
                                                "properties": {
                                                    "acmeProvider": {
                                                        "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                        "properties": {
                                                            "authority": {
                                                                "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "privateKeySecret": {
                                                                "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "registration": {
                                                                "description": "This is normally set automatically",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "Common to all Ambassador objects (and optional).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname by which the Ambassador can be reached.",
                                                        "type": "string"
                                                    },
                                                    "mappingSelector": {
                                                        "description": "Selector for Mappings we'll associate with this Host. At the moment, Selector and MappingSelector are synonyms, but that will change soon.",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "previewUrl": {
                                                        "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                        "properties": {
                                                            "enabled": {
                                                                "description": "Is the Preview URL feature enabled?",
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "What type of Preview URL is allowed?",
                                                                "enum": [
                                                                    "Path"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "requestPolicy": {
                                                        "description": "Request policy definition.",
                                                        "properties": {
                                                            "insecure": {
                                                                "properties": {
                                                                    "action": {
                                                                        "enum": [
                                                                            "Redirect",
                                                                            "Reject",
                                                                            "Route"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "additionalPort": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "DEPRECATED: Selector by which we can find further configuration. Use MappingSelector instead. \n TODO(lukeshu): In v3alpha2, figure out how to get rid of HostSpec.DeprecatedSelector.",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                        "properties": {
                                                            "alpn_protocols": {
                                                                "type": "string"
                                                            },
                                                            "ca_secret": {
                                                                "type": "string"
                                                            },
                                                            "cacert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_required": {
                                                                "type": "boolean"
                                                            },
                                                            "cipher_suites": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "ecdh_curves": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "min_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "private_key_file": {
                                                                "type": "string"
                                                            },
                                                            "redirect_cleartext_from": {
                                                                "type": "integer"
                                                            },
                                                            "sni": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsContext": {
                                                        "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSecret": {
                                                        "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "HostStatus defines the observed state of Host",
                                                "properties": {
                                                    "errorBackoff": {
                                                        "type": "string"
                                                    },
                                                    "errorReason": {
                                                        "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                        "type": "string"
                                                    },
                                                    "errorTimestamp": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "phaseCompleted": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "phasePending": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                        "enum": [
                                                            "Initial",
                                                            "Pending",
                                                            "Ready",
                                                            "Error"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "tlsCertificateSource": {
                                                        "enum": [
                                                            "Unknown",
                                                            "None",
                                                            "Other",
                                                            "ACME"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "hosts.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "Host",
                                "listKind": "HostList",
                                "plural": "hosts",
                                "singular": "host"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "additionalPrinterColumns": [
                                        {
                                            "jsonPath": ".spec.hostname",
                                            "name": "Hostname",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.state",
                                            "name": "State",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.phaseCompleted",
                                            "name": "Phase Completed",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.phasePending",
                                            "name": "Phase Pending",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".metadata.creationTimestamp",
                                            "name": "Age",
                                            "type": "date"
                                        }
                                    ],
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Host is the Schema for the hosts API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "HostSpec defines the desired state of Host",
                                                    "properties": {
                                                        "acmeProvider": {
                                                            "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                            "properties": {
                                                                "authority": {
                                                                    "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                    "type": "string"
                                                                },
                                                                "email": {
                                                                    "type": "string"
                                                                },
                                                                "privateKeySecret": {
                                                                    "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "registration": {
                                                                    "description": "This is normally set automatically",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "hostname": {
                                                            "description": "Hostname by which the Ambassador can be reached.",
                                                            "type": "string"
                                                        },
                                                        "previewUrl": {
                                                            "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                            "properties": {
                                                                "enabled": {
                                                                    "description": "Is the Preview URL feature enabled?",
                                                                    "type": "boolean"
                                                                },
                                                                "type": {
                                                                    "description": "What type of Preview URL is allowed?",
                                                                    "enum": [
                                                                        "Path"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "requestPolicy": {
                                                            "description": "Request policy definition.",
                                                            "properties": {
                                                                "insecure": {
                                                                    "properties": {
                                                                        "action": {
                                                                            "enum": [
                                                                                "Redirect",
                                                                                "Reject",
                                                                                "Route"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "additionalPort": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "selector": {
                                                            "description": "Selector by which we can find further configuration. Defaults to hostname=$hostname",
                                                            "properties": {
                                                                "matchExpressions": {
                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                    "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                            },
                                                                            "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                            },
                                                                            "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "key",
                                                                            "operator"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "matchLabels": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tls": {
                                                            "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                            "properties": {
                                                                "alpn_protocols": {
                                                                    "type": "string"
                                                                },
                                                                "ca_secret": {
                                                                    "type": "string"
                                                                },
                                                                "cacert_chain_file": {
                                                                    "type": "string"
                                                                },
                                                                "cert_chain_file": {
                                                                    "type": "string"
                                                                },
                                                                "cert_required": {
                                                                    "type": "boolean"
                                                                },
                                                                "cipher_suites": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "ecdh_curves": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "max_tls_version": {
                                                                    "type": "string"
                                                                },
                                                                "min_tls_version": {
                                                                    "type": "string"
                                                                },
                                                                "private_key_file": {
                                                                    "type": "string"
                                                                },
                                                                "redirect_cleartext_from": {
                                                                    "type": "integer"
                                                                },
                                                                "sni": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tlsContext": {
                                                            "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tlsSecret": {
                                                            "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                },
                                                "status": {
                                                    "description": "HostStatus defines the observed state of Host",
                                                    "properties": {
                                                        "errorBackoff": {
                                                            "type": "string"
                                                        },
                                                        "errorReason": {
                                                            "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                            "type": "string"
                                                        },
                                                        "errorTimestamp": {
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "phaseCompleted": {
                                                            "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                            "enum": [
                                                                "NA",
                                                                "DefaultsFilled",
                                                                "ACMEUserPrivateKeyCreated",
                                                                "ACMEUserRegistered",
                                                                "ACMECertificateChallenge"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "phasePending": {
                                                            "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                            "enum": [
                                                                "NA",
                                                                "DefaultsFilled",
                                                                "ACMEUserPrivateKeyCreated",
                                                                "ACMEUserRegistered",
                                                                "ACMECertificateChallenge"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                            "enum": [
                                                                "Initial",
                                                                "Pending",
                                                                "Ready",
                                                                "Error"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "tlsCertificateSource": {
                                                            "enum": [
                                                                "Unknown",
                                                                "None",
                                                                "Other",
                                                                "ACME"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {
                                        "status": {}
                                    }
                                },
                                {
                                    "additionalPrinterColumns": [
                                        {
                                            "jsonPath": ".spec.hostname",
                                            "name": "Hostname",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.state",
                                            "name": "State",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.phaseCompleted",
                                            "name": "Phase Completed",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.phasePending",
                                            "name": "Phase Pending",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".metadata.creationTimestamp",
                                            "name": "Age",
                                            "type": "date"
                                        }
                                    ],
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Host is the Schema for the hosts API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "HostSpec defines the desired state of Host",
                                                    "properties": {
                                                        "acmeProvider": {
                                                            "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                            "properties": {
                                                                "authority": {
                                                                    "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                    "type": "string"
                                                                },
                                                                "email": {
                                                                    "type": "string"
                                                                },
                                                                "privateKeySecret": {
                                                                    "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                    "properties": {
                                                                        "name": {
                                                                            "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "registration": {
                                                                    "description": "This is normally set automatically",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "Common to all Ambassador objects (and optional).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "hostname": {
                                                            "description": "Hostname by which the Ambassador can be reached.",
                                                            "type": "string"
                                                        },
                                                        "mappingSelector": {
                                                            "description": "Selector for Mappings we'll associate with this Host. At the moment, Selector and MappingSelector are synonyms, but that will change soon.",
                                                            "properties": {
                                                                "matchExpressions": {
                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                    "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                            },
                                                                            "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                            },
                                                                            "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "key",
                                                                            "operator"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "matchLabels": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "previewUrl": {
                                                            "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                            "properties": {
                                                                "enabled": {
                                                                    "description": "Is the Preview URL feature enabled?",
                                                                    "type": "boolean"
                                                                },
                                                                "type": {
                                                                    "description": "What type of Preview URL is allowed?",
                                                                    "enum": [
                                                                        "Path"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "requestPolicy": {
                                                            "description": "Request policy definition.",
                                                            "properties": {
                                                                "insecure": {
                                                                    "properties": {
                                                                        "action": {
                                                                            "enum": [
                                                                                "Redirect",
                                                                                "Reject",
                                                                                "Route"
                                                                            ],
                                                                            "type": "string"
                                                                        },
                                                                        "additionalPort": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "selector": {
                                                            "description": "DEPRECATED: Selector by which we can find further configuration. Use MappingSelector instead. \n TODO(lukeshu): In v3alpha2, figure out how to get rid of HostSpec.DeprecatedSelector.",
                                                            "properties": {
                                                                "matchExpressions": {
                                                                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                    "items": {
                                                                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                        "properties": {
                                                                            "key": {
                                                                                "description": "key is the label key that the selector applies to.",
                                                                                "type": "string"
                                                                            },
                                                                            "operator": {
                                                                                "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                                "type": "string"
                                                                            },
                                                                            "values": {
                                                                                "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                                "items": {
                                                                                    "type": "string"
                                                                                },
                                                                                "type": "array"
                                                                            }
                                                                        },
                                                                        "required": [
                                                                            "key",
                                                                            "operator"
                                                                        ],
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "matchLabels": {
                                                                    "additionalProperties": {
                                                                        "type": "string"
                                                                    },
                                                                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tls": {
                                                            "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                            "properties": {
                                                                "alpn_protocols": {
                                                                    "type": "string"
                                                                },
                                                                "ca_secret": {
                                                                    "type": "string"
                                                                },
                                                                "cacert_chain_file": {
                                                                    "type": "string"
                                                                },
                                                                "cert_chain_file": {
                                                                    "type": "string"
                                                                },
                                                                "cert_required": {
                                                                    "type": "boolean"
                                                                },
                                                                "cipher_suites": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "ecdh_curves": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "max_tls_version": {
                                                                    "type": "string"
                                                                },
                                                                "min_tls_version": {
                                                                    "type": "string"
                                                                },
                                                                "private_key_file": {
                                                                    "type": "string"
                                                                },
                                                                "redirect_cleartext_from": {
                                                                    "type": "integer"
                                                                },
                                                                "sni": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tlsContext": {
                                                            "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "tlsSecret": {
                                                            "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                            "properties": {
                                                                "name": {
                                                                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "status": {
                                                    "description": "HostStatus defines the observed state of Host",
                                                    "properties": {
                                                        "errorBackoff": {
                                                            "type": "string"
                                                        },
                                                        "errorReason": {
                                                            "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                            "type": "string"
                                                        },
                                                        "errorTimestamp": {
                                                            "format": "date-time",
                                                            "type": "string"
                                                        },
                                                        "phaseCompleted": {
                                                            "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                            "enum": [
                                                                "NA",
                                                                "DefaultsFilled",
                                                                "ACMEUserPrivateKeyCreated",
                                                                "ACMEUserRegistered",
                                                                "ACMECertificateChallenge"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "phasePending": {
                                                            "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                            "enum": [
                                                                "NA",
                                                                "DefaultsFilled",
                                                                "ACMEUserPrivateKeyCreated",
                                                                "ACMEUserRegistered",
                                                                "ACMECertificateChallenge"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                            "enum": [
                                                                "Initial",
                                                                "Pending",
                                                                "Ready",
                                                                "Error"
                                                            ],
                                                            "type": "string"
                                                        },
                                                        "tlsCertificateSource": {
                                                            "enum": [
                                                                "Unknown",
                                                                "None",
                                                                "Other",
                                                                "ACME"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false,
                                    "subresources": {
                                        "status": {}
                                    }
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"hosts.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"Host\",\"listKind\":\"HostList\",\"plural\":\"hosts\",\"singular\":\"host\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".spec.hostname\",\"name\":\"Hostname\",\"type\":\"string\"},{\"jsonPath\":\".status.state\",\"name\":\"State\",\"type\":\"string\"},{\"jsonPath\":\".status.phaseCompleted\",\"name\":\"Phase Completed\",\"type\":\"string\"},{\"jsonPath\":\".status.phasePending\",\"name\":\"Phase Pending\",\"type\":\"string\"},{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"}],\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Host is the Schema for the hosts API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"HostSpec defines the desired state of Host\",\"properties\":{\"acmeProvider\":{\"description\":\"Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.\",\"properties\":{\"authority\":{\"description\":\"Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \\\"none\\\" (case-insensitive), do not try to do ACME for this Host.\",\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"privateKeySecret\":{\"description\":\"Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"registration\":{\"description\":\"This is normally set automatically\",\"type\":\"string\"}},\"type\":\"object\"},\"hostname\":{\"description\":\"Hostname by which the Ambassador can be reached.\",\"type\":\"string\"},\"previewUrl\":{\"description\":\"Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.\",\"properties\":{\"enabled\":{\"description\":\"Is the Preview URL feature enabled?\",\"type\":\"boolean\"},\"type\":{\"description\":\"What type of Preview URL is allowed?\",\"enum\":[\"Path\"],\"type\":\"string\"}},\"type\":\"object\"},\"requestPolicy\":{\"description\":\"Request policy definition.\",\"properties\":{\"insecure\":{\"properties\":{\"action\":{\"enum\":[\"Redirect\",\"Reject\",\"Route\"],\"type\":\"string\"},\"additionalPort\":{\"type\":\"integer\"}},\"type\":\"object\"}},\"type\":\"object\"},\"selector\":{\"description\":\"Selector by which we can find further configuration. Defaults to hostname=$hostname\",\"properties\":{\"matchExpressions\":{\"description\":\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\"items\":{\"description\":\"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\"properties\":{\"key\":{\"description\":\"key is the label key that the selector applies to.\",\"type\":\"string\"},\"operator\":{\"description\":\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\"type\":\"string\"},\"values\":{\"description\":\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"key\",\"operator\"],\"type\":\"object\"},\"type\":\"array\"},\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\"type\":\"object\"}},\"type\":\"object\"},\"tls\":{\"description\":\"TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.\",\"properties\":{\"alpn_protocols\":{\"type\":\"string\"},\"ca_secret\":{\"type\":\"string\"},\"cacert_chain_file\":{\"type\":\"string\"},\"cert_chain_file\":{\"type\":\"string\"},\"cert_required\":{\"type\":\"boolean\"},\"cipher_suites\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ecdh_curves\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"max_tls_version\":{\"type\":\"string\"},\"min_tls_version\":{\"type\":\"string\"},\"private_key_file\":{\"type\":\"string\"},\"redirect_cleartext_from\":{\"type\":\"integer\"},\"sni\":{\"type\":\"string\"}},\"type\":\"object\"},\"tlsContext\":{\"description\":\"Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"tlsSecret\":{\"description\":\"Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \\\"\\\".  If the value is \\\"\\\", then we do not do TLS for this Host. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"status\":{\"description\":\"HostStatus defines the observed state of Host\",\"properties\":{\"errorBackoff\":{\"type\":\"string\"},\"errorReason\":{\"description\":\"errorReason, errorTimestamp, and errorBackoff are valid when state==Error.\",\"type\":\"string\"},\"errorTimestamp\":{\"format\":\"date-time\",\"type\":\"string\"},\"phaseCompleted\":{\"description\":\"phaseCompleted and phasePending are valid when state==Pending or state==Error.\",\"enum\":[\"NA\",\"DefaultsFilled\",\"ACMEUserPrivateKeyCreated\",\"ACMEUserRegistered\",\"ACMECertificateChallenge\"],\"type\":\"string\"},\"phasePending\":{\"description\":\"phaseCompleted and phasePending are valid when state==Pending or state==Error.\",\"enum\":[\"NA\",\"DefaultsFilled\",\"ACMEUserPrivateKeyCreated\",\"ACMEUserRegistered\",\"ACMECertificateChallenge\"],\"type\":\"string\"},\"state\":{\"description\":\"The first value listed in the Enum marker becomes the \\\"zero\\\" value, and it would be great if \\\"Pending\\\" could be the default value; but it's Important that the \\\"zero\\\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \\\"Pending\\\" in the \\\"STATE\\\" column, and not leave the column empty.\",\"enum\":[\"Initial\",\"Pending\",\"Ready\",\"Error\"],\"type\":\"string\"},\"tlsCertificateSource\":{\"enum\":[\"Unknown\",\"None\",\"Other\",\"ACME\"],\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}},{\"additionalPrinterColumns\":[{\"jsonPath\":\".spec.hostname\",\"name\":\"Hostname\",\"type\":\"string\"},{\"jsonPath\":\".status.state\",\"name\":\"State\",\"type\":\"string\"},{\"jsonPath\":\".status.phaseCompleted\",\"name\":\"Phase Completed\",\"type\":\"string\"},{\"jsonPath\":\".status.phasePending\",\"name\":\"Phase Pending\",\"type\":\"string\"},{\"jsonPath\":\".metadata.creationTimestamp\",\"name\":\"Age\",\"type\":\"date\"}],\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Host is the Schema for the hosts API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"HostSpec defines the desired state of Host\",\"properties\":{\"acmeProvider\":{\"description\":\"Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.\",\"properties\":{\"authority\":{\"description\":\"Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \\\"none\\\" (case-insensitive), do not try to do ACME for this Host.\",\"type\":\"string\"},\"email\":{\"type\":\"string\"},\"privateKeySecret\":{\"description\":\"Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"registration\":{\"description\":\"This is normally set automatically\",\"type\":\"string\"}},\"type\":\"object\"},\"ambassador_id\":{\"description\":\"Common to all Ambassador objects (and optional).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"hostname\":{\"description\":\"Hostname by which the Ambassador can be reached.\",\"type\":\"string\"},\"mappingSelector\":{\"description\":\"Selector for Mappings we'll associate with this Host. At the moment, Selector and MappingSelector are synonyms, but that will change soon.\",\"properties\":{\"matchExpressions\":{\"description\":\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\"items\":{\"description\":\"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\"properties\":{\"key\":{\"description\":\"key is the label key that the selector applies to.\",\"type\":\"string\"},\"operator\":{\"description\":\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\"type\":\"string\"},\"values\":{\"description\":\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"key\",\"operator\"],\"type\":\"object\"},\"type\":\"array\"},\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\"type\":\"object\"}},\"type\":\"object\"},\"previewUrl\":{\"description\":\"Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.\",\"properties\":{\"enabled\":{\"description\":\"Is the Preview URL feature enabled?\",\"type\":\"boolean\"},\"type\":{\"description\":\"What type of Preview URL is allowed?\",\"enum\":[\"Path\"],\"type\":\"string\"}},\"type\":\"object\"},\"requestPolicy\":{\"description\":\"Request policy definition.\",\"properties\":{\"insecure\":{\"properties\":{\"action\":{\"enum\":[\"Redirect\",\"Reject\",\"Route\"],\"type\":\"string\"},\"additionalPort\":{\"type\":\"integer\"}},\"type\":\"object\"}},\"type\":\"object\"},\"selector\":{\"description\":\"DEPRECATED: Selector by which we can find further configuration. Use MappingSelector instead. \\n TODO(lukeshu): In v3alpha2, figure out how to get rid of HostSpec.DeprecatedSelector.\",\"properties\":{\"matchExpressions\":{\"description\":\"matchExpressions is a list of label selector requirements. The requirements are ANDed.\",\"items\":{\"description\":\"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.\",\"properties\":{\"key\":{\"description\":\"key is the label key that the selector applies to.\",\"type\":\"string\"},\"operator\":{\"description\":\"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.\",\"type\":\"string\"},\"values\":{\"description\":\"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.\",\"items\":{\"type\":\"string\"},\"type\":\"array\"}},\"required\":[\"key\",\"operator\"],\"type\":\"object\"},\"type\":\"array\"},\"matchLabels\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \\\"key\\\", the operator is \\\"In\\\", and the values array contains only \\\"value\\\". The requirements are ANDed.\",\"type\":\"object\"}},\"type\":\"object\"},\"tls\":{\"description\":\"TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.\",\"properties\":{\"alpn_protocols\":{\"type\":\"string\"},\"ca_secret\":{\"type\":\"string\"},\"cacert_chain_file\":{\"type\":\"string\"},\"cert_chain_file\":{\"type\":\"string\"},\"cert_required\":{\"type\":\"boolean\"},\"cipher_suites\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ecdh_curves\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"max_tls_version\":{\"type\":\"string\"},\"min_tls_version\":{\"type\":\"string\"},\"private_key_file\":{\"type\":\"string\"},\"redirect_cleartext_from\":{\"type\":\"integer\"},\"sni\":{\"type\":\"string\"}},\"type\":\"object\"},\"tlsContext\":{\"description\":\"Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"},\"tlsSecret\":{\"description\":\"Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \\\"\\\".  If the value is \\\"\\\", then we do not do TLS for this Host. \\n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.\",\"properties\":{\"name\":{\"description\":\"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"status\":{\"description\":\"HostStatus defines the observed state of Host\",\"properties\":{\"errorBackoff\":{\"type\":\"string\"},\"errorReason\":{\"description\":\"errorReason, errorTimestamp, and errorBackoff are valid when state==Error.\",\"type\":\"string\"},\"errorTimestamp\":{\"format\":\"date-time\",\"type\":\"string\"},\"phaseCompleted\":{\"description\":\"phaseCompleted and phasePending are valid when state==Pending or state==Error.\",\"enum\":[\"NA\",\"DefaultsFilled\",\"ACMEUserPrivateKeyCreated\",\"ACMEUserRegistered\",\"ACMECertificateChallenge\"],\"type\":\"string\"},\"phasePending\":{\"description\":\"phaseCompleted and phasePending are valid when state==Pending or state==Error.\",\"enum\":[\"NA\",\"DefaultsFilled\",\"ACMEUserPrivateKeyCreated\",\"ACMEUserRegistered\",\"ACMECertificateChallenge\"],\"type\":\"string\"},\"state\":{\"description\":\"The first value listed in the Enum marker becomes the \\\"zero\\\" value, and it would be great if \\\"Pending\\\" could be the default value; but it's Important that the \\\"zero\\\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \\\"Pending\\\" in the \\\"STATE\\\" column, and not leave the column empty.\",\"enum\":[\"Initial\",\"Pending\",\"Ready\",\"Error\"],\"type\":\"string\"},\"tlsCertificateSource\":{\"enum\":[\"Unknown\",\"None\",\"Other\",\"ACME\"],\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false,\"subresources\":{\"status\":{}}}]}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:33:08Z",
                        "generation": 2,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:08Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:08Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:conversion": {
                                            "f:webhook": {
                                                "f:clientConfig": {
                                                    "f:caBundle": {},
                                                    "f:service": {
                                                        "f:path": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "apiext",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:11Z"
                            }
                        ],
                        "name": "hosts.getambassador.io",
                        "resourceVersion": "14988",
                        "uid": "6629e7b4-d444-45bc-9299-3c13101a334e"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZJRENDQXdpZ0F3SUJBZ0lSQUwrTWhSTkZpYmV0ampjLzlHZDZJMUl3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUI0WERUSXlNRE15TWpBME16TXhNRm9YRFRJegpNRE15TWpBME16TXhNRm93R2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUlJQ0lqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBbVFTWThHM2VEZkxYSjcyelp5a0tSVXZjeVlRME41T1UKeTVMaHZGd043ank5SFM2U0xPbGE1Q3NZYWpQdHFMbnhzSmdwazhFLzF3bmtCakJNUEFKbitCN2RQZmFqNFlnagoweW45Z2hXa1pyMFFBcWtHQm9OWnltRjc5OXN0eHkrSXRCVVhSWEtDckNBbDNCTmxJb2lqQUM5OEJTMEloSFQ4CjRkVmxqQ01sOTZjOVhudkdBdzU3WlY3L2gvZXJGMHlBWERLTVk4dVZ0dXdnYlJoUVJjVlNrSWhiMUpBdHlGUWMKVVA3QkFDUTltbFZSWUZYQUE2SWFBVUdmcTMyZ2ViVDN0YnZlN044MDFudm82aWp3Qm52REN0ZmluNXZ1OWRtbgpOMmZzV1duNVk2SWVKRHlzaWNDL1Q3Q044ekUzNWFUK1NZZk9TVGJiUU9McWF4Q3lWODdaV0lOM215MW5OU0lYClFBUC9jclhWTHFsNWd6bDNUa1BwNGV1MGdBR3BUSW14ZTIyWWtBUWpZUlZSWENjZ2JYZCtjdVlDUG5sK200ZXQKTXh2WDRnMDhZYWRlY3plNUhlL1dsb2k1R2xMMHJHVEFIOUFPdFlmWFEyMXJ6MVJ6SGtqbGV3azVhL1hRUjIzdgpCVnJTZEErMi9XVkJLZEV1Tmc4RFN2UXMwV25tVmx3SEhYVEJrYnh5S2lrd2NTRnY1SGdqbTZMUjFTU01aNFVmCjV0MFJ1ejc1ZzZOMUd3SzhmdmhlUUtORmJmV0s1cWVTbHFicWJKT0gxMEFsR2l1UjQ3a29vbkt2N0ZqSXl0WE8KUVpiaDBSWHE2ekFIZGROUVpFZVFNb1IxVnVRWFZjRk9sVVZUbmpRS3FVNitxN2EvMkJ4bkxPTlJVWnYvYUFYMQpLbUlCZGVpeG8vRUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLRU1CMEdBMVVkSlFRV01CUUdDQ3NHCkFRVUZCd01DQmdnckJnRUZCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRSnhNZkMKQ0VJeDU0V3FYNDFycjVIb2IrL3Y0akFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBRlB6cVVoazNXbnNzTUIzdwp3WWlWRVl4amZFcE9qNWtla3lXODhTd2ViRVBuYm03UHp1QXQyelhpQUN4MzlvM01PYy9KSmxCSWQvUSsvYmRICmtEK05YdUVxQVh4Qk9yaVoyaEpVVVBUSGtZS0dzWXNtZzN2LzIvcVpUeVVnKzVXZWxDaWRJMmRWZHZUWGtYK1YKRis3ZmVDeWNqbUozNUkvek42ZDdZOXd1TklMRDVrS2FhZXdBY0dLbVdqb3g3Q0pkb25Od05Xc3dmYTY0bFBlbApQYm8vZnpJZzQ2aUY4MGhualltVWQzUStDWTRodXBiV3VMUkZ1Z3ZDd1B3MWlTYThJb2s0YjhCa0xaTDBIZXpTCjJSZ2JlcVZRRHFOMWZaOERYVlVwM3dlem1GVk5IOUZLUGZmTTFlNXMyWjBkVHdDZ3pKRjUzcFJ4N0VWc2pITVAKZUN6YXROcDViZUJnN0E0QjFLRFdiVmpjNkdKR1RXb1FoQ2NZTUlWMXd1RWh4US9QMlo0OXE5WDBKK00rdy9zSwpNWVZhLzVTbUxTK0RHM0dleUQvMnd2T25MR1FZT1RtMzIvUmdDc1lMNG9RSURTaUpiQnQrcVlva0t6TUdGMytQCjh4UDI1cFBzWHFxYzZKeW1aYTRINTVDOWkzNHl0dEcyb0dQYTdRMVZhaTBUQTFRTTFaNUdFUVFNY3o2RHZ1Z2MKYXpObHZacEROaXVrT3hJek50M1BkUjFzaUtNWnY5Y1o3MC9oTFVxRWl2OWxuN3VheWZwREV3c09EckxRSjBhSQozK1EzUnBjUnZXbjg5N3ZGRytkcTRvcUFSSU9zWEF4TEdZdWp1NWV3U1BDNUQzQXhSZ2xXU1NaaHhBYmJuK2Z0CjBBQ3RGV0Ntc1IvNkY0Nnhjakt6S29wUG51az0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "path": "/webhooks/crd-convert",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Host",
                            "listKind": "HostList",
                            "plural": "hosts",
                            "singular": "host"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.hostname",
                                        "name": "Hostname",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phaseCompleted",
                                        "name": "Phase Completed",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phasePending",
                                        "name": "Phase Pending",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".metadata.creationTimestamp",
                                        "name": "Age",
                                        "type": "date"
                                    }
                                ],
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Host is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "HostSpec defines the desired state of Host",
                                                "properties": {
                                                    "acmeProvider": {
                                                        "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                        "properties": {
                                                            "authority": {
                                                                "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "privateKeySecret": {
                                                                "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "registration": {
                                                                "description": "This is normally set automatically",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname by which the Ambassador can be reached.",
                                                        "type": "string"
                                                    },
                                                    "previewUrl": {
                                                        "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                        "properties": {
                                                            "enabled": {
                                                                "description": "Is the Preview URL feature enabled?",
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "What type of Preview URL is allowed?",
                                                                "enum": [
                                                                    "Path"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "requestPolicy": {
                                                        "description": "Request policy definition.",
                                                        "properties": {
                                                            "insecure": {
                                                                "properties": {
                                                                    "action": {
                                                                        "enum": [
                                                                            "Redirect",
                                                                            "Reject",
                                                                            "Route"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "additionalPort": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "Selector by which we can find further configuration. Defaults to hostname=$hostname",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                        "properties": {
                                                            "alpn_protocols": {
                                                                "type": "string"
                                                            },
                                                            "ca_secret": {
                                                                "type": "string"
                                                            },
                                                            "cacert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_required": {
                                                                "type": "boolean"
                                                            },
                                                            "cipher_suites": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "ecdh_curves": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "min_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "private_key_file": {
                                                                "type": "string"
                                                            },
                                                            "redirect_cleartext_from": {
                                                                "type": "integer"
                                                            },
                                                            "sni": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsContext": {
                                                        "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSecret": {
                                                        "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "status": {
                                                "description": "HostStatus defines the observed state of Host",
                                                "properties": {
                                                    "errorBackoff": {
                                                        "type": "string"
                                                    },
                                                    "errorReason": {
                                                        "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                        "type": "string"
                                                    },
                                                    "errorTimestamp": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "phaseCompleted": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "phasePending": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                        "enum": [
                                                            "Initial",
                                                            "Pending",
                                                            "Ready",
                                                            "Error"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "tlsCertificateSource": {
                                                        "enum": [
                                                            "Unknown",
                                                            "None",
                                                            "Other",
                                                            "ACME"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.hostname",
                                        "name": "Hostname",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phaseCompleted",
                                        "name": "Phase Completed",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.phasePending",
                                        "name": "Phase Pending",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".metadata.creationTimestamp",
                                        "name": "Age",
                                        "type": "date"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Host is the Schema for the hosts API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "HostSpec defines the desired state of Host",
                                                "properties": {
                                                    "acmeProvider": {
                                                        "description": "Specifies whether/who to talk ACME with to automatically manage the $tlsSecret.",
                                                        "properties": {
                                                            "authority": {
                                                                "description": "Specifies who to talk ACME with to get certs. Defaults to Let's Encrypt; if \"none\" (case-insensitive), do not try to do ACME for this Host.",
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "privateKeySecret": {
                                                                "description": "Specifies the Kubernetes Secret to use to store the private key of the ACME account (essentially, where to store the auto-generated password for the auto-created ACME account).  You should not normally need to set this--the default value is based on a combination of the ACME authority being registered wit and the email address associated with the account. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                                "properties": {
                                                                    "name": {
                                                                        "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "registration": {
                                                                "description": "This is normally set automatically",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "Common to all Ambassador objects (and optional).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname by which the Ambassador can be reached.",
                                                        "type": "string"
                                                    },
                                                    "mappingSelector": {
                                                        "description": "Selector for Mappings we'll associate with this Host. At the moment, Selector and MappingSelector are synonyms, but that will change soon.",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "previewUrl": {
                                                        "description": "Configuration for the Preview URL feature of Service Preview. Defaults to preview URLs not enabled.",
                                                        "properties": {
                                                            "enabled": {
                                                                "description": "Is the Preview URL feature enabled?",
                                                                "type": "boolean"
                                                            },
                                                            "type": {
                                                                "description": "What type of Preview URL is allowed?",
                                                                "enum": [
                                                                    "Path"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "requestPolicy": {
                                                        "description": "Request policy definition.",
                                                        "properties": {
                                                            "insecure": {
                                                                "properties": {
                                                                    "action": {
                                                                        "enum": [
                                                                            "Redirect",
                                                                            "Reject",
                                                                            "Route"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "additionalPort": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "selector": {
                                                        "description": "DEPRECATED: Selector by which we can find further configuration. Use MappingSelector instead. \n TODO(lukeshu): In v3alpha2, figure out how to get rid of HostSpec.DeprecatedSelector.",
                                                        "properties": {
                                                            "matchExpressions": {
                                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                                "items": {
                                                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                                                                    "properties": {
                                                                        "key": {
                                                                            "description": "key is the label key that the selector applies to.",
                                                                            "type": "string"
                                                                        },
                                                                        "operator": {
                                                                            "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                                                                            "type": "string"
                                                                        },
                                                                        "values": {
                                                                            "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "key",
                                                                        "operator"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "matchLabels": {
                                                                "additionalProperties": {
                                                                    "type": "string"
                                                                },
                                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tls": {
                                                        "description": "TLS configuration.  It is not valid to specify both `tlsContext` and `tls`.",
                                                        "properties": {
                                                            "alpn_protocols": {
                                                                "type": "string"
                                                            },
                                                            "ca_secret": {
                                                                "type": "string"
                                                            },
                                                            "cacert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_chain_file": {
                                                                "type": "string"
                                                            },
                                                            "cert_required": {
                                                                "type": "boolean"
                                                            },
                                                            "cipher_suites": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "ecdh_curves": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "min_tls_version": {
                                                                "type": "string"
                                                            },
                                                            "private_key_file": {
                                                                "type": "string"
                                                            },
                                                            "redirect_cleartext_from": {
                                                                "type": "integer"
                                                            },
                                                            "sni": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsContext": {
                                                        "description": "Name of the TLSContext the Host resource is linked with. It is not valid to specify both `tlsContext` and `tls`. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "tlsSecret": {
                                                        "description": "Name of the Kubernetes secret into which to save generated certificates.  If ACME is enabled (see $acmeProvider), then the default is $hostname; otherwise the default is \"\".  If the value is \"\", then we do not do TLS for this Host. \n Note that this is a native-Kubernetes-style core.v1.LocalObjectReference, not an Ambassador-style `{name}.{namespace}` string.  Because we're opinionated, it does not support referencing a Secret in another namespace (because most native Kubernetes resources don't support that), but if we ever abandon that opinion and decide to support non-local references it, it would be by adding a `namespace:` field by changing it from a core.v1.LocalObjectReference to a core.v1.SecretReference, not by adopting the `{name}.{namespace}` notation.",
                                                        "properties": {
                                                            "name": {
                                                                "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?",
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "HostStatus defines the observed state of Host",
                                                "properties": {
                                                    "errorBackoff": {
                                                        "type": "string"
                                                    },
                                                    "errorReason": {
                                                        "description": "errorReason, errorTimestamp, and errorBackoff are valid when state==Error.",
                                                        "type": "string"
                                                    },
                                                    "errorTimestamp": {
                                                        "format": "date-time",
                                                        "type": "string"
                                                    },
                                                    "phaseCompleted": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "phasePending": {
                                                        "description": "phaseCompleted and phasePending are valid when state==Pending or state==Error.",
                                                        "enum": [
                                                            "NA",
                                                            "DefaultsFilled",
                                                            "ACMEUserPrivateKeyCreated",
                                                            "ACMEUserRegistered",
                                                            "ACMECertificateChallenge"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "description": "The first value listed in the Enum marker becomes the \"zero\" value, and it would be great if \"Pending\" could be the default value; but it's Important that the \"zero\" value be able to be shown as empty/omitted from display, and we really do want `kubectl get hosts` to say \"Pending\" in the \"STATE\" column, and not leave the column empty.",
                                                        "enum": [
                                                            "Initial",
                                                            "Pending",
                                                            "Ready",
                                                            "Error"
                                                        ],
                                                        "type": "string"
                                                    },
                                                    "tlsCertificateSource": {
                                                        "enum": [
                                                            "Unknown",
                                                            "None",
                                                            "Other",
                                                            "ACME"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false,
                                "subresources": {
                                    "status": {}
                                }
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Host",
                            "listKind": "HostList",
                            "plural": "hosts",
                            "singular": "host"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-03-22T04:33:08Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-03-22T04:33:08Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:ConfigMap::cluster-info-configmap",
                "custom": true,
                "id": "amazon-cloudwatch/fluent-bit-cluster-info",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "cluster.name": "p-3-eks-cluster-eksCluster-fd821aa",
                        "http.port": "2020",
                        "http.server": "On",
                        "logs.region": "us-west-2",
                        "plane.id": "plane-3",
                        "read.head": "Off",
                        "read.tail": "On"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "fluent-bit-cluster-info",
                        "namespace": "amazon-cloudwatch"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "cluster.name": "p-3-eks-cluster-eksCluster-fd821aa",
                            "http.port": "2020",
                            "http.server": "On",
                            "logs.region": "us-west-2",
                            "plane.id": "plane-3",
                            "read.head": "Off",
                            "read.tail": "On"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "fluent-bit-cluster-info",
                            "namespace": "amazon-cloudwatch"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "cluster.name": "p-3-eks-cluster-eksCluster-fd821aa",
                        "http.port": "2020",
                        "http.server": "On",
                        "logs.region": "us-west-2",
                        "plane.id": "plane-3",
                        "read.head": "Off",
                        "read.tail": "On"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"cluster.name\":\"p-3-eks-cluster-eksCluster-fd821aa\",\"http.port\":\"2020\",\"http.server\":\"On\",\"logs.region\":\"us-west-2\",\"plane.id\":\"plane-3\",\"read.head\":\"Off\",\"read.tail\":\"On\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"fluent-bit-cluster-info\",\"namespace\":\"amazon-cloudwatch\"}}\n"
                        },
                        "creationTimestamp": "2022-03-22T03:11:05Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:cluster.name": {},
                                        "f:http.port": {},
                                        "f:http.server": {},
                                        "f:logs.region": {},
                                        "f:plane.id": {},
                                        "f:read.head": {},
                                        "f:read.tail": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T03:11:05Z"
                            }
                        ],
                        "name": "fluent-bit-cluster-info",
                        "namespace": "amazon-cloudwatch",
                        "resourceVersion": "1342",
                        "uid": "bf5f638c-16ec-4001-a9f4-68e255e81b75"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                    "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                    "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:Namespace::cloudwatch-ns",
                    "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops"
                ],
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": [
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:eks/cluster:Cluster::p-3-eks-cluster-eksCluster",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$aws:iam/openIdConnectProvider:OpenIdConnectProvider::p-3-eks-cluster-oidcProvider",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/role:Role::p-3-eks-cluster-instanceRole-role",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-03516f97",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-e1b295bd",
                        "urn:pulumi:plane-3::launchpad::eks:index:Cluster$eks:index:ServiceRole$aws:iam/rolePolicyAttachment:RolePolicyAttachment::p-3-eks-cluster-instanceRole-3eb088f2",
                        "urn:pulumi:plane-3::launchpad::kubernetes:storage.k8s.io/v1:StorageClass::ebs-io1-50ops"
                    ],
                    "kind": null,
                    "metadata": [
                        "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:Namespace::cloudwatch-ns"
                    ]
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition::mappings.getambassador.io",
                "custom": true,
                "id": "mappings.getambassador.io",
                "type": "kubernetes:apiextensions.k8s.io/v1:CustomResourceDefinition",
                "inputs": {
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2"
                        },
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "name": "mappings.getambassador.io"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system"
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Mapping",
                            "listKind": "MappingList",
                            "plural": "mappings",
                            "singular": "mapping"
                        },
                        "preserveUnknownFields": false,
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.host",
                                        "name": "Source Host",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.prefix",
                                        "name": "Source Prefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.service",
                                        "name": "Dest Service",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.reason",
                                        "name": "Reason",
                                        "type": "string"
                                    }
                                ],
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "MappingSpec defines the desired state of Mapping",
                                                "properties": {
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "add_request_headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "add_response_headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "allow_upgrade": {
                                                        "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_context_extensions": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "auto_host_rewrite": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_auth": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_error_response_overrides": {
                                                        "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                        "type": "boolean"
                                                    },
                                                    "case_sensitive": {
                                                        "type": "boolean"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_idle_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cluster_max_connection_lifetime_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "connect_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cors": {
                                                        "properties": {
                                                            "credentials": {
                                                                "type": "boolean"
                                                            },
                                                            "max_age": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "dns_type": {
                                                        "type": "string"
                                                    },
                                                    "docs": {
                                                        "description": "DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)",
                                                        "properties": {
                                                            "display_name": {
                                                                "type": "string"
                                                            },
                                                            "ignored": {
                                                                "type": "boolean"
                                                            },
                                                            "path": {
                                                                "type": "string"
                                                            },
                                                            "timeout_ms": {
                                                                "type": "integer"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "envoy_override": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "error_response_overrides": {
                                                        "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                        "items": {
                                                            "description": "A response rewrite for an HTTP error response",
                                                            "properties": {
                                                                "body": {
                                                                    "description": "The new response body",
                                                                    "properties": {
                                                                        "content_type": {
                                                                            "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                            "type": "string"
                                                                        },
                                                                        "json_format": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                            "type": "object"
                                                                        },
                                                                        "text_format": {
                                                                            "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                            "type": "string"
                                                                        },
                                                                        "text_format_source": {
                                                                            "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                            "properties": {
                                                                                "filename": {
                                                                                    "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "on_status_code": {
                                                                    "description": "The status code to match on -- not a pointer because it's required.",
                                                                    "maximum": 599,
                                                                    "minimum": 400,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "body",
                                                                "on_status_code"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "host_redirect": {
                                                        "type": "boolean"
                                                    },
                                                    "host_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "host_rewrite": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "keepalive": {
                                                        "properties": {
                                                            "idle_time": {
                                                                "type": "integer"
                                                            },
                                                            "interval": {
                                                                "type": "integer"
                                                            },
                                                            "probes": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "additionalProperties": {
                                                            "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                            "items": {
                                                                "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                "maxProperties": 1,
                                                                "minProperties": 1,
                                                                "type": "object",
                                                                "x-kubernetes-preserve-unknown-fields": true
                                                            },
                                                            "type": "array"
                                                        },
                                                        "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                        "type": "object"
                                                    },
                                                    "load_balancer": {
                                                        "properties": {
                                                            "cookie": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "path": {
                                                                        "type": "string"
                                                                    },
                                                                    "ttl": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "header": {
                                                                "type": "string"
                                                            },
                                                            "policy": {
                                                                "enum": [
                                                                    "round_robin",
                                                                    "ring_hash",
                                                                    "maglev",
                                                                    "least_request"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "source_ip": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "policy"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "method": {
                                                        "type": "string"
                                                    },
                                                    "method_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "modules": {
                                                        "items": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "type": "array"
                                                    },
                                                    "outlier_detection": {
                                                        "type": "string"
                                                    },
                                                    "path_redirect": {
                                                        "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "precedence": {
                                                        "type": "integer"
                                                    },
                                                    "prefix": {
                                                        "type": "string"
                                                    },
                                                    "prefix_exact": {
                                                        "type": "boolean"
                                                    },
                                                    "prefix_redirect": {
                                                        "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "prefix_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "priority": {
                                                        "type": "string"
                                                    },
                                                    "query_parameters": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "redirect_response_code": {
                                                        "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                        "enum": [
                                                            301,
                                                            302,
                                                            303,
                                                            307,
                                                            308
                                                        ],
                                                        "type": "integer"
                                                    },
                                                    "regex_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_redirect": {
                                                        "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_rewrite": {
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "respect_dns_ttl": {
                                                        "type": "boolean"
                                                    },
                                                    "retry_policy": {
                                                        "properties": {
                                                            "num_retries": {
                                                                "type": "integer"
                                                            },
                                                            "per_try_timeout": {
                                                                "type": "string"
                                                            },
                                                            "retry_on": {
                                                                "enum": [
                                                                    "5xx",
                                                                    "gateway-error",
                                                                    "connect-failure",
                                                                    "retriable-4xx",
                                                                    "refused-stream",
                                                                    "retriable-status-codes"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "rewrite": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "shadow": {
                                                        "type": "boolean"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                        "type": "integer"
                                                    },
                                                    "use_websocket": {
                                                        "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]`",
                                                        "type": "boolean"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "prefix",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "status": {
                                                "description": "MappingStatus defines the observed state of Mapping",
                                                "properties": {
                                                    "reason": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "enum": [
                                                            "",
                                                            "Inactive",
                                                            "Running"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.host",
                                        "name": "Source Host",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.prefix",
                                        "name": "Source Prefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.service",
                                        "name": "Dest Service",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.reason",
                                        "name": "Reason",
                                        "type": "string"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "MappingSpec defines the desired state of Mapping",
                                                "properties": {
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "add_request_headers": {
                                                        "additionalProperties": {
                                                            "properties": {
                                                                "append": {
                                                                    "type": "boolean"
                                                                },
                                                                "v2Representation": {
                                                                    "enum": [
                                                                        "",
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_response_headers": {
                                                        "additionalProperties": {
                                                            "properties": {
                                                                "append": {
                                                                    "type": "boolean"
                                                                },
                                                                "v2Representation": {
                                                                    "enum": [
                                                                        "",
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "allow_upgrade": {
                                                        "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_context_extensions": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "auto_host_rewrite": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_auth": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_error_response_overrides": {
                                                        "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                        "type": "boolean"
                                                    },
                                                    "case_sensitive": {
                                                        "type": "boolean"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_idle_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cluster_max_connection_lifetime_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "connect_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cors": {
                                                        "properties": {
                                                            "credentials": {
                                                                "type": "boolean"
                                                            },
                                                            "exposed_headers": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "headers": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_age": {
                                                                "type": "string"
                                                            },
                                                            "methods": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "origins": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "v2CommaSeparatedOrigins": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "dns_type": {
                                                        "type": "string"
                                                    },
                                                    "docs": {
                                                        "description": "DocsInfo provides some extra information about the docs for the Mapping. Docs is used by both the agent and the DevPortal.",
                                                        "properties": {
                                                            "display_name": {
                                                                "type": "string"
                                                            },
                                                            "ignored": {
                                                                "type": "boolean"
                                                            },
                                                            "path": {
                                                                "type": "string"
                                                            },
                                                            "timeout_ms": {
                                                                "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                                "type": "integer"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "envoy_override": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "error_response_overrides": {
                                                        "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                        "items": {
                                                            "description": "A response rewrite for an HTTP error response",
                                                            "properties": {
                                                                "body": {
                                                                    "description": "The new response body",
                                                                    "properties": {
                                                                        "content_type": {
                                                                            "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                            "type": "string"
                                                                        },
                                                                        "json_format": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                            "type": "object"
                                                                        },
                                                                        "text_format": {
                                                                            "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                            "type": "string"
                                                                        },
                                                                        "text_format_source": {
                                                                            "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                            "properties": {
                                                                                "filename": {
                                                                                    "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "on_status_code": {
                                                                    "description": "The status code to match on -- not a pointer because it's required.",
                                                                    "maximum": 599,
                                                                    "minimum": 400,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "body",
                                                                "on_status_code"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "host": {
                                                        "description": "Exact match for the hostname of a request if HostRegex is false; regex match for the hostname if HostRegex is true. \n Host specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Host will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used. \n DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                        "type": "string"
                                                    },
                                                    "host_redirect": {
                                                        "type": "boolean"
                                                    },
                                                    "host_regex": {
                                                        "description": "DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                        "type": "boolean"
                                                    },
                                                    "host_rewrite": {
                                                        "type": "string"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname is a DNS glob specifying the hosts to which this Mapping applies. \n Hostname specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Hostname will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used.",
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "keepalive": {
                                                        "properties": {
                                                            "idle_time": {
                                                                "type": "integer"
                                                            },
                                                            "interval": {
                                                                "type": "integer"
                                                            },
                                                            "probes": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "additionalProperties": {
                                                            "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                            "items": {
                                                                "additionalProperties": {
                                                                    "description": "A MappingLabelsArray is the value in the MappingLabelGroup: an array of label specifiers.",
                                                                    "items": {
                                                                        "description": "A MappingLabelSpecifier (finally!) defines a single label. \n This mimics envoy/config/route/v3/route_components.proto:RateLimit:Action:action_specifier.",
                                                                        "maxProperties": 1,
                                                                        "minProperties": 1,
                                                                        "properties": {
                                                                            "destination_cluster": {
                                                                                "description": "Sets the label \"destination_cluster=«Envoy destination cluster name»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "destination_cluster"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "generic_key": {
                                                                                "description": "Sets the label \"«key»=«value»\" (where by default «key» is \"generic_key\").",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "The default is \"generic_key\".",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "v2Shorthand": {
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "value": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "value"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "remote_address": {
                                                                                "description": "Sets the label \"remote_address=«IP address of the client»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "remote_address"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "request_headers": {
                                                                                "description": "If the «header_name» header is set, then set the label \"«key»=«Value of the «header_name» header»\"; otherwise skip applying this label group.",
                                                                                "properties": {
                                                                                    "header_name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "omit_if_not_present": {
                                                                                        "type": "boolean"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "header_name",
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "source_cluster": {
                                                                                "description": "Sets the label \"source_cluster=«Envoy source cluster name»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "source_cluster"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                "maxProperties": 1,
                                                                "minProperties": 1,
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                        "type": "object"
                                                    },
                                                    "load_balancer": {
                                                        "properties": {
                                                            "cookie": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "path": {
                                                                        "type": "string"
                                                                    },
                                                                    "ttl": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "header": {
                                                                "type": "string"
                                                            },
                                                            "policy": {
                                                                "enum": [
                                                                    "round_robin",
                                                                    "ring_hash",
                                                                    "maglev",
                                                                    "least_request"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "source_ip": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "policy"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "method": {
                                                        "type": "string"
                                                    },
                                                    "method_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "modules": {
                                                        "items": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "type": "array"
                                                    },
                                                    "outlier_detection": {
                                                        "type": "string"
                                                    },
                                                    "path_redirect": {
                                                        "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "precedence": {
                                                        "type": "integer"
                                                    },
                                                    "prefix": {
                                                        "type": "string"
                                                    },
                                                    "prefix_exact": {
                                                        "type": "boolean"
                                                    },
                                                    "prefix_redirect": {
                                                        "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "prefix_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "priority": {
                                                        "type": "string"
                                                    },
                                                    "query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "redirect_response_code": {
                                                        "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                        "enum": [
                                                            301,
                                                            302,
                                                            303,
                                                            307,
                                                            308
                                                        ],
                                                        "type": "integer"
                                                    },
                                                    "regex_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_redirect": {
                                                        "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_rewrite": {
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "remove_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "remove_response_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "respect_dns_ttl": {
                                                        "type": "boolean"
                                                    },
                                                    "retry_policy": {
                                                        "properties": {
                                                            "num_retries": {
                                                                "type": "integer"
                                                            },
                                                            "per_try_timeout": {
                                                                "type": "string"
                                                            },
                                                            "retry_on": {
                                                                "enum": [
                                                                    "5xx",
                                                                    "gateway-error",
                                                                    "connect-failure",
                                                                    "retriable-4xx",
                                                                    "refused-stream",
                                                                    "retriable-status-codes"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "rewrite": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "shadow": {
                                                        "type": "boolean"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "use_websocket": {
                                                        "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]` \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.DeprecatedUseWebsocket.",
                                                        "type": "boolean"
                                                    },
                                                    "v2BoolHeaders": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v2BoolQueryParameters": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "prefix",
                                                    "service"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "MappingStatus defines the observed state of Mapping",
                                                "properties": {
                                                    "reason": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "enum": [
                                                            "",
                                                            "Inactive",
                                                            "Running"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apiextensions.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "apiextensions.k8s.io/v1",
                        "kind": "CustomResourceDefinition",
                        "metadata": {
                            "annotations": {
                                "controller-gen.kubebuilder.io/version": "v0.6.2"
                            },
                            "labels": {
                                "app.kubernetes.io/instance": "emissary-apiext",
                                "app.kubernetes.io/managed-by": "pulumi",
                                "app.kubernetes.io/name": "emissary-apiext",
                                "app.kubernetes.io/part-of": "emissary-apiext"
                            },
                            "name": "mappings.getambassador.io"
                        },
                        "spec": {
                            "conversion": {
                                "strategy": "Webhook",
                                "webhook": {
                                    "clientConfig": {
                                        "service": {
                                            "name": "emissary-apiext",
                                            "namespace": "emissary-system"
                                        }
                                    },
                                    "conversionReviewVersions": [
                                        "v1beta1"
                                    ]
                                }
                            },
                            "group": "getambassador.io",
                            "names": {
                                "categories": [
                                    "ambassador-crds"
                                ],
                                "kind": "Mapping",
                                "listKind": "MappingList",
                                "plural": "mappings",
                                "singular": "mapping"
                            },
                            "preserveUnknownFields": false,
                            "scope": "Namespaced",
                            "versions": [
                                {
                                    "additionalPrinterColumns": [
                                        {
                                            "jsonPath": ".spec.host",
                                            "name": "Source Host",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.prefix",
                                            "name": "Source Prefix",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.service",
                                            "name": "Dest Service",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.state",
                                            "name": "State",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.reason",
                                            "name": "Reason",
                                            "type": "string"
                                        }
                                    ],
                                    "name": "v2",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Mapping is the Schema for the mappings API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "MappingSpec defines the desired state of Mapping",
                                                    "properties": {
                                                        "add_linkerd_headers": {
                                                            "type": "boolean"
                                                        },
                                                        "add_request_headers": {
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "add_response_headers": {
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "allow_upgrade": {
                                                            "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "auth_context_extensions": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "auto_host_rewrite": {
                                                            "type": "boolean"
                                                        },
                                                        "bypass_auth": {
                                                            "type": "boolean"
                                                        },
                                                        "bypass_error_response_overrides": {
                                                            "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                            "type": "boolean"
                                                        },
                                                        "case_sensitive": {
                                                            "type": "boolean"
                                                        },
                                                        "circuit_breakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "cluster_idle_timeout_ms": {
                                                            "type": "integer"
                                                        },
                                                        "cluster_max_connection_lifetime_ms": {
                                                            "type": "integer"
                                                        },
                                                        "cluster_tag": {
                                                            "type": "string"
                                                        },
                                                        "connect_timeout_ms": {
                                                            "type": "integer"
                                                        },
                                                        "cors": {
                                                            "properties": {
                                                                "credentials": {
                                                                    "type": "boolean"
                                                                },
                                                                "max_age": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "dns_type": {
                                                            "type": "string"
                                                        },
                                                        "docs": {
                                                            "description": "DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)",
                                                            "properties": {
                                                                "display_name": {
                                                                    "type": "string"
                                                                },
                                                                "ignored": {
                                                                    "type": "boolean"
                                                                },
                                                                "path": {
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "enable_ipv4": {
                                                            "type": "boolean"
                                                        },
                                                        "enable_ipv6": {
                                                            "type": "boolean"
                                                        },
                                                        "envoy_override": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "error_response_overrides": {
                                                            "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                            "items": {
                                                                "description": "A response rewrite for an HTTP error response",
                                                                "properties": {
                                                                    "body": {
                                                                        "description": "The new response body",
                                                                        "properties": {
                                                                            "content_type": {
                                                                                "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                                "type": "string"
                                                                            },
                                                                            "json_format": {
                                                                                "additionalProperties": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                                "type": "object"
                                                                            },
                                                                            "text_format": {
                                                                                "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                                "type": "string"
                                                                            },
                                                                            "text_format_source": {
                                                                                "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                                "properties": {
                                                                                    "filename": {
                                                                                        "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "on_status_code": {
                                                                        "description": "The status code to match on -- not a pointer because it's required.",
                                                                        "maximum": 599,
                                                                        "minimum": 400,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "body",
                                                                    "on_status_code"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        "grpc": {
                                                            "type": "boolean"
                                                        },
                                                        "headers": {
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "host": {
                                                            "type": "string"
                                                        },
                                                        "host_redirect": {
                                                            "type": "boolean"
                                                        },
                                                        "host_regex": {
                                                            "type": "boolean"
                                                        },
                                                        "host_rewrite": {
                                                            "type": "string"
                                                        },
                                                        "idle_timeout_ms": {
                                                            "type": "integer"
                                                        },
                                                        "keepalive": {
                                                            "properties": {
                                                                "idle_time": {
                                                                    "type": "integer"
                                                                },
                                                                "interval": {
                                                                    "type": "integer"
                                                                },
                                                                "probes": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "labels": {
                                                            "additionalProperties": {
                                                                "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                                "items": {
                                                                    "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                    "maxProperties": 1,
                                                                    "minProperties": 1,
                                                                    "type": "object",
                                                                    "x-kubernetes-preserve-unknown-fields": true
                                                                },
                                                                "type": "array"
                                                            },
                                                            "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                            "type": "object"
                                                        },
                                                        "load_balancer": {
                                                            "properties": {
                                                                "cookie": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "path": {
                                                                            "type": "string"
                                                                        },
                                                                        "ttl": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "header": {
                                                                    "type": "string"
                                                                },
                                                                "policy": {
                                                                    "enum": [
                                                                        "round_robin",
                                                                        "ring_hash",
                                                                        "maglev",
                                                                        "least_request"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "source_ip": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "required": [
                                                                "policy"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "method": {
                                                            "type": "string"
                                                        },
                                                        "method_regex": {
                                                            "type": "boolean"
                                                        },
                                                        "modules": {
                                                            "items": {
                                                                "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                                "type": "object",
                                                                "x-kubernetes-preserve-unknown-fields": true
                                                            },
                                                            "type": "array"
                                                        },
                                                        "outlier_detection": {
                                                            "type": "string"
                                                        },
                                                        "path_redirect": {
                                                            "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "type": "string"
                                                        },
                                                        "precedence": {
                                                            "type": "integer"
                                                        },
                                                        "prefix": {
                                                            "type": "string"
                                                        },
                                                        "prefix_exact": {
                                                            "type": "boolean"
                                                        },
                                                        "prefix_redirect": {
                                                            "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "type": "string"
                                                        },
                                                        "prefix_regex": {
                                                            "type": "boolean"
                                                        },
                                                        "priority": {
                                                            "type": "string"
                                                        },
                                                        "query_parameters": {
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "redirect_response_code": {
                                                            "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                            "enum": [
                                                                301,
                                                                302,
                                                                303,
                                                                307,
                                                                308
                                                            ],
                                                            "type": "integer"
                                                        },
                                                        "regex_headers": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_query_parameters": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_redirect": {
                                                            "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "properties": {
                                                                "pattern": {
                                                                    "type": "string"
                                                                },
                                                                "substitution": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_rewrite": {
                                                            "properties": {
                                                                "pattern": {
                                                                    "type": "string"
                                                                },
                                                                "substitution": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "resolver": {
                                                            "type": "string"
                                                        },
                                                        "respect_dns_ttl": {
                                                            "type": "boolean"
                                                        },
                                                        "retry_policy": {
                                                            "properties": {
                                                                "num_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "per_try_timeout": {
                                                                    "type": "string"
                                                                },
                                                                "retry_on": {
                                                                    "enum": [
                                                                        "5xx",
                                                                        "gateway-error",
                                                                        "connect-failure",
                                                                        "retriable-4xx",
                                                                        "refused-stream",
                                                                        "retriable-status-codes"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "rewrite": {
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "shadow": {
                                                            "type": "boolean"
                                                        },
                                                        "timeout_ms": {
                                                            "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                            "type": "integer"
                                                        },
                                                        "use_websocket": {
                                                            "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]`",
                                                            "type": "boolean"
                                                        },
                                                        "v3StatsName": {
                                                            "type": "string"
                                                        },
                                                        "weight": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "prefix",
                                                        "service"
                                                    ],
                                                    "type": "object",
                                                    "x-kubernetes-preserve-unknown-fields": true
                                                },
                                                "status": {
                                                    "description": "MappingStatus defines the observed state of Mapping",
                                                    "properties": {
                                                        "reason": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "enum": [
                                                                "",
                                                                "Inactive",
                                                                "Running"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": true,
                                    "subresources": {
                                        "status": {}
                                    }
                                },
                                {
                                    "additionalPrinterColumns": [
                                        {
                                            "jsonPath": ".spec.host",
                                            "name": "Source Host",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.prefix",
                                            "name": "Source Prefix",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".spec.service",
                                            "name": "Dest Service",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.state",
                                            "name": "State",
                                            "type": "string"
                                        },
                                        {
                                            "jsonPath": ".status.reason",
                                            "name": "Reason",
                                            "type": "string"
                                        }
                                    ],
                                    "name": "v3alpha1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Mapping is the Schema for the mappings API",
                                            "properties": {
                                                "apiVersion": {
                                                    "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                    "type": "string"
                                                },
                                                "kind": {
                                                    "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                    "type": "string"
                                                },
                                                "metadata": {
                                                    "type": "object"
                                                },
                                                "spec": {
                                                    "description": "MappingSpec defines the desired state of Mapping",
                                                    "properties": {
                                                        "add_linkerd_headers": {
                                                            "type": "boolean"
                                                        },
                                                        "add_request_headers": {
                                                            "additionalProperties": {
                                                                "properties": {
                                                                    "append": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "v2Representation": {
                                                                        "enum": [
                                                                            "",
                                                                            "string",
                                                                            "null"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "add_response_headers": {
                                                            "additionalProperties": {
                                                                "properties": {
                                                                    "append": {
                                                                        "type": "boolean"
                                                                    },
                                                                    "v2Representation": {
                                                                        "enum": [
                                                                            "",
                                                                            "string",
                                                                            "null"
                                                                        ],
                                                                        "type": "string"
                                                                    },
                                                                    "value": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "allow_upgrade": {
                                                            "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "ambassador_id": {
                                                            "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "auth_context_extensions": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "auto_host_rewrite": {
                                                            "type": "boolean"
                                                        },
                                                        "bypass_auth": {
                                                            "type": "boolean"
                                                        },
                                                        "bypass_error_response_overrides": {
                                                            "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                            "type": "boolean"
                                                        },
                                                        "case_sensitive": {
                                                            "type": "boolean"
                                                        },
                                                        "circuit_breakers": {
                                                            "items": {
                                                                "properties": {
                                                                    "max_connections": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_pending_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_requests": {
                                                                        "type": "integer"
                                                                    },
                                                                    "max_retries": {
                                                                        "type": "integer"
                                                                    },
                                                                    "priority": {
                                                                        "enum": [
                                                                            "default",
                                                                            "high"
                                                                        ],
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "cluster_idle_timeout_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "cluster_max_connection_lifetime_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "cluster_tag": {
                                                            "type": "string"
                                                        },
                                                        "connect_timeout_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "cors": {
                                                            "properties": {
                                                                "credentials": {
                                                                    "type": "boolean"
                                                                },
                                                                "exposed_headers": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "headers": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "max_age": {
                                                                    "type": "string"
                                                                },
                                                                "methods": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "origins": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "v2CommaSeparatedOrigins": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "dns_type": {
                                                            "type": "string"
                                                        },
                                                        "docs": {
                                                            "description": "DocsInfo provides some extra information about the docs for the Mapping. Docs is used by both the agent and the DevPortal.",
                                                            "properties": {
                                                                "display_name": {
                                                                    "type": "string"
                                                                },
                                                                "ignored": {
                                                                    "type": "boolean"
                                                                },
                                                                "path": {
                                                                    "type": "string"
                                                                },
                                                                "timeout_ms": {
                                                                    "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                                    "type": "integer"
                                                                },
                                                                "url": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "enable_ipv4": {
                                                            "type": "boolean"
                                                        },
                                                        "enable_ipv6": {
                                                            "type": "boolean"
                                                        },
                                                        "envoy_override": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "error_response_overrides": {
                                                            "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                            "items": {
                                                                "description": "A response rewrite for an HTTP error response",
                                                                "properties": {
                                                                    "body": {
                                                                        "description": "The new response body",
                                                                        "properties": {
                                                                            "content_type": {
                                                                                "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                                "type": "string"
                                                                            },
                                                                            "json_format": {
                                                                                "additionalProperties": {
                                                                                    "type": "string"
                                                                                },
                                                                                "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                                "type": "object"
                                                                            },
                                                                            "text_format": {
                                                                                "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                                "type": "string"
                                                                            },
                                                                            "text_format_source": {
                                                                                "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                                "properties": {
                                                                                    "filename": {
                                                                                        "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "on_status_code": {
                                                                        "description": "The status code to match on -- not a pointer because it's required.",
                                                                        "maximum": 599,
                                                                        "minimum": 400,
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "body",
                                                                    "on_status_code"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "minItems": 1,
                                                            "type": "array"
                                                        },
                                                        "grpc": {
                                                            "type": "boolean"
                                                        },
                                                        "headers": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "host": {
                                                            "description": "Exact match for the hostname of a request if HostRegex is false; regex match for the hostname if HostRegex is true. \n Host specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Host will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used. \n DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                            "type": "string"
                                                        },
                                                        "host_redirect": {
                                                            "type": "boolean"
                                                        },
                                                        "host_regex": {
                                                            "description": "DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                            "type": "boolean"
                                                        },
                                                        "host_rewrite": {
                                                            "type": "string"
                                                        },
                                                        "hostname": {
                                                            "description": "Hostname is a DNS glob specifying the hosts to which this Mapping applies. \n Hostname specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Hostname will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used.",
                                                            "type": "string"
                                                        },
                                                        "idle_timeout_ms": {
                                                            "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                            "type": "integer"
                                                        },
                                                        "keepalive": {
                                                            "properties": {
                                                                "idle_time": {
                                                                    "type": "integer"
                                                                },
                                                                "interval": {
                                                                    "type": "integer"
                                                                },
                                                                "probes": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "labels": {
                                                            "additionalProperties": {
                                                                "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                                "items": {
                                                                    "additionalProperties": {
                                                                        "description": "A MappingLabelsArray is the value in the MappingLabelGroup: an array of label specifiers.",
                                                                        "items": {
                                                                            "description": "A MappingLabelSpecifier (finally!) defines a single label. \n This mimics envoy/config/route/v3/route_components.proto:RateLimit:Action:action_specifier.",
                                                                            "maxProperties": 1,
                                                                            "minProperties": 1,
                                                                            "properties": {
                                                                                "destination_cluster": {
                                                                                    "description": "Sets the label \"destination_cluster=«Envoy destination cluster name»\".",
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "enum": [
                                                                                                "destination_cluster"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "generic_key": {
                                                                                    "description": "Sets the label \"«key»=«value»\" (where by default «key» is \"generic_key\").",
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "description": "The default is \"generic_key\".",
                                                                                            "type": "string"
                                                                                        },
                                                                                        "v2Shorthand": {
                                                                                            "type": "boolean"
                                                                                        },
                                                                                        "value": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "value"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "remote_address": {
                                                                                    "description": "Sets the label \"remote_address=«IP address of the client»\".",
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "enum": [
                                                                                                "remote_address"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "request_headers": {
                                                                                    "description": "If the «header_name» header is set, then set the label \"«key»=«Value of the «header_name» header»\"; otherwise skip applying this label group.",
                                                                                    "properties": {
                                                                                        "header_name": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "key": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "omit_if_not_present": {
                                                                                            "type": "boolean"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "header_name",
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                },
                                                                                "source_cluster": {
                                                                                    "description": "Sets the label \"source_cluster=«Envoy source cluster name»\".",
                                                                                    "properties": {
                                                                                        "key": {
                                                                                            "enum": [
                                                                                                "source_cluster"
                                                                                            ],
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "required": [
                                                                                        "key"
                                                                                    ],
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "type": "array"
                                                                    },
                                                                    "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                    "maxProperties": 1,
                                                                    "minProperties": 1,
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                            "type": "object"
                                                        },
                                                        "load_balancer": {
                                                            "properties": {
                                                                "cookie": {
                                                                    "properties": {
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "path": {
                                                                            "type": "string"
                                                                        },
                                                                        "ttl": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "name"
                                                                    ],
                                                                    "type": "object"
                                                                },
                                                                "header": {
                                                                    "type": "string"
                                                                },
                                                                "policy": {
                                                                    "enum": [
                                                                        "round_robin",
                                                                        "ring_hash",
                                                                        "maglev",
                                                                        "least_request"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "source_ip": {
                                                                    "type": "boolean"
                                                                }
                                                            },
                                                            "required": [
                                                                "policy"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "method": {
                                                            "type": "string"
                                                        },
                                                        "method_regex": {
                                                            "type": "boolean"
                                                        },
                                                        "modules": {
                                                            "items": {
                                                                "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                                "type": "object",
                                                                "x-kubernetes-preserve-unknown-fields": true
                                                            },
                                                            "type": "array"
                                                        },
                                                        "outlier_detection": {
                                                            "type": "string"
                                                        },
                                                        "path_redirect": {
                                                            "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "type": "string"
                                                        },
                                                        "precedence": {
                                                            "type": "integer"
                                                        },
                                                        "prefix": {
                                                            "type": "string"
                                                        },
                                                        "prefix_exact": {
                                                            "type": "boolean"
                                                        },
                                                        "prefix_redirect": {
                                                            "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "type": "string"
                                                        },
                                                        "prefix_regex": {
                                                            "type": "boolean"
                                                        },
                                                        "priority": {
                                                            "type": "string"
                                                        },
                                                        "query_parameters": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "redirect_response_code": {
                                                            "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                            "enum": [
                                                                301,
                                                                302,
                                                                303,
                                                                307,
                                                                308
                                                            ],
                                                            "type": "integer"
                                                        },
                                                        "regex_headers": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_query_parameters": {
                                                            "additionalProperties": {
                                                                "type": "string"
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_redirect": {
                                                            "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                            "properties": {
                                                                "pattern": {
                                                                    "type": "string"
                                                                },
                                                                "substitution": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "regex_rewrite": {
                                                            "properties": {
                                                                "pattern": {
                                                                    "type": "string"
                                                                },
                                                                "substitution": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "remove_request_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "remove_response_headers": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "resolver": {
                                                            "type": "string"
                                                        },
                                                        "respect_dns_ttl": {
                                                            "type": "boolean"
                                                        },
                                                        "retry_policy": {
                                                            "properties": {
                                                                "num_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "per_try_timeout": {
                                                                    "type": "string"
                                                                },
                                                                "retry_on": {
                                                                    "enum": [
                                                                        "5xx",
                                                                        "gateway-error",
                                                                        "connect-failure",
                                                                        "retriable-4xx",
                                                                        "refused-stream",
                                                                        "retriable-status-codes"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "rewrite": {
                                                            "type": "string"
                                                        },
                                                        "service": {
                                                            "type": "string"
                                                        },
                                                        "shadow": {
                                                            "type": "boolean"
                                                        },
                                                        "stats_name": {
                                                            "type": "string"
                                                        },
                                                        "timeout_ms": {
                                                            "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                            "type": "integer"
                                                        },
                                                        "tls": {
                                                            "type": "string"
                                                        },
                                                        "use_websocket": {
                                                            "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]` \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.DeprecatedUseWebsocket.",
                                                            "type": "boolean"
                                                        },
                                                        "v2BoolHeaders": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "v2BoolQueryParameters": {
                                                            "items": {
                                                                "type": "string"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "v2ExplicitTLS": {
                                                            "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                            "properties": {
                                                                "serviceScheme": {
                                                                    "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                    "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                    "type": "string"
                                                                },
                                                                "tls": {
                                                                    "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                    "enum": [
                                                                        "",
                                                                        "null",
                                                                        "bool:true",
                                                                        "bool:false",
                                                                        "string"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "weight": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "required": [
                                                        "prefix",
                                                        "service"
                                                    ],
                                                    "type": "object"
                                                },
                                                "status": {
                                                    "description": "MappingStatus defines the observed state of Mapping",
                                                    "properties": {
                                                        "reason": {
                                                            "type": "string"
                                                        },
                                                        "state": {
                                                            "enum": [
                                                                "",
                                                                "Inactive",
                                                                "Running"
                                                            ],
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "served": true,
                                    "storage": false,
                                    "subresources": {
                                        "status": {}
                                    }
                                },
                                {
                                    "name": "v1",
                                    "schema": {
                                        "openAPIV3Schema": {
                                            "description": "Mapping is the Schema for the mappings API",
                                            "type": "object",
                                            "x-kubernetes-preserve-unknown-fields": true
                                        }
                                    },
                                    "served": false,
                                    "storage": false
                                }
                            ]
                        }
                    },
                    "apiVersion": "apiextensions.k8s.io/v1",
                    "kind": "CustomResourceDefinition",
                    "metadata": {
                        "annotations": {
                            "controller-gen.kubebuilder.io/version": "v0.6.2",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apiextensions.k8s.io/v1\",\"kind\":\"CustomResourceDefinition\",\"metadata\":{\"annotations\":{\"controller-gen.kubebuilder.io/version\":\"v0.6.2\"},\"labels\":{\"app.kubernetes.io/instance\":\"emissary-apiext\",\"app.kubernetes.io/managed-by\":\"pulumi\",\"app.kubernetes.io/name\":\"emissary-apiext\",\"app.kubernetes.io/part-of\":\"emissary-apiext\"},\"name\":\"mappings.getambassador.io\"},\"spec\":{\"conversion\":{\"strategy\":\"Webhook\",\"webhook\":{\"clientConfig\":{\"service\":{\"name\":\"emissary-apiext\",\"namespace\":\"emissary-system\"}},\"conversionReviewVersions\":[\"v1beta1\"]}},\"group\":\"getambassador.io\",\"names\":{\"categories\":[\"ambassador-crds\"],\"kind\":\"Mapping\",\"listKind\":\"MappingList\",\"plural\":\"mappings\",\"singular\":\"mapping\"},\"preserveUnknownFields\":false,\"scope\":\"Namespaced\",\"versions\":[{\"additionalPrinterColumns\":[{\"jsonPath\":\".spec.host\",\"name\":\"Source Host\",\"type\":\"string\"},{\"jsonPath\":\".spec.prefix\",\"name\":\"Source Prefix\",\"type\":\"string\"},{\"jsonPath\":\".spec.service\",\"name\":\"Dest Service\",\"type\":\"string\"},{\"jsonPath\":\".status.state\",\"name\":\"State\",\"type\":\"string\"},{\"jsonPath\":\".status.reason\",\"name\":\"Reason\",\"type\":\"string\"}],\"name\":\"v2\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Mapping is the Schema for the mappings API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"MappingSpec defines the desired state of Mapping\",\"properties\":{\"add_linkerd_headers\":{\"type\":\"boolean\"},\"add_request_headers\":{\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"add_response_headers\":{\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"allow_upgrade\":{\"description\":\"A case-insensitive list of the non-HTTP protocols to allow \\\"upgrading\\\" to from HTTP via the \\\"Connection: upgrade\\\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \\n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \\n For example, if your upstream service supports WebSockets, you would write \\n    allow_upgrade:    - websocket \\n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \\n    allow_upgrade:    - spdy/3.1\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"auth_context_extensions\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"auto_host_rewrite\":{\"type\":\"boolean\"},\"bypass_auth\":{\"type\":\"boolean\"},\"bypass_error_response_overrides\":{\"description\":\"If true, bypasses any `error_response_overrides` set on the Ambassador module.\",\"type\":\"boolean\"},\"case_sensitive\":{\"type\":\"boolean\"},\"circuit_breakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"cluster_idle_timeout_ms\":{\"type\":\"integer\"},\"cluster_max_connection_lifetime_ms\":{\"type\":\"integer\"},\"cluster_tag\":{\"type\":\"string\"},\"connect_timeout_ms\":{\"type\":\"integer\"},\"cors\":{\"properties\":{\"credentials\":{\"type\":\"boolean\"},\"max_age\":{\"type\":\"string\"}},\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"dns_type\":{\"type\":\"string\"},\"docs\":{\"description\":\"DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)\",\"properties\":{\"display_name\":{\"type\":\"string\"},\"ignored\":{\"type\":\"boolean\"},\"path\":{\"type\":\"string\"},\"timeout_ms\":{\"type\":\"integer\"},\"url\":{\"type\":\"string\"}},\"type\":\"object\"},\"enable_ipv4\":{\"type\":\"boolean\"},\"enable_ipv6\":{\"type\":\"boolean\"},\"envoy_override\":{\"description\":\"UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"error_response_overrides\":{\"description\":\"Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.\",\"items\":{\"description\":\"A response rewrite for an HTTP error response\",\"properties\":{\"body\":{\"description\":\"The new response body\",\"properties\":{\"content_type\":{\"description\":\"The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.\",\"type\":\"string\"},\"json_format\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A JSON response with content-type: application/json. The values can contain format text like in text_format.\",\"type\":\"object\"},\"text_format\":{\"description\":\"A format string representing a text response body. Content-Type can be set using the `content_type` field below.\",\"type\":\"string\"},\"text_format_source\":{\"description\":\"A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.\",\"properties\":{\"filename\":{\"description\":\"The name of a file on the Ambassador pod that contains a format text string.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"on_status_code\":{\"description\":\"The status code to match on -- not a pointer because it's required.\",\"maximum\":599,\"minimum\":400,\"type\":\"integer\"}},\"required\":[\"body\",\"on_status_code\"],\"type\":\"object\"},\"minItems\":1,\"type\":\"array\"},\"grpc\":{\"type\":\"boolean\"},\"headers\":{\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"host\":{\"type\":\"string\"},\"host_redirect\":{\"type\":\"boolean\"},\"host_regex\":{\"type\":\"boolean\"},\"host_rewrite\":{\"type\":\"string\"},\"idle_timeout_ms\":{\"type\":\"integer\"},\"keepalive\":{\"properties\":{\"idle_time\":{\"type\":\"integer\"},\"interval\":{\"type\":\"integer\"},\"probes\":{\"type\":\"integer\"}},\"type\":\"object\"},\"labels\":{\"additionalProperties\":{\"description\":\"A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.\",\"items\":{\"description\":\"A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.\",\"maxProperties\":1,\"minProperties\":1,\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"type\":\"array\"},\"description\":\"A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.\",\"type\":\"object\"},\"load_balancer\":{\"properties\":{\"cookie\":{\"properties\":{\"name\":{\"type\":\"string\"},\"path\":{\"type\":\"string\"},\"ttl\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"header\":{\"type\":\"string\"},\"policy\":{\"enum\":[\"round_robin\",\"ring_hash\",\"maglev\",\"least_request\"],\"type\":\"string\"},\"source_ip\":{\"type\":\"boolean\"}},\"required\":[\"policy\"],\"type\":\"object\"},\"method\":{\"type\":\"string\"},\"method_regex\":{\"type\":\"boolean\"},\"modules\":{\"items\":{\"description\":\"UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"type\":\"array\"},\"outlier_detection\":{\"type\":\"string\"},\"path_redirect\":{\"description\":\"Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.\",\"type\":\"string\"},\"precedence\":{\"type\":\"integer\"},\"prefix\":{\"type\":\"string\"},\"prefix_exact\":{\"type\":\"boolean\"},\"prefix_redirect\":{\"description\":\"Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.\",\"type\":\"string\"},\"prefix_regex\":{\"type\":\"boolean\"},\"priority\":{\"type\":\"string\"},\"query_parameters\":{\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"redirect_response_code\":{\"description\":\"The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.\",\"enum\":[301,302,303,307,308],\"type\":\"integer\"},\"regex_headers\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"regex_query_parameters\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"regex_redirect\":{\"description\":\"Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.\",\"properties\":{\"pattern\":{\"type\":\"string\"},\"substitution\":{\"type\":\"string\"}},\"type\":\"object\"},\"regex_rewrite\":{\"properties\":{\"pattern\":{\"type\":\"string\"},\"substitution\":{\"type\":\"string\"}},\"type\":\"object\"},\"resolver\":{\"type\":\"string\"},\"respect_dns_ttl\":{\"type\":\"boolean\"},\"retry_policy\":{\"properties\":{\"num_retries\":{\"type\":\"integer\"},\"per_try_timeout\":{\"type\":\"string\"},\"retry_on\":{\"enum\":[\"5xx\",\"gateway-error\",\"connect-failure\",\"retriable-4xx\",\"refused-stream\",\"retriable-status-codes\"],\"type\":\"string\"}},\"type\":\"object\"},\"rewrite\":{\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"shadow\":{\"type\":\"boolean\"},\"timeout_ms\":{\"description\":\"The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.\",\"type\":\"integer\"},\"use_websocket\":{\"description\":\"use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\\\"websocket\\\"]`\",\"type\":\"boolean\"},\"v3StatsName\":{\"type\":\"string\"},\"weight\":{\"type\":\"integer\"}},\"required\":[\"prefix\",\"service\"],\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"status\":{\"description\":\"MappingStatus defines the observed state of Mapping\",\"properties\":{\"reason\":{\"type\":\"string\"},\"state\":{\"enum\":[\"\",\"Inactive\",\"Running\"],\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":true,\"subresources\":{\"status\":{}}},{\"additionalPrinterColumns\":[{\"jsonPath\":\".spec.host\",\"name\":\"Source Host\",\"type\":\"string\"},{\"jsonPath\":\".spec.prefix\",\"name\":\"Source Prefix\",\"type\":\"string\"},{\"jsonPath\":\".spec.service\",\"name\":\"Dest Service\",\"type\":\"string\"},{\"jsonPath\":\".status.state\",\"name\":\"State\",\"type\":\"string\"},{\"jsonPath\":\".status.reason\",\"name\":\"Reason\",\"type\":\"string\"}],\"name\":\"v3alpha1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Mapping is the Schema for the mappings API\",\"properties\":{\"apiVersion\":{\"description\":\"APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\",\"type\":\"string\"},\"kind\":{\"description\":\"Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\",\"type\":\"string\"},\"metadata\":{\"type\":\"object\"},\"spec\":{\"description\":\"MappingSpec defines the desired state of Mapping\",\"properties\":{\"add_linkerd_headers\":{\"type\":\"boolean\"},\"add_request_headers\":{\"additionalProperties\":{\"properties\":{\"append\":{\"type\":\"boolean\"},\"v2Representation\":{\"enum\":[\"\",\"string\",\"null\"],\"type\":\"string\"},\"value\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"object\"},\"add_response_headers\":{\"additionalProperties\":{\"properties\":{\"append\":{\"type\":\"boolean\"},\"v2Representation\":{\"enum\":[\"\",\"string\",\"null\"],\"type\":\"string\"},\"value\":{\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"object\"},\"allow_upgrade\":{\"description\":\"A case-insensitive list of the non-HTTP protocols to allow \\\"upgrading\\\" to from HTTP via the \\\"Connection: upgrade\\\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \\n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \\n For example, if your upstream service supports WebSockets, you would write \\n    allow_upgrade:    - websocket \\n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \\n    allow_upgrade:    - spdy/3.1\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"ambassador_id\":{\"description\":\"AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \\n    ambassador_id:    - \\\"default\\\" \\n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).\",\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"auth_context_extensions\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"auto_host_rewrite\":{\"type\":\"boolean\"},\"bypass_auth\":{\"type\":\"boolean\"},\"bypass_error_response_overrides\":{\"description\":\"If true, bypasses any `error_response_overrides` set on the Ambassador module.\",\"type\":\"boolean\"},\"case_sensitive\":{\"type\":\"boolean\"},\"circuit_breakers\":{\"items\":{\"properties\":{\"max_connections\":{\"type\":\"integer\"},\"max_pending_requests\":{\"type\":\"integer\"},\"max_requests\":{\"type\":\"integer\"},\"max_retries\":{\"type\":\"integer\"},\"priority\":{\"enum\":[\"default\",\"high\"],\"type\":\"string\"}},\"type\":\"object\"},\"type\":\"array\"},\"cluster_idle_timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"cluster_max_connection_lifetime_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"cluster_tag\":{\"type\":\"string\"},\"connect_timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"cors\":{\"properties\":{\"credentials\":{\"type\":\"boolean\"},\"exposed_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"max_age\":{\"type\":\"string\"},\"methods\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"origins\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"v2CommaSeparatedOrigins\":{\"type\":\"boolean\"}},\"type\":\"object\"},\"dns_type\":{\"type\":\"string\"},\"docs\":{\"description\":\"DocsInfo provides some extra information about the docs for the Mapping. Docs is used by both the agent and the DevPortal.\",\"properties\":{\"display_name\":{\"type\":\"string\"},\"ignored\":{\"type\":\"boolean\"},\"path\":{\"type\":\"string\"},\"timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"url\":{\"type\":\"string\"}},\"type\":\"object\"},\"enable_ipv4\":{\"type\":\"boolean\"},\"enable_ipv6\":{\"type\":\"boolean\"},\"envoy_override\":{\"description\":\"UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"error_response_overrides\":{\"description\":\"Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.\",\"items\":{\"description\":\"A response rewrite for an HTTP error response\",\"properties\":{\"body\":{\"description\":\"The new response body\",\"properties\":{\"content_type\":{\"description\":\"The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.\",\"type\":\"string\"},\"json_format\":{\"additionalProperties\":{\"type\":\"string\"},\"description\":\"A JSON response with content-type: application/json. The values can contain format text like in text_format.\",\"type\":\"object\"},\"text_format\":{\"description\":\"A format string representing a text response body. Content-Type can be set using the `content_type` field below.\",\"type\":\"string\"},\"text_format_source\":{\"description\":\"A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.\",\"properties\":{\"filename\":{\"description\":\"The name of a file on the Ambassador pod that contains a format text string.\",\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"},\"on_status_code\":{\"description\":\"The status code to match on -- not a pointer because it's required.\",\"maximum\":599,\"minimum\":400,\"type\":\"integer\"}},\"required\":[\"body\",\"on_status_code\"],\"type\":\"object\"},\"minItems\":1,\"type\":\"array\"},\"grpc\":{\"type\":\"boolean\"},\"headers\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"host\":{\"description\":\"Exact match for the hostname of a request if HostRegex is false; regex match for the hostname if HostRegex is true. \\n Host specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Host will not associate with a Host that doesn't have a matching Hostname. \\n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used. \\n DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \\n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.\",\"type\":\"string\"},\"host_redirect\":{\"type\":\"boolean\"},\"host_regex\":{\"description\":\"DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \\n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.\",\"type\":\"boolean\"},\"host_rewrite\":{\"type\":\"string\"},\"hostname\":{\"description\":\"Hostname is a DNS glob specifying the hosts to which this Mapping applies. \\n Hostname specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Hostname will not associate with a Host that doesn't have a matching Hostname. \\n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used.\",\"type\":\"string\"},\"idle_timeout_ms\":{\"description\":\"TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.\",\"type\":\"integer\"},\"keepalive\":{\"properties\":{\"idle_time\":{\"type\":\"integer\"},\"interval\":{\"type\":\"integer\"},\"probes\":{\"type\":\"integer\"}},\"type\":\"object\"},\"labels\":{\"additionalProperties\":{\"description\":\"A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.\",\"items\":{\"additionalProperties\":{\"description\":\"A MappingLabelsArray is the value in the MappingLabelGroup: an array of label specifiers.\",\"items\":{\"description\":\"A MappingLabelSpecifier (finally!) defines a single label. \\n This mimics envoy/config/route/v3/route_components.proto:RateLimit:Action:action_specifier.\",\"maxProperties\":1,\"minProperties\":1,\"properties\":{\"destination_cluster\":{\"description\":\"Sets the label \\\"destination_cluster=«Envoy destination cluster name»\\\".\",\"properties\":{\"key\":{\"enum\":[\"destination_cluster\"],\"type\":\"string\"}},\"required\":[\"key\"],\"type\":\"object\"},\"generic_key\":{\"description\":\"Sets the label \\\"«key»=«value»\\\" (where by default «key» is \\\"generic_key\\\").\",\"properties\":{\"key\":{\"description\":\"The default is \\\"generic_key\\\".\",\"type\":\"string\"},\"v2Shorthand\":{\"type\":\"boolean\"},\"value\":{\"type\":\"string\"}},\"required\":[\"value\"],\"type\":\"object\"},\"remote_address\":{\"description\":\"Sets the label \\\"remote_address=«IP address of the client»\\\".\",\"properties\":{\"key\":{\"enum\":[\"remote_address\"],\"type\":\"string\"}},\"required\":[\"key\"],\"type\":\"object\"},\"request_headers\":{\"description\":\"If the «header_name» header is set, then set the label \\\"«key»=«Value of the «header_name» header»\\\"; otherwise skip applying this label group.\",\"properties\":{\"header_name\":{\"type\":\"string\"},\"key\":{\"type\":\"string\"},\"omit_if_not_present\":{\"type\":\"boolean\"}},\"required\":[\"header_name\",\"key\"],\"type\":\"object\"},\"source_cluster\":{\"description\":\"Sets the label \\\"source_cluster=«Envoy source cluster name»\\\".\",\"properties\":{\"key\":{\"enum\":[\"source_cluster\"],\"type\":\"string\"}},\"required\":[\"key\"],\"type\":\"object\"}},\"type\":\"object\"},\"type\":\"array\"},\"description\":\"A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.\",\"maxProperties\":1,\"minProperties\":1,\"type\":\"object\"},\"type\":\"array\"},\"description\":\"A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.\",\"type\":\"object\"},\"load_balancer\":{\"properties\":{\"cookie\":{\"properties\":{\"name\":{\"type\":\"string\"},\"path\":{\"type\":\"string\"},\"ttl\":{\"type\":\"string\"}},\"required\":[\"name\"],\"type\":\"object\"},\"header\":{\"type\":\"string\"},\"policy\":{\"enum\":[\"round_robin\",\"ring_hash\",\"maglev\",\"least_request\"],\"type\":\"string\"},\"source_ip\":{\"type\":\"boolean\"}},\"required\":[\"policy\"],\"type\":\"object\"},\"method\":{\"type\":\"string\"},\"method_regex\":{\"type\":\"boolean\"},\"modules\":{\"items\":{\"description\":\"UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true},\"type\":\"array\"},\"outlier_detection\":{\"type\":\"string\"},\"path_redirect\":{\"description\":\"Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.\",\"type\":\"string\"},\"precedence\":{\"type\":\"integer\"},\"prefix\":{\"type\":\"string\"},\"prefix_exact\":{\"type\":\"boolean\"},\"prefix_redirect\":{\"description\":\"Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.\",\"type\":\"string\"},\"prefix_regex\":{\"type\":\"boolean\"},\"priority\":{\"type\":\"string\"},\"query_parameters\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"redirect_response_code\":{\"description\":\"The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.\",\"enum\":[301,302,303,307,308],\"type\":\"integer\"},\"regex_headers\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"regex_query_parameters\":{\"additionalProperties\":{\"type\":\"string\"},\"type\":\"object\"},\"regex_redirect\":{\"description\":\"Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.\",\"properties\":{\"pattern\":{\"type\":\"string\"},\"substitution\":{\"type\":\"string\"}},\"type\":\"object\"},\"regex_rewrite\":{\"properties\":{\"pattern\":{\"type\":\"string\"},\"substitution\":{\"type\":\"string\"}},\"type\":\"object\"},\"remove_request_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"remove_response_headers\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"resolver\":{\"type\":\"string\"},\"respect_dns_ttl\":{\"type\":\"boolean\"},\"retry_policy\":{\"properties\":{\"num_retries\":{\"type\":\"integer\"},\"per_try_timeout\":{\"type\":\"string\"},\"retry_on\":{\"enum\":[\"5xx\",\"gateway-error\",\"connect-failure\",\"retriable-4xx\",\"refused-stream\",\"retriable-status-codes\"],\"type\":\"string\"}},\"type\":\"object\"},\"rewrite\":{\"type\":\"string\"},\"service\":{\"type\":\"string\"},\"shadow\":{\"type\":\"boolean\"},\"stats_name\":{\"type\":\"string\"},\"timeout_ms\":{\"description\":\"The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.\",\"type\":\"integer\"},\"tls\":{\"type\":\"string\"},\"use_websocket\":{\"description\":\"use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\\\"websocket\\\"]` \\n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.DeprecatedUseWebsocket.\",\"type\":\"boolean\"},\"v2BoolHeaders\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"v2BoolQueryParameters\":{\"items\":{\"type\":\"string\"},\"type\":\"array\"},\"v2ExplicitTLS\":{\"description\":\"V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.\",\"properties\":{\"serviceScheme\":{\"description\":\"ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \\n Acceptable values are \\\"http://\\\" (case-insensitive), \\\"https://\\\" (case-insensitive), or \\\"\\\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.\",\"pattern\":\"^([hH][tT][tT][pP][sS]?://)?$\",\"type\":\"string\"},\"tls\":{\"description\":\"TLS controls whether and how to represent the \\\"tls\\\" field when its value could be implied by the \\\"service\\\" field.  In v2, there were a lot of different ways to spell an \\\"empty\\\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \\n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \\\"\\\"           | omit the field                        | defer to service (no TLSContext)   |  | \\\"null\\\"       | store an explicit \\\"null\\\" in the field | defer to service (no TLSContext)   |  | \\\"string\\\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \\\"bool:false\\\" | store a Boolean \\\"false\\\" in the field  | defer to service (no TLSContext)   |  | \\\"bool:true\\\"  | store a Boolean \\\"true\\\" in the field   | originate TLS (no TLSContext)      | \\n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \\\"bool:true\\\" if TLS is not to be originated), then this field is ignored.\",\"enum\":[\"\",\"null\",\"bool:true\",\"bool:false\",\"string\"],\"type\":\"string\"}},\"type\":\"object\"},\"weight\":{\"type\":\"integer\"}},\"required\":[\"prefix\",\"service\"],\"type\":\"object\"},\"status\":{\"description\":\"MappingStatus defines the observed state of Mapping\",\"properties\":{\"reason\":{\"type\":\"string\"},\"state\":{\"enum\":[\"\",\"Inactive\",\"Running\"],\"type\":\"string\"}},\"type\":\"object\"}},\"type\":\"object\"}},\"served\":true,\"storage\":false,\"subresources\":{\"status\":{}}},{\"name\":\"v1\",\"schema\":{\"openAPIV3Schema\":{\"description\":\"Mapping is the Schema for the mappings API\",\"type\":\"object\",\"x-kubernetes-preserve-unknown-fields\":true}},\"served\":false,\"storage\":false}]}}\n"
                        },
                        "creationTimestamp": "2022-03-22T04:33:08Z",
                        "generation": 2,
                        "labels": {
                            "app.kubernetes.io/instance": "emissary-apiext",
                            "app.kubernetes.io/managed-by": "pulumi",
                            "app.kubernetes.io/name": "emissary-apiext",
                            "app.kubernetes.io/part-of": "emissary-apiext"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:status": {
                                        "f:acceptedNames": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:conditions": {
                                            "k:{\"type\":\"Established\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            },
                                            "k:{\"type\":\"NamesAccepted\"}": {
                                                ".": {},
                                                "f:lastTransitionTime": {},
                                                "f:message": {},
                                                "f:reason": {},
                                                "f:status": {},
                                                "f:type": {}
                                            }
                                        }
                                    }
                                },
                                "manager": "kube-apiserver",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:08Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:controller-gen.kubebuilder.io/version": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/instance": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:app.kubernetes.io/name": {},
                                            "f:app.kubernetes.io/part-of": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:conversion": {
                                            ".": {},
                                            "f:strategy": {},
                                            "f:webhook": {
                                                ".": {},
                                                "f:clientConfig": {
                                                    ".": {},
                                                    "f:service": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:namespace": {},
                                                        "f:port": {}
                                                    }
                                                },
                                                "f:conversionReviewVersions": {}
                                            }
                                        },
                                        "f:group": {},
                                        "f:names": {
                                            "f:categories": {},
                                            "f:kind": {},
                                            "f:listKind": {},
                                            "f:plural": {},
                                            "f:singular": {}
                                        },
                                        "f:scope": {},
                                        "f:versions": {}
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:08Z"
                            },
                            {
                                "apiVersion": "apiextensions.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:spec": {
                                        "f:conversion": {
                                            "f:webhook": {
                                                "f:clientConfig": {
                                                    "f:caBundle": {},
                                                    "f:service": {
                                                        "f:path": {}
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "manager": "apiext",
                                "operation": "Update",
                                "time": "2022-03-22T04:33:11Z"
                            }
                        ],
                        "name": "mappings.getambassador.io",
                        "resourceVersion": "14992",
                        "uid": "a360f529-9c35-42c5-9453-8175c2e3b71c"
                    },
                    "spec": {
                        "conversion": {
                            "strategy": "Webhook",
                            "webhook": {
                                "clientConfig": {
                                    "caBundle": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZJRENDQXdpZ0F3SUJBZ0lSQUwrTWhSTkZpYmV0ampjLzlHZDZJMUl3RFFZSktvWklodmNOQVFFTEJRQXcKR2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUI0WERUSXlNRE15TWpBME16TXhNRm9YRFRJegpNRE15TWpBME16TXhNRm93R2pFWU1CWUdBMVVFQ2hNUFFXMWlZWE56WVdSdmNpQk1ZV0p6TUlJQ0lqQU5CZ2txCmhraUc5dzBCQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBbVFTWThHM2VEZkxYSjcyelp5a0tSVXZjeVlRME41T1UKeTVMaHZGd043ank5SFM2U0xPbGE1Q3NZYWpQdHFMbnhzSmdwazhFLzF3bmtCakJNUEFKbitCN2RQZmFqNFlnagoweW45Z2hXa1pyMFFBcWtHQm9OWnltRjc5OXN0eHkrSXRCVVhSWEtDckNBbDNCTmxJb2lqQUM5OEJTMEloSFQ4CjRkVmxqQ01sOTZjOVhudkdBdzU3WlY3L2gvZXJGMHlBWERLTVk4dVZ0dXdnYlJoUVJjVlNrSWhiMUpBdHlGUWMKVVA3QkFDUTltbFZSWUZYQUE2SWFBVUdmcTMyZ2ViVDN0YnZlN044MDFudm82aWp3Qm52REN0ZmluNXZ1OWRtbgpOMmZzV1duNVk2SWVKRHlzaWNDL1Q3Q044ekUzNWFUK1NZZk9TVGJiUU9McWF4Q3lWODdaV0lOM215MW5OU0lYClFBUC9jclhWTHFsNWd6bDNUa1BwNGV1MGdBR3BUSW14ZTIyWWtBUWpZUlZSWENjZ2JYZCtjdVlDUG5sK200ZXQKTXh2WDRnMDhZYWRlY3plNUhlL1dsb2k1R2xMMHJHVEFIOUFPdFlmWFEyMXJ6MVJ6SGtqbGV3azVhL1hRUjIzdgpCVnJTZEErMi9XVkJLZEV1Tmc4RFN2UXMwV25tVmx3SEhYVEJrYnh5S2lrd2NTRnY1SGdqbTZMUjFTU01aNFVmCjV0MFJ1ejc1ZzZOMUd3SzhmdmhlUUtORmJmV0s1cWVTbHFicWJKT0gxMEFsR2l1UjQ3a29vbkt2N0ZqSXl0WE8KUVpiaDBSWHE2ekFIZGROUVpFZVFNb1IxVnVRWFZjRk9sVVZUbmpRS3FVNitxN2EvMkJ4bkxPTlJVWnYvYUFYMQpLbUlCZGVpeG8vRUNBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLRU1CMEdBMVVkSlFRV01CUUdDQ3NHCkFRVUZCd01DQmdnckJnRUZCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRSnhNZkMKQ0VJeDU0V3FYNDFycjVIb2IrL3Y0akFOQmdrcWhraUc5dzBCQVFzRkFBT0NBZ0VBRlB6cVVoazNXbnNzTUIzdwp3WWlWRVl4amZFcE9qNWtla3lXODhTd2ViRVBuYm03UHp1QXQyelhpQUN4MzlvM01PYy9KSmxCSWQvUSsvYmRICmtEK05YdUVxQVh4Qk9yaVoyaEpVVVBUSGtZS0dzWXNtZzN2LzIvcVpUeVVnKzVXZWxDaWRJMmRWZHZUWGtYK1YKRis3ZmVDeWNqbUozNUkvek42ZDdZOXd1TklMRDVrS2FhZXdBY0dLbVdqb3g3Q0pkb25Od05Xc3dmYTY0bFBlbApQYm8vZnpJZzQ2aUY4MGhualltVWQzUStDWTRodXBiV3VMUkZ1Z3ZDd1B3MWlTYThJb2s0YjhCa0xaTDBIZXpTCjJSZ2JlcVZRRHFOMWZaOERYVlVwM3dlem1GVk5IOUZLUGZmTTFlNXMyWjBkVHdDZ3pKRjUzcFJ4N0VWc2pITVAKZUN6YXROcDViZUJnN0E0QjFLRFdiVmpjNkdKR1RXb1FoQ2NZTUlWMXd1RWh4US9QMlo0OXE5WDBKK00rdy9zSwpNWVZhLzVTbUxTK0RHM0dleUQvMnd2T25MR1FZT1RtMzIvUmdDc1lMNG9RSURTaUpiQnQrcVlva0t6TUdGMytQCjh4UDI1cFBzWHFxYzZKeW1aYTRINTVDOWkzNHl0dEcyb0dQYTdRMVZhaTBUQTFRTTFaNUdFUVFNY3o2RHZ1Z2MKYXpObHZacEROaXVrT3hJek50M1BkUjFzaUtNWnY5Y1o3MC9oTFVxRWl2OWxuN3VheWZwREV3c09EckxRSjBhSQozK1EzUnBjUnZXbjg5N3ZGRytkcTRvcUFSSU9zWEF4TEdZdWp1NWV3U1BDNUQzQXhSZ2xXU1NaaHhBYmJuK2Z0CjBBQ3RGV0Ntc1IvNkY0Nnhjakt6S29wUG51az0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                                    "service": {
                                        "name": "emissary-apiext",
                                        "namespace": "emissary-system",
                                        "path": "/webhooks/crd-convert",
                                        "port": 443
                                    }
                                },
                                "conversionReviewVersions": [
                                    "v1beta1"
                                ]
                            }
                        },
                        "group": "getambassador.io",
                        "names": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Mapping",
                            "listKind": "MappingList",
                            "plural": "mappings",
                            "singular": "mapping"
                        },
                        "scope": "Namespaced",
                        "versions": [
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.host",
                                        "name": "Source Host",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.prefix",
                                        "name": "Source Prefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.service",
                                        "name": "Dest Service",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.reason",
                                        "name": "Reason",
                                        "type": "string"
                                    }
                                ],
                                "name": "v2",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "MappingSpec defines the desired state of Mapping",
                                                "properties": {
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "add_request_headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "add_response_headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "allow_upgrade": {
                                                        "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_context_extensions": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "auto_host_rewrite": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_auth": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_error_response_overrides": {
                                                        "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                        "type": "boolean"
                                                    },
                                                    "case_sensitive": {
                                                        "type": "boolean"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_idle_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cluster_max_connection_lifetime_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "connect_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "cors": {
                                                        "properties": {
                                                            "credentials": {
                                                                "type": "boolean"
                                                            },
                                                            "max_age": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "dns_type": {
                                                        "type": "string"
                                                    },
                                                    "docs": {
                                                        "description": "DocsInfo provides some extra information about the docs for the Mapping (used by the Dev Portal)",
                                                        "properties": {
                                                            "display_name": {
                                                                "type": "string"
                                                            },
                                                            "ignored": {
                                                                "type": "boolean"
                                                            },
                                                            "path": {
                                                                "type": "string"
                                                            },
                                                            "timeout_ms": {
                                                                "type": "integer"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "envoy_override": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "error_response_overrides": {
                                                        "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                        "items": {
                                                            "description": "A response rewrite for an HTTP error response",
                                                            "properties": {
                                                                "body": {
                                                                    "description": "The new response body",
                                                                    "properties": {
                                                                        "content_type": {
                                                                            "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                            "type": "string"
                                                                        },
                                                                        "json_format": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                            "type": "object"
                                                                        },
                                                                        "text_format": {
                                                                            "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                            "type": "string"
                                                                        },
                                                                        "text_format_source": {
                                                                            "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                            "properties": {
                                                                                "filename": {
                                                                                    "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "on_status_code": {
                                                                    "description": "The status code to match on -- not a pointer because it's required.",
                                                                    "maximum": 599,
                                                                    "minimum": 400,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "body",
                                                                "on_status_code"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "headers": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "host": {
                                                        "type": "string"
                                                    },
                                                    "host_redirect": {
                                                        "type": "boolean"
                                                    },
                                                    "host_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "host_rewrite": {
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "type": "integer"
                                                    },
                                                    "keepalive": {
                                                        "properties": {
                                                            "idle_time": {
                                                                "type": "integer"
                                                            },
                                                            "interval": {
                                                                "type": "integer"
                                                            },
                                                            "probes": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "additionalProperties": {
                                                            "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                            "items": {
                                                                "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                "maxProperties": 1,
                                                                "minProperties": 1,
                                                                "type": "object",
                                                                "x-kubernetes-preserve-unknown-fields": true
                                                            },
                                                            "type": "array"
                                                        },
                                                        "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                        "type": "object"
                                                    },
                                                    "load_balancer": {
                                                        "properties": {
                                                            "cookie": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "path": {
                                                                        "type": "string"
                                                                    },
                                                                    "ttl": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "header": {
                                                                "type": "string"
                                                            },
                                                            "policy": {
                                                                "enum": [
                                                                    "round_robin",
                                                                    "ring_hash",
                                                                    "maglev",
                                                                    "least_request"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "source_ip": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "policy"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "method": {
                                                        "type": "string"
                                                    },
                                                    "method_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "modules": {
                                                        "items": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "type": "array"
                                                    },
                                                    "outlier_detection": {
                                                        "type": "string"
                                                    },
                                                    "path_redirect": {
                                                        "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "precedence": {
                                                        "type": "integer"
                                                    },
                                                    "prefix": {
                                                        "type": "string"
                                                    },
                                                    "prefix_exact": {
                                                        "type": "boolean"
                                                    },
                                                    "prefix_redirect": {
                                                        "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "prefix_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "priority": {
                                                        "type": "string"
                                                    },
                                                    "query_parameters": {
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "redirect_response_code": {
                                                        "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                        "enum": [
                                                            301,
                                                            302,
                                                            303,
                                                            307,
                                                            308
                                                        ],
                                                        "type": "integer"
                                                    },
                                                    "regex_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_redirect": {
                                                        "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_rewrite": {
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "respect_dns_ttl": {
                                                        "type": "boolean"
                                                    },
                                                    "retry_policy": {
                                                        "properties": {
                                                            "num_retries": {
                                                                "type": "integer"
                                                            },
                                                            "per_try_timeout": {
                                                                "type": "string"
                                                            },
                                                            "retry_on": {
                                                                "enum": [
                                                                    "5xx",
                                                                    "gateway-error",
                                                                    "connect-failure",
                                                                    "retriable-4xx",
                                                                    "refused-stream",
                                                                    "retriable-status-codes"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "rewrite": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "shadow": {
                                                        "type": "boolean"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                        "type": "integer"
                                                    },
                                                    "use_websocket": {
                                                        "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]`",
                                                        "type": "boolean"
                                                    },
                                                    "v3StatsName": {
                                                        "type": "string"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "prefix",
                                                    "service"
                                                ],
                                                "type": "object",
                                                "x-kubernetes-preserve-unknown-fields": true
                                            },
                                            "status": {
                                                "description": "MappingStatus defines the observed state of Mapping",
                                                "properties": {
                                                    "reason": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "enum": [
                                                            "",
                                                            "Inactive",
                                                            "Running"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": true,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "additionalPrinterColumns": [
                                    {
                                        "jsonPath": ".spec.host",
                                        "name": "Source Host",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.prefix",
                                        "name": "Source Prefix",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".spec.service",
                                        "name": "Dest Service",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.state",
                                        "name": "State",
                                        "type": "string"
                                    },
                                    {
                                        "jsonPath": ".status.reason",
                                        "name": "Reason",
                                        "type": "string"
                                    }
                                ],
                                "name": "v3alpha1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "properties": {
                                            "apiVersion": {
                                                "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                                                "type": "string"
                                            },
                                            "kind": {
                                                "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                                                "type": "string"
                                            },
                                            "metadata": {
                                                "type": "object"
                                            },
                                            "spec": {
                                                "description": "MappingSpec defines the desired state of Mapping",
                                                "properties": {
                                                    "add_linkerd_headers": {
                                                        "type": "boolean"
                                                    },
                                                    "add_request_headers": {
                                                        "additionalProperties": {
                                                            "properties": {
                                                                "append": {
                                                                    "type": "boolean"
                                                                },
                                                                "v2Representation": {
                                                                    "enum": [
                                                                        "",
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "add_response_headers": {
                                                        "additionalProperties": {
                                                            "properties": {
                                                                "append": {
                                                                    "type": "boolean"
                                                                },
                                                                "v2Representation": {
                                                                    "enum": [
                                                                        "",
                                                                        "string",
                                                                        "null"
                                                                    ],
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "allow_upgrade": {
                                                        "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n    allow_upgrade:    - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n    allow_upgrade:    - spdy/3.1",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "ambassador_id": {
                                                        "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n    ambassador_id:    - \"default\" \n TODO(lukeshu): In v3alpha2, consider renaming all of the `ambassador_id` (singular) fields to `ambassador_ids` (plural).",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "auth_context_extensions": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "auto_host_rewrite": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_auth": {
                                                        "type": "boolean"
                                                    },
                                                    "bypass_error_response_overrides": {
                                                        "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
                                                        "type": "boolean"
                                                    },
                                                    "case_sensitive": {
                                                        "type": "boolean"
                                                    },
                                                    "circuit_breakers": {
                                                        "items": {
                                                            "properties": {
                                                                "max_connections": {
                                                                    "type": "integer"
                                                                },
                                                                "max_pending_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_requests": {
                                                                    "type": "integer"
                                                                },
                                                                "max_retries": {
                                                                    "type": "integer"
                                                                },
                                                                "priority": {
                                                                    "enum": [
                                                                        "default",
                                                                        "high"
                                                                    ],
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "cluster_idle_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cluster_max_connection_lifetime_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cluster_tag": {
                                                        "type": "string"
                                                    },
                                                    "connect_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "cors": {
                                                        "properties": {
                                                            "credentials": {
                                                                "type": "boolean"
                                                            },
                                                            "exposed_headers": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "headers": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "max_age": {
                                                                "type": "string"
                                                            },
                                                            "methods": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "origins": {
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "type": "array"
                                                            },
                                                            "v2CommaSeparatedOrigins": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "dns_type": {
                                                        "type": "string"
                                                    },
                                                    "docs": {
                                                        "description": "DocsInfo provides some extra information about the docs for the Mapping. Docs is used by both the agent and the DevPortal.",
                                                        "properties": {
                                                            "display_name": {
                                                                "type": "string"
                                                            },
                                                            "ignored": {
                                                                "type": "boolean"
                                                            },
                                                            "path": {
                                                                "type": "string"
                                                            },
                                                            "timeout_ms": {
                                                                "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                                "type": "integer"
                                                            },
                                                            "url": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "enable_ipv4": {
                                                        "type": "boolean"
                                                    },
                                                    "enable_ipv6": {
                                                        "type": "boolean"
                                                    },
                                                    "envoy_override": {
                                                        "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                        "type": "object",
                                                        "x-kubernetes-preserve-unknown-fields": true
                                                    },
                                                    "error_response_overrides": {
                                                        "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
                                                        "items": {
                                                            "description": "A response rewrite for an HTTP error response",
                                                            "properties": {
                                                                "body": {
                                                                    "description": "The new response body",
                                                                    "properties": {
                                                                        "content_type": {
                                                                            "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                                                                            "type": "string"
                                                                        },
                                                                        "json_format": {
                                                                            "additionalProperties": {
                                                                                "type": "string"
                                                                            },
                                                                            "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                                                                            "type": "object"
                                                                        },
                                                                        "text_format": {
                                                                            "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                                                                            "type": "string"
                                                                        },
                                                                        "text_format_source": {
                                                                            "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                                                                            "properties": {
                                                                                "filename": {
                                                                                    "description": "The name of a file on the Ambassador pod that contains a format text string.",
                                                                                    "type": "string"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "on_status_code": {
                                                                    "description": "The status code to match on -- not a pointer because it's required.",
                                                                    "maximum": 599,
                                                                    "minimum": 400,
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "required": [
                                                                "body",
                                                                "on_status_code"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "minItems": 1,
                                                        "type": "array"
                                                    },
                                                    "grpc": {
                                                        "type": "boolean"
                                                    },
                                                    "headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "host": {
                                                        "description": "Exact match for the hostname of a request if HostRegex is false; regex match for the hostname if HostRegex is true. \n Host specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Host will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used. \n DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                        "type": "string"
                                                    },
                                                    "host_redirect": {
                                                        "type": "boolean"
                                                    },
                                                    "host_regex": {
                                                        "description": "DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead. \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.host and MappingSpec.host_regex in favor of a MappingSpec.deprecated_hostname_regex.",
                                                        "type": "boolean"
                                                    },
                                                    "host_rewrite": {
                                                        "type": "string"
                                                    },
                                                    "hostname": {
                                                        "description": "Hostname is a DNS glob specifying the hosts to which this Mapping applies. \n Hostname specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Hostname will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used.",
                                                        "type": "string"
                                                    },
                                                    "idle_timeout_ms": {
                                                        "description": "TODO(lukeshu): In v3alpha2, change all of the `{foo}_ms`/`MillisecondDuration` fields to `{foo}`/`metav1.Duration`.",
                                                        "type": "integer"
                                                    },
                                                    "keepalive": {
                                                        "properties": {
                                                            "idle_time": {
                                                                "type": "integer"
                                                            },
                                                            "interval": {
                                                                "type": "integer"
                                                            },
                                                            "probes": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "labels": {
                                                        "additionalProperties": {
                                                            "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
                                                            "items": {
                                                                "additionalProperties": {
                                                                    "description": "A MappingLabelsArray is the value in the MappingLabelGroup: an array of label specifiers.",
                                                                    "items": {
                                                                        "description": "A MappingLabelSpecifier (finally!) defines a single label. \n This mimics envoy/config/route/v3/route_components.proto:RateLimit:Action:action_specifier.",
                                                                        "maxProperties": 1,
                                                                        "minProperties": 1,
                                                                        "properties": {
                                                                            "destination_cluster": {
                                                                                "description": "Sets the label \"destination_cluster=«Envoy destination cluster name»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "destination_cluster"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "generic_key": {
                                                                                "description": "Sets the label \"«key»=«value»\" (where by default «key» is \"generic_key\").",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "description": "The default is \"generic_key\".",
                                                                                        "type": "string"
                                                                                    },
                                                                                    "v2Shorthand": {
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "value": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "value"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "remote_address": {
                                                                                "description": "Sets the label \"remote_address=«IP address of the client»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "remote_address"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "request_headers": {
                                                                                "description": "If the «header_name» header is set, then set the label \"«key»=«Value of the «header_name» header»\"; otherwise skip applying this label group.",
                                                                                "properties": {
                                                                                    "header_name": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "key": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "omit_if_not_present": {
                                                                                        "type": "boolean"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "header_name",
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            },
                                                                            "source_cluster": {
                                                                                "description": "Sets the label \"source_cluster=«Envoy source cluster name»\".",
                                                                                "properties": {
                                                                                    "key": {
                                                                                        "enum": [
                                                                                            "source_cluster"
                                                                                        ],
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "required": [
                                                                                    "key"
                                                                                ],
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    },
                                                                    "type": "array"
                                                                },
                                                                "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
                                                                "maxProperties": 1,
                                                                "minProperties": 1,
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        },
                                                        "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
                                                        "type": "object"
                                                    },
                                                    "load_balancer": {
                                                        "properties": {
                                                            "cookie": {
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string"
                                                                    },
                                                                    "path": {
                                                                        "type": "string"
                                                                    },
                                                                    "ttl": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "type": "object"
                                                            },
                                                            "header": {
                                                                "type": "string"
                                                            },
                                                            "policy": {
                                                                "enum": [
                                                                    "round_robin",
                                                                    "ring_hash",
                                                                    "maglev",
                                                                    "least_request"
                                                                ],
                                                                "type": "string"
                                                            },
                                                            "source_ip": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "policy"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "method": {
                                                        "type": "string"
                                                    },
                                                    "method_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "modules": {
                                                        "items": {
                                                            "description": "UntypedDict is relatively opaque as a Go type, but it preserves its contents in a roundtrippable way.",
                                                            "type": "object",
                                                            "x-kubernetes-preserve-unknown-fields": true
                                                        },
                                                        "type": "array"
                                                    },
                                                    "outlier_detection": {
                                                        "type": "string"
                                                    },
                                                    "path_redirect": {
                                                        "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "precedence": {
                                                        "type": "integer"
                                                    },
                                                    "prefix": {
                                                        "type": "string"
                                                    },
                                                    "prefix_exact": {
                                                        "type": "boolean"
                                                    },
                                                    "prefix_redirect": {
                                                        "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "type": "string"
                                                    },
                                                    "prefix_regex": {
                                                        "type": "boolean"
                                                    },
                                                    "priority": {
                                                        "type": "string"
                                                    },
                                                    "query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "redirect_response_code": {
                                                        "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
                                                        "enum": [
                                                            301,
                                                            302,
                                                            303,
                                                            307,
                                                            308
                                                        ],
                                                        "type": "integer"
                                                    },
                                                    "regex_headers": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_query_parameters": {
                                                        "additionalProperties": {
                                                            "type": "string"
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_redirect": {
                                                        "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "regex_rewrite": {
                                                        "properties": {
                                                            "pattern": {
                                                                "type": "string"
                                                            },
                                                            "substitution": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "remove_request_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "remove_response_headers": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "resolver": {
                                                        "type": "string"
                                                    },
                                                    "respect_dns_ttl": {
                                                        "type": "boolean"
                                                    },
                                                    "retry_policy": {
                                                        "properties": {
                                                            "num_retries": {
                                                                "type": "integer"
                                                            },
                                                            "per_try_timeout": {
                                                                "type": "string"
                                                            },
                                                            "retry_on": {
                                                                "enum": [
                                                                    "5xx",
                                                                    "gateway-error",
                                                                    "connect-failure",
                                                                    "retriable-4xx",
                                                                    "refused-stream",
                                                                    "retriable-status-codes"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "rewrite": {
                                                        "type": "string"
                                                    },
                                                    "service": {
                                                        "type": "string"
                                                    },
                                                    "shadow": {
                                                        "type": "boolean"
                                                    },
                                                    "stats_name": {
                                                        "type": "string"
                                                    },
                                                    "timeout_ms": {
                                                        "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
                                                        "type": "integer"
                                                    },
                                                    "tls": {
                                                        "type": "string"
                                                    },
                                                    "use_websocket": {
                                                        "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]` \n TODO(lukeshu): In v3alpha2, get rid of MappingSpec.DeprecatedUseWebsocket.",
                                                        "type": "boolean"
                                                    },
                                                    "v2BoolHeaders": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v2BoolQueryParameters": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "v2ExplicitTLS": {
                                                        "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
                                                        "properties": {
                                                            "serviceScheme": {
                                                                "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
                                                                "pattern": "^([hH][tT][tT][pP][sS]?://)?$",
                                                                "type": "string"
                                                            },
                                                            "tls": {
                                                                "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n  | Value        | Representation                        | Meaning of representation          |  |--------------+---------------------------------------+------------------------------------|  | \"\"           | omit the field                        | defer to service (no TLSContext)   |  | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   |  | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   |  | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   |  | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
                                                                "enum": [
                                                                    "",
                                                                    "null",
                                                                    "bool:true",
                                                                    "bool:false",
                                                                    "string"
                                                                ],
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "weight": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "required": [
                                                    "prefix",
                                                    "service"
                                                ],
                                                "type": "object"
                                            },
                                            "status": {
                                                "description": "MappingStatus defines the observed state of Mapping",
                                                "properties": {
                                                    "reason": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "enum": [
                                                            "",
                                                            "Inactive",
                                                            "Running"
                                                        ],
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "served": true,
                                "storage": false,
                                "subresources": {
                                    "status": {}
                                }
                            },
                            {
                                "name": "v1",
                                "schema": {
                                    "openAPIV3Schema": {
                                        "description": "Mapping is the Schema for the mappings API",
                                        "type": "object",
                                        "x-kubernetes-preserve-unknown-fields": true
                                    }
                                },
                                "served": false,
                                "storage": false
                            }
                        ]
                    },
                    "status": {
                        "acceptedNames": {
                            "categories": [
                                "ambassador-crds"
                            ],
                            "kind": "Mapping",
                            "listKind": "MappingList",
                            "plural": "mappings",
                            "singular": "mapping"
                        },
                        "conditions": [
                            {
                                "lastTransitionTime": "2022-03-22T04:33:08Z",
                                "message": "no conflicts found",
                                "reason": "NoConflicts",
                                "status": "True",
                                "type": "NamesAccepted"
                            },
                            {
                                "lastTransitionTime": "2022-03-22T04:33:08Z",
                                "message": "the initial names have been accepted",
                                "reason": "InitialNamesAccepted",
                                "status": "True",
                                "type": "Established"
                            }
                        ],
                        "storedVersions": [
                            "v2"
                        ]
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::emissary-crds",
                "provider": "urn:pulumi:plane-3::launchpad::eks:index:Cluster$pulumi:providers:kubernetes::p-3-eks-cluster-provider::8728ae65-7f77-4a57-93a5-fcacd2b33ee7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "custom": false,
                "type": "kubernetes:yaml:ConfigFile",
                "parent": "urn:pulumi:plane-3::launchpad::pulumi:pulumi:Stack::launchpad-plane-3",
                "dependencies": [
                    "urn:pulumi:plane-3::launchpad::kubernetes:core/v1:ConfigMap::cluster-info-configmap"
                ],
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:apps/v1:DaemonSet::amazon-cloudwatch/fluent-bit",
                "custom": true,
                "id": "amazon-cloudwatch/fluent-bit",
                "type": "kubernetes:apps/v1:DaemonSet",
                "inputs": {
                    "apiVersion": "apps/v1",
                    "kind": "DaemonSet",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "k8s-app": "fluent-bit",
                            "kubernetes.io/cluster-service": "true",
                            "version": "v1"
                        },
                        "name": "fluent-bit",
                        "namespace": "amazon-cloudwatch"
                    },
                    "spec": {
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "fluent-bit"
                            }
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "k8s-app": "fluent-bit",
                                    "kubernetes.io/cluster-service": "true",
                                    "version": "v1"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "AWS_REGION",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "logs.region",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "CLUSTER_NAME",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "cluster.name",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PLANE_ID",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "plane.id",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HTTP_SERVER",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "http.server",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HTTP_PORT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "http.port",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "READ_FROM_HEAD",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "read.head",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "READ_FROM_TAIL",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "read.tail",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "CI_VERSION",
                                                "value": "k8s/1.3.8"
                                            }
                                        ],
                                        "image": "amazon/aws-for-fluent-bit:2.22.0",
                                        "imagePullPolicy": "Always",
                                        "name": "fluent-bit",
                                        "resources": {
                                            "limits": {
                                                "memory": "200Mi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "100Mi"
                                            }
                                        },
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/fluent-bit/state",
                                                "name": "fluentbitstate"
                                            },
                                            {
                                                "mountPath": "/var/log",
                                                "name": "varlog",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/lib/docker/containers",
                                                "name": "varlibdockercontainers",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/fluent-bit/etc/",
                                                "name": "fluent-bit-config"
                                            },
                                            {
                                                "mountPath": "/run/log/journal",
                                                "name": "runlogjournal",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/log/dmesg",
                                                "name": "dmesg",
                                                "readOnly": true
                                            }
                                        ]
                                    }
                                ],
                                "serviceAccountName": "fluent-bit",
                                "terminationGracePeriodSeconds": 10,
                                "tolerations": [
                                    {
                                        "effect": "NoSchedule",
                                        "key": "node-role.kubernetes.io/master",
                                        "operator": "Exists"
                                    },
                                    {
                                        "effect": "NoExecute",
                                        "operator": "Exists"
                                    },
                                    {
                                        "effect": "NoSchedule",
                                        "operator": "Exists"
                                    }
                                ],
                                "volumes": [
                                    {
                                        "hostPath": {
                                            "path": "/var/fluent-bit/state"
                                        },
                                        "name": "fluentbitstate"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/log"
                                        },
                                        "name": "varlog"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/lib/docker/containers"
                                        },
                                        "name": "varlibdockercontainers"
                                    },
                                    {
                                        "configMap": {
                                            "name": "fluent-bit-config"
                                        },
                                        "name": "fluent-bit-config"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/run/log/journal"
                                        },
                                        "name": "runlogjournal"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/log/dmesg"
                                        },
                                        "name": "dmesg"
                                    }
                                ]
                            }
                        }
                    }
                },
                "outputs": {
                    "__initialApiVersion": "apps/v1",
                    "__inputs": {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "k8s-app": "fluent-bit",
                                "kubernetes.io/cluster-service": "true",
                                "version": "v1"
                            },
                            "name": "fluent-bit",
                            "namespace": "amazon-cloudwatch"
                        },
                        "spec": {
                            "selector": {
                                "matchLabels": {
                                    "k8s-app": "fluent-bit"
                                }
                            },
                            "template": {
                                "metadata": {
                                    "labels": {
                                        "k8s-app": "fluent-bit",
                                        "kubernetes.io/cluster-service": "true",
                                        "version": "v1"
                                    }
                                },
                                "spec": {
                                    "containers": [
                                        {
                                            "env": [
                                                {
                                                    "name": "AWS_REGION",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "logs.region",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "CLUSTER_NAME",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "cluster.name",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "PLANE_ID",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "plane.id",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "HTTP_SERVER",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "http.server",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "HTTP_PORT",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "http.port",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "READ_FROM_HEAD",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "read.head",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "READ_FROM_TAIL",
                                                    "valueFrom": {
                                                        "configMapKeyRef": {
                                                            "key": "read.tail",
                                                            "name": "fluent-bit-cluster-info"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "HOST_NAME",
                                                    "valueFrom": {
                                                        "fieldRef": {
                                                            "fieldPath": "spec.nodeName"
                                                        }
                                                    }
                                                },
                                                {
                                                    "name": "CI_VERSION",
                                                    "value": "k8s/1.3.8"
                                                }
                                            ],
                                            "image": "amazon/aws-for-fluent-bit:2.22.0",
                                            "imagePullPolicy": "Always",
                                            "name": "fluent-bit",
                                            "resources": {
                                                "limits": {
                                                    "memory": "200Mi"
                                                },
                                                "requests": {
                                                    "cpu": "500m",
                                                    "memory": "100Mi"
                                                }
                                            },
                                            "volumeMounts": [
                                                {
                                                    "mountPath": "/var/fluent-bit/state",
                                                    "name": "fluentbitstate"
                                                },
                                                {
                                                    "mountPath": "/var/log",
                                                    "name": "varlog",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/var/lib/docker/containers",
                                                    "name": "varlibdockercontainers",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/fluent-bit/etc/",
                                                    "name": "fluent-bit-config"
                                                },
                                                {
                                                    "mountPath": "/run/log/journal",
                                                    "name": "runlogjournal",
                                                    "readOnly": true
                                                },
                                                {
                                                    "mountPath": "/var/log/dmesg",
                                                    "name": "dmesg",
                                                    "readOnly": true
                                                }
                                            ]
                                        }
                                    ],
                                    "serviceAccountName": "fluent-bit",
                                    "terminationGracePeriodSeconds": 10,
                                    "tolerations": [
                                        {
                                            "effect": "NoSchedule",
                                            "key": "node-role.kubernetes.io/master",
                                            "operator": "Exists"
                                        },
                                        {
                                            "effect": "NoExecute",
                                            "operator": "Exists"
                                        },
                                        {
                                            "effect": "NoSchedule",
                                            "operator": "Exists"
                                        }
                                    ],
                                    "volumes": [
                                        {
                                            "hostPath": {
                                                "path": "/var/fluent-bit/state"
                                            },
                                            "name": "fluentbitstate"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/log"
                                            },
                                            "name": "varlog"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/lib/docker/containers"
                                            },
                                            "name": "varlibdockercontainers"
                                        },
                                        {
                                            "configMap": {
                                                "name": "fluent-bit-config"
                                            },
                                            "name": "fluent-bit-config"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/run/log/journal"
                                            },
                                            "name": "runlogjournal"
                                        },
                                        {
                                            "hostPath": {
                                                "path": "/var/log/dmesg"
                                            },
                                            "name": "dmesg"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "apiVersion": "apps/v1",
                    "kind": "DaemonSet",
                    "metadata": {
                        "annotations": {
                            "deprecated.daemonset.template.generation": "1",
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"k8s-app\":\"fluent-bit\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v1\"},\"name\":\"fluent-bit\",\"namespace\":\"amazon-cloudwatch\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"fluent-bit\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"fluent-bit\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v1\"}},\"spec\":{\"containers\":[{\"env\":[{\"name\":\"AWS_REGION\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"logs.region\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"CLUSTER_NAME\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"cluster.name\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"PLANE_ID\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"plane.id\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"HTTP_SERVER\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"http.server\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"HTTP_PORT\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"http.port\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"READ_FROM_HEAD\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"read.head\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"READ_FROM_TAIL\",\"valueFrom\":{\"configMapKeyRef\":{\"key\":\"read.tail\",\"name\":\"fluent-bit-cluster-info\"}}},{\"name\":\"HOST_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"CI_VERSION\",\"value\":\"k8s/1.3.8\"}],\"image\":\"amazon/aws-for-fluent-bit:2.22.0\",\"imagePullPolicy\":\"Always\",\"name\":\"fluent-bit\",\"resources\":{\"limits\":{\"memory\":\"200Mi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"100Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/var/fluent-bit/state\",\"name\":\"fluentbitstate\"},{\"mountPath\":\"/var/log\",\"name\":\"varlog\",\"readOnly\":true},{\"mountPath\":\"/var/lib/docker/containers\",\"name\":\"varlibdockercontainers\",\"readOnly\":true},{\"mountPath\":\"/fluent-bit/etc/\",\"name\":\"fluent-bit-config\"},{\"mountPath\":\"/run/log/journal\",\"name\":\"runlogjournal\",\"readOnly\":true},{\"mountPath\":\"/var/log/dmesg\",\"name\":\"dmesg\",\"readOnly\":true}]}],\"serviceAccountName\":\"fluent-bit\",\"terminationGracePeriodSeconds\":10,\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/fluent-bit/state\"},\"name\":\"fluentbitstate\"},{\"hostPath\":{\"path\":\"/var/log\"},\"name\":\"varlog\"},{\"hostPath\":{\"path\":\"/var/lib/docker/containers\"},\"name\":\"varlibdockercontainers\"},{\"configMap\":{\"name\":\"fluent-bit-config\"},\"name\":\"fluent-bit-config\"},{\"hostPath\":{\"path\":\"/run/log/journal\"},\"name\":\"runlogjournal\"},{\"hostPath\":{\"path\":\"/var/log/dmesg\"},\"name\":\"dmesg\"}]}}}}\n"
                        },
                        "creationTimestamp": "2022-03-22T03:11:07Z",
                        "generation": 1,
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "k8s-app": "fluent-bit",
                            "kubernetes.io/cluster-service": "true",
                            "version": "v1"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "apps/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:deprecated.daemonset.template.generation": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:k8s-app": {},
                                            "f:kubernetes.io/cluster-service": {},
                                            "f:version": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:revisionHistoryLimit": {},
                                        "f:selector": {},
                                        "f:template": {
                                            "f:metadata": {
                                                "f:labels": {
                                                    ".": {},
                                                    "f:k8s-app": {},
                                                    "f:kubernetes.io/cluster-service": {},
                                                    "f:version": {}
                                                }
                                            },
                                            "f:spec": {
                                                "f:containers": {
                                                    "k:{\"name\":\"fluent-bit\"}": {
                                                        ".": {},
                                                        "f:env": {
                                                            ".": {},
                                                            "k:{\"name\":\"AWS_REGION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {
                                                                        ".": {},
                                                                        "f:key": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            },
                                                            "k:{\"name\":\"CI_VERSION\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:value": {}
                                                            },
                                                            "k:{\"name\":\"CLUSTER_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {
                                                                        ".": {},
                                                                        "f:key": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            },
                                                            "k:{\"name\":\"HOST_NAME\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:fieldRef": {
                                                                        ".": {},
                                                                        "f:apiVersion": {},
                                                                        "f:fieldPath": {}
                                                                    }
                                                                }
                                                            },
                                                            "k:{\"name\":\"HTTP_PORT\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {
                                                                        ".": {},
                                                                        "f:key": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            },
                                                            "k:{\"name\":\"HTTP_SERVER\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {
                                                                        ".": {},
                                                                        "f:key": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            },
                                                            "k:{\"name\":\"PLANE_ID\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {
                                                                        ".": {},
                                                                        "f:key": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            },
                                                            "k:{\"name\":\"READ_FROM_HEAD\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {
                                                                        ".": {},
                                                                        "f:key": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            },
                                                            "k:{\"name\":\"READ_FROM_TAIL\"}": {
                                                                ".": {},
                                                                "f:name": {},
                                                                "f:valueFrom": {
                                                                    ".": {},
                                                                    "f:configMapKeyRef": {
                                                                        ".": {},
                                                                        "f:key": {},
                                                                        "f:name": {}
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "f:image": {},
                                                        "f:imagePullPolicy": {},
                                                        "f:name": {},
                                                        "f:resources": {
                                                            ".": {},
                                                            "f:limits": {
                                                                ".": {},
                                                                "f:memory": {}
                                                            },
                                                            "f:requests": {
                                                                ".": {},
                                                                "f:cpu": {},
                                                                "f:memory": {}
                                                            }
                                                        },
                                                        "f:terminationMessagePath": {},
                                                        "f:terminationMessagePolicy": {},
                                                        "f:volumeMounts": {
                                                            ".": {},
                                                            "k:{\"mountPath\":\"/fluent-bit/etc/\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/run/log/journal\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/fluent-bit/state\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/lib/docker/containers\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/log\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            },
                                                            "k:{\"mountPath\":\"/var/log/dmesg\"}": {
                                                                ".": {},
                                                                "f:mountPath": {},
                                                                "f:name": {},
                                                                "f:readOnly": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "f:dnsPolicy": {},
                                                "f:restartPolicy": {},
                                                "f:schedulerName": {},
                                                "f:securityContext": {},
                                                "f:serviceAccount": {},
                                                "f:serviceAccountName": {},
                                                "f:terminationGracePeriodSeconds": {},
                                                "f:tolerations": {},
                                                "f:volumes": {
                                                    ".": {},
                                                    "k:{\"name\":\"dmesg\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"fluent-bit-config\"}": {
                                                        ".": {},
                                                        "f:configMap": {
                                                            ".": {},
                                                            "f:defaultMode": {},
                                                            "f:name": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"fluentbitstate\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"runlogjournal\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"varlibdockercontainers\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"varlog\"}": {
                                                        ".": {},
                                                        "f:hostPath": {
                                                            ".": {},
                                                            "f:path": {},
                                                            "f:type": {}
                                                        },
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:updateStrategy": {
                                            "f:rollingUpdate": {
                                                ".": {},
                                                "f:maxSurge": {},
                                                "f:maxUnavailable": {}
                                            },
                                            "f:type": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T03:11:07Z"
                            }
                        ],
                        "name": "fluent-bit",
                        "namespace": "amazon-cloudwatch",
                        "resourceVersion": "1370",
                        "uid": "5af6218f-d9bd-4515-a3e5-22c4cd460eea"
                    },
                    "spec": {
                        "revisionHistoryLimit": 10,
                        "selector": {
                            "matchLabels": {
                                "k8s-app": "fluent-bit"
                            }
                        },
                        "template": {
                            "metadata": {
                                "labels": {
                                    "k8s-app": "fluent-bit",
                                    "kubernetes.io/cluster-service": "true",
                                    "version": "v1"
                                }
                            },
                            "spec": {
                                "containers": [
                                    {
                                        "env": [
                                            {
                                                "name": "AWS_REGION",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "logs.region",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "CLUSTER_NAME",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "cluster.name",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "PLANE_ID",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "plane.id",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HTTP_SERVER",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "http.server",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HTTP_PORT",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "http.port",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "READ_FROM_HEAD",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "read.head",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "READ_FROM_TAIL",
                                                "valueFrom": {
                                                    "configMapKeyRef": {
                                                        "key": "read.tail",
                                                        "name": "fluent-bit-cluster-info"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "HOST_NAME",
                                                "valueFrom": {
                                                    "fieldRef": {
                                                        "apiVersion": "v1",
                                                        "fieldPath": "spec.nodeName"
                                                    }
                                                }
                                            },
                                            {
                                                "name": "CI_VERSION",
                                                "value": "k8s/1.3.8"
                                            }
                                        ],
                                        "image": "amazon/aws-for-fluent-bit:2.22.0",
                                        "imagePullPolicy": "Always",
                                        "name": "fluent-bit",
                                        "resources": {
                                            "limits": {
                                                "memory": "200Mi"
                                            },
                                            "requests": {
                                                "cpu": "500m",
                                                "memory": "100Mi"
                                            }
                                        },
                                        "terminationMessagePath": "/dev/termination-log",
                                        "terminationMessagePolicy": "File",
                                        "volumeMounts": [
                                            {
                                                "mountPath": "/var/fluent-bit/state",
                                                "name": "fluentbitstate"
                                            },
                                            {
                                                "mountPath": "/var/log",
                                                "name": "varlog",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/lib/docker/containers",
                                                "name": "varlibdockercontainers",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/fluent-bit/etc/",
                                                "name": "fluent-bit-config"
                                            },
                                            {
                                                "mountPath": "/run/log/journal",
                                                "name": "runlogjournal",
                                                "readOnly": true
                                            },
                                            {
                                                "mountPath": "/var/log/dmesg",
                                                "name": "dmesg",
                                                "readOnly": true
                                            }
                                        ]
                                    }
                                ],
                                "dnsPolicy": "ClusterFirst",
                                "restartPolicy": "Always",
                                "schedulerName": "default-scheduler",
                                "securityContext": {},
                                "serviceAccount": "fluent-bit",
                                "serviceAccountName": "fluent-bit",
                                "terminationGracePeriodSeconds": 10,
                                "tolerations": [
                                    {
                                        "effect": "NoSchedule",
                                        "key": "node-role.kubernetes.io/master",
                                        "operator": "Exists"
                                    },
                                    {
                                        "effect": "NoExecute",
                                        "operator": "Exists"
                                    },
                                    {
                                        "effect": "NoSchedule",
                                        "operator": "Exists"
                                    }
                                ],
                                "volumes": [
                                    {
                                        "hostPath": {
                                            "path": "/var/fluent-bit/state",
                                            "type": ""
                                        },
                                        "name": "fluentbitstate"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/log",
                                            "type": ""
                                        },
                                        "name": "varlog"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/lib/docker/containers",
                                            "type": ""
                                        },
                                        "name": "varlibdockercontainers"
                                    },
                                    {
                                        "configMap": {
                                            "defaultMode": 420,
                                            "name": "fluent-bit-config"
                                        },
                                        "name": "fluent-bit-config"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/run/log/journal",
                                            "type": ""
                                        },
                                        "name": "runlogjournal"
                                    },
                                    {
                                        "hostPath": {
                                            "path": "/var/log/dmesg",
                                            "type": ""
                                        },
                                        "name": "dmesg"
                                    }
                                ]
                            }
                        },
                        "updateStrategy": {
                            "rollingUpdate": {
                                "maxSurge": 0,
                                "maxUnavailable": 1
                            },
                            "type": "RollingUpdate"
                        }
                    },
                    "status": {
                        "currentNumberScheduled": 0,
                        "desiredNumberScheduled": 0,
                        "numberMisscheduled": 0,
                        "numberReady": 0
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "spec": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding::fluent-bit-role-binding",
                "custom": true,
                "id": "fluent-bit-role-binding",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "fluent-bit-role-binding"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "fluent-bit-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "fluent-bit",
                            "namespace": "amazon-cloudwatch"
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRoleBinding",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "fluent-bit-role-binding"
                        },
                        "roleRef": {
                            "apiGroup": "rbac.authorization.k8s.io",
                            "kind": "ClusterRole",
                            "name": "fluent-bit-role"
                        },
                        "subjects": [
                            {
                                "kind": "ServiceAccount",
                                "name": "fluent-bit",
                                "namespace": "amazon-cloudwatch"
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRoleBinding",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"fluent-bit-role-binding\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"fluent-bit-role\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"fluent-bit\",\"namespace\":\"amazon-cloudwatch\"}]}\n"
                        },
                        "creationTimestamp": "2022-03-22T03:11:07Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:roleRef": {
                                        "f:apiGroup": {},
                                        "f:kind": {},
                                        "f:name": {}
                                    },
                                    "f:subjects": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T03:11:07Z"
                            }
                        ],
                        "name": "fluent-bit-role-binding",
                        "resourceVersion": "1384",
                        "uid": "901198e3-5f85-4866-83b6-52d661402e3d"
                    },
                    "roleRef": {
                        "apiGroup": "rbac.authorization.k8s.io",
                        "kind": "ClusterRole",
                        "name": "fluent-bit-role"
                    },
                    "subjects": [
                        {
                            "kind": "ServiceAccount",
                            "name": "fluent-bit",
                            "namespace": "amazon-cloudwatch"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "roleRef": null,
                    "subjects": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ConfigMap::amazon-cloudwatch/fluent-bit-config",
                "custom": true,
                "id": "amazon-cloudwatch/fluent-bit-config",
                "type": "kubernetes:core/v1:ConfigMap",
                "inputs": {
                    "apiVersion": "v1",
                    "data": {
                        "application-log.conf": "[INPUT]\n    Name                tail\n    Tag                 application.*\n    Exclude_Path        /var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*, /var/log/containers/milvus*\n    Path                /var/log/containers/*.log\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_container.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 application.*\n    Path                /var/log/containers/fluent-bit*\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_log.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 application.*\n    Path                /var/log/containers/cloudwatch-agent*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  cwagent_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_cwagent.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                kubernetes\n    Match               application.*\n    Kube_URL            https://kubernetes.default.svc:443\n    Kube_Tag_Prefix     application.var.log.containers.\n    Merge_Log           On\n    Merge_Log_Key       log\n    K8S-Logging.Parser  On\n    K8S-Logging.Exclude Off\n    Labels              Off\n    Annotations         Off\n\n[FILTER]\n    name                  multiline\n    match                 *\n    multiline.key_content log\n    multiline.parser      go\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               application.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/application\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                        "dataplane-log.conf": "[INPUT]\n    Name                systemd\n    Tag                 dataplane.systemd.*\n    Systemd_Filter      _SYSTEMD_UNIT=docker.service\n    Systemd_Filter      _SYSTEMD_UNIT=kubelet.service\n    DB                  /var/fluent-bit/state/systemd.db\n    Path                /var/log/journal\n    Read_From_Tail      ${READ_FROM_TAIL}\n\n[INPUT]\n    Name                tail\n    Tag                 dataplane.tail.*\n    Path                /var/log/containers/aws-node*, /var/log/containers/kube-proxy*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_dataplane_tail.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                modify\n    Match               dataplane.systemd.*\n    Rename              _HOSTNAME                   hostname\n    Rename              _SYSTEMD_UNIT               systemd_unit\n    Rename              MESSAGE                     message\n    Remove_regex        ^((?!hostname|systemd_unit|message).)*$\n\n[FILTER]\n    Name                aws\n    Match               dataplane.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               dataplane.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/dataplane\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                        "fluent-bit.conf": "[SERVICE]\n    Flush                     5\n    Log_Level                 info\n    Daemon                    off\n    Parsers_File              parsers.conf\n    HTTP_Server               ${HTTP_SERVER}\n    HTTP_Listen               0.0.0.0\n    HTTP_Port                 ${HTTP_PORT}\n    storage.path              /var/fluent-bit/state/flb-storage/\n    storage.sync              normal\n    storage.checksum          off\n    storage.backlog.mem_limit 5M\n    \n@INCLUDE application-log.conf\n@INCLUDE dataplane-log.conf\n@INCLUDE host-log.conf\n",
                        "host-log.conf": "[INPUT]\n    Name                tail\n    Tag                 host.dmesg\n    Path                /var/log/dmesg\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_dmesg.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.messages\n    Path                /var/log/messages\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_messages.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.secure\n    Path                /var/log/secure\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_secure.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                aws\n    Match               host.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               host.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/host\n    log_stream_prefix   ${HOST_NAME}.\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                        "parsers.conf": "[PARSER]\n    Name                docker\n    Format              json\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                syslog\n    Format              regex\n    Regex               ^(?\u003ctime\u003e[^ ]* {1,2}[^ ]* [^ ]*) (?\u003chost\u003e[^ ]*) (?\u003cident\u003e[a-zA-Z0-9_\\/\\.\\-]*)(?:\\[(?\u003cpid\u003e[0-9]+)\\])?(?:[^\\:]*\\:)? *(?\u003cmessage\u003e.*)$\n    Time_Key            time\n    Time_Format         %b %d %H:%M:%S\n\n[PARSER]\n    Name                container_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\S(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                cwagent_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\d{4}[\\/-]\\d{1,2}[\\/-]\\d{1,2}[ T]\\d{2}:\\d{2}:\\d{2}(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "k8s-app": "fluent-bit"
                        },
                        "name": "fluent-bit-config",
                        "namespace": "amazon-cloudwatch"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "data": {
                            "application-log.conf": "[INPUT]\n    Name                tail\n    Tag                 application.*\n    Exclude_Path        /var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*, /var/log/containers/milvus*\n    Path                /var/log/containers/*.log\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_container.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 application.*\n    Path                /var/log/containers/fluent-bit*\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_log.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 application.*\n    Path                /var/log/containers/cloudwatch-agent*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  cwagent_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_cwagent.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                kubernetes\n    Match               application.*\n    Kube_URL            https://kubernetes.default.svc:443\n    Kube_Tag_Prefix     application.var.log.containers.\n    Merge_Log           On\n    Merge_Log_Key       log\n    K8S-Logging.Parser  On\n    K8S-Logging.Exclude Off\n    Labels              Off\n    Annotations         Off\n\n[FILTER]\n    name                  multiline\n    match                 *\n    multiline.key_content log\n    multiline.parser      go\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               application.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/application\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                            "dataplane-log.conf": "[INPUT]\n    Name                systemd\n    Tag                 dataplane.systemd.*\n    Systemd_Filter      _SYSTEMD_UNIT=docker.service\n    Systemd_Filter      _SYSTEMD_UNIT=kubelet.service\n    DB                  /var/fluent-bit/state/systemd.db\n    Path                /var/log/journal\n    Read_From_Tail      ${READ_FROM_TAIL}\n\n[INPUT]\n    Name                tail\n    Tag                 dataplane.tail.*\n    Path                /var/log/containers/aws-node*, /var/log/containers/kube-proxy*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_dataplane_tail.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                modify\n    Match               dataplane.systemd.*\n    Rename              _HOSTNAME                   hostname\n    Rename              _SYSTEMD_UNIT               systemd_unit\n    Rename              MESSAGE                     message\n    Remove_regex        ^((?!hostname|systemd_unit|message).)*$\n\n[FILTER]\n    Name                aws\n    Match               dataplane.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               dataplane.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/dataplane\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                            "fluent-bit.conf": "[SERVICE]\n    Flush                     5\n    Log_Level                 info\n    Daemon                    off\n    Parsers_File              parsers.conf\n    HTTP_Server               ${HTTP_SERVER}\n    HTTP_Listen               0.0.0.0\n    HTTP_Port                 ${HTTP_PORT}\n    storage.path              /var/fluent-bit/state/flb-storage/\n    storage.sync              normal\n    storage.checksum          off\n    storage.backlog.mem_limit 5M\n    \n@INCLUDE application-log.conf\n@INCLUDE dataplane-log.conf\n@INCLUDE host-log.conf\n",
                            "host-log.conf": "[INPUT]\n    Name                tail\n    Tag                 host.dmesg\n    Path                /var/log/dmesg\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_dmesg.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.messages\n    Path                /var/log/messages\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_messages.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.secure\n    Path                /var/log/secure\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_secure.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                aws\n    Match               host.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               host.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/host\n    log_stream_prefix   ${HOST_NAME}.\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                            "parsers.conf": "[PARSER]\n    Name                docker\n    Format              json\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                syslog\n    Format              regex\n    Regex               ^(?\u003ctime\u003e[^ ]* {1,2}[^ ]* [^ ]*) (?\u003chost\u003e[^ ]*) (?\u003cident\u003e[a-zA-Z0-9_\\/\\.\\-]*)(?:\\[(?\u003cpid\u003e[0-9]+)\\])?(?:[^\\:]*\\:)? *(?\u003cmessage\u003e.*)$\n    Time_Key            time\n    Time_Format         %b %d %H:%M:%S\n\n[PARSER]\n    Name                container_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\S(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                cwagent_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\d{4}[\\/-]\\d{1,2}[\\/-]\\d{1,2}[ T]\\d{2}:\\d{2}:\\d{2}(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n"
                        },
                        "kind": "ConfigMap",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi",
                                "k8s-app": "fluent-bit"
                            },
                            "name": "fluent-bit-config",
                            "namespace": "amazon-cloudwatch"
                        }
                    },
                    "apiVersion": "v1",
                    "data": {
                        "application-log.conf": "[INPUT]\n    Name                tail\n    Tag                 application.*\n    Exclude_Path        /var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*, /var/log/containers/milvus*\n    Path                /var/log/containers/*.log\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_container.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 application.*\n    Path                /var/log/containers/fluent-bit*\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_log.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 application.*\n    Path                /var/log/containers/cloudwatch-agent*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  cwagent_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_cwagent.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                kubernetes\n    Match               application.*\n    Kube_URL            https://kubernetes.default.svc:443\n    Kube_Tag_Prefix     application.var.log.containers.\n    Merge_Log           On\n    Merge_Log_Key       log\n    K8S-Logging.Parser  On\n    K8S-Logging.Exclude Off\n    Labels              Off\n    Annotations         Off\n\n[FILTER]\n    name                  multiline\n    match                 *\n    multiline.key_content log\n    multiline.parser      go\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               application.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/application\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                        "dataplane-log.conf": "[INPUT]\n    Name                systemd\n    Tag                 dataplane.systemd.*\n    Systemd_Filter      _SYSTEMD_UNIT=docker.service\n    Systemd_Filter      _SYSTEMD_UNIT=kubelet.service\n    DB                  /var/fluent-bit/state/systemd.db\n    Path                /var/log/journal\n    Read_From_Tail      ${READ_FROM_TAIL}\n\n[INPUT]\n    Name                tail\n    Tag                 dataplane.tail.*\n    Path                /var/log/containers/aws-node*, /var/log/containers/kube-proxy*\n    Docker_Mode         On\n    Docker_Mode_Flush   5\n    Docker_Mode_Parser  container_firstline\n    Parser              docker\n    DB                  /var/fluent-bit/state/flb_dataplane_tail.db\n    Mem_Buf_Limit       50MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Rotate_Wait         30\n    storage.type        filesystem\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                modify\n    Match               dataplane.systemd.*\n    Rename              _HOSTNAME                   hostname\n    Rename              _SYSTEMD_UNIT               systemd_unit\n    Rename              MESSAGE                     message\n    Remove_regex        ^((?!hostname|systemd_unit|message).)*$\n\n[FILTER]\n    Name                aws\n    Match               dataplane.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               dataplane.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/dataplane\n    log_stream_prefix   from-fluent-bit-\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                        "fluent-bit.conf": "[SERVICE]\n    Flush                     5\n    Log_Level                 info\n    Daemon                    off\n    Parsers_File              parsers.conf\n    HTTP_Server               ${HTTP_SERVER}\n    HTTP_Listen               0.0.0.0\n    HTTP_Port                 ${HTTP_PORT}\n    storage.path              /var/fluent-bit/state/flb-storage/\n    storage.sync              normal\n    storage.checksum          off\n    storage.backlog.mem_limit 5M\n    \n@INCLUDE application-log.conf\n@INCLUDE dataplane-log.conf\n@INCLUDE host-log.conf\n",
                        "host-log.conf": "[INPUT]\n    Name                tail\n    Tag                 host.dmesg\n    Path                /var/log/dmesg\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_dmesg.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.messages\n    Path                /var/log/messages\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_messages.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[INPUT]\n    Name                tail\n    Tag                 host.secure\n    Path                /var/log/secure\n    Parser              syslog\n    DB                  /var/fluent-bit/state/flb_secure.db\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    Refresh_Interval    10\n    Read_from_Head      ${READ_FROM_HEAD}\n\n[FILTER]\n    Name                aws\n    Match               host.*\n    imds_version        v1\n\n[OUTPUT]\n    Name                cloudwatch_logs\n    Match               host.*\n    region              ${AWS_REGION}\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/host\n    log_stream_prefix   ${HOST_NAME}.\n    auto_create_group   true\n    extra_user_agent    container-insights\n    log_retention_days  5\n",
                        "parsers.conf": "[PARSER]\n    Name                docker\n    Format              json\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                syslog\n    Format              regex\n    Regex               ^(?\u003ctime\u003e[^ ]* {1,2}[^ ]* [^ ]*) (?\u003chost\u003e[^ ]*) (?\u003cident\u003e[a-zA-Z0-9_\\/\\.\\-]*)(?:\\[(?\u003cpid\u003e[0-9]+)\\])?(?:[^\\:]*\\:)? *(?\u003cmessage\u003e.*)$\n    Time_Key            time\n    Time_Format         %b %d %H:%M:%S\n\n[PARSER]\n    Name                container_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\S(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n\n[PARSER]\n    Name                cwagent_firstline\n    Format              regex\n    Regex               (?\u003clog\u003e(?\u003c=\"log\":\")\\d{4}[\\/-]\\d{1,2}[\\/-]\\d{1,2}[ T]\\d{2}:\\d{2}:\\d{2}(?!\\.).*?)(?\u003c!\\\\)\".*(?\u003cstream\u003e(?\u003c=\"stream\":\").*?)\".*(?\u003ctime\u003e\\d{4}-\\d{1,2}-\\d{1,2}T\\d{2}:\\d{2}:\\d{2}\\.\\w*).*(?=})\n    Time_Key            time\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\n"
                    },
                    "kind": "ConfigMap",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"data\":{\"application-log.conf\":\"[INPUT]\\n    Name                tail\\n    Tag                 application.*\\n    Exclude_Path        /var/log/containers/cloudwatch-agent*, /var/log/containers/fluent-bit*, /var/log/containers/aws-node*, /var/log/containers/kube-proxy*, /var/log/containers/milvus*\\n    Path                /var/log/containers/*.log\\n    Docker_Mode         On\\n    Docker_Mode_Flush   5\\n    Docker_Mode_Parser  container_firstline\\n    Parser              docker\\n    DB                  /var/fluent-bit/state/flb_container.db\\n    Mem_Buf_Limit       50MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Rotate_Wait         30\\n    storage.type        filesystem\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[INPUT]\\n    Name                tail\\n    Tag                 application.*\\n    Path                /var/log/containers/fluent-bit*\\n    Parser              docker\\n    DB                  /var/fluent-bit/state/flb_log.db\\n    Mem_Buf_Limit       5MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[INPUT]\\n    Name                tail\\n    Tag                 application.*\\n    Path                /var/log/containers/cloudwatch-agent*\\n    Docker_Mode         On\\n    Docker_Mode_Flush   5\\n    Docker_Mode_Parser  cwagent_firstline\\n    Parser              docker\\n    DB                  /var/fluent-bit/state/flb_cwagent.db\\n    Mem_Buf_Limit       5MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[FILTER]\\n    Name                kubernetes\\n    Match               application.*\\n    Kube_URL            https://kubernetes.default.svc:443\\n    Kube_Tag_Prefix     application.var.log.containers.\\n    Merge_Log           On\\n    Merge_Log_Key       log\\n    K8S-Logging.Parser  On\\n    K8S-Logging.Exclude Off\\n    Labels              Off\\n    Annotations         Off\\n\\n[FILTER]\\n    name                  multiline\\n    match                 *\\n    multiline.key_content log\\n    multiline.parser      go\\n\\n[OUTPUT]\\n    Name                cloudwatch_logs\\n    Match               application.*\\n    region              ${AWS_REGION}\\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/application\\n    log_stream_prefix   from-fluent-bit-\\n    auto_create_group   true\\n    extra_user_agent    container-insights\\n    log_retention_days  5\\n\",\"dataplane-log.conf\":\"[INPUT]\\n    Name                systemd\\n    Tag                 dataplane.systemd.*\\n    Systemd_Filter      _SYSTEMD_UNIT=docker.service\\n    Systemd_Filter      _SYSTEMD_UNIT=kubelet.service\\n    DB                  /var/fluent-bit/state/systemd.db\\n    Path                /var/log/journal\\n    Read_From_Tail      ${READ_FROM_TAIL}\\n\\n[INPUT]\\n    Name                tail\\n    Tag                 dataplane.tail.*\\n    Path                /var/log/containers/aws-node*, /var/log/containers/kube-proxy*\\n    Docker_Mode         On\\n    Docker_Mode_Flush   5\\n    Docker_Mode_Parser  container_firstline\\n    Parser              docker\\n    DB                  /var/fluent-bit/state/flb_dataplane_tail.db\\n    Mem_Buf_Limit       50MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Rotate_Wait         30\\n    storage.type        filesystem\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[FILTER]\\n    Name                modify\\n    Match               dataplane.systemd.*\\n    Rename              _HOSTNAME                   hostname\\n    Rename              _SYSTEMD_UNIT               systemd_unit\\n    Rename              MESSAGE                     message\\n    Remove_regex        ^((?!hostname|systemd_unit|message).)*$\\n\\n[FILTER]\\n    Name                aws\\n    Match               dataplane.*\\n    imds_version        v1\\n\\n[OUTPUT]\\n    Name                cloudwatch_logs\\n    Match               dataplane.*\\n    region              ${AWS_REGION}\\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/dataplane\\n    log_stream_prefix   from-fluent-bit-\\n    auto_create_group   true\\n    extra_user_agent    container-insights\\n    log_retention_days  5\\n\",\"fluent-bit.conf\":\"[SERVICE]\\n    Flush                     5\\n    Log_Level                 info\\n    Daemon                    off\\n    Parsers_File              parsers.conf\\n    HTTP_Server               ${HTTP_SERVER}\\n    HTTP_Listen               0.0.0.0\\n    HTTP_Port                 ${HTTP_PORT}\\n    storage.path              /var/fluent-bit/state/flb-storage/\\n    storage.sync              normal\\n    storage.checksum          off\\n    storage.backlog.mem_limit 5M\\n    \\n@INCLUDE application-log.conf\\n@INCLUDE dataplane-log.conf\\n@INCLUDE host-log.conf\\n\",\"host-log.conf\":\"[INPUT]\\n    Name                tail\\n    Tag                 host.dmesg\\n    Path                /var/log/dmesg\\n    Parser              syslog\\n    DB                  /var/fluent-bit/state/flb_dmesg.db\\n    Mem_Buf_Limit       5MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[INPUT]\\n    Name                tail\\n    Tag                 host.messages\\n    Path                /var/log/messages\\n    Parser              syslog\\n    DB                  /var/fluent-bit/state/flb_messages.db\\n    Mem_Buf_Limit       5MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[INPUT]\\n    Name                tail\\n    Tag                 host.secure\\n    Path                /var/log/secure\\n    Parser              syslog\\n    DB                  /var/fluent-bit/state/flb_secure.db\\n    Mem_Buf_Limit       5MB\\n    Skip_Long_Lines     On\\n    Refresh_Interval    10\\n    Read_from_Head      ${READ_FROM_HEAD}\\n\\n[FILTER]\\n    Name                aws\\n    Match               host.*\\n    imds_version        v1\\n\\n[OUTPUT]\\n    Name                cloudwatch_logs\\n    Match               host.*\\n    region              ${AWS_REGION}\\n    log_group_name      /aws/containerinsights/${PLANE_ID}/${CLUSTER_NAME}/host\\n    log_stream_prefix   ${HOST_NAME}.\\n    auto_create_group   true\\n    extra_user_agent    container-insights\\n    log_retention_days  5\\n\",\"parsers.conf\":\"[PARSER]\\n    Name                docker\\n    Format              json\\n    Time_Key            time\\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\\n\\n[PARSER]\\n    Name                syslog\\n    Format              regex\\n    Regex               ^(?\\u003ctime\\u003e[^ ]* {1,2}[^ ]* [^ ]*) (?\\u003chost\\u003e[^ ]*) (?\\u003cident\\u003e[a-zA-Z0-9_\\\\/\\\\.\\\\-]*)(?:\\\\[(?\\u003cpid\\u003e[0-9]+)\\\\])?(?:[^\\\\:]*\\\\:)? *(?\\u003cmessage\\u003e.*)$\\n    Time_Key            time\\n    Time_Format         %b %d %H:%M:%S\\n\\n[PARSER]\\n    Name                container_firstline\\n    Format              regex\\n    Regex               (?\\u003clog\\u003e(?\\u003c=\\\"log\\\":\\\")\\\\S(?!\\\\.).*?)(?\\u003c!\\\\\\\\)\\\".*(?\\u003cstream\\u003e(?\\u003c=\\\"stream\\\":\\\").*?)\\\".*(?\\u003ctime\\u003e\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\w*).*(?=})\\n    Time_Key            time\\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\\n\\n[PARSER]\\n    Name                cwagent_firstline\\n    Format              regex\\n    Regex               (?\\u003clog\\u003e(?\\u003c=\\\"log\\\":\\\")\\\\d{4}[\\\\/-]\\\\d{1,2}[\\\\/-]\\\\d{1,2}[ T]\\\\d{2}:\\\\d{2}:\\\\d{2}(?!\\\\.).*?)(?\\u003c!\\\\\\\\)\\\".*(?\\u003cstream\\u003e(?\\u003c=\\\"stream\\\":\\\").*?)\\\".*(?\\u003ctime\\u003e\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\w*).*(?=})\\n    Time_Key            time\\n    Time_Format         %Y-%m-%dT%H:%M:%S.%LZ\\n\"},\"kind\":\"ConfigMap\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\",\"k8s-app\":\"fluent-bit\"},\"name\":\"fluent-bit-config\",\"namespace\":\"amazon-cloudwatch\"}}\n"
                        },
                        "creationTimestamp": "2022-06-17T20:51:19Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi",
                            "k8s-app": "fluent-bit"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:data": {
                                        ".": {},
                                        "f:application-log.conf": {},
                                        "f:dataplane-log.conf": {},
                                        "f:fluent-bit.conf": {},
                                        "f:host-log.conf": {},
                                        "f:parsers.conf": {}
                                    },
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {},
                                            "f:k8s-app": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-06-17T20:51:19Z"
                            }
                        ],
                        "name": "fluent-bit-config",
                        "namespace": "amazon-cloudwatch",
                        "resourceVersion": "26846758",
                        "uid": "21283fb5-69ff-499f-9d90-412d8fa0032f"
                    }
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "data": null,
                    "kind": null,
                    "metadata": null
                },
                "sequenceNumber": 3
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:core/v1:ServiceAccount::amazon-cloudwatch/fluent-bit",
                "custom": true,
                "id": "amazon-cloudwatch/fluent-bit",
                "type": "kubernetes:core/v1:ServiceAccount",
                "inputs": {
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "fluent-bit",
                        "namespace": "amazon-cloudwatch"
                    }
                },
                "outputs": {
                    "__initialApiVersion": "v1",
                    "__inputs": {
                        "apiVersion": "v1",
                        "kind": "ServiceAccount",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "fluent-bit",
                            "namespace": "amazon-cloudwatch"
                        }
                    },
                    "apiVersion": "v1",
                    "kind": "ServiceAccount",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"fluent-bit\",\"namespace\":\"amazon-cloudwatch\"}}\n"
                        },
                        "creationTimestamp": "2022-03-22T03:11:06Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:secrets": {
                                        ".": {},
                                        "k:{\"name\":\"fluent-bit-token-ls2qd\"}": {
                                            ".": {},
                                            "f:name": {}
                                        }
                                    }
                                },
                                "manager": "kube-controller-manager",
                                "operation": "Update",
                                "time": "2022-03-22T03:11:06Z"
                            },
                            {
                                "apiVersion": "v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    }
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T03:11:06Z"
                            }
                        ],
                        "name": "fluent-bit",
                        "namespace": "amazon-cloudwatch",
                        "resourceVersion": "1361",
                        "uid": "7dddb120-6f63-4152-8530-a04714a66b8f"
                    },
                    "secrets": [
                        {
                            "name": "fluent-bit-token-ls2qd"
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null
                },
                "sequenceNumber": 1
            },
            {
                "urn": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile$kubernetes:rbac.authorization.k8s.io/v1:ClusterRole::fluent-bit-role",
                "custom": true,
                "id": "fluent-bit-role",
                "type": "kubernetes:rbac.authorization.k8s.io/v1:ClusterRole",
                "inputs": {
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "name": "fluent-bit-role"
                    },
                    "rules": [
                        {
                            "nonResourceURLs": [
                                "/metrics"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "namespaces",
                                "pods",
                                "pods/logs"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                "outputs": {
                    "__initialApiVersion": "rbac.authorization.k8s.io/v1",
                    "__inputs": {
                        "apiVersion": "rbac.authorization.k8s.io/v1",
                        "kind": "ClusterRole",
                        "metadata": {
                            "labels": {
                                "app.kubernetes.io/managed-by": "pulumi"
                            },
                            "name": "fluent-bit-role"
                        },
                        "rules": [
                            {
                                "nonResourceURLs": [
                                    "/metrics"
                                ],
                                "verbs": [
                                    "get"
                                ]
                            },
                            {
                                "apiGroups": [
                                    ""
                                ],
                                "resources": [
                                    "namespaces",
                                    "pods",
                                    "pods/logs"
                                ],
                                "verbs": [
                                    "get",
                                    "list",
                                    "watch"
                                ]
                            }
                        ]
                    },
                    "apiVersion": "rbac.authorization.k8s.io/v1",
                    "kind": "ClusterRole",
                    "metadata": {
                        "annotations": {
                            "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"labels\":{\"app.kubernetes.io/managed-by\":\"pulumi\"},\"name\":\"fluent-bit-role\"},\"rules\":[{\"nonResourceURLs\":[\"/metrics\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"namespaces\",\"pods\",\"pods/logs\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                        },
                        "creationTimestamp": "2022-03-22T03:11:06Z",
                        "labels": {
                            "app.kubernetes.io/managed-by": "pulumi"
                        },
                        "managedFields": [
                            {
                                "apiVersion": "rbac.authorization.k8s.io/v1",
                                "fieldsType": "FieldsV1",
                                "fieldsV1": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            ".": {},
                                            "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                        },
                                        "f:labels": {
                                            ".": {},
                                            "f:app.kubernetes.io/managed-by": {}
                                        }
                                    },
                                    "f:rules": {}
                                },
                                "manager": "pulumi-resource-kubernetes",
                                "operation": "Update",
                                "time": "2022-03-22T03:11:06Z"
                            }
                        ],
                        "name": "fluent-bit-role",
                        "resourceVersion": "1363",
                        "uid": "51dbefad-3008-45d0-bf91-304e17809ebd"
                    },
                    "rules": [
                        {
                            "nonResourceURLs": [
                                "/metrics"
                            ],
                            "verbs": [
                                "get"
                            ]
                        },
                        {
                            "apiGroups": [
                                ""
                            ],
                            "resources": [
                                "namespaces",
                                "pods",
                                "pods/logs"
                            ],
                            "verbs": [
                                "get",
                                "list",
                                "watch"
                            ]
                        }
                    ]
                },
                "parent": "urn:pulumi:plane-3::launchpad::kubernetes:yaml:ConfigFile::fluent-bit-config",
                "provider": "urn:pulumi:plane-3::launchpad::pulumi:providers:kubernetes::tele-k8s-provider::06940279-dc5f-4f92-a7e1-2a6a47a178e7",
                "propertyDependencies": {
                    "apiVersion": null,
                    "kind": null,
                    "metadata": null,
                    "rules": null
                },
                "sequenceNumber": 1
            }
        ]
    }
}
