# This is a basic workflow to help you get started with Actions

name: unit-tests

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: linux_x64

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Install python - this is required to install and run nix.
      # Nix will however install a version specified in our codebase and run the tests using it.
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # nix installation will fail if nix is already installed.
      # instead of an update (which has complicated syntax), we will clean install it.
      - name: remove nix backup file if it exists
        run: |
          FILE=/etc/bash.bashrc.backup-before-nix
          if test -f "$FILE"; then
            sudo rm "$FILE"
          fi

      # Clean install nix on the remote machine
      - uses: cachix/install-nix-action@v15
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            keep-derivations = true
            keep-outputs = true
      - run: nix-build shell.nix

      # Runs the unit tests 
      - name: run fennel go unit tests
        run: |
          cd go/fennel
          go test -v ./...
