# This is a basic workflow to help you get started with Actions

name: e2e-tests-linux-x64

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  # Allows running unit test on every pull request
  pull_request:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted, Linux, X64]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/checkout@v2  
        with:
          path: rexer-client-${{ github.run_id }}-${{ github.run_number }}
          repository: fennel-ai/rexer-pyclient-alpha
          token: ${{ secrets.ACCESS_TOKEN }}

      # Move the repo explicitly, sadly github actions doesn't support this by default..
      # https://github.com/actions/checkout/issues/197#issuecomment-829560171
      - run: mv rexer-client-${{ github.run_id }}-${{ github.run_number }} ../rexer-pyclient-alpha

      # Install build essentials
      - name: install build essential and pkg-config
        run: |
          sudo apt-get --assume-yes install build-essential
          sudo apt-get --assume-yes install pkg-config
          sudo apt-get --assume-yes install librdkafka-dev
          
      - name: Install confluent platform
        run: |
          wget -qO - https://packages.confluent.io/deb/7.0/archive.key | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://packages.confluent.io/deb/7.0 stable main"
          sudo add-apt-repository "deb https://packages.confluent.io/clients/deb $(lsb_release -cs) main"
          sudo apt-get --assume-yes install confluent-platform

      # Install go (we use 1.17.0 version, so we will stick to it)
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17'
          
      - name: Install go module (required for running go subprocesses)
        run: |
          cd go/fennel
          go mod download

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Install and configure poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # Load cached venv if cache exists
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      # Install rexer which will be used later in the e2etest.py
      - name: Install dependencies
        working-directory: ../rexer-pyclient-alpha/rexer-client-${{ github.run_id }}-${{ github.run_number }}
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction

      # Run the test
      - name: Run test
        env:
          FENNEL_ROOT: ${{ github.workspace }}
        working-directory: ../rexer-pyclient-alpha/rexer-client-${{ github.run_id }}-${{ github.run_number }}
        run: poetry run python -m unittest discover ../../rexer/e2etests
