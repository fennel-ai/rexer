# This is a basic workflow to help you get started with Actions

name: e2e-tests-linux-pip-x64

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  # Allows running unit test on every pull request
  pull_request:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted, Linux, X64, e2e-tests]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Install prerequisites
      - name: install build essential and pkg-config
        run: |
          sudo apt-get --assume-yes install build-essential
          sudo apt-get --assume-yes install pkg-config
          sudo apt-get --assume-yes install libssl-dev librdkafka-dev

      # Install go (we use 1.18 version, so we will stick to it)
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'    
      
      - name: Install go module (required for running go subprocesses)
        run: |
          cd go/fennel
          go mod download

      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'      

      - name: install pip
        run: |
          python -m ensurepip --upgrade

      - name: install rexerclient using pip
        run: |
          pip install rexerclient --extra-index-url=https://token:${{ secrets.PACKAGR_ACCESS_TOKEN }}@api.packagr.app/${{ secrets.PACKAGR_HASH_ID }}/

      # Run the test
      - name: Run test
        env:
          FENNEL_ROOT: ${{ github.workspace }}
          KAFKA_SERVER_ADDRESS: ${{ secrets.KAFKA_SERVER_ADDRESS }}
          KAFKA_USERNAME: ${{ secrets.KAFKA_USERNAME }}
          KAFKA_PASSWORD: ${{ secrets.KAFKA_PASSWORD }}
          MYSQL_SERVER_ADDRESS: ${{ secrets.MYSQL_SERVER_ADDRESS }}
          MYSQL_DATABASE_NAME: ${{ secrets.MYSQL_DATABASE_NAME }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          REDIS_SERVER_ADDRESS: ${{ secrets.REDIS_SERVER_ADDRESS }}
          CACHE_PRIMARY: ${{ secrets.CACHE_PRIMARY }}
          TIER_ID: ${{ secrets.TIER_ID }}
          BADGER_DIR: ${{ secrets.BADGER_DIR }}
        run: |
          python -m unittest discover e2etests
