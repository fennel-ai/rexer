# This is a basic workflow to help you get started with Actions

name: e2e-tests-staging-linux-x64

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  schedule:
    # Runs every 2 hours
    - cron: '0 */2 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: [self-hosted, Linux, X64]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Install prerequisites
      - name: install build essential and pkg-config
        run: |
          sudo apt-get --assume-yes install build-essential
          sudo apt-get --assume-yes install pkg-config
      # Install go (we use 1.17.0 version, so we will stick to it)
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17'
          
      - name: Install go module (required for running go subprocesses)
        run: |
          cd go/fennel
          go mod download
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Install and configure poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Install kafka dependencies
        run: |
          sudo apt-get --assume-yes remove --auto-remove librdkafka-dev
          sudo apt-get --assume-yes install libssl-dev
          sudo curl -Lk -o $HOME/librdkafka-1.8.0.tar.gz https://github.com/edenhill/librdkafka/archive/v1.8.0.tar.gz &&       tar -xzf $HOME/librdkafka-1.8.0.tar.gz -C $HOME &&  cd $HOME/librdkafka-1.8.0 &&  ./configure && make && sudo make install && sudo make clean && ./configure --clean

      # Run the test
      - name: Run test
        env:
          FENNEL_ROOT: ${{ github.workspace }}
        run: |
          cd e2etests/
          poetry install
          poetry run python -m unittest teste2e_staging.py
