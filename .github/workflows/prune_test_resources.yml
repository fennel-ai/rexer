# This is a basic workflow to help you get started with Actions

name: prune-test-resources

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  schedule:
    # Run every 6 hours.
    - cron: '0 */6 * * *'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "prune"
  prune:
    # The type of runner that the job will run on
    runs-on: [self-hosted, Linux, X64, e2e-tests]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Install build essentials
      - name: install build essential
        run: |
          sudo apt-get --assume-yes install build-essential
          sudo apt-get --assume-yes install pkg-config

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Install go (we use 1.18 version, so we will stick to it)
      - uses: actions/setup-go@v2
        with:
          go-version: '1.18'

      - name: Install kafka dependencies
        run: |
          sudo apt-get --assume-yes remove --auto-remove librdkafka-dev
          sudo apt-get --assume-yes install libssl-dev
          sudo curl -Lk -o $HOME/librdkafka-1.8.0.tar.gz https://github.com/edenhill/librdkafka/archive/v1.8.0.tar.gz &&       tar -xzf $HOME/librdkafka-1.8.0.tar.gz -C $HOME &&  cd $HOME/librdkafka-1.8.0 &&  ./configure && make && sudo make install && sudo ldconfig && sudo make clean && ./configure --clean

      - name: prune test resources
        env:
          KAFKA_SERVER_ADDRESS: ${{ secrets.KAFKA_SERVER_ADDRESS }}
          KAFKA_USERNAME: ${{ secrets.KAFKA_USERNAME }}
          KAFKA_PASSWORD: ${{ secrets.KAFKA_PASSWORD }}
          MYSQL_SERVER_ADDRESS: ${{ secrets.MYSQL_SERVER_ADDRESS }}
          MYSQL_DATABASE_NAME: ${{ secrets.MYSQL_DATABASE_NAME }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          REDIS_SERVER_ADDRESS: ${{ secrets.REDIS_SERVER_ADDRESS }}
          CACHE_PRIMARY: ${{ secrets.CACHE_PRIMARY }}
          TIER_ID: ${{ secrets.TIER_ID }}
          PLANE_ID: ${{ secrets.PLANE_ID }}
          BADGER_DIR: ${{ secrets.BADGER_DIR }}
        run: |
          cd go/fennel
          go run -v -tags dynamic,integration fennel/test/cmds/tiergod --mode prune
