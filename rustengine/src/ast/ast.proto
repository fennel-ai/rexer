syntax = "proto3";

package starql;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

// service SolarSystemInfo {
//   rpc GetPlanetsList (google.protobuf.Empty) returns (PlanetsListResponse);
//   rpc GetPlanet (PlanetRequest) returns (PlanetResponse);
//   rpc GetPlanets (google.protobuf.Empty) returns (stream PlanetResponse);
// }


message Ast {
    oneof node {
        Binary binary = 2;
        Grouping grouping = 3;
        Unary unary = 4;
        Atom atom = 5;
        List list = 6;
        Record record = 7;
        OpExp opexp = 8;
        Statement statement = 9;
        Query query = 10;
    }
}

message Token {
    TokenType type = 1;
    uint32 start = 2;
    uint32 end = 3;
    uint32 literal_start = 4;
    uint32 literal_end = 5;
    enum Type {
        LPAREN = 0;
        // TODO: add more
        // TODO: what should be zero value for this enum?
    }
}

message Binary {
    Ast left = 1;
    Token op = 2;
    Ast right = 3;
}

message Grouping {
    Ast inner = 1;
}
message Unary {
    Token op = 1;
    Ast inner = 2;
}
message Atom {
    Token token = 1;
}

message List {
    repeated Ast values = 1;
}

message Record {
    map<Token, Ast> record = 1;
}
message OpExp {
    Ast root = 1;
    message OpCall {
        repeated Token path = 1;
        map<Token, Ast> args = 2;
    }
    repeated OpCall opcalls = 2;
}

message Statement {
    optional Token varname = 1;
    Ast body = 2;
}

message Query {
    string query = 1;
    repeated Ast statements = 1;
}